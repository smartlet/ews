// Code generated by wsdl2go. DO NOT EDIT.

package wsdl

import (
	"github.com/fiorix/wsdl2go/soap"
	"reflect"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages"

// NewExchangeServicePortType creates an initializes a ExchangeServicePortType.
func NewExchangeServicePortType(cli SOAPClient) ExchangeServicePortType {
	return &exchangeServicePortType{cli}
}

// ExchangeServicePortType was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type ExchangeServicePortType interface {
	// AddDelegate was auto-generated from WSDL.
	AddDelegate(AddDelegate *AddDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddDelegateResponseMessageType, *ServerVersionInfo, error)

	// AddDistributionGroupToImList was auto-generated from WSDL.
	AddDistributionGroupToImList(AddDistributionGroupToImList *AddDistributionGroupToImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddDistributionGroupToImListResponseMessageType, *ServerVersionInfo, error)

	// AddImContactToGroup was auto-generated from WSDL.
	AddImContactToGroup(AddImContactToGroup *AddImContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddImContactToGroupResponseMessageType, *ServerVersionInfo, error)

	// AddImGroup was auto-generated from WSDL.
	AddImGroup(AddImGroup *AddImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddImGroupResponseMessageType, *ServerVersionInfo, error)

	// AddNewImContactToGroup was auto-generated from WSDL.
	AddNewImContactToGroup(AddNewImContactToGroup *AddNewImContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddNewImContactToGroupResponseMessageType, *ServerVersionInfo, error)

	// AddNewTelUriContactToGroup was auto-generated from WSDL.
	AddNewTelUriContactToGroup(AddNewTelUriContactToGroup *AddNewTelUriContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddNewTelUriContactToGroupResponseMessageType, *ServerVersionInfo, error)

	// AddTag was auto-generated from WSDL.
	AddTag(AddTag *AddTagType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*AddTagResponseMessageType, *ServerVersionInfo, error)

	// ApplyConversationAction was auto-generated from WSDL.
	ApplyConversationAction(ApplyConversationAction *ApplyConversationActionType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*ApplyConversationActionResponseType, *ServerVersionInfo, error)

	// ArchiveItem was auto-generated from WSDL.
	ArchiveItem(ArchiveItem *ArchiveItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ArchiveItemResponseType, *ServerVersionInfo, error)

	// ConvertId was auto-generated from WSDL.
	ConvertId(ConvertId *ConvertIdType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*ConvertIdResponseType, *ServerVersionInfo, error)

	// CopyFolder was auto-generated from WSDL.
	CopyFolder(CopyFolder *CopyFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CopyFolderResponseType, *ServerVersionInfo, error)

	// CopyItem was auto-generated from WSDL.
	CopyItem(CopyItem *CopyItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CopyItemResponseType, *ServerVersionInfo, error)

	// CreateAttachment was auto-generated from WSDL.
	CreateAttachment(CreateAttachment *CreateAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateAttachmentResponseType, *ServerVersionInfo, error)

	// CreateFolder was auto-generated from WSDL.
	CreateFolder(CreateFolder *CreateFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateFolderResponseType, *ServerVersionInfo, error)

	// CreateFolderPath was auto-generated from WSDL.
	CreateFolderPath(CreateFolderPath *CreateFolderPathType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateFolderPathResponseType, *ServerVersionInfo, error)

	// CreateItem was auto-generated from WSDL.
	CreateItem(CreateItem *CreateItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateItemResponseType, *ServerVersionInfo, error)

	// CreateManagedFolder was auto-generated from WSDL.
	CreateManagedFolder(CreateManagedFolder *CreateManagedFolderRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CreateManagedFolderResponseType, *ServerVersionInfo, error)

	// CreateMeetingInstance was auto-generated from WSDL.
	CreateMeetingInstance(CreateMeetingInstanceRequest *CreateMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*CreateMeetingInstanceResponseMessageType, *ServerVersionInfo, error)

	// CreateMeetingSpace was auto-generated from WSDL.
	CreateMeetingSpace(CreateMeetingSpace *CreateMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*CreateMeetingSpaceResponseMessageType, *ServerVersionInfo, error)

	// CreateUserConfiguration was auto-generated from WSDL.
	CreateUserConfiguration(CreateUserConfiguration *CreateUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CreateUserConfigurationResponseType, *ServerVersionInfo, error)

	// DeleteAttachment was auto-generated from WSDL.
	DeleteAttachment(DeleteAttachment *DeleteAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteAttachmentResponseType, *ServerVersionInfo, error)

	// DeleteFolder was auto-generated from WSDL.
	DeleteFolder(DeleteFolder *DeleteFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteFolderResponseType, *ServerVersionInfo, error)

	// DeleteItem was auto-generated from WSDL.
	DeleteItem(DeleteItem *DeleteItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteItemResponseType, *ServerVersionInfo, error)

	// DeleteMeetingInstance was auto-generated from WSDL.
	DeleteMeetingInstance(DeleteMeetingInstanceRequest *DeleteMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*DeleteMeetingInstanceResponseMessageType, *ServerVersionInfo, error)

	// DeleteMeetingSpace was auto-generated from WSDL.
	DeleteMeetingSpace(DeleteMeetingSpace *DeleteMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*DeleteMeetingSpaceResponseMessageType, *ServerVersionInfo, error)

	// DeleteSearchSuggestion was auto-generated from WSDL.
	DeleteSearchSuggestion(DeleteSearchSuggestion *DeleteSearchSuggestion, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteSearchSuggestionResponseMessageType, *ServerVersionInfo, error)

	// DeleteUserConfiguration was auto-generated from WSDL.
	DeleteUserConfiguration(DeleteUserConfiguration *DeleteUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteUserConfigurationResponseType, *ServerVersionInfo, error)

	// DisableApp was auto-generated from WSDL.
	DisableApp(DisableApp *DisableAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*DisableAppResponseType, *ServerVersionInfo, error)

	// DisconnectPhoneCall was auto-generated from WSDL.
	DisconnectPhoneCall(DisconnectPhoneCall *DisconnectPhoneCallType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DisconnectPhoneCallResponseMessageType, *ServerVersionInfo, error)

	// EmptyFolder was auto-generated from WSDL.
	EmptyFolder(EmptyFolder *EmptyFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*EmptyFolderResponseType, *ServerVersionInfo, error)

	// EndSearchSession was auto-generated from WSDL.
	EndSearchSession(EndSearchSession *EndSearchSession, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*EndSearchSessionResponseMessage, *ServerVersionInfo, error)

	// ExecuteSearch was auto-generated from WSDL.
	ExecuteSearch(ExecuteSearch *ExecuteSearch, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ExecuteSearchResponseMessage, *ServerVersionInfo, error)

	// ExpandDL was auto-generated from WSDL.
	ExpandDL(ExpandDL *ExpandDLType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ExpandDLResponseType, *ServerVersionInfo, error)

	// ExportItems was auto-generated from WSDL.
	ExportItems(ExportItems *ExportItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*ExportItemsResponseType, *ServerVersionInfo, error)

	// FindAvailableMeetingTimes was auto-generated from WSDL.
	FindAvailableMeetingTimes(FindAvailableMeetingTimes *FindAvailableMeetingTimesType, RequestServerVersion *RequestServerVersion) (*FindAvailableMeetingTimesResponseMessageType, *ServerVersionInfo, error)

	// FindConversation was auto-generated from WSDL.
	FindConversation(FindConversation *FindConversationType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindConversationResponseMessageType, *ServerVersionInfo, error)

	// FindFolder was auto-generated from WSDL.
	FindFolder(FindFolder *FindFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*FindFolderResponseType, *ServerVersionInfo, error)

	// FindItem was auto-generated from WSDL.
	FindItem(FindItem *FindItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, DateTimePrecision DateTimePrecisionType, ManagementRole *ManagementRoleType) (*FindItemResponseType, *ServerVersionInfo, error)

	// FindMeetingSpaceByJoinUrl was auto-generated from WSDL.
	FindMeetingSpaceByJoinUrl(FindMeetingSpaceByJoinUrl *FindMeetingSpaceByJoinUrlType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*FindMeetingSpaceByJoinUrlResponseMessageType, *ServerVersionInfo, error)

	// FindMeetingTimeCandidates was auto-generated from WSDL.
	FindMeetingTimeCandidates(FindMeetingTimeCandidates *FindMeetingTimeCandidatesType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*FindMeetingTimeCandidatesResponseMessageType, *ServerVersionInfo, error)

	// FindMessageTrackingReport was auto-generated from WSDL.
	FindMessageTrackingReport(FindMessageTrackingReport *FindMessageTrackingReportRequestType, RequestServerVersion *RequestServerVersion) (*FindMessageTrackingReportResponseMessageType, *ServerVersionInfo, error)

	// FindPeople was auto-generated from WSDL.
	FindPeople(FindPeople *FindPeopleType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindPeopleResponseMessageType, *ServerVersionInfo, error)

	// FindTags was auto-generated from WSDL.
	FindTags(FindTags *FindTagsType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindTagsResponseMessageType, *ServerVersionInfo, error)

	// GetAppManifests was auto-generated from WSDL.
	GetAppManifests(GetAppManifests *GetAppManifestsType, RequestServerVersion *RequestServerVersion) (*GetAppManifestsResponseType, *ServerVersionInfo, error)

	// GetAppMarketplaceUrl was auto-generated from WSDL.
	GetAppMarketplaceUrl(GetAppMarketplaceUrl *GetAppMarketplaceUrlType, RequestServerVersion *RequestServerVersion) (*GetAppMarketplaceUrlResponseMessageType, *ServerVersionInfo, error)

	// GetAttachment was auto-generated from WSDL.
	GetAttachment(GetAttachment *GetAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*GetAttachmentResponseType, *ServerVersionInfo, error)

	// GetClientAccessToken was auto-generated from WSDL.
	GetClientAccessToken(GetClientAccessToken *GetClientAccessTokenType, RequestServerVersion *RequestServerVersion) (*GetClientAccessTokenResponseType, *ServerVersionInfo, error)

	// GetConversationItems was auto-generated from WSDL.
	GetConversationItems(GetConversationItems *GetConversationItemsType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetConversationItemsResponseType, *ServerVersionInfo, error)

	// GetDelegate was auto-generated from WSDL.
	GetDelegate(GetDelegate *GetDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetDelegateResponseMessageType, *ServerVersionInfo, error)

	// GetDiscoverySearchConfiguration was auto-generated from WSDL.
	GetDiscoverySearchConfiguration(GetDiscoverySearchConfiguration *GetDiscoverySearchConfigurationType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetDiscoverySearchConfigurationResponseMessageType, *ServerVersionInfo, error)

	// GetEvents was auto-generated from WSDL.
	GetEvents(GetEvents *GetEventsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetEventsResponseType, *ServerVersionInfo, error)

	// GetFolder was auto-generated from WSDL.
	GetFolder(GetFolder *GetFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*GetFolderResponseType, *ServerVersionInfo, error)

	// GetHoldOnMailboxes was auto-generated from WSDL.
	GetHoldOnMailboxes(GetHoldOnMailboxes *GetHoldOnMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetHoldOnMailboxesResponseMessageType, *ServerVersionInfo, error)

	// GetImItemList was auto-generated from WSDL.
	GetImItemList(GetImItemList *GetImItemListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetImItemListResponseMessageType, *ServerVersionInfo, error)

	// GetImItems was auto-generated from WSDL.
	GetImItems(GetImItems *GetImItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetImItemsResponseMessageType, *ServerVersionInfo, error)

	// GetInboxRules was auto-generated from WSDL.
	GetInboxRules(GetInboxRules *GetInboxRulesRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*GetInboxRulesResponseType, *ServerVersionInfo, error)

	// GetItem was auto-generated from WSDL.
	GetItem(GetItem *GetItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, DateTimePrecision DateTimePrecisionType, ManagementRole *ManagementRoleType) (*GetItemResponseType, *ServerVersionInfo, error)

	// GetLastPrivateCatalogUpdate was auto-generated from WSDL.
	GetLastPrivateCatalogUpdate(GetLastPrivateCatalogUpdate *GetLastPrivateCatalogUpdateType, RequestServerVersion *RequestServerVersion) (*GetLastPrivateCatalogUpdateResponseType, *ServerVersionInfo, error)

	// GetMailTips was auto-generated from WSDL.
	GetMailTips(GetMailTips *GetMailTipsType, RequestServerVersion *RequestServerVersion, MailboxCulture *MailboxCultureType) (*GetMailTipsResponseMessageType, *ServerVersionInfo, error)

	// GetMeetingInstance was auto-generated from WSDL.
	GetMeetingInstance(GetMeetingInstanceRequest *GetMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetMeetingInstanceResponseMessageType, *ServerVersionInfo, error)

	// GetMeetingSpace was auto-generated from WSDL.
	GetMeetingSpace(GetMeetingSpace *GetMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetMeetingSpaceResponseMessageType, *ServerVersionInfo, error)

	// GetMessageTrackingReport was auto-generated from WSDL.
	GetMessageTrackingReport(GetMessageTrackingReport *GetMessageTrackingReportRequestType, RequestServerVersion *RequestServerVersion) (*GetMessageTrackingReportResponseMessageType, *ServerVersionInfo, error)

	// GetNonIndexableItemDetails was auto-generated from WSDL.
	GetNonIndexableItemDetails(GetNonIndexableItemDetails *GetNonIndexableItemDetailsType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetNonIndexableItemDetailsResponseMessageType, *ServerVersionInfo, error)

	// GetNonIndexableItemStatistics was auto-generated from WSDL.
	GetNonIndexableItemStatistics(GetNonIndexableItemStatistics *GetNonIndexableItemStatisticsType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetNonIndexableItemStatisticsResponseMessageType, *ServerVersionInfo, error)

	// GetPasswordExpirationDate was auto-generated from WSDL.
	GetPasswordExpirationDate(GetPasswordExpirationDate *GetPasswordExpirationDateType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetPasswordExpirationDateResponseMessageType, *ServerVersionInfo, error)

	// GetPersona was auto-generated from WSDL.
	GetPersona(GetPersona *GetPersonaType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetPersonaResponseMessageType, *ServerVersionInfo, error)

	// GetPhoneCallInformation was auto-generated from WSDL.
	GetPhoneCallInformation(GetPhoneCallInformation *GetPhoneCallInformationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetPhoneCallInformationResponseMessageType, *ServerVersionInfo, error)

	// GetPrivateCatalogAddIns was auto-generated from WSDL.
	GetPrivateCatalogAddIns(GetPrivateCatalogAddIns *GetPrivateCatalogAddInsType, RequestServerVersion *RequestServerVersion) (*GetPrivateCatalogAddInsResponseType, *ServerVersionInfo, error)

	// GetRoomLists was auto-generated from WSDL.
	GetRoomLists(GetRoomLists *GetRoomListsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetRoomListsResponseMessageType, *ServerVersionInfo, error)

	// GetRooms was auto-generated from WSDL.
	GetRooms(GetRooms *GetRoomsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetRoomsResponseMessageType, *ServerVersionInfo, error)

	// GetSearchSuggestions was auto-generated from WSDL.
	GetSearchSuggestions(GetSearchSuggestions *GetSearchSuggestions, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetSearchSuggestionsResponseMessage, *ServerVersionInfo, error)

	// GetSearchableMailboxes was auto-generated from WSDL.
	GetSearchableMailboxes(GetSearchableMailboxes *GetSearchableMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetSearchableMailboxesResponseMessageType, *ServerVersionInfo, error)

	// GetServerTimeZones was auto-generated from WSDL.
	GetServerTimeZones(GetServerTimeZones *GetServerTimeZonesType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetServerTimeZonesResponseType, *ServerVersionInfo, error)

	// GetServiceConfiguration was auto-generated from WSDL.
	GetServiceConfiguration(GetServiceConfiguration *GetServiceConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion, MailboxCulture *MailboxCultureType) (*GetServiceConfigurationResponseMessageType, *ServerVersionInfo, error)

	// GetSharingFolder was auto-generated from WSDL.
	GetSharingFolder(GetSharingFolder *GetSharingFolderType, RequestServerVersion *RequestServerVersion) (*GetSharingFolderResponseMessageType, *ServerVersionInfo, error)

	// GetSharingMetadata was auto-generated from WSDL.
	GetSharingMetadata(GetSharingMetadata *GetSharingMetadataType, RequestServerVersion *RequestServerVersion) (*GetSharingMetadataResponseMessageType, *ServerVersionInfo, error)

	// GetSpecificUserConfiguration was auto-generated from WSDL.
	GetSpecificUserConfiguration(GetSpecificUserConfiguration *GetSpecificUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetSpecificUserConfigurationResponseType, *ServerVersionInfo, error)

	// GetStreamingEvents was auto-generated from WSDL.
	GetStreamingEvents(GetStreamingEvents *GetStreamingEventsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetStreamingEventsResponseType, *ServerVersionInfo, error)

	// GetUserAvailability was auto-generated from WSDL.
	GetUserAvailability(GetUserAvailabilityRequest *GetUserAvailabilityRequestType, ExchangeImpersonation *ExchangeImpersonationType, TimeZoneContext *TimeZoneContextType, RequestServerVersion *RequestServerVersion) (*GetUserAvailabilityResponseType, *ServerVersionInfo, error)

	// GetUserConfiguration was auto-generated from WSDL.
	GetUserConfiguration(GetUserConfiguration *GetUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetUserConfigurationResponseType, *ServerVersionInfo, error)

	// GetUserOofSettings was auto-generated from WSDL.
	GetUserOofSettings(GetUserOofSettingsRequest *GetUserOofSettingsRequest, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetUserOofSettingsResponse, *ServerVersionInfo, error)

	// GetUserPhoto was auto-generated from WSDL.
	GetUserPhoto(GetUserPhoto *GetUserPhotoType, RequestServerVersion *RequestServerVersion) (*GetUserPhotoResponseMessageType, *ServerVersionInfo, error)

	// GetUserRetentionPolicyTags was auto-generated from WSDL.
	GetUserRetentionPolicyTags(GetUserRetentionPolicyTags *GetUserRetentionPolicyTagsType, RequestServerVersion *RequestServerVersion) (*GetUserRetentionPolicyTagsResponseMessageType, *ServerVersionInfo, error)

	// HideTag was auto-generated from WSDL.
	HideTag(HideTag *HideTagType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*HideTagResponseMessageType, *ServerVersionInfo, error)

	// InstallApp was auto-generated from WSDL.
	InstallApp(InstallApp *InstallAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*InstallAppResponseType, *ServerVersionInfo, error)

	// MarkAllItemsAsRead was auto-generated from WSDL.
	MarkAllItemsAsRead(MarkAllItemsAsRead *MarkAllItemsAsReadType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MarkAllItemsAsReadResponseType, *ServerVersionInfo, error)

	// MarkAsJunk was auto-generated from WSDL.
	MarkAsJunk(MarkAsJunk *MarkAsJunkType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MarkAsJunkResponseType, *ServerVersionInfo, error)

	// MoveFolder was auto-generated from WSDL.
	MoveFolder(MoveFolder *MoveFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MoveFolderResponseType, *ServerVersionInfo, error)

	// MoveItem was auto-generated from WSDL.
	MoveItem(MoveItem *MoveItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MoveItemResponseType, *ServerVersionInfo, error)

	// PlayOnPhone was auto-generated from WSDL.
	PlayOnPhone(PlayOnPhone *PlayOnPhoneType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*PlayOnPhoneResponseMessageType, *ServerVersionInfo, error)

	// RefreshSharingFolder was auto-generated from WSDL.
	RefreshSharingFolder(RefreshSharingFolder *RefreshSharingFolderType, RequestServerVersion *RequestServerVersion) (*RefreshSharingFolderResponseMessageType, *ServerVersionInfo, error)

	// RemoveContactFromImList was auto-generated from WSDL.
	RemoveContactFromImList(RemoveContactFromImList *RemoveContactFromImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveContactFromImListResponseMessageType, *ServerVersionInfo, error)

	// RemoveDelegate was auto-generated from WSDL.
	RemoveDelegate(RemoveDelegate *RemoveDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveDelegateResponseMessageType, *ServerVersionInfo, error)

	// RemoveDistributionGroupFromImList was auto-generated from WSDL.
	RemoveDistributionGroupFromImList(RemoveDistributionGroupFromImList *RemoveDistributionGroupFromImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveDistributionGroupFromImListResponseMessageType, *ServerVersionInfo, error)

	// RemoveImContactFromGroup was auto-generated from WSDL.
	RemoveImContactFromGroup(RemoveImContactFromGroup *RemoveImContactFromGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveImContactFromGroupResponseMessageType, *ServerVersionInfo, error)

	// RemoveImGroup was auto-generated from WSDL.
	RemoveImGroup(RemoveImGroup *RemoveImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveImGroupResponseMessageType, *ServerVersionInfo, error)

	// ReportMessage was auto-generated from WSDL.
	ReportMessage(ReportMessage *ReportMessageType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ReportMessageResponseType, *ServerVersionInfo, error)

	// ResolveNames was auto-generated from WSDL.
	ResolveNames(ResolveNames *ResolveNamesType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ResolveNamesResponseType, *ServerVersionInfo, error)

	// SearchMailboxes was auto-generated from WSDL.
	SearchMailboxes(SearchMailboxes *SearchMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SearchMailboxesResponseType, *ServerVersionInfo, error)

	// SendItem was auto-generated from WSDL.
	SendItem(SendItem *SendItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SendItemResponseType, *ServerVersionInfo, error)

	// SetHoldOnMailboxes was auto-generated from WSDL.
	SetHoldOnMailboxes(SetHoldOnMailboxes *SetHoldOnMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SetHoldOnMailboxesResponseMessageType, *ServerVersionInfo, error)

	// SetImGroup was auto-generated from WSDL.
	SetImGroup(SetImGroup *SetImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SetImGroupResponseMessageType, *ServerVersionInfo, error)

	// SetImListMigrationCompleted was auto-generated from WSDL.
	SetImListMigrationCompleted(SetImListMigrationCompleted *SetImListMigrationCompletedType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SetImListMigrationCompletedResponseMessageType, *ServerVersionInfo, error)

	// SetTeamMailbox was auto-generated from WSDL.
	SetTeamMailbox(SetTeamMailbox *SetTeamMailboxRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SetTeamMailboxResponseMessageType, *ServerVersionInfo, error)

	// SetUserOofSettings was auto-generated from WSDL.
	SetUserOofSettings(SetUserOofSettingsRequest *SetUserOofSettingsRequest, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*SetUserOofSettingsResponse, *ServerVersionInfo, error)

	// SetUserPhoto was auto-generated from WSDL.
	SetUserPhoto(SetUserPhoto *SetUserPhotoType, RequestServerVersion *RequestServerVersion) (*SetUserPhotoResponseMessageType, *ServerVersionInfo, error)

	// StartSearchSession was auto-generated from WSDL.
	StartSearchSession(StartSearchSession *StartSearchSession, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*StartSearchSessionResponseMessage, *ServerVersionInfo, error)

	// Subscribe was auto-generated from WSDL.
	Subscribe(Subscribe *SubscribeType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SubscribeResponseType, *ServerVersionInfo, error)

	// SyncFolderHierarchy was auto-generated from WSDL.
	SyncFolderHierarchy(SyncFolderHierarchy *SyncFolderHierarchyType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SyncFolderHierarchyResponseType, *ServerVersionInfo, error)

	// SyncFolderItems was auto-generated from WSDL.
	SyncFolderItems(SyncFolderItems *SyncFolderItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SyncFolderItemsResponseType, *ServerVersionInfo, error)

	// UninstallApp was auto-generated from WSDL.
	UninstallApp(UninstallApp *UninstallAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*UninstallAppResponseType, *ServerVersionInfo, error)

	// UnpinTeamMailbox was auto-generated from WSDL.
	UnpinTeamMailbox(UnpinTeamMailbox *UnpinTeamMailboxRequestType, RequestServerVersion *RequestServerVersion) (*UnpinTeamMailboxResponseMessageType, *ServerVersionInfo, error)

	// Unsubscribe was auto-generated from WSDL.
	Unsubscribe(Unsubscribe *UnsubscribeType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UnsubscribeResponseType, *ServerVersionInfo, error)

	// UpdateDelegate was auto-generated from WSDL.
	UpdateDelegate(UpdateDelegate *UpdateDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UpdateDelegateResponseMessageType, *ServerVersionInfo, error)

	// UpdateExtensionUsage was auto-generated from WSDL.
	UpdateExtensionUsage(UpdateExtensionUsage *UpdateExtensionUsageType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*UpdateExtensionUsageResponseType, *ServerVersionInfo, error)

	// UpdateFolder was auto-generated from WSDL.
	UpdateFolder(UpdateFolder *UpdateFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateFolderResponseType, *ServerVersionInfo, error)

	// UpdateInboxRules was auto-generated from WSDL.
	UpdateInboxRules(UpdateInboxRules *UpdateInboxRulesRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateInboxRulesResponseType, *ServerVersionInfo, error)

	// UpdateItem was auto-generated from WSDL.
	UpdateItem(UpdateItem *UpdateItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateItemResponseType, *ServerVersionInfo, error)

	// UpdateItemInRecoverableItems was auto-generated from WSDL.
	UpdateItemInRecoverableItems(UpdateItemInRecoverableItems *UpdateItemInRecoverableItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*UpdateItemInRecoverableItemsResponseType, *ServerVersionInfo, error)

	// UpdateMeetingInstance was auto-generated from WSDL.
	UpdateMeetingInstance(UpdateMeetingInstanceRequest *UpdateMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*UpdateMeetingInstanceResponseMessageType, *ServerVersionInfo, error)

	// UpdateMeetingSpace was auto-generated from WSDL.
	UpdateMeetingSpace(UpdateMeetingSpace *UpdateMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*UpdateMeetingSpaceResponseMessageType, *ServerVersionInfo, error)

	// UpdateUserConfiguration was auto-generated from WSDL.
	UpdateUserConfiguration(UpdateUserConfiguration *UpdateUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UpdateUserConfigurationResponseType, *ServerVersionInfo, error)

	// UploadItems was auto-generated from WSDL.
	UploadItems(UploadItems *UploadItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UploadItemsResponseType, *ServerVersionInfo, error)
}

// Date in WSDL format.
type Date string

// Time in WSDL format.
type Time string

// DateTime in WSDL format.
type DateTime string

// Duration in WSDL format.
type Duration string

// AADOfficeExtensionStatusType was auto-generated from WSDL.
type AADOfficeExtensionStatusType string

// Validate validates AADOfficeExtensionStatusType.
func (v AADOfficeExtensionStatusType) Validate() bool {
	for _, vv := range []string{
		"OptionalDisabled",
		"OptionalEnabled",
		"Mandatory",
		"Undefined",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AbchEmailAddressTypeType was auto-generated from WSDL.
type AbchEmailAddressTypeType string

// Validate validates AbchEmailAddressTypeType.
func (v AbchEmailAddressTypeType) Validate() bool {
	for _, vv := range []string{
		"Personal",
		"Business",
		"Other",
		"Passport",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ActivityDomainType was auto-generated from WSDL.
type ActivityDomainType string

// Validate validates ActivityDomainType.
func (v ActivityDomainType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"Personal",
		"Work",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AddInStateType was auto-generated from WSDL.
type AddInStateType string

// Validate validates AddInStateType.
func (v AddInStateType) Validate() bool {
	for _, vv := range []string{
		"Flagged",
		"OK",
		"Removed",
		"Undefined",
		"WithdrawingSoon",
		"Withdrawn",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AffectedTaskOccurrencesType was auto-generated from WSDL.
type AffectedTaskOccurrencesType string

// Validate validates AffectedTaskOccurrencesType.
func (v AffectedTaskOccurrencesType) Validate() bool {
	for _, vv := range []string{
		"AllOccurrences",
		"SpecifiedOccurrenceOnly",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AggregateType was auto-generated from WSDL.
type AggregateType string

// Validate validates AggregateType.
func (v AggregateType) Validate() bool {
	for _, vv := range []string{
		"Minimum",
		"Maximum",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AvailabilityProxyRequestType was auto-generated from WSDL.
type AvailabilityProxyRequestType string

// Validate validates AvailabilityProxyRequestType.
func (v AvailabilityProxyRequestType) Validate() bool {
	for _, vv := range []string{
		"CrossSite",
		"CrossForest",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AvailabilityStatusType was auto-generated from WSDL.
type AvailabilityStatusType string

// Validate validates AvailabilityStatusType.
func (v AvailabilityStatusType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"Free",
		"Tentative",
		"Busy",
		"Oof",
		"WorkingElsewhere",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// BodyTypeResponseType was auto-generated from WSDL.
type BodyTypeResponseType string

// Validate validates BodyTypeResponseType.
func (v BodyTypeResponseType) Validate() bool {
	for _, vv := range []string{
		"Best",
		"HTML",
		"Text",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// BodyTypeType was auto-generated from WSDL.
type BodyTypeType string

// Validate validates BodyTypeType.
func (v BodyTypeType) Validate() bool {
	for _, vv := range []string{
		"HTML",
		"Text",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CalendarItemCreateOrDeleteOperationType was auto-generated from
// WSDL.
type CalendarItemCreateOrDeleteOperationType string

// Validate validates CalendarItemCreateOrDeleteOperationType.
func (v CalendarItemCreateOrDeleteOperationType) Validate() bool {
	for _, vv := range []string{
		"SendToNone",
		"SendOnlyToAll",
		"SendToAllAndSaveCopy",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CalendarItemTypeType was auto-generated from WSDL.
type CalendarItemTypeType string

// Validate validates CalendarItemTypeType.
func (v CalendarItemTypeType) Validate() bool {
	for _, vv := range []string{
		"Single",
		"Occurrence",
		"Exception",
		"RecurringMaster",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CalendarItemUpdateOperationType was auto-generated from WSDL.
type CalendarItemUpdateOperationType string

// Validate validates CalendarItemUpdateOperationType.
func (v CalendarItemUpdateOperationType) Validate() bool {
	for _, vv := range []string{
		"SendToNone",
		"SendOnlyToAll",
		"SendOnlyToChanged",
		"SendToAllAndSaveCopy",
		"SendToChangedAndSaveCopy",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CalendarPermissionLevelType was auto-generated from WSDL.
type CalendarPermissionLevelType string

// Validate validates CalendarPermissionLevelType.
func (v CalendarPermissionLevelType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Owner",
		"PublishingEditor",
		"Editor",
		"PublishingAuthor",
		"Author",
		"NoneditingAuthor",
		"Reviewer",
		"Contributor",
		"FreeBusyTimeOnly",
		"FreeBusyTimeAndSubjectAndLocation",
		"Custom",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CalendarPermissionReadAccessType was auto-generated from WSDL.
type CalendarPermissionReadAccessType string

// Validate validates CalendarPermissionReadAccessType.
func (v CalendarPermissionReadAccessType) Validate() bool {
	for _, vv := range []string{
		"None",
		"TimeOnly",
		"TimeAndSubjectAndLocation",
		"FullDetails",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ClientAccessTokenTypeType was auto-generated from WSDL.
type ClientAccessTokenTypeType string

// Validate validates ClientAccessTokenTypeType.
func (v ClientAccessTokenTypeType) Validate() bool {
	for _, vv := range []string{
		"CallerIdentity",
		"ExtensionCallback",
		"ScopedToken",
		"ExtensionRestApiCallback",
		"Connectors",
		"Loki",
		"DesktopOutlook",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ClientExtensionProvidedToType was auto-generated from WSDL.
type ClientExtensionProvidedToType string

// Validate validates ClientExtensionProvidedToType.
func (v ClientExtensionProvidedToType) Validate() bool {
	for _, vv := range []string{
		"Everyone",
		"SpecificUsers",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ClientExtensionScopeType was auto-generated from WSDL.
type ClientExtensionScopeType string

// Validate validates ClientExtensionScopeType.
func (v ClientExtensionScopeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"User",
		"Organization",
		"Default",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ClientExtensionTypeType was auto-generated from WSDL.
type ClientExtensionTypeType string

// Validate validates ClientExtensionTypeType.
func (v ClientExtensionTypeType) Validate() bool {
	for _, vv := range []string{
		"Default",
		"Private",
		"MarketPlace",
		"PrivateCatalog",
		"MarketplacePrivateCatalog",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ClientIdType was auto-generated from WSDL.
type ClientIdType string

// Validate validates ClientIdType.
func (v ClientIdType) Validate() bool {
	for _, vv := range []string{
		"Web",
		"Mobile",
		"Tablet",
		"Desktop",
		"Exchange",
		"Outlook",
		"MacOutlook",
		"POP3",
		"IMAP4",
		"Other",
		"Lync",
		"OutlookService",
		"MacMail",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CompleteActionType was auto-generated from WSDL.
type CompleteActionType string

// Validate validates CompleteActionType.
func (v CompleteActionType) Validate() bool {
	for _, vv := range []string{
		"Commit",
		"Abandon",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConflictResolutionType was auto-generated from WSDL.
type ConflictResolutionType string

// Validate validates ConflictResolutionType.
func (v ConflictResolutionType) Validate() bool {
	for _, vv := range []string{
		"NeverOverwrite",
		"AutoResolve",
		"AlwaysOverwrite",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConnectionFailureCauseType was auto-generated from WSDL.
type ConnectionFailureCauseType string

// Validate validates ConnectionFailureCauseType.
func (v ConnectionFailureCauseType) Validate() bool {
	for _, vv := range []string{
		"None",
		"UserBusy",
		"NoAnswer",
		"Unavailable",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConnectionStatusType was auto-generated from WSDL.
type ConnectionStatusType string

// Validate validates ConnectionStatusType.
func (v ConnectionStatusType) Validate() bool {
	for _, vv := range []string{
		"OK",
		"Closed",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConsentStateType was auto-generated from WSDL.
type ConsentStateType string

// Validate validates ConsentStateType.
func (v ConsentStateType) Validate() bool {
	for _, vv := range []string{
		"NotResponded",
		"NotConsented",
		"Consented",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContactSourceType was auto-generated from WSDL.
type ContactSourceType string

// Validate validates ContactSourceType.
func (v ContactSourceType) Validate() bool {
	for _, vv := range []string{
		"ActiveDirectory",
		"Store",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContactUrlKeyType was auto-generated from WSDL.
type ContactUrlKeyType string

// Validate validates ContactUrlKeyType.
func (v ContactUrlKeyType) Validate() bool {
	for _, vv := range []string{
		"Personal",
		"Business",
		"Attachment",
		"EbcDisplayDefinition",
		"EbcFinalImage",
		"EbcLogo",
		"Feed",
		"Image",
		"InternalMarker",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContainmentComparisonType was auto-generated from WSDL.
type ContainmentComparisonType string

// Validate validates ContainmentComparisonType.
func (v ContainmentComparisonType) Validate() bool {
	for _, vv := range []string{
		"Exact",
		"IgnoreCase",
		"IgnoreNonSpacingCharacters",
		"Loose",
		"IgnoreCaseAndNonSpacingCharacters",
		"LooseAndIgnoreCase",
		"LooseAndIgnoreNonSpace",
		"LooseAndIgnoreCaseAndIgnoreNonSpace",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContainmentModeType was auto-generated from WSDL.
type ContainmentModeType string

// Validate validates ContainmentModeType.
func (v ContainmentModeType) Validate() bool {
	for _, vv := range []string{
		"FullString",
		"Prefixed",
		"Substring",
		"PrefixOnWords",
		"ExactPhrase",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContentActivityAcl was auto-generated from WSDL.
type ContentActivityAcl string

// Validate validates ContentActivityAcl.
func (v ContentActivityAcl) Validate() bool {
	for _, vv := range []string{
		"Organizer",
		"Presenter",
		"Everyone",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContentActivityMediaType was auto-generated from WSDL.
type ContentActivityMediaType string

// Validate validates ContentActivityMediaType.
func (v ContentActivityMediaType) Validate() bool {
	for _, vv := range []string{
		"AppSharing",
		"AudioVideo",
		"Chat",
		"DataConf",
		"Meeting",
		"MeetingConf",
		"PhoneConf",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ContentActivityType was auto-generated from WSDL.
type ContentActivityType string

// Validate validates ContentActivityType.
func (v ContentActivityType) Validate() bool {
	for _, vv := range []string{
		"Poll",
		"WhiteBoard",
		"QAndA",
		"Chat",
		"Meeting",
		"Annotations",
		"SharedNotes",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConversationActionTypeType was auto-generated from WSDL.
type ConversationActionTypeType string

// Validate validates ConversationActionTypeType.
func (v ConversationActionTypeType) Validate() bool {
	for _, vv := range []string{
		"AlwaysCategorize",
		"AlwaysDelete",
		"AlwaysMove",
		"Delete",
		"Move",
		"Copy",
		"SetReadState",
		"SetRetentionPolicy",
		"Flag",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConversationNodeSortOrder was auto-generated from WSDL.
type ConversationNodeSortOrder string

// Validate validates ConversationNodeSortOrder.
func (v ConversationNodeSortOrder) Validate() bool {
	for _, vv := range []string{
		"TreeOrderAscending",
		"TreeOrderDescending",
		"DateOrderAscending",
		"DateOrderDescending",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ConversationQueryTraversalType was auto-generated from WSDL.
type ConversationQueryTraversalType string

// Validate validates ConversationQueryTraversalType.
func (v ConversationQueryTraversalType) Validate() bool {
	for _, vv := range []string{
		"Shallow",
		"Deep",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CreateActionType was auto-generated from WSDL.
type CreateActionType string

// Validate validates CreateActionType.
func (v CreateActionType) Validate() bool {
	for _, vv := range []string{
		"CreateNew",
		"Update",
		"UpdateOrCreate",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DateTimePrecisionType was auto-generated from WSDL.
type DateTimePrecisionType string

// Validate validates DateTimePrecisionType.
func (v DateTimePrecisionType) Validate() bool {
	for _, vv := range []string{
		"Seconds",
		"Milliseconds",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DayOfWeekIndexType was auto-generated from WSDL.
type DayOfWeekIndexType string

// Validate validates DayOfWeekIndexType.
func (v DayOfWeekIndexType) Validate() bool {
	for _, vv := range []string{
		"First",
		"Second",
		"Third",
		"Fourth",
		"Last",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DayOfWeekType was auto-generated from WSDL.
type DayOfWeekType string

// Validate validates DayOfWeekType.
func (v DayOfWeekType) Validate() bool {
	for _, vv := range []string{
		"Sunday",
		"Monday",
		"Tuesday",
		"Wednesday",
		"Thursday",
		"Friday",
		"Saturday",
		"Day",
		"Weekday",
		"WeekendDay",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DefaultShapeNamesType was auto-generated from WSDL.
type DefaultShapeNamesType string

// Validate validates DefaultShapeNamesType.
func (v DefaultShapeNamesType) Validate() bool {
	for _, vv := range []string{
		"IdOnly",
		"Default",
		"AllProperties",
		"PcxPeopleSearch",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DelegateFolderPermissionLevelType was auto-generated from WSDL.
type DelegateFolderPermissionLevelType string

// Validate validates DelegateFolderPermissionLevelType.
func (v DelegateFolderPermissionLevelType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Editor",
		"Reviewer",
		"Author",
		"Custom",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DeliverMeetingRequestsType was auto-generated from WSDL.
type DeliverMeetingRequestsType string

// Validate validates DeliverMeetingRequestsType.
func (v DeliverMeetingRequestsType) Validate() bool {
	for _, vv := range []string{
		"DelegatesOnly",
		"DelegatesAndMe",
		"DelegatesAndSendInformationToMe",
		"NoForward",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DerivedItemIdType was auto-generated from WSDL.
type DerivedItemIdType string

// DictionaryURIType was auto-generated from WSDL.
type DictionaryURIType string

// Validate validates DictionaryURIType.
func (v DictionaryURIType) Validate() bool {
	for _, vv := range []string{
		"item:InternetMessageHeader",
		"contacts:ImAddress",
		"contacts:PhysicalAddress:Street",
		"contacts:PhysicalAddress:City",
		"contacts:PhysicalAddress:State",
		"contacts:PhysicalAddress:CountryOrRegion",
		"contacts:PhysicalAddress:PostalCode",
		"contacts:PhoneNumber",
		"contacts:EmailAddress",
		"distributionlist:Members:Member",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DisableReasonType was auto-generated from WSDL.
type DisableReasonType string

// Validate validates DisableReasonType.
func (v DisableReasonType) Validate() bool {
	for _, vv := range []string{
		"NoReason",
		"OutlookClientPerformance",
		"OWAClientPerformance",
		"MobileClientPerformance",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DisposalType was auto-generated from WSDL.
type DisposalType string

// Validate validates DisposalType.
func (v DisposalType) Validate() bool {
	for _, vv := range []string{
		"HardDelete",
		"SoftDelete",
		"MoveToDeletedItems",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DistinguishedFolderIdNameType was auto-generated from WSDL.
type DistinguishedFolderIdNameType string

// Validate validates DistinguishedFolderIdNameType.
func (v DistinguishedFolderIdNameType) Validate() bool {
	for _, vv := range []string{
		"calendar",
		"contacts",
		"deleteditems",
		"drafts",
		"inbox",
		"journal",
		"notes",
		"outbox",
		"sentitems",
		"tasks",
		"msgfolderroot",
		"publicfoldersroot",
		"root",
		"junkemail",
		"searchfolders",
		"voicemail",
		"recoverableitemsroot",
		"recoverableitemsdeletions",
		"recoverableitemsversions",
		"recoverableitemspurges",
		"recoverableitemsdiscoveryholds",
		"archiveroot",
		"archivemsgfolderroot",
		"archivedeleteditems",
		"archiveinbox",
		"archiverecoverableitemsroot",
		"archiverecoverableitemsdeletions",
		"archiverecoverableitemsversions",
		"archiverecoverableitemspurges",
		"archiverecoverableitemsdiscoveryholds",
		"syncissues",
		"conflicts",
		"localfailures",
		"serverfailures",
		"recipientcache",
		"quickcontacts",
		"conversationhistory",
		"adminauditlogs",
		"todosearch",
		"mycontacts",
		"directory",
		"imcontactlist",
		"peopleconnect",
		"favorites",
		"mecontact",
		"personmetadata",
		"teamspaceactivity",
		"teamspacemessaging",
		"teamspaceworkitems",
		"scheduled",
		"orionnotes",
		"tagitems",
		"alltaggeditems",
		"allcategorizeditems",
		"externalcontacts",
		"teamchat",
		"teamchathistory",
		"yammerdata",
		"yammerroot",
		"yammerinbound",
		"yammeroutbound",
		"yammerfeeds",
		"kaizaladata",
		"messageingestion",
		"onedriveroot",
		"onedriverecylebin",
		"onedrivesystem",
		"onedrivevolume",
		"important",
		"starred",
		"archive",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DistinguishedPropertySetType was auto-generated from WSDL.
type DistinguishedPropertySetType string

// Validate validates DistinguishedPropertySetType.
func (v DistinguishedPropertySetType) Validate() bool {
	for _, vv := range []string{
		"Meeting",
		"Appointment",
		"Common",
		"PublicStrings",
		"Address",
		"InternetHeaders",
		"CalendarAssistant",
		"UnifiedMessaging",
		"Task",
		"Sharing",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DistinguishedUserType was auto-generated from WSDL.
type DistinguishedUserType string

// Validate validates DistinguishedUserType.
func (v DistinguishedUserType) Validate() bool {
	for _, vv := range []string{
		"Default",
		"Anonymous",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ElcFolderType was auto-generated from WSDL.
type ElcFolderType string

// Validate validates ElcFolderType.
func (v ElcFolderType) Validate() bool {
	for _, vv := range []string{
		"Calendar",
		"Contacts",
		"DeletedItems",
		"Drafts",
		"Inbox",
		"JunkEmail",
		"Journal",
		"Notes",
		"Outbox",
		"SentItems",
		"Tasks",
		"All",
		"ManagedCustomFolder",
		"RssSubscriptions",
		"SyncIssues",
		"ConversationHistory",
		"Personal",
		"RecoverableItems",
		"NonIpmRoot",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmailAddressKeyType was auto-generated from WSDL.
type EmailAddressKeyType string

// Validate validates EmailAddressKeyType.
func (v EmailAddressKeyType) Validate() bool {
	for _, vv := range []string{
		"EmailAddress1",
		"EmailAddress2",
		"EmailAddress3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmailPositionType was auto-generated from WSDL.
type EmailPositionType string

// Validate validates EmailPositionType.
func (v EmailPositionType) Validate() bool {
	for _, vv := range []string{
		"LatestReply",
		"Other",
		"Subject",
		"Signature",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmailReminderChangeType was auto-generated from WSDL.
type EmailReminderChangeType string

// Validate validates EmailReminderChangeType.
func (v EmailReminderChangeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Added",
		"Override",
		"Deleted",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmailReminderSendOption was auto-generated from WSDL.
type EmailReminderSendOption string

// Validate validates EmailReminderSendOption.
func (v EmailReminderSendOption) Validate() bool {
	for _, vv := range []string{
		"NotSet",
		"User",
		"AllAttendees",
		"Staff",
		"Customer",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmptySuggestionReason was auto-generated from WSDL.
type EmptySuggestionReason string

// Validate validates EmptySuggestionReason.
func (v EmptySuggestionReason) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"AttendeesUnavailable",
		"LocationsUnavailable",
		"OrganizerUnavailable",
		"AttendeesUnavailableOrUnknown",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EntityFeedbackEntityAddSourceType was auto-generated from WSDL.
type EntityFeedbackEntityAddSourceType string

// Validate validates EntityFeedbackEntityAddSourceType.
func (v EntityFeedbackEntityAddSourceType) Validate() bool {
	for _, vv := range []string{
		"None",
		"EntityRelevanceApi",
		"EntityRelevanceApiCache",
		"ActiveDirectory",
		"ExplicitTyping",
		"Paste",
		"LocalCacheAndEntityRelevanceApi",
		"LocalCache",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ExceptionPropertyURIType was auto-generated from WSDL.
type ExceptionPropertyURIType string

// Validate validates ExceptionPropertyURIType.
func (v ExceptionPropertyURIType) Validate() bool {
	for _, vv := range []string{
		"attachment:Name",
		"attachment:ContentType",
		"attachment:Content",
		"recurrence:Month",
		"recurrence:DayOfWeekIndex",
		"recurrence:DaysOfWeek",
		"recurrence:DayOfMonth",
		"recurrence:Interval",
		"recurrence:NumberOfOccurrences",
		"timezone:Offset",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ExchangeVersionType was auto-generated from WSDL.
type ExchangeVersionType string

// Validate validates ExchangeVersionType.
func (v ExchangeVersionType) Validate() bool {
	for _, vv := range []string{
		"Exchange2007",
		"Exchange2007_SP1",
		"Exchange2009",
		"Exchange2010",
		"Exchange2010_SP1",
		"Exchange2010_SP2",
		"Exchange2012",
		"Exchange2013",
		"Exchange2013_SP1",
		"Exchange2015",
		"Exchange2016",
		"V2015_10_05",
		"V2016_01_06",
		"V2016_04_13",
		"V2016_07_13",
		"V2016_10_10",
		"V2017_01_07",
		"V2017_04_14",
		"V2017_07_11",
		"V2017_10_09",
		"V2018_01_08",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ExcludesAttributeType was auto-generated from WSDL.
type ExcludesAttributeType string

// ExecuteSearchSortOrderType was auto-generated from WSDL.
type ExecuteSearchSortOrderType string

// Validate validates ExecuteSearchSortOrderType.
func (v ExecuteSearchSortOrderType) Validate() bool {
	for _, vv := range []string{
		"DateTime",
		"Relevance",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ExternalAudience was auto-generated from WSDL.
type ExternalAudience string

// Validate validates ExternalAudience.
func (v ExternalAudience) Validate() bool {
	for _, vv := range []string{
		"None",
		"Known",
		"All",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// FileAsMappingType was auto-generated from WSDL.
type FileAsMappingType string

// Validate validates FileAsMappingType.
func (v FileAsMappingType) Validate() bool {
	for _, vv := range []string{
		"None",
		"LastCommaFirst",
		"FirstSpaceLast",
		"Company",
		"LastCommaFirstCompany",
		"CompanyLastFirst",
		"LastFirst",
		"LastFirstCompany",
		"CompanyLastCommaFirst",
		"LastFirstSuffix",
		"LastSpaceFirstCompany",
		"CompanyLastSpaceFirst",
		"LastSpaceFirst",
		"DisplayName",
		"FirstName",
		"LastFirstMiddleSuffix",
		"LastName",
		"Empty",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// FlagStatusType was auto-generated from WSDL.
type FlagStatusType string

// Validate validates FlagStatusType.
func (v FlagStatusType) Validate() bool {
	for _, vv := range []string{
		"NotFlagged",
		"Flagged",
		"Complete",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// FlaggedForActionType was auto-generated from WSDL.
type FlaggedForActionType string

// Validate validates FlaggedForActionType.
func (v FlaggedForActionType) Validate() bool {
	for _, vv := range []string{
		"Any",
		"Call",
		"DoNotForward",
		"FollowUp",
		"FYI",
		"Forward",
		"NoResponseNecessary",
		"Read",
		"Reply",
		"ReplyToAll",
		"Review",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// FolderClassType was auto-generated from WSDL.
type FolderClassType string

// FolderQueryTraversalType was auto-generated from WSDL.
type FolderQueryTraversalType string

// Validate validates FolderQueryTraversalType.
func (v FolderQueryTraversalType) Validate() bool {
	for _, vv := range []string{
		"Shallow",
		"Deep",
		"SoftDeleted",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// GroupMemberIdentifierType was auto-generated from WSDL.
type GroupMemberIdentifierType string

// Validate validates GroupMemberIdentifierType.
func (v GroupMemberIdentifierType) Validate() bool {
	for _, vv := range []string{
		"ExternalDirectoryObjectId",
		"LegacyExchangeDN",
		"SmtpAddress",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// GuidType was auto-generated from WSDL.
type GuidType string

// HoldActionType was auto-generated from WSDL.
type HoldActionType string

// Validate validates HoldActionType.
func (v HoldActionType) Validate() bool {
	for _, vv := range []string{
		"Create",
		"Update",
		"Remove",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// HoldStatusType was auto-generated from WSDL.
type HoldStatusType string

// Validate validates HoldStatusType.
func (v HoldStatusType) Validate() bool {
	for _, vv := range []string{
		"NotOnHold",
		"Pending",
		"OnHold",
		"PartialHold",
		"Failed",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// IconIndexType was auto-generated from WSDL.
type IconIndexType string

// Validate validates IconIndexType.
func (v IconIndexType) Validate() bool {
	for _, vv := range []string{
		"Default",
		"PostItem",
		"MailRead",
		"MailUnread",
		"MailReplied",
		"MailForwarded",
		"MailEncrypted",
		"MailSmimeSigned",
		"MailEncryptedReplied",
		"MailSmimeSignedReplied",
		"MailEncryptedForwarded",
		"MailSmimeSignedForwarded",
		"MailEncryptedRead",
		"MailSmimeSignedRead",
		"MailIrm",
		"MailIrmForwarded",
		"MailIrmReplied",
		"SmsSubmitted",
		"SmsRoutedToDeliveryPoint",
		"SmsRoutedToExternalMessagingSystem",
		"SmsDelivered",
		"OutlookDefaultForContacts",
		"AppointmentItem",
		"AppointmentRecur",
		"AppointmentMeet",
		"AppointmentMeetRecur",
		"AppointmentMeetNY",
		"AppointmentMeetYes",
		"AppointmentMeetNo",
		"AppointmentMeetMaybe",
		"AppointmentMeetCancel",
		"AppointmentMeetInfo",
		"TaskItem",
		"TaskRecur",
		"TaskOwned",
		"TaskDelegated",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// IdFormatType was auto-generated from WSDL.
type IdFormatType string

// Validate validates IdFormatType.
func (v IdFormatType) Validate() bool {
	for _, vv := range []string{
		"EwsLegacyId",
		"EwsId",
		"EntryId",
		"HexEntryId",
		"StoreId",
		"OwaId",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ImAddressKeyType was auto-generated from WSDL.
type ImAddressKeyType string

// Validate validates ImAddressKeyType.
func (v ImAddressKeyType) Validate() bool {
	for _, vv := range []string{
		"ImAddress1",
		"ImAddress2",
		"ImAddress3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ImportanceChoicesType was auto-generated from WSDL.
type ImportanceChoicesType string

// Validate validates ImportanceChoicesType.
func (v ImportanceChoicesType) Validate() bool {
	for _, vv := range []string{
		"Low",
		"Normal",
		"High",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// IndexBasePointType was auto-generated from WSDL.
type IndexBasePointType string

// Validate validates IndexBasePointType.
func (v IndexBasePointType) Validate() bool {
	for _, vv := range []string{
		"Beginning",
		"End",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// InferenceClassificationType was auto-generated from WSDL.
type InferenceClassificationType string

// Validate validates InferenceClassificationType.
func (v InferenceClassificationType) Validate() bool {
	for _, vv := range []string{
		"Focused",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// InsightStatusType was auto-generated from WSDL.
type InsightStatusType string

// Validate validates InsightStatusType.
func (v InsightStatusType) Validate() bool {
	for _, vv := range []string{
		"Created",
		"Active",
		"Dismissed",
		"Invalid",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// InvalidRecipientResponseCodeType was auto-generated from WSDL.
type InvalidRecipientResponseCodeType string

// Validate validates InvalidRecipientResponseCodeType.
func (v InvalidRecipientResponseCodeType) Validate() bool {
	for _, vv := range []string{
		"OtherError",
		"RecipientOrganizationNotFederated",
		"CannotObtainTokenFromSTS",
		"SystemPolicyBlocksSharingWithThisRecipient",
		"RecipientOrganizationFederatedWithUnknownTokenIssuer",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ItemClassType was auto-generated from WSDL.
type ItemClassType string

// ItemIndexErrorType was auto-generated from WSDL.
type ItemIndexErrorType string

// Validate validates ItemIndexErrorType.
func (v ItemIndexErrorType) Validate() bool {
	for _, vv := range []string{
		"None",
		"GenericError",
		"Timeout",
		"StaleEvent",
		"MailboxOffline",
		"AttachmentLimitReached",
		"MarsWriterTruncation",
		"DocumentParserFailure",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ItemQueryTraversalType was auto-generated from WSDL.
type ItemQueryTraversalType string

// Validate validates ItemQueryTraversalType.
func (v ItemQueryTraversalType) Validate() bool {
	for _, vv := range []string{
		"Shallow",
		"SoftDeleted",
		"Associated",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// LegacyFreeBusyType was auto-generated from WSDL.
type LegacyFreeBusyType string

// Validate validates LegacyFreeBusyType.
func (v LegacyFreeBusyType) Validate() bool {
	for _, vv := range []string{
		"Free",
		"Tentative",
		"Busy",
		"OOF",
		"WorkingElsewhere",
		"NoData",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// LobbyBypassType was auto-generated from WSDL.
type LobbyBypassType string

// Validate validates LobbyBypassType.
func (v LobbyBypassType) Validate() bool {
	for _, vv := range []string{
		"Disabled",
		"EnabledForGatewayParticipants",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// LocationSourceType was auto-generated from WSDL.
type LocationSourceType string

// Validate validates LocationSourceType.
func (v LocationSourceType) Validate() bool {
	for _, vv := range []string{
		"None",
		"LocationServices",
		"PhonebookServices",
		"Device",
		"Contact",
		"Resource",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MailboxSearchLocationType was auto-generated from WSDL.
type MailboxSearchLocationType string

// Validate validates MailboxSearchLocationType.
func (v MailboxSearchLocationType) Validate() bool {
	for _, vv := range []string{
		"PrimaryOnly",
		"ArchiveOnly",
		"All",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MailboxTypeType was auto-generated from WSDL.
type MailboxTypeType string

// Validate validates MailboxTypeType.
func (v MailboxTypeType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"OneOff",
		"Mailbox",
		"PublicDL",
		"PrivateDL",
		"Contact",
		"PublicFolder",
		"GroupMailbox",
		"ImplicitContact",
		"User",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MapiPropertyTypeType was auto-generated from WSDL.
type MapiPropertyTypeType string

// Validate validates MapiPropertyTypeType.
func (v MapiPropertyTypeType) Validate() bool {
	for _, vv := range []string{
		"ApplicationTime",
		"ApplicationTimeArray",
		"Binary",
		"BinaryArray",
		"Boolean",
		"CLSID",
		"CLSIDArray",
		"Currency",
		"CurrencyArray",
		"Double",
		"DoubleArray",
		"Error",
		"Float",
		"FloatArray",
		"Integer",
		"IntegerArray",
		"Long",
		"LongArray",
		"Null",
		"Object",
		"ObjectArray",
		"Short",
		"ShortArray",
		"SystemTime",
		"SystemTimeArray",
		"String",
		"StringArray",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MatchOptionsType was auto-generated from WSDL.
type MatchOptionsType string

// Validate validates MatchOptionsType.
func (v MatchOptionsType) Validate() bool {
	for _, vv := range []string{
		"FullString",
		"Prefix",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MaxSyncChangesReturnedType was auto-generated from WSDL.
type MaxSyncChangesReturnedType int

// MeetingAttendeeType was auto-generated from WSDL.
type MeetingAttendeeType string

// Validate validates MeetingAttendeeType.
func (v MeetingAttendeeType) Validate() bool {
	for _, vv := range []string{
		"Organizer",
		"Required",
		"Optional",
		"Room",
		"Resource",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MeetingRequestTypeType was auto-generated from WSDL.
type MeetingRequestTypeType string

// Validate validates MeetingRequestTypeType.
func (v MeetingRequestTypeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"FullUpdate",
		"InformationalUpdate",
		"NewMeetingRequest",
		"Outdated",
		"SilentUpdate",
		"PrincipalWantsCopy",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MeetingSpaceTypeEnum was auto-generated from WSDL.
type MeetingSpaceTypeEnum string

// Validate validates MeetingSpaceTypeEnum.
func (v MeetingSpaceTypeEnum) Validate() bool {
	for _, vv := range []string{
		"Public",
		"Private",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MemberStatusType was auto-generated from WSDL.
type MemberStatusType string

// Validate validates MemberStatusType.
func (v MemberStatusType) Validate() bool {
	for _, vv := range []string{
		"Unrecognized",
		"Normal",
		"Demoted",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MessageDispositionType was auto-generated from WSDL.
type MessageDispositionType string

// Validate validates MessageDispositionType.
func (v MessageDispositionType) Validate() bool {
	for _, vv := range []string{
		"SaveOnly",
		"SendOnly",
		"SendAndSaveCopy",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MessageTrackingReportTemplateType was auto-generated from WSDL.
type MessageTrackingReportTemplateType string

// Validate validates MessageTrackingReportTemplateType.
func (v MessageTrackingReportTemplateType) Validate() bool {
	for _, vv := range []string{
		"Summary",
		"RecipientPath",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ModernGroupTypeType was auto-generated from WSDL.
type ModernGroupTypeType string

// Validate validates ModernGroupTypeType.
func (v ModernGroupTypeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Private",
		"Secret",
		"Public",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MonthNamesType was auto-generated from WSDL.
type MonthNamesType string

// Validate validates MonthNamesType.
func (v MonthNamesType) Validate() bool {
	for _, vv := range []string{
		"January",
		"February",
		"March",
		"April",
		"May",
		"June",
		"July",
		"August",
		"September",
		"October",
		"November",
		"December",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// NonEmptyStringType was auto-generated from WSDL.
type NonEmptyStringType string

// NotificationEventTypeType was auto-generated from WSDL.
type NotificationEventTypeType string

// Validate validates NotificationEventTypeType.
func (v NotificationEventTypeType) Validate() bool {
	for _, vv := range []string{
		"CopiedEvent",
		"CreatedEvent",
		"DeletedEvent",
		"ModifiedEvent",
		"MovedEvent",
		"NewMailEvent",
		"FreeBusyChangedEvent",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OMEMessageRevocationStatus was auto-generated from WSDL.
type OMEMessageRevocationStatus string

// Validate validates OMEMessageRevocationStatus.
func (v OMEMessageRevocationStatus) Validate() bool {
	for _, vv := range []string{
		"None",
		"Success",
		"Failed",
		"MessageNotFound",
		"PartialFailed",
		"AlreadyRevoked",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OfficeClientCodeType was auto-generated from WSDL.
type OfficeClientCodeType string

// OnlineMeetingAccessLevelType was auto-generated from WSDL.
type OnlineMeetingAccessLevelType string

// Validate validates OnlineMeetingAccessLevelType.
func (v OnlineMeetingAccessLevelType) Validate() bool {
	for _, vv := range []string{
		"Locked",
		"Invited",
		"Internal",
		"Everyone",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OofState was auto-generated from WSDL.
type OofState string

// Validate validates OofState.
func (v OofState) Validate() bool {
	for _, vv := range []string{
		"Disabled",
		"Enabled",
		"Scheduled",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ParticipantActivityMediaType was auto-generated from WSDL.
type ParticipantActivityMediaType string

// Validate validates ParticipantActivityMediaType.
func (v ParticipantActivityMediaType) Validate() bool {
	for _, vv := range []string{
		"AppSharing",
		"AudioVideo",
		"Chat",
		"DataConf",
		"Meeting",
		"MeetingConf",
		"PhoneConf",
		"Focus",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ParticipantActivityRole was auto-generated from WSDL.
type ParticipantActivityRole string

// Validate validates ParticipantActivityRole.
func (v ParticipantActivityRole) Validate() bool {
	for _, vv := range []string{
		"Organizer",
		"Attendee",
		"Presenter",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PeopleSuggestionPersonType was auto-generated from WSDL.
type PeopleSuggestionPersonType string

// Validate validates PeopleSuggestionPersonType.
func (v PeopleSuggestionPersonType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"Person",
		"DistributionList",
		"Room",
		"Place",
		"ModernGroup",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PermissionActionType was auto-generated from WSDL.
type PermissionActionType string

// Validate validates PermissionActionType.
func (v PermissionActionType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Owned",
		"All",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PermissionLevelType was auto-generated from WSDL.
type PermissionLevelType string

// Validate validates PermissionLevelType.
func (v PermissionLevelType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Owner",
		"PublishingEditor",
		"Editor",
		"PublishingAuthor",
		"Author",
		"NoneditingAuthor",
		"Reviewer",
		"Contributor",
		"Custom",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PermissionReadAccessType was auto-generated from WSDL.
type PermissionReadAccessType string

// Validate validates PermissionReadAccessType.
func (v PermissionReadAccessType) Validate() bool {
	for _, vv := range []string{
		"None",
		"FullDetails",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PhoneCallStateType was auto-generated from WSDL.
type PhoneCallStateType string

// Validate validates PhoneCallStateType.
func (v PhoneCallStateType) Validate() bool {
	for _, vv := range []string{
		"Idle",
		"Connecting",
		"Alerted",
		"Connected",
		"Disconnected",
		"Incoming",
		"Transferring",
		"Forwarding",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PhoneNumberKeyType was auto-generated from WSDL.
type PhoneNumberKeyType string

// Validate validates PhoneNumberKeyType.
func (v PhoneNumberKeyType) Validate() bool {
	for _, vv := range []string{
		"AssistantPhone",
		"BusinessFax",
		"BusinessPhone",
		"BusinessPhone2",
		"Callback",
		"CarPhone",
		"CompanyMainPhone",
		"HomeFax",
		"HomePhone",
		"HomePhone2",
		"Isdn",
		"MobilePhone",
		"OtherFax",
		"OtherTelephone",
		"Pager",
		"PrimaryPhone",
		"RadioPhone",
		"Telex",
		"TtyTddPhone",
		"BusinessMobile",
		"IPPhone",
		"Mms",
		"Msn",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PhysicalAddressIndexType was auto-generated from WSDL.
type PhysicalAddressIndexType string

// Validate validates PhysicalAddressIndexType.
func (v PhysicalAddressIndexType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Home",
		"Business",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PhysicalAddressKeyType was auto-generated from WSDL.
type PhysicalAddressKeyType string

// Validate validates PhysicalAddressKeyType.
func (v PhysicalAddressKeyType) Validate() bool {
	for _, vv := range []string{
		"Home",
		"Business",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PredictedActionReasonType was auto-generated from WSDL.
type PredictedActionReasonType string

// Validate validates PredictedActionReasonType.
func (v PredictedActionReasonType) Validate() bool {
	for _, vv := range []string{
		"None",
		"ConversationStarterIsYou",
		"OnlyRecipient",
		"ConversationContributions",
		"MarkedImportantBySender",
		"SenderIsManager",
		"SenderIsInManagementChain",
		"SenderIsDirectReport",
		"ActionBasedOnSender",
		"NameOnToLine",
		"NameOnCcLine",
		"ManagerPosition",
		"ReplyToAMessageFromMe",
		"PreviouslyFlagged",
		"ActionBasedOnRecipients",
		"ActionBasedOnSubjectWords",
		"ActionBasedOnBasedOnBodyWords",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PresentersType was auto-generated from WSDL.
type PresentersType string

// Validate validates PresentersType.
func (v PresentersType) Validate() bool {
	for _, vv := range []string{
		"Disabled",
		"Internal",
		"Everyone",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PreviewItemBaseShapeType was auto-generated from WSDL.
type PreviewItemBaseShapeType string

// Validate validates PreviewItemBaseShapeType.
func (v PreviewItemBaseShapeType) Validate() bool {
	for _, vv := range []string{
		"Default",
		"Compact",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PropertyTagType is a union of: *UnsignedShort
type PropertyTagType interface{}

// ProtectionRuleActionKindType was auto-generated from WSDL.
type ProtectionRuleActionKindType string

// Validate validates ProtectionRuleActionKindType.
func (v ProtectionRuleActionKindType) Validate() bool {
	for _, vv := range []string{
		"RightsProtectMessage",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ProtectionRuleAllInternalType was auto-generated from WSDL.
type ProtectionRuleAllInternalType string

// ProtectionRuleTrueType was auto-generated from WSDL.
type ProtectionRuleTrueType string

// ProtectionRuleValueType was auto-generated from WSDL.
type ProtectionRuleValueType string

// RefinerTypeType was auto-generated from WSDL.
type RefinerTypeType string

// Validate validates RefinerTypeType.
func (v RefinerTypeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"To",
		"From",
		"Folder",
		"HasAttachment",
		"MailboxSource",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ReminderActionType was auto-generated from WSDL.
type ReminderActionType string

// Validate validates ReminderActionType.
func (v ReminderActionType) Validate() bool {
	for _, vv := range []string{
		"Dismiss",
		"Snooze",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ReminderGroupType was auto-generated from WSDL.
type ReminderGroupType string

// Validate validates ReminderGroupType.
func (v ReminderGroupType) Validate() bool {
	for _, vv := range []string{
		"Calendar",
		"Task",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ReminderMinutesBeforeStartType is a union of:
type ReminderMinutesBeforeStartType interface{}

// ReportMessageActionType was auto-generated from WSDL.
type ReportMessageActionType string

// Validate validates ReportMessageActionType.
func (v ReportMessageActionType) Validate() bool {
	for _, vv := range []string{
		"Junk",
		"NotJunk",
		"Phish",
		"Unsubscribe",
		"GetPolicy",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ReportMessagePlatformType was auto-generated from WSDL.
type ReportMessagePlatformType string

// Validate validates ReportMessagePlatformType.
func (v ReportMessagePlatformType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"Android",
		"iOS",
		"Mac",
		"OfficeOnline",
		"PC",
		"Universal",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ResolveNamesSearchScopeType was auto-generated from WSDL.
type ResolveNamesSearchScopeType string

// Validate validates ResolveNamesSearchScopeType.
func (v ResolveNamesSearchScopeType) Validate() bool {
	for _, vv := range []string{
		"ActiveDirectory",
		"ActiveDirectoryContacts",
		"Contacts",
		"ContactsActiveDirectory",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ResponseClassType was auto-generated from WSDL.
type ResponseClassType string

// Validate validates ResponseClassType.
func (v ResponseClassType) Validate() bool {
	for _, vv := range []string{
		"Success",
		"Warning",
		"Error",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ResponseCodeType was auto-generated from WSDL.
type ResponseCodeType string

// Validate validates ResponseCodeType.
func (v ResponseCodeType) Validate() bool {
	for _, vv := range []string{
		"NoError",
		"ErrorAccessDenied",
		"ErrorAccessModeSpecified",
		"ErrorAccountDisabled",
		"ErrorAddDelegatesFailed",
		"ErrorAddressSpaceNotFound",
		"ErrorADOperation",
		"ErrorADSessionFilter",
		"ErrorADUnavailable",
		"ErrorServiceUnavailable",
		"ErrorAutoDiscoverFailed",
		"ErrorAffectedTaskOccurrencesRequired",
		"ErrorAttachmentNestLevelLimitExceeded",
		"ErrorAttachmentSizeLimitExceeded",
		"ErrorArchiveFolderPathCreation",
		"ErrorArchiveMailboxNotEnabled",
		"ErrorArchiveMailboxServiceDiscoveryFailed",
		"ErrorAvailabilityConfigNotFound",
		"ErrorBatchProcessingStopped",
		"ErrorCalendarCannotMoveOrCopyOccurrence",
		"ErrorCalendarCannotUpdateDeletedItem",
		"ErrorCalendarCannotUseIdForOccurrenceId",
		"ErrorCalendarCannotUseIdForRecurringMasterId",
		"ErrorCalendarDurationIsTooLong",
		"ErrorCalendarEndDateIsEarlierThanStartDate",
		"ErrorCalendarFolderIsInvalidForCalendarView",
		"ErrorCalendarInvalidAttributeValue",
		"ErrorCalendarInvalidDayForTimeChangePattern",
		"ErrorCalendarInvalidDayForWeeklyRecurrence",
		"ErrorCalendarInvalidPropertyState",
		"ErrorCalendarInvalidPropertyValue",
		"ErrorCalendarInvalidRecurrence",
		"ErrorCalendarInvalidTimeZone",
		"ErrorCalendarIsCancelledForAccept",
		"ErrorCalendarIsCancelledForDecline",
		"ErrorCalendarIsCancelledForRemove",
		"ErrorCalendarIsCancelledForTentative",
		"ErrorCalendarIsDelegatedForAccept",
		"ErrorCalendarIsDelegatedForDecline",
		"ErrorCalendarIsDelegatedForRemove",
		"ErrorCalendarIsDelegatedForTentative",
		"ErrorCalendarIsNotOrganizer",
		"ErrorCalendarIsOrganizerForAccept",
		"ErrorCalendarIsOrganizerForDecline",
		"ErrorCalendarIsOrganizerForRemove",
		"ErrorCalendarIsOrganizerForTentative",
		"ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange",
		"ErrorCalendarOccurrenceIsDeletedFromRecurrence",
		"ErrorCalendarOutOfRange",
		"ErrorCalendarMeetingRequestIsOutOfDate",
		"ErrorCalendarViewRangeTooBig",
		"ErrorCallerIsInvalidADAccount",
		"ErrorCannotAccessDeletedPublicFolder",
		"ErrorCannotArchiveCalendarContactTaskFolderException",
		"ErrorCannotArchiveItemsInPublicFolders",
		"ErrorCannotArchiveItemsInArchiveMailbox",
		"ErrorCannotCreateCalendarItemInNonCalendarFolder",
		"ErrorCannotCreateContactInNonContactFolder",
		"ErrorCannotCreatePostItemInNonMailFolder",
		"ErrorCannotCreateTaskInNonTaskFolder",
		"ErrorCannotDeleteObject",
		"ErrorCannotDisableMandatoryExtension",
		"ErrorCannotFindUser",
		"ErrorCannotGetSourceFolderPath",
		"ErrorCannotGetExternalEcpUrl",
		"ErrorCannotOpenFileAttachment",
		"ErrorCannotDeleteTaskOccurrence",
		"ErrorCannotEmptyFolder",
		"ErrorCannotSetCalendarPermissionOnNonCalendarFolder",
		"ErrorCannotSetNonCalendarPermissionOnCalendarFolder",
		"ErrorCannotSetPermissionUnknownEntries",
		"ErrorCannotSpecifySearchFolderAsSourceFolder",
		"ErrorCannotUseFolderIdForItemId",
		"ErrorCannotUseItemIdForFolderId",
		"ErrorChangeKeyRequired",
		"ErrorChangeKeyRequiredForWriteOperations",
		"ErrorClientDisconnected",
		"ErrorClientIntentInvalidStateDefinition",
		"ErrorClientIntentNotFound",
		"ErrorConnectionFailed",
		"ErrorContainsFilterWrongType",
		"ErrorContentConversionFailed",
		"ErrorContentIndexingNotEnabled",
		"ErrorCorruptData",
		"ErrorCreateItemAccessDenied",
		"ErrorCreateManagedFolderPartialCompletion",
		"ErrorCreateSubfolderAccessDenied",
		"ErrorCrossMailboxMoveCopy",
		"ErrorCrossSiteRequest",
		"ErrorDataSizeLimitExceeded",
		"ErrorDataSourceOperation",
		"ErrorDelegateAlreadyExists",
		"ErrorDelegateCannotAddOwner",
		"ErrorDelegateMissingConfiguration",
		"ErrorDelegateNoUser",
		"ErrorDelegateValidationFailed",
		"ErrorDeleteDistinguishedFolder",
		"ErrorDeleteItemsFailed",
		"ErrorDeleteUnifiedMessagingPromptFailed",
		"ErrorDistinguishedUserNotSupported",
		"ErrorDistributionListMemberNotExist",
		"ErrorDuplicateInputFolderNames",
		"ErrorDuplicateUserIdsSpecified",
		"ErrorDuplicateTransactionId",
		"ErrorEmailAddressMismatch",
		"ErrorEventNotFound",
		"ErrorExceededConnectionCount",
		"ErrorExceededSubscriptionCount",
		"ErrorExceededFindCountLimit",
		"ErrorExpiredSubscription",
		"ErrorExtensionNotFound",
		"ErrorExtensionsNotAuthorized",
		"ErrorFolderCorrupt",
		"ErrorFolderNotFound",
		"ErrorFolderPropertRequestFailed",
		"ErrorFolderSave",
		"ErrorFolderSaveFailed",
		"ErrorFolderSavePropertyError",
		"ErrorFolderExists",
		"ErrorFreeBusyGenerationFailed",
		"ErrorGetServerSecurityDescriptorFailed",
		"ErrorImContactLimitReached",
		"ErrorImGroupDisplayNameAlreadyExists",
		"ErrorImGroupLimitReached",
		"ErrorImpersonateUserDenied",
		"ErrorImpersonationDenied",
		"ErrorImpersonationFailed",
		"ErrorIncorrectSchemaVersion",
		"ErrorIncorrectUpdatePropertyCount",
		"ErrorIndividualMailboxLimitReached",
		"ErrorInsufficientResources",
		"ErrorInternalServerError",
		"ErrorInternalServerTransientError",
		"ErrorInvalidAccessLevel",
		"ErrorInvalidArgument",
		"ErrorInvalidAttachmentId",
		"ErrorInvalidAttachmentSubfilter",
		"ErrorInvalidAttachmentSubfilterTextFilter",
		"ErrorInvalidAuthorizationContext",
		"ErrorInvalidChangeKey",
		"ErrorInvalidClientSecurityContext",
		"ErrorInvalidCompleteDate",
		"ErrorInvalidContactEmailAddress",
		"ErrorInvalidContactEmailIndex",
		"ErrorInvalidCrossForestCredentials",
		"ErrorInvalidDelegatePermission",
		"ErrorInvalidDelegateUserId",
		"ErrorInvalidExcludesRestriction",
		"ErrorInvalidExpressionTypeForSubFilter",
		"ErrorInvalidExtendedProperty",
		"ErrorInvalidExtendedPropertyValue",
		"ErrorInvalidFolderId",
		"ErrorInvalidFolderTypeForOperation",
		"ErrorInvalidFractionalPagingParameters",
		"ErrorInvalidFreeBusyViewType",
		"ErrorInvalidId",
		"ErrorInvalidIdEmpty",
		"ErrorInvalidIdMalformed",
		"ErrorInvalidIdMalformedEwsLegacyIdFormat",
		"ErrorInvalidIdMonikerTooLong",
		"ErrorInvalidIdNotAnItemAttachmentId",
		"ErrorInvalidIdReturnedByResolveNames",
		"ErrorInvalidIdStoreObjectIdTooLong",
		"ErrorInvalidIdTooManyAttachmentLevels",
		"ErrorInvalidIdXml",
		"ErrorInvalidImContactId",
		"ErrorInvalidImDistributionGroupSmtpAddress",
		"ErrorInvalidImGroupId",
		"ErrorInvalidIndexedPagingParameters",
		"ErrorInvalidInternetHeaderChildNodes",
		"ErrorInvalidItemForOperationArchiveItem",
		"ErrorInvalidItemForOperationCreateItemAttachment",
		"ErrorInvalidItemForOperationCreateItem",
		"ErrorInvalidItemForOperationAcceptItem",
		"ErrorInvalidItemForOperationDeclineItem",
		"ErrorInvalidItemForOperationCancelItem",
		"ErrorInvalidItemForOperationExpandDL",
		"ErrorInvalidItemForOperationRemoveItem",
		"ErrorInvalidItemForOperationSendItem",
		"ErrorInvalidItemForOperationTentative",
		"ErrorInvalidLogonType",
		"ErrorInvalidLikeRequest",
		"ErrorInvalidMailbox",
		"ErrorInvalidManagedFolderProperty",
		"ErrorInvalidManagedFolderQuota",
		"ErrorInvalidManagedFolderSize",
		"ErrorInvalidMergedFreeBusyInterval",
		"ErrorInvalidNameForNameResolution",
		"ErrorInvalidOperation",
		"ErrorInvalidNetworkServiceContext",
		"ErrorInvalidOofParameter",
		"ErrorInvalidPagingMaxRows",
		"ErrorInvalidParentFolder",
		"ErrorInvalidPercentCompleteValue",
		"ErrorInvalidPermissionSettings",
		"ErrorInvalidPhoneCallId",
		"ErrorInvalidPhoneNumber",
		"ErrorInvalidUserInfo",
		"ErrorInvalidPropertyAppend",
		"ErrorInvalidPropertyDelete",
		"ErrorInvalidPropertyForExists",
		"ErrorInvalidPropertyForOperation",
		"ErrorInvalidPropertyRequest",
		"ErrorInvalidPropertySet",
		"ErrorInvalidPropertyUpdateSentMessage",
		"ErrorInvalidProxySecurityContext",
		"ErrorInvalidPullSubscriptionId",
		"ErrorInvalidPushSubscriptionUrl",
		"ErrorInvalidRecipients",
		"ErrorInvalidRecipientSubfilter",
		"ErrorInvalidRecipientSubfilterComparison",
		"ErrorInvalidRecipientSubfilterOrder",
		"ErrorInvalidRecipientSubfilterTextFilter",
		"ErrorInvalidReferenceItem",
		"ErrorInvalidRequest",
		"ErrorInvalidRestriction",
		"ErrorInvalidRetentionTagTypeMismatch",
		"ErrorInvalidRetentionTagInvisible",
		"ErrorInvalidRetentionTagInheritance",
		"ErrorInvalidRetentionTagIdGuid",
		"ErrorInvalidRoutingType",
		"ErrorInvalidScheduledOofDuration",
		"ErrorInvalidSchemaVersionForMailboxVersion",
		"ErrorInvalidSecurityDescriptor",
		"ErrorInvalidSendItemSaveSettings",
		"ErrorInvalidSerializedAccessToken",
		"ErrorInvalidServerVersion",
		"ErrorInvalidSid",
		"ErrorInvalidSIPUri",
		"ErrorInvalidSmtpAddress",
		"ErrorInvalidSubfilterType",
		"ErrorInvalidSubfilterTypeNotAttendeeType",
		"ErrorInvalidSubfilterTypeNotRecipientType",
		"ErrorInvalidSubscription",
		"ErrorInvalidSubscriptionRequest",
		"ErrorInvalidSyncStateData",
		"ErrorInvalidTimeInterval",
		"ErrorInvalidUserOofSettings",
		"ErrorInvalidUserPrincipalName",
		"ErrorInvalidUserSid",
		"ErrorInvalidUserSidMissingUPN",
		"ErrorInvalidValueForProperty",
		"ErrorInvalidWatermark",
		"ErrorIPGatewayNotFound",
		"ErrorIrresolvableConflict",
		"ErrorItemCorrupt",
		"ErrorItemNotFound",
		"ErrorItemPropertyRequestFailed",
		"ErrorItemSave",
		"ErrorItemSavePropertyError",
		"ErrorLegacyMailboxFreeBusyViewTypeNotMerged",
		"ErrorLocalServerObjectNotFound",
		"ErrorLogonAsNetworkServiceFailed",
		"ErrorMailboxConfiguration",
		"ErrorMailboxDataArrayEmpty",
		"ErrorMailboxDataArrayTooBig",
		"ErrorMailboxHoldNotFound",
		"ErrorMailboxLogonFailed",
		"ErrorMailboxMoveInProgress",
		"ErrorMailboxStoreUnavailable",
		"ErrorMailRecipientNotFound",
		"ErrorMailTipsDisabled",
		"ErrorManagedFolderAlreadyExists",
		"ErrorManagedFolderNotFound",
		"ErrorManagedFoldersRootFailure",
		"ErrorMeetingSuggestionGenerationFailed",
		"ErrorMessageDispositionRequired",
		"ErrorMessageSizeExceeded",
		"ErrorMimeContentConversionFailed",
		"ErrorMimeContentInvalid",
		"ErrorMimeContentInvalidBase64String",
		"ErrorMissingArgument",
		"ErrorMissingEmailAddress",
		"ErrorMissingEmailAddressForManagedFolder",
		"ErrorMissingInformationEmailAddress",
		"ErrorMissingInformationReferenceItemId",
		"ErrorMissingItemForCreateItemAttachment",
		"ErrorMissingManagedFolderId",
		"ErrorMissingRecipients",
		"ErrorMissingUserIdInformation",
		"ErrorMoreThanOneAccessModeSpecified",
		"ErrorMoveCopyFailed",
		"ErrorMoveDistinguishedFolder",
		"ErrorMoveUnifiedGroupPropertyFailed",
		"ErrorMultiLegacyMailboxAccess",
		"ErrorNameResolutionMultipleResults",
		"ErrorNameResolutionNoMailbox",
		"ErrorNameResolutionNoResults",
		"ErrorNoApplicableProxyCASServersAvailable",
		"ErrorNoCalendar",
		"ErrorNoDestinationCASDueToKerberosRequirements",
		"ErrorNoDestinationCASDueToSSLRequirements",
		"ErrorNoDestinationCASDueToVersionMismatch",
		"ErrorNoFolderClassOverride",
		"ErrorNoFreeBusyAccess",
		"ErrorNonExistentMailbox",
		"ErrorNonPrimarySmtpAddress",
		"ErrorNoPropertyTagForCustomProperties",
		"ErrorNoPublicFolderReplicaAvailable",
		"ErrorNoPublicFolderServerAvailable",
		"ErrorNoRespondingCASInDestinationSite",
		"ErrorNotDelegate",
		"ErrorNotEnoughMemory",
		"ErrorObjectTypeChanged",
		"ErrorOccurrenceCrossingBoundary",
		"ErrorOccurrenceTimeSpanTooBig",
		"ErrorOperationNotAllowedWithPublicFolderRoot",
		"ErrorParentFolderIdRequired",
		"ErrorParentFolderNotFound",
		"ErrorPasswordChangeRequired",
		"ErrorPasswordExpired",
		"ErrorPhoneNumberNotDialable",
		"ErrorPropertyUpdate",
		"ErrorPromptPublishingOperationFailed",
		"ErrorPropertyValidationFailure",
		"ErrorProxiedSubscriptionCallFailure",
		"ErrorProxyCallFailed",
		"ErrorProxyGroupSidLimitExceeded",
		"ErrorProxyRequestNotAllowed",
		"ErrorProxyRequestProcessingFailed",
		"ErrorProxyServiceDiscoveryFailed",
		"ErrorProxyTokenExpired",
		"ErrorPublicFolderMailboxDiscoveryFailed",
		"ErrorPublicFolderOperationFailed",
		"ErrorPublicFolderRequestProcessingFailed",
		"ErrorPublicFolderServerNotFound",
		"ErrorPublicFolderSyncException",
		"ErrorQueryFilterTooLong",
		"ErrorQuotaExceeded",
		"ErrorReadEventsFailed",
		"ErrorReadReceiptNotPending",
		"ErrorRecurrenceEndDateTooBig",
		"ErrorRecurrenceHasNoOccurrence",
		"ErrorRemoveDelegatesFailed",
		"ErrorRequestAborted",
		"ErrorRequestStreamTooBig",
		"ErrorRequiredPropertyMissing",
		"ErrorResolveNamesInvalidFolderType",
		"ErrorResolveNamesOnlyOneContactsFolderAllowed",
		"ErrorResponseSchemaValidation",
		"ErrorRestrictionTooLong",
		"ErrorRestrictionTooComplex",
		"ErrorResultSetTooBig",
		"ErrorInvalidExchangeImpersonationHeaderData",
		"ErrorSavedItemFolderNotFound",
		"ErrorSchemaValidation",
		"ErrorSearchFolderNotInitialized",
		"ErrorSendAsDenied",
		"ErrorSendMeetingCancellationsRequired",
		"ErrorSendMeetingInvitationsOrCancellationsRequired",
		"ErrorSendMeetingInvitationsRequired",
		"ErrorSentMeetingRequestUpdate",
		"ErrorSentTaskRequestUpdate",
		"ErrorServerBusy",
		"ErrorServiceDiscoveryFailed",
		"ErrorStaleObject",
		"ErrorSubmissionQuotaExceeded",
		"ErrorSubscriptionAccessDenied",
		"ErrorSubscriptionDelegateAccessNotSupported",
		"ErrorSubscriptionNotFound",
		"ErrorSubscriptionUnsubscribed",
		"ErrorSyncFolderNotFound",
		"ErrorTeamMailboxNotFound",
		"ErrorTeamMailboxNotLinkedToSharePoint",
		"ErrorTeamMailboxUrlValidationFailed",
		"ErrorTeamMailboxNotAuthorizedOwner",
		"ErrorTeamMailboxActiveToPendingDelete",
		"ErrorTeamMailboxFailedSendingNotifications",
		"ErrorTeamMailboxErrorUnknown",
		"ErrorTimeIntervalTooBig",
		"ErrorTimeoutExpired",
		"ErrorTimeZone",
		"ErrorToFolderNotFound",
		"ErrorTokenSerializationDenied",
		"ErrorTooManyObjectsOpened",
		"ErrorUpdatePropertyMismatch",
		"ErrorAccessingPartialCreatedUnifiedGroup",
		"ErrorUnifiedGroupMailboxAADCreationFailed",
		"ErrorUnifiedGroupMailboxAADDeleteFailed",
		"ErrorUnifiedGroupMailboxNamingPolicy",
		"ErrorUnifiedGroupMailboxDeleteFailed",
		"ErrorUnifiedGroupMailboxNotFound",
		"ErrorUnifiedGroupMailboxUpdateDelayed",
		"ErrorUnifiedGroupMailboxUpdatedPartialProperties",
		"ErrorUnifiedGroupMailboxUpdateFailed",
		"ErrorUnifiedGroupMailboxProvisionFailed",
		"ErrorUnifiedMessagingDialPlanNotFound",
		"ErrorUnifiedMessagingReportDataNotFound",
		"ErrorUnifiedMessagingPromptNotFound",
		"ErrorUnifiedMessagingRequestFailed",
		"ErrorUnifiedMessagingServerNotFound",
		"ErrorUnableToGetUserOofSettings",
		"ErrorUnableToRemoveImContactFromGroup",
		"ErrorUnsupportedSubFilter",
		"ErrorUnsupportedCulture",
		"ErrorUnsupportedMapiPropertyType",
		"ErrorUnsupportedMimeConversion",
		"ErrorUnsupportedPathForQuery",
		"ErrorUnsupportedPathForSortGroup",
		"ErrorUnsupportedPropertyDefinition",
		"ErrorUnsupportedQueryFilter",
		"ErrorUnsupportedRecurrence",
		"ErrorUnsupportedTypeForConversion",
		"ErrorUpdateDelegatesFailed",
		"ErrorUserNotUnifiedMessagingEnabled",
		"ErrorVoiceMailNotImplemented",
		"ErrorValueOutOfRange",
		"ErrorVirusDetected",
		"ErrorVirusMessageDeleted",
		"ErrorWebRequestInInvalidState",
		"ErrorWin32InteropError",
		"ErrorWorkingHoursSaveFailed",
		"ErrorWorkingHoursXmlMalformed",
		"ErrorWrongServerVersion",
		"ErrorWrongServerVersionDelegate",
		"ErrorMissingInformationSharingFolderId",
		"ErrorDuplicateSOAPHeader",
		"ErrorSharingSynchronizationFailed",
		"ErrorSharingNoExternalEwsAvailable",
		"ErrorFreeBusyDLLimitReached",
		"ErrorInvalidGetSharingFolderRequest",
		"ErrorNotAllowedExternalSharingByPolicy",
		"ErrorUserNotAllowedByPolicy",
		"ErrorPermissionNotAllowedByPolicy",
		"ErrorOrganizationNotFederated",
		"ErrorMailboxFailover",
		"ErrorInvalidExternalSharingInitiator",
		"ErrorMessageTrackingPermanentError",
		"ErrorMessageTrackingTransientError",
		"ErrorMessageTrackingNoSuchDomain",
		"ErrorUserWithoutFederatedProxyAddress",
		"ErrorInvalidOrganizationRelationshipForFreeBusy",
		"ErrorInvalidFederatedOrganizationId",
		"ErrorInvalidExternalSharingSubscriber",
		"ErrorInvalidSharingData",
		"ErrorInvalidSharingMessage",
		"ErrorNotSupportedSharingMessage",
		"ErrorApplyConversationActionFailed",
		"ErrorInboxRulesValidationError",
		"ErrorOutlookRuleBlobExists",
		"ErrorRulesOverQuota",
		"ErrorNewEventStreamConnectionOpened",
		"ErrorMissedNotificationEvents",
		"ErrorDuplicateLegacyDistinguishedName",
		"ErrorInvalidClientAccessTokenRequest",
		"ErrorUnauthorizedClientAccessTokenRequest",
		"ErrorNoSpeechDetected",
		"ErrorUMServerUnavailable",
		"ErrorRecipientNotFound",
		"ErrorRecognizerNotInstalled",
		"ErrorSpeechGrammarError",
		"ErrorInvalidManagementRoleHeader",
		"ErrorLocationServicesDisabled",
		"ErrorLocationServicesRequestTimedOut",
		"ErrorLocationServicesRequestFailed",
		"ErrorLocationServicesInvalidRequest",
		"ErrorWeatherServiceDisabled",
		"ErrorMailboxScopeNotAllowedWithoutQueryString",
		"ErrorArchiveMailboxSearchFailed",
		"ErrorGetRemoteArchiveFolderFailed",
		"ErrorFindRemoteArchiveFolderFailed",
		"ErrorGetRemoteArchiveItemFailed",
		"ErrorExportRemoteArchiveItemsFailed",
		"ErrorInvalidPhotoSize",
		"ErrorSearchQueryHasTooManyKeywords",
		"ErrorSearchTooManyMailboxes",
		"ErrorInvalidRetentionTagNone",
		"ErrorDiscoverySearchesDisabled",
		"ErrorCalendarSeekToConditionNotSupported",
		"ErrorCalendarIsGroupMailboxForAccept",
		"ErrorCalendarIsGroupMailboxForDecline",
		"ErrorCalendarIsGroupMailboxForTentative",
		"ErrorCalendarIsGroupMailboxForSuppressReadReceipt",
		"ErrorOrganizationAccessBlocked",
		"ErrorInvalidLicense",
		"ErrorMessagePerFolderCountReceiveQuotaExceeded",
		"ErrorInvalidBulkActionType",
		"ErrorInvalidKeepNCount",
		"ErrorInvalidKeepNType",
		"ErrorNoOAuthServerAvailableForRequest",
		"ErrorInstantSearchSessionExpired",
		"ErrorInstantSearchTimeout",
		"ErrorInstantSearchFailed",
		"ErrorUnsupportedUserForExecuteSearch",
		"ErrorDuplicateExtendedKeywordDefinition",
		"ErrorMissingExchangePrincipal",
		"ErrorUnexpectedUnifiedGroupsCount",
		"ErrorParsingXMLResponse",
		"ErrorInvalidFederationOrganizationIdentifier",
		"ErrorInvalidSweepRule",
		"ErrorInvalidSweepRuleOperationType",
		"ErrorTargetDomainNotSupported",
		"ErrorInvalidInternetWebProxyOnLocalServer",
		"ErrorNoSenderRestrictionsSettingsFoundInRequest",
		"ErrorDuplicateSenderRestrictionsInputFound",
		"ErrorSenderRestrictionsUpdateFailed",
		"ErrorMessageSubmissionBlocked",
		"ErrorExceededMessageLimit",
		"ErrorExceededMaxRecipientLimitBlock",
		"ErrorAccountSuspend",
		"ErrorExceededMaxRecipientLimit",
		"ErrorMessageBlocked",
		"ErrorAccountSuspendShowTierUpgrade",
		"ErrorExceededMessageLimitShowTierUpgrade",
		"ErrorExceededMaxRecipientLimitShowTierUpgrade",
		"ErrorInvalidLongitude",
		"ErrorInvalidLatitude",
		"ErrorProxySoapException",
		"ErrorUnifiedGroupAlreadyExists",
		"ErrorUnifiedGroupAadAuthorizationRequestDenied",
		"ErrorUnifiedGroupCreationDisabled",
		"ErrorMarketPlaceExtensionAlreadyInstalledForOrg",
		"ErrorExtensionAlreadyInstalledForOrg",
		"ErrorNewerExtensionAlreadyInstalled",
		"ErrorNewerMarketPlaceExtensionAlreadyInstalled",
		"ErrorInvalidExtensionId",
		"ErrorCannotUninstallProvidedExtensions",
		"ErrorNoRbacPermissionToInstallMarketPlaceExtensions",
		"ErrorNoRbacPermissionToInstallReadWriteMailboxExtensions",
		"ErrorInvalidReportMessageActionType",
		"ErrorCannotDownloadExtensionManifest",
		"ErrorCalendarForwardActionNotAllowed",
		"ErrorUnifiedGroupAliasNamingPolicy",
		"ErrorSubscriptionsDisabledForGroup",
		"ErrorCannotFindFileAttachment",
		"ErrorInvalidValueForFilter",
		"ErrorQuotaExceededOnDelete",
		"ErrorAccessDeniedDueToCompliance",
		"ErrorRecoverableItemsAccessDenied",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ResponseTypeType was auto-generated from WSDL.
type ResponseTypeType string

// Validate validates ResponseTypeType.
func (v ResponseTypeType) Validate() bool {
	for _, vv := range []string{
		"Unknown",
		"Organizer",
		"Tentative",
		"Accept",
		"Decline",
		"NoResponseReceived",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RetentionActionType was auto-generated from WSDL.
type RetentionActionType string

// Validate validates RetentionActionType.
func (v RetentionActionType) Validate() bool {
	for _, vv := range []string{
		"None",
		"MoveToDeletedItems",
		"MoveToFolder",
		"DeleteAndAllowRecovery",
		"PermanentlyDelete",
		"MarkAsPastRetentionLimit",
		"MoveToArchive",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RetentionType was auto-generated from WSDL.
type RetentionType string

// Validate validates RetentionType.
func (v RetentionType) Validate() bool {
	for _, vv := range []string{
		"Delete",
		"Archive",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RoleMemberTypeType was auto-generated from WSDL.
type RoleMemberTypeType string

// Validate validates RoleMemberTypeType.
func (v RoleMemberTypeType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Passport",
		"Everyone",
		"Email",
		"Phone",
		"SkypeId",
		"ExternalId",
		"Group",
		"Guid",
		"Role",
		"Service",
		"Circle",
		"Domain",
		"Partner",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RuleFieldURIType was auto-generated from WSDL.
type RuleFieldURIType string

// Validate validates RuleFieldURIType.
func (v RuleFieldURIType) Validate() bool {
	for _, vv := range []string{
		"RuleId",
		"DisplayName",
		"Priority",
		"IsNotSupported",
		"Actions",
		"Condition:Categories",
		"Condition:ContainsBodyStrings",
		"Condition:ContainsHeaderStrings",
		"Condition:ContainsRecipientStrings",
		"Condition:ContainsSenderStrings",
		"Condition:ContainsSubjectOrBodyStrings",
		"Condition:ContainsSubjectStrings",
		"Condition:FlaggedForAction",
		"Condition:FromAddresses",
		"Condition:FromConnectedAccounts",
		"Condition:HasAttachments",
		"Condition:Importance",
		"Condition:IsApprovalRequest",
		"Condition:IsAutomaticForward",
		"Condition:IsAutomaticReply",
		"Condition:IsEncrypted",
		"Condition:IsMeetingRequest",
		"Condition:IsMeetingResponse",
		"Condition:IsNDR",
		"Condition:IsPermissionControlled",
		"Condition:IsReadReceipt",
		"Condition:IsSigned",
		"Condition:IsVoicemail",
		"Condition:ItemClasses",
		"Condition:MessageClassifications",
		"Condition:NotSentToMe",
		"Condition:SentCcMe",
		"Condition:SentOnlyToMe",
		"Condition:SentToAddresses",
		"Condition:SentToMe",
		"Condition:SentToOrCcMe",
		"Condition:Sensitivity",
		"Condition:WithinDateRange",
		"Condition:WithinSizeRange",
		"Exception:Categories",
		"Exception:ContainsBodyStrings",
		"Exception:ContainsHeaderStrings",
		"Exception:ContainsRecipientStrings",
		"Exception:ContainsSenderStrings",
		"Exception:ContainsSubjectOrBodyStrings",
		"Exception:ContainsSubjectStrings",
		"Exception:FlaggedForAction",
		"Exception:FromAddresses",
		"Exception:FromConnectedAccounts",
		"Exception:HasAttachments",
		"Exception:Importance",
		"Exception:IsApprovalRequest",
		"Exception:IsAutomaticForward",
		"Exception:IsAutomaticReply",
		"Exception:IsEncrypted",
		"Exception:IsMeetingRequest",
		"Exception:IsMeetingResponse",
		"Exception:IsNDR",
		"Exception:IsPermissionControlled",
		"Exception:IsReadReceipt",
		"Exception:IsSigned",
		"Exception:IsVoicemail",
		"Exception:ItemClasses",
		"Exception:MessageClassifications",
		"Exception:NotSentToMe",
		"Exception:SentCcMe",
		"Exception:SentOnlyToMe",
		"Exception:SentToAddresses",
		"Exception:SentToMe",
		"Exception:SentToOrCcMe",
		"Exception:Sensitivity",
		"Exception:WithinDateRange",
		"Exception:WithinSizeRange",
		"Action:AssignCategories",
		"Action:CopyToFolder",
		"Action:Delete",
		"Action:ForwardAsAttachmentToRecipients",
		"Action:ForwardToRecipients",
		"Action:MarkImportance",
		"Action:MarkAsRead",
		"Action:MoveToFolder",
		"Action:PermanentDelete",
		"Action:RedirectToRecipients",
		"Action:SendSMSAlertToRecipients",
		"Action:ServerReplyWithMessage",
		"Action:StopProcessingRules",
		"IsEnabled",
		"IsInError",
		"Conditions",
		"Exceptions",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RuleValidationErrorCodeType was auto-generated from WSDL.
type RuleValidationErrorCodeType string

// Validate validates RuleValidationErrorCodeType.
func (v RuleValidationErrorCodeType) Validate() bool {
	for _, vv := range []string{
		"ADOperationFailure",
		"ConnectedAccountNotFound",
		"CreateWithRuleId",
		"EmptyValueFound",
		"DuplicatedPriority",
		"DuplicatedOperationOnTheSameRule",
		"FolderDoesNotExist",
		"InvalidAddress",
		"InvalidDateRange",
		"InvalidFolderId",
		"InvalidSizeRange",
		"InvalidValue",
		"MessageClassificationNotFound",
		"MissingAction",
		"MissingParameter",
		"MissingRangeValue",
		"NotSettable",
		"RecipientDoesNotExist",
		"RuleNotFound",
		"SizeLessThanZero",
		"StringValueTooBig",
		"UnsupportedAddress",
		"UnexpectedError",
		"UnsupportedRule",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchApplicationIdType was auto-generated from WSDL.
type SearchApplicationIdType string

// Validate validates SearchApplicationIdType.
func (v SearchApplicationIdType) Validate() bool {
	for _, vv := range []string{
		"Outlook",
		"Owa",
		"Paw",
		"Teamspace",
		"OneDrive",
		"Other",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchFolderTraversalType was auto-generated from WSDL.
type SearchFolderTraversalType string

// Validate validates SearchFolderTraversalType.
func (v SearchFolderTraversalType) Validate() bool {
	for _, vv := range []string{
		"Shallow",
		"Deep",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchItemKindType was auto-generated from WSDL.
type SearchItemKindType string

// Validate validates SearchItemKindType.
func (v SearchItemKindType) Validate() bool {
	for _, vv := range []string{
		"Email",
		"Meetings",
		"Tasks",
		"Notes",
		"Docs",
		"Journals",
		"Contacts",
		"Im",
		"Voicemail",
		"Faxes",
		"Posts",
		"Rssfeeds",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchPageDirectionType was auto-generated from WSDL.
type SearchPageDirectionType string

// Validate validates SearchPageDirectionType.
func (v SearchPageDirectionType) Validate() bool {
	for _, vv := range []string{
		"Previous",
		"Next",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchResultType was auto-generated from WSDL.
type SearchResultType string

// Validate validates SearchResultType.
func (v SearchResultType) Validate() bool {
	for _, vv := range []string{
		"StatisticsOnly",
		"PreviewOnly",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchResultsPropertySetNameType was auto-generated from WSDL.
type SearchResultsPropertySetNameType string

// Validate validates SearchResultsPropertySetNameType.
func (v SearchResultsPropertySetNameType) Validate() bool {
	for _, vv := range []string{
		"Default",
		"Owa16",
		"Outlook16",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SendPromptType was auto-generated from WSDL.
type SendPromptType string

// Validate validates SendPromptType.
func (v SendPromptType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Send",
		"VotingOption",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SensitivityChoicesType was auto-generated from WSDL.
type SensitivityChoicesType string

// Validate validates SensitivityChoicesType.
func (v SensitivityChoicesType) Validate() bool {
	for _, vv := range []string{
		"Normal",
		"Personal",
		"Private",
		"Confidential",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SharingAction was auto-generated from WSDL.
type SharingAction string

// Validate validates SharingAction.
func (v SharingAction) Validate() bool {
	for _, vv := range []string{
		"AcceptAndViewCalendar",
		"ViewCalendar",
		"AddThisCalendar",
		"Accept",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SharingActionImportance was auto-generated from WSDL.
type SharingActionImportance string

// Validate validates SharingActionImportance.
func (v SharingActionImportance) Validate() bool {
	for _, vv := range []string{
		"Primary",
		"Secondary",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SharingActionType was auto-generated from WSDL.
type SharingActionType string

// Validate validates SharingActionType.
func (v SharingActionType) Validate() bool {
	for _, vv := range []string{
		"Accept",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SharingDataType was auto-generated from WSDL.
type SharingDataType string

// Validate validates SharingDataType.
func (v SharingDataType) Validate() bool {
	for _, vv := range []string{
		"Calendar",
		"Contacts",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SortDirectionType was auto-generated from WSDL.
type SortDirectionType string

// Validate validates SortDirectionType.
func (v SortDirectionType) Validate() bool {
	for _, vv := range []string{
		"Ascending",
		"Descending",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SpecialLogonTypeType was auto-generated from WSDL.
type SpecialLogonTypeType string

// Validate validates SpecialLogonTypeType.
func (v SpecialLogonTypeType) Validate() bool {
	for _, vv := range []string{
		"Admin",
		"SystemService",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// StandardGroupByType was auto-generated from WSDL.
type StandardGroupByType string

// Validate validates StandardGroupByType.
func (v StandardGroupByType) Validate() bool {
	for _, vv := range []string{
		"ConversationTopic",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// StreamingSubscriptionConnectionTimeoutType was auto-generated
// from WSDL.
type StreamingSubscriptionConnectionTimeoutType int

// SubscriptionIdType was auto-generated from WSDL.
type SubscriptionIdType NonEmptyStringType

// SubscriptionStatusFrequencyType was auto-generated from WSDL.
type SubscriptionStatusFrequencyType int

// SubscriptionStatusType was auto-generated from WSDL.
type SubscriptionStatusType string

// Validate validates SubscriptionStatusType.
func (v SubscriptionStatusType) Validate() bool {
	for _, vv := range []string{
		"OK",
		"Unsubscribe",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SubscriptionTimeoutType was auto-generated from WSDL.
type SubscriptionTimeoutType int

// SuggestionQuality was auto-generated from WSDL.
type SuggestionQuality string

// Validate validates SuggestionQuality.
func (v SuggestionQuality) Validate() bool {
	for _, vv := range []string{
		"Excellent",
		"Good",
		"Fair",
		"Poor",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SyncFolderItemsScopeType was auto-generated from WSDL.
type SyncFolderItemsScopeType string

// Validate validates SyncFolderItemsScopeType.
func (v SyncFolderItemsScopeType) Validate() bool {
	for _, vv := range []string{
		"NormalItems",
		"NormalAndAssociatedItems",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SystemDayOfWeek was auto-generated from WSDL.
type SystemDayOfWeek string

// Validate validates SystemDayOfWeek.
func (v SystemDayOfWeek) Validate() bool {
	for _, vv := range []string{
		"Sunday",
		"Monday",
		"Tuesday",
		"Wednesday",
		"Thursday",
		"Friday",
		"Saturday",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TaskDelegateStateType was auto-generated from WSDL.
type TaskDelegateStateType string

// Validate validates TaskDelegateStateType.
func (v TaskDelegateStateType) Validate() bool {
	for _, vv := range []string{
		"NoMatch",
		"OwnNew",
		"Owned",
		"Accepted",
		"Declined",
		"Max",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TaskStatusType was auto-generated from WSDL.
type TaskStatusType string

// Validate validates TaskStatusType.
func (v TaskStatusType) Validate() bool {
	for _, vv := range []string{
		"NotStarted",
		"InProgress",
		"Completed",
		"WaitingOnOthers",
		"Deferred",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TeamMailboxLifecycleStateType was auto-generated from WSDL.
type TeamMailboxLifecycleStateType string

// Validate validates TeamMailboxLifecycleStateType.
func (v TeamMailboxLifecycleStateType) Validate() bool {
	for _, vv := range []string{
		"Active",
		"Closed",
		"Unlinked",
		"PendingDelete",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TokenSourceType was auto-generated from WSDL.
type TokenSourceType string

// Validate validates TokenSourceType.
func (v TokenSourceType) Validate() bool {
	for _, vv := range []string{
		"None",
		"LinkedIn",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TransitionTargetKindType was auto-generated from WSDL.
type TransitionTargetKindType string

// Validate validates TransitionTargetKindType.
func (v TransitionTargetKindType) Validate() bool {
	for _, vv := range []string{
		"Period",
		"Group",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UnifiedGroupAccessType was auto-generated from WSDL.
type UnifiedGroupAccessType string

// Validate validates UnifiedGroupAccessType.
func (v UnifiedGroupAccessType) Validate() bool {
	for _, vv := range []string{
		"None",
		"Private",
		"Secret",
		"Public",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UnindexedFieldURIType was auto-generated from WSDL.
type UnindexedFieldURIType string

// Validate validates UnindexedFieldURIType.
func (v UnindexedFieldURIType) Validate() bool {
	for _, vv := range []string{
		"folder:FolderId",
		"folder:ParentFolderId",
		"folder:DisplayName",
		"folder:UnreadCount",
		"folder:TotalCount",
		"folder:ChildFolderCount",
		"folder:FolderClass",
		"folder:SearchParameters",
		"folder:ManagedFolderInformation",
		"folder:PermissionSet",
		"folder:EffectiveRights",
		"folder:SharingEffectiveRights",
		"folder:DistinguishedFolderId",
		"folder:PolicyTag",
		"folder:ArchiveTag",
		"folder:ReplicaList",
		"item:ItemId",
		"item:ParentFolderId",
		"item:ItemClass",
		"item:MimeContent",
		"item:Attachments",
		"item:Subject",
		"item:DateTimeReceived",
		"item:Size",
		"item:Categories",
		"item:HasAttachments",
		"item:Importance",
		"item:InReplyTo",
		"item:InternetMessageHeaders",
		"item:IsAssociated",
		"item:IsDraft",
		"item:IsFromMe",
		"item:IsResend",
		"item:IsSubmitted",
		"item:IsUnmodified",
		"item:DateTimeSent",
		"item:DateTimeCreated",
		"item:Body",
		"item:ResponseObjects",
		"item:Sensitivity",
		"item:ReminderDueBy",
		"item:ReminderIsSet",
		"item:ReminderNextTime",
		"item:ReminderMinutesBeforeStart",
		"item:DisplayTo",
		"item:DisplayCc",
		"item:DisplayBcc",
		"item:Culture",
		"item:EffectiveRights",
		"item:LastModifiedName",
		"item:LastModifiedTime",
		"item:ConversationId",
		"item:UniqueBody",
		"item:Flag",
		"item:StoreEntryId",
		"item:InstanceKey",
		"item:NormalizedBody",
		"item:EntityExtractionResult",
		"item:PolicyTag",
		"item:ArchiveTag",
		"item:RetentionDate",
		"item:Preview",
		"item:PredictedActionReasons",
		"item:IsClutter",
		"item:RightsManagementLicenseData",
		"item:BlockStatus",
		"item:HasBlockedImages",
		"item:WebClientReadFormQueryString",
		"item:WebClientEditFormQueryString",
		"item:TextBody",
		"item:IconIndex",
		"item:MimeContentUTF8",
		"item:Mentions",
		"item:MentionedMe",
		"item:MentionsPreview",
		"item:MentionsEx",
		"item:Hashtags",
		"item:AppliedHashtags",
		"item:AppliedHashtagsPreview",
		"item:Likes",
		"item:LikesPreview",
		"item:PendingSocialActivityTagIds",
		"item:AtAllMention",
		"item:CanDelete",
		"item:InferenceClassification",
		"item:FirstBody",
		"message:ConversationIndex",
		"message:ConversationTopic",
		"message:InternetMessageId",
		"message:IsRead",
		"message:IsResponseRequested",
		"message:IsReadReceiptRequested",
		"message:IsDeliveryReceiptRequested",
		"message:ReceivedBy",
		"message:ReceivedRepresenting",
		"message:References",
		"message:ReplyTo",
		"message:From",
		"message:Sender",
		"message:ToRecipients",
		"message:CcRecipients",
		"message:BccRecipients",
		"message:ApprovalRequestData",
		"message:VotingInformation",
		"message:ReminderMessageData",
		"message:PublishedCalendarItemIcs",
		"message:PublishedCalendarItemName",
		"message:MessageSafety",
		"sharingMessage:SharingMessageAction",
		"meeting:AssociatedCalendarItemId",
		"meeting:IsDelegated",
		"meeting:IsOutOfDate",
		"meeting:HasBeenProcessed",
		"meeting:ResponseType",
		"meeting:ProposedStart",
		"meeting:ProposedEnd",
		"meeting:DoNotForwardMeeting",
		"meetingRequest:MeetingRequestType",
		"meetingRequest:IntendedFreeBusyStatus",
		"meetingRequest:ChangeHighlights",
		"calendar:Start",
		"calendar:End",
		"calendar:OriginalStart",
		"calendar:StartWallClock",
		"calendar:EndWallClock",
		"calendar:StartTimeZoneId",
		"calendar:EndTimeZoneId",
		"calendar:IsAllDayEvent",
		"calendar:LegacyFreeBusyStatus",
		"calendar:SchemaLocation",
		"calendar:EnhancedLocation",
		"calendar:When",
		"calendar:IsMeeting",
		"calendar:IsCancelled",
		"calendar:IsRecurring",
		"calendar:MeetingRequestWasSent",
		"calendar:IsResponseRequested",
		"calendar:CalendarItemType",
		"calendar:MyResponseType",
		"calendar:Organizer",
		"calendar:RequiredAttendees",
		"calendar:OptionalAttendees",
		"calendar:Resources",
		"calendar:ConflictingMeetingCount",
		"calendar:AdjacentMeetingCount",
		"calendar:ConflictingMeetings",
		"calendar:AdjacentMeetings",
		"calendar:InboxReminders",
		"calendar:Duration",
		"calendar:TimeZone",
		"calendar:AppointmentReplyTime",
		"calendar:AppointmentSequenceNumber",
		"calendar:AppointmentState",
		"calendar:Recurrence",
		"calendar:FirstOccurrence",
		"calendar:LastOccurrence",
		"calendar:ModifiedOccurrences",
		"calendar:DeletedOccurrences",
		"calendar:MeetingTimeZone",
		"calendar:ConferenceType",
		"calendar:AllowNewTimeProposal",
		"calendar:IsOnlineMeeting",
		"calendar:MeetingWorkspaceUrl",
		"calendar:NetShowUrl",
		"calendar:UID",
		"calendar:RecurrenceId",
		"calendar:DateTimeStamp",
		"calendar:StartTimeZone",
		"calendar:EndTimeZone",
		"calendar:JoinOnlineMeetingUrl",
		"calendar:OnlineMeetingSettings",
		"calendar:IsOrganizer",
		"calendar:CalendarActivityData",
		"calendar:DoNotForwardMeeting",
		"task:ActualWork",
		"task:AssignedTime",
		"task:BillingInformation",
		"task:ChangeCount",
		"task:Companies",
		"task:CompleteDate",
		"task:Contacts",
		"task:DelegationState",
		"task:Delegator",
		"task:DueDate",
		"task:IsAssignmentEditable",
		"task:IsComplete",
		"task:IsRecurring",
		"task:IsTeamTask",
		"task:Mileage",
		"task:Owner",
		"task:PercentComplete",
		"task:Recurrence",
		"task:StartDate",
		"task:Status",
		"task:StatusDescription",
		"task:TotalWork",
		"contacts:Alias",
		"contacts:AssistantName",
		"contacts:Birthday",
		"contacts:BusinessHomePage",
		"contacts:Children",
		"contacts:Companies",
		"contacts:CompanyName",
		"contacts:CompleteName",
		"contacts:ContactSource",
		"contacts:Culture",
		"contacts:Department",
		"contacts:DisplayName",
		"contacts:DirectoryId",
		"contacts:DirectReports",
		"contacts:EmailAddresses",
		"contacts:AbchEmailAddresses",
		"contacts:FileAs",
		"contacts:FileAsMapping",
		"contacts:Generation",
		"contacts:GivenName",
		"contacts:ImAddresses",
		"contacts:Initials",
		"contacts:JobTitle",
		"contacts:Manager",
		"contacts:ManagerMailbox",
		"contacts:MiddleName",
		"contacts:Mileage",
		"contacts:MSExchangeCertificate",
		"contacts:Nickname",
		"contacts:Notes",
		"contacts:OfficeLocation",
		"contacts:PhoneNumbers",
		"contacts:PhoneticFullName",
		"contacts:PhoneticFirstName",
		"contacts:PhoneticLastName",
		"contacts:Photo",
		"contacts:PhysicalAddresses",
		"contacts:PostalAddressIndex",
		"contacts:Profession",
		"contacts:SpouseName",
		"contacts:Surname",
		"contacts:WeddingAnniversary",
		"contacts:UserSMIMECertificate",
		"contacts:HasPicture",
		"contacts:AccountName",
		"contacts:IsAutoUpdateDisabled",
		"contacts:IsMessengerEnabled",
		"contacts:Comment",
		"contacts:ContactShortId",
		"contacts:ContactType",
		"contacts:CreatedBy",
		"contacts:Gender",
		"contacts:IsHidden",
		"contacts:ObjectId",
		"contacts:PassportId",
		"contacts:IsPrivate",
		"contacts:SourceId",
		"contacts:TrustLevel",
		"contacts:Urls",
		"contacts:Cid",
		"contacts:SkypeAuthCertificate",
		"contacts:SkypeContext",
		"contacts:SkypeId",
		"contacts:XboxLiveTag",
		"contacts:SkypeRelationship",
		"contacts:YomiNickname",
		"contacts:InviteFree",
		"contacts:HidePresenceAndProfile",
		"contacts:IsPendingOutbound",
		"contacts:SupportGroupFeeds",
		"contacts:UserTileHash",
		"contacts:UnifiedInbox",
		"contacts:Mris",
		"contacts:Wlid",
		"contacts:AbchContactId",
		"contacts:NotInBirthdayCalendar",
		"contacts:ShellContactType",
		"contacts:ImMri",
		"contacts:PresenceTrustLevel",
		"contacts:OtherMri",
		"contacts:ProfileLastChanged",
		"contacts:MobileIMEnabled",
		"distributionlist:Members",
		"contacts:PartnerNetworkProfilePhotoUrl",
		"contacts:PartnerNetworkThumbnailPhotoUrl",
		"contacts:PersonId",
		"contacts:ConversationGuid",
		"postitem:PostedTime",
		"conversation:ConversationId",
		"conversation:ConversationTopic",
		"conversation:UniqueRecipients",
		"conversation:GlobalUniqueRecipients",
		"conversation:UniqueUnreadSenders",
		"conversation:GlobalUniqueUnreadSenders",
		"conversation:UniqueSenders",
		"conversation:GlobalUniqueSenders",
		"conversation:LastDeliveryTime",
		"conversation:GlobalLastDeliveryTime",
		"conversation:Categories",
		"conversation:GlobalCategories",
		"conversation:FlagStatus",
		"conversation:GlobalFlagStatus",
		"conversation:HasAttachments",
		"conversation:GlobalHasAttachments",
		"conversation:HasIrm",
		"conversation:GlobalHasIrm",
		"conversation:MessageCount",
		"conversation:GlobalMessageCount",
		"conversation:UnreadCount",
		"conversation:GlobalUnreadCount",
		"conversation:Size",
		"conversation:GlobalSize",
		"conversation:ItemClasses",
		"conversation:GlobalItemClasses",
		"conversation:Importance",
		"conversation:GlobalImportance",
		"conversation:ItemIds",
		"conversation:GlobalItemIds",
		"conversation:LastModifiedTime",
		"conversation:InstanceKey",
		"conversation:Preview",
		"conversation:IconIndex",
		"conversation:GlobalIconIndex",
		"conversation:DraftItemIds",
		"conversation:HasClutter",
		"conversation:MentionedMe",
		"conversation:GlobalMentionedMe",
		"conversation:AtAllMention",
		"conversation:GlobalAtAllMention",
		"person:FullName",
		"person:GivenName",
		"person:Surname",
		"person:PhoneNumber",
		"person:SMSNumber",
		"person:EmailAddress",
		"person:Alias",
		"person:Department",
		"person:LinkedInProfileLink",
		"person:Skills",
		"person:ProfessionalBiography",
		"person:ManagementChain",
		"person:DirectReports",
		"person:Peers",
		"person:TeamSize",
		"person:CurrentJob",
		"person:Birthday",
		"person:Hometown",
		"person:CurrentLocation",
		"person:CompanyProfile",
		"person:Office",
		"person:Headline",
		"person:MutualConnections",
		"person:Title",
		"person:MutualManager",
		"person:Insights",
		"person:UserProfilePicture",
		"persona:PersonaId",
		"persona:PersonaType",
		"persona:GivenName",
		"persona:CompanyName",
		"persona:Surname",
		"persona:DisplayName",
		"persona:EmailAddress",
		"persona:FileAs",
		"persona:HomeCity",
		"persona:CreationTime",
		"persona:RelevanceScore",
		"persona:RankingWeight",
		"persona:WorkCity",
		"persona:PersonaObjectStatus",
		"persona:FileAsId",
		"persona:DisplayNamePrefix",
		"persona:YomiCompanyName",
		"persona:YomiFirstName",
		"persona:YomiLastName",
		"persona:Title",
		"persona:EmailAddresses",
		"persona:PhoneNumber",
		"persona:ImAddress",
		"persona:ImAddresses",
		"persona:ImAddresses2",
		"persona:ImAddresses3",
		"persona:FolderIds",
		"persona:Attributions",
		"persona:DisplayNames",
		"persona:Initials",
		"persona:FileAses",
		"persona:FileAsIds",
		"persona:DisplayNamePrefixes",
		"persona:GivenNames",
		"persona:MiddleNames",
		"persona:Surnames",
		"persona:Generations",
		"persona:Nicknames",
		"persona:YomiCompanyNames",
		"persona:YomiFirstNames",
		"persona:YomiLastNames",
		"persona:BusinessPhoneNumbers",
		"persona:BusinessPhoneNumbers2",
		"persona:HomePhones",
		"persona:HomePhones2",
		"persona:MobilePhones",
		"persona:MobilePhones2",
		"persona:AssistantPhoneNumbers",
		"persona:CallbackPhones",
		"persona:CarPhones",
		"persona:HomeFaxes",
		"persona:OrganizationMainPhones",
		"persona:OtherFaxes",
		"persona:OtherTelephones",
		"persona:OtherPhones2",
		"persona:Pagers",
		"persona:RadioPhones",
		"persona:TelexNumbers",
		"persona:WorkFaxes",
		"persona:Emails1",
		"persona:Emails2",
		"persona:Emails3",
		"persona:BusinessHomePages",
		"persona:School",
		"persona:PersonalHomePages",
		"persona:OfficeLocations",
		"persona:BusinessAddresses",
		"persona:HomeAddresses",
		"persona:OtherAddresses",
		"persona:Titles",
		"persona:Departments",
		"persona:CompanyNames",
		"persona:Managers",
		"persona:AssistantNames",
		"persona:Professions",
		"persona:SpouseNames",
		"persona:Hobbies",
		"persona:WeddingAnniversaries",
		"persona:Birthdays",
		"persona:Children",
		"persona:Locations",
		"persona:ExtendedProperties",
		"persona:PostalAddress",
		"persona:Bodies",
		"persona:IsFavorite",
		"persona:InlineLinks",
		"persona:ItemLinkIds",
		"persona:HasActiveDeals",
		"persona:IsBusinessContact",
		"persona:AttributedHasActiveDeals",
		"persona:AttributedIsBusinessContact",
		"persona:SourceMailboxGuids",
		"persona:LastContactedDate",
		"persona:ExternalDirectoryObjectId",
		"persona:MapiEntryId",
		"persona:MapiEmailAddress",
		"persona:MapiAddressType",
		"persona:MapiSearchKey",
		"persona:MapiTransmittableDisplayName",
		"persona:MapiSendRichInfo",
		"rolemember:MemberType",
		"rolemember:MemberId",
		"rolemember:DisplayName",
		"network:TokenRefreshLastCompleted",
		"network:TokenRefreshLastAttempted",
		"network:SyncEnabled",
		"network:RejectedOffers",
		"network:SessionHandle",
		"network:RefreshTokenExpiry2",
		"network:RefreshToken2",
		"network:PsaLastChanged",
		"network:Offers",
		"network:LastWelcomeContact",
		"network:LastVersionSaved",
		"network:DomainTag",
		"network:FirstAuthErrorDates",
		"network:ErrorOffers",
		"network:ContactSyncSuccess",
		"network:ContactSyncError",
		"network:ClientToken2",
		"network:ClientToken",
		"network:ClientPublishSecret",
		"network:UserEmail",
		"network:AutoLinkSuccess",
		"network:AutoLinkError",
		"network:IsDefault",
		"network:Settings",
		"network:ProfileUrl",
		"network:UserTileUrl",
		"network:DomainId",
		"network:DisplayName",
		"network:AccountName",
		"network:SourceEntryID",
		"abchperson:FavoriteOrder",
		"abchperson:PersonId",
		"abchperson:ExchangePersonIdGuid",
		"abchperson:AntiLinkInfo",
		"abchperson:RelevanceOrder1",
		"abchperson:RelevanceOrder2",
		"abchperson:ContactHandles",
		"abchperson:Categories",
		"booking:ServiceIds",
		"booking:StaffIds",
		"booking:StaffInitials",
		"booking:CustomerName",
		"booking:CustomerEmail",
		"booking:CustomerPhone",
		"booking:CustomerId",
		"insight:InsightId",
		"insight:Type",
		"insight:StartTimeUtc",
		"insight:EndTimeUtc",
		"insight:Status",
		"insight:Version",
		"insight:ApplicationsIds",
		"insight:Text",
		"insight:SuggestedActions",
		"insight:AppContexts",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UserConfigurationDictionaryObjectTypesType was auto-generated
// from WSDL.
type UserConfigurationDictionaryObjectTypesType string

// Validate validates UserConfigurationDictionaryObjectTypesType.
func (v UserConfigurationDictionaryObjectTypesType) Validate() bool {
	for _, vv := range []string{
		"DateTime",
		"Boolean",
		"Byte",
		"String",
		"Integer32",
		"UnsignedInteger32",
		"Integer64",
		"UnsignedInteger64",
		"StringArray",
		"ByteArray",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UserPhotoSizeType was auto-generated from WSDL.
type UserPhotoSizeType string

// Validate validates UserPhotoSizeType.
func (v UserPhotoSizeType) Validate() bool {
	for _, vv := range []string{
		"HR48x48",
		"HR64x64",
		"HR96x96",
		"HR120x120",
		"HR240x240",
		"HR360x360",
		"HR432x432",
		"HR504x504",
		"HR648x648",
		"HR1024xN",
		"HR1920xN",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UserPhotoTypeType was auto-generated from WSDL.
type UserPhotoTypeType string

// Validate validates UserPhotoTypeType.
func (v UserPhotoTypeType) Validate() bool {
	for _, vv := range []string{
		"UserPhoto",
		"ProfileHeaderPhoto",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// VersionType was auto-generated from WSDL.
type VersionType string

// ViewFilterType was auto-generated from WSDL.
type ViewFilterType string

// Validate validates ViewFilterType.
func (v ViewFilterType) Validate() bool {
	for _, vv := range []string{
		"All",
		"Flagged",
		"HasAttachment",
		"ToOrCcMe",
		"Unread",
		"TaskActive",
		"TaskOverdue",
		"TaskCompleted",
		"NoClutter",
		"Clutter",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// WatermarkType was auto-generated from WSDL.
type WatermarkType NonEmptyStringType

// AbchEmailAddressDictionaryEntryType was auto-generated from
// WSDL.
type AbchEmailAddressDictionaryEntryType struct {
	Type               AbchEmailAddressTypeType `xml:"Type" json:"Type" yaml:"Type"`
	Address            string                   `xml:"Address" json:"Address" yaml:"Address"`
	IsMessengerEnabled *bool                    `xml:"IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty" yaml:"IsMessengerEnabled,omitempty"`
	Capabilities       *int64                   `xml:"Capabilities,omitempty" json:"Capabilities,omitempty" yaml:"Capabilities,omitempty"`
}

// AbchEmailAddressDictionaryType was auto-generated from WSDL.
type AbchEmailAddressDictionaryType struct {
	Email []*AbchEmailAddressDictionaryEntryType `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
}

// AbchPersonContactHandle was auto-generated from WSDL.
type AbchPersonContactHandle struct {
	SourceId    string  `xml:"SourceId" json:"SourceId" yaml:"SourceId"`
	ObjectId    string  `xml:"ObjectId" json:"ObjectId" yaml:"ObjectId"`
	AccountName *string `xml:"AccountName,omitempty" json:"AccountName,omitempty" yaml:"AccountName,omitempty"`
}

// AbchPersonItemType was auto-generated from WSDL.
type AbchPersonItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	AntiLinkInfo                 *string                                   `xml:"AntiLinkInfo,omitempty" json:"AntiLinkInfo,omitempty" yaml:"AntiLinkInfo,omitempty"`
	PersonId                     *GuidType                                 `xml:"PersonId,omitempty" json:"PersonId,omitempty" yaml:"PersonId,omitempty"`
	ContactHandles               *ArrayOfAbchPersonContactHandlesType      `xml:"ContactHandles,omitempty" json:"ContactHandles,omitempty" yaml:"ContactHandles,omitempty"`
	ContactCategories            *ArrayOfStringsType                       `xml:"ContactCategories,omitempty" json:"ContactCategories,omitempty" yaml:"ContactCategories,omitempty"`
	RelevanceOrder1              *string                                   `xml:"RelevanceOrder1,omitempty" json:"RelevanceOrder1,omitempty" yaml:"RelevanceOrder1,omitempty"`
	RelevanceOrder2              *string                                   `xml:"RelevanceOrder2,omitempty" json:"RelevanceOrder2,omitempty" yaml:"RelevanceOrder2,omitempty"`
	TrustLevel                   *int                                      `xml:"TrustLevel,omitempty" json:"TrustLevel,omitempty" yaml:"TrustLevel,omitempty"`
	FavoriteOrder                *int                                      `xml:"FavoriteOrder,omitempty" json:"FavoriteOrder,omitempty" yaml:"FavoriteOrder,omitempty"`
	ExchangePersonIdGuid         *GuidType                                 `xml:"ExchangePersonIdGuid,omitempty" json:"ExchangePersonIdGuid,omitempty" yaml:"ExchangePersonIdGuid,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AbchPersonItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AbchPersonItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AbsoluteDateTransitionType was auto-generated from WSDL.
type AbsoluteDateTransitionType struct {
	To            *TransitionTargetType `xml:"To,omitempty" json:"To,omitempty" yaml:"To,omitempty"`
	DateTime      *DateTime             `xml:"DateTime,omitempty" json:"DateTime,omitempty" yaml:"DateTime,omitempty"`
	TypeAttrXSI   string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AbsoluteDateTransitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AbsoluteDateTransitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AbsoluteMonthlyRecurrencePatternType was auto-generated from
// WSDL.
type AbsoluteMonthlyRecurrencePatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	DayOfMonth    *int   `xml:"DayOfMonth,omitempty" json:"DayOfMonth,omitempty" yaml:"DayOfMonth,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AbsoluteMonthlyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AbsoluteMonthlyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AbsoluteYearlyRecurrencePatternType was auto-generated from
// WSDL.
type AbsoluteYearlyRecurrencePatternType struct {
	DayOfMonth    *int            `xml:"DayOfMonth,omitempty" json:"DayOfMonth,omitempty" yaml:"DayOfMonth,omitempty"`
	Month         *MonthNamesType `xml:"Month,omitempty" json:"Month,omitempty" yaml:"Month,omitempty"`
	TypeAttrXSI   string          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AbsoluteYearlyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AbsoluteYearlyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AcceptItemType was auto-generated from WSDL.
type AcceptItemType struct {
	ProposedStart *DateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd   *DateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AcceptItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AcceptItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AcceptSharingInvitationType was auto-generated from WSDL.
type AcceptSharingInvitationType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AcceptSharingInvitationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AcceptSharingInvitationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AddDelegateResponseMessageType was auto-generated from WSDL.
type AddDelegateResponseMessageType struct {
	MessageText        *string                                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages   *ArrayOfDelegateUserResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI        string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddDelegateResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddDelegateResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddDelegateType was auto-generated from WSDL.
type AddDelegateType struct {
	Mailbox                *EmailAddressType           `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	DelegateUsers          *ArrayOfDelegateUserType    `xml:"DelegateUsers,omitempty" json:"DelegateUsers,omitempty" yaml:"DelegateUsers,omitempty"`
	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty" yaml:"DeliverMeetingRequests,omitempty"`
	TypeAttrXSI            string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddDelegateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddDelegateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddDistributionGroupToImListResponseMessageType was auto-generated
// from WSDL.
type AddDistributionGroupToImListResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ImGroup            *ImGroupType      `xml:"ImGroup,omitempty" json:"ImGroup,omitempty" yaml:"ImGroup,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddDistributionGroupToImListResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddDistributionGroupToImListResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddDistributionGroupToImListType was auto-generated from WSDL.
type AddDistributionGroupToImListType struct {
	SmtpAddress   *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
	DisplayName   *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TypeAttrXSI   string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddDistributionGroupToImListType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddDistributionGroupToImListType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddImContactToGroupResponseMessageType was auto-generated from
// WSDL.
type AddImContactToGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddImContactToGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddImContactToGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddImContactToGroupType was auto-generated from WSDL.
type AddImContactToGroupType struct {
	ContactId     *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty" yaml:"ContactId,omitempty"`
	GroupId       *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddImContactToGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddImContactToGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddImGroupResponseMessageType was auto-generated from WSDL.
type AddImGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ImGroup            *ImGroupType      `xml:"ImGroup,omitempty" json:"ImGroup,omitempty" yaml:"ImGroup,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddImGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddImGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddImGroupType was auto-generated from WSDL.
type AddImGroupType struct {
	DisplayName   *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TypeAttrXSI   string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddImGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddImGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddItemToMyCalendarType was auto-generated from WSDL.
type AddItemToMyCalendarType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	ReferenceItemId              *ItemIdType                               `xml:"ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty" yaml:"ReferenceItemId,omitempty"`
	ObjectName                   string                                    `xml:"ObjectName,attr,omitempty" json:"ObjectName,attr,omitempty" yaml:"ObjectName,attr,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddItemToMyCalendarType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddItemToMyCalendarType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AddNewImContactToGroupResponseMessageType was auto-generated
// from WSDL.
type AddNewImContactToGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Persona            *PersonaType      `xml:"Persona,omitempty" json:"Persona,omitempty" yaml:"Persona,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddNewImContactToGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddNewImContactToGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddNewImContactToGroupType was auto-generated from WSDL.
type AddNewImContactToGroupType struct {
	ImAddress     *NonEmptyStringType `xml:"ImAddress,omitempty" json:"ImAddress,omitempty" yaml:"ImAddress,omitempty"`
	DisplayName   *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	GroupId       *ItemIdType         `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI   string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddNewImContactToGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddNewImContactToGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddNewTelUriContactToGroupResponseMessageType was auto-generated
// from WSDL.
type AddNewTelUriContactToGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Persona            *PersonaType      `xml:"Persona,omitempty" json:"Persona,omitempty" yaml:"Persona,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddNewTelUriContactToGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddNewTelUriContactToGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddNewTelUriContactToGroupType was auto-generated from WSDL.
type AddNewTelUriContactToGroupType struct {
	TelUriAddress          *NonEmptyStringType `xml:"TelUriAddress,omitempty" json:"TelUriAddress,omitempty" yaml:"TelUriAddress,omitempty"`
	ImContactSipUriAddress *NonEmptyStringType `xml:"ImContactSipUriAddress,omitempty" json:"ImContactSipUriAddress,omitempty" yaml:"ImContactSipUriAddress,omitempty"`
	ImTelephoneNumber      *NonEmptyStringType `xml:"ImTelephoneNumber,omitempty" json:"ImTelephoneNumber,omitempty" yaml:"ImTelephoneNumber,omitempty"`
	GroupId                *ItemIdType         `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI            string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddNewTelUriContactToGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddNewTelUriContactToGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddTagResponseMessageType was auto-generated from WSDL.
type AddTagResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	WasSuccessful      *bool             `xml:"WasSuccessful,omitempty" json:"WasSuccessful,omitempty" yaml:"WasSuccessful,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddTagResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddTagResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddTagType was auto-generated from WSDL.
type AddTagType struct {
	Tag           string `xml:"Tag" json:"Tag" yaml:"Tag"`
	AppName       string `xml:"AppName" json:"AppName" yaml:"AppName"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddTagType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddTagType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AddressEntityType was auto-generated from WSDL.
type AddressEntityType struct {
	Position      []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	Address       *string              `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
	TypeAttrXSI   string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddressEntityType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddressEntityType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Identifier for a address list
type AddressListIdType struct {
	Id            string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddressListIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddressListIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Represents the field of each item to aggregate on and the qualifier
// to apply to that                 field in determining which
// item will represent the group.
type AggregateOnType struct {
	FieldURI         *PathToUnindexedFieldType `xml:"FieldURI,omitempty" json:"FieldURI,omitempty" yaml:"FieldURI,omitempty"`
	IndexedFieldURI  *PathToIndexedFieldType   `xml:"IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty" yaml:"IndexedFieldURI,omitempty"`
	ExtendedFieldURI *PathToExtendedFieldType  `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty" yaml:"ExtendedFieldURI,omitempty"`
	Aggregate        AggregateType             `xml:"Aggregate,attr,omitempty" json:"Aggregate,attr,omitempty" yaml:"Aggregate,attr,omitempty"`
}

// Surfaces alternate representations of an item or folder id.
// No change key is included.
type AlternateIdBaseType interface{}

// Represents an alternate mailbox folder or item Id.
type AlternateIdType struct {
	Format        IdFormatType       `xml:"Format,attr,omitempty" json:"Format,attr,omitempty" yaml:"Format,attr,omitempty"`
	Id            string             `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	Mailbox       NonEmptyStringType `xml:"Mailbox,attr,omitempty" json:"Mailbox,attr,omitempty" yaml:"Mailbox,attr,omitempty"`
	IsArchive     bool               `xml:"IsArchive,attr,omitempty" json:"IsArchive,attr,omitempty" yaml:"IsArchive,attr,omitempty"`
	TypeAttrXSI   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AlternateIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AlternateIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Represents an alternate public folder Id.
type AlternatePublicFolderIdType struct {
	Format        IdFormatType `xml:"Format,attr,omitempty" json:"Format,attr,omitempty" yaml:"Format,attr,omitempty"`
	FolderId      string       `xml:"FolderId,attr,omitempty" json:"FolderId,attr,omitempty" yaml:"FolderId,attr,omitempty"`
	TypeAttrXSI   string       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AlternatePublicFolderIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AlternatePublicFolderIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Represents an alternate public folder item Id.
type AlternatePublicFolderItemIdType struct {
	Format        IdFormatType `xml:"Format,attr,omitempty" json:"Format,attr,omitempty" yaml:"Format,attr,omitempty"`
	FolderId      string       `xml:"FolderId,attr,omitempty" json:"FolderId,attr,omitempty" yaml:"FolderId,attr,omitempty"`
	ItemId        string       `xml:"ItemId,attr,omitempty" json:"ItemId,attr,omitempty" yaml:"ItemId,attr,omitempty"`
	TypeAttrXSI   string       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AlternatePublicFolderItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AlternatePublicFolderItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AnalyzedQuery was auto-generated from WSDL.
type AnalyzedQuery struct {
	QueryLanguage      string           `xml:"QueryLanguage" json:"QueryLanguage" yaml:"QueryLanguage"`
	SearchRestrictions *RestrictionType `xml:"SearchRestrictions" json:"SearchRestrictions" yaml:"SearchRestrictions"`
}

// AndType was auto-generated from WSDL.
type AndType struct {
	SearchExpression *SearchExpressionType `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty" yaml:"SearchExpression,omitempty"`
	TypeAttrXSI      string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AndType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AndType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AppMetadata was auto-generated from WSDL.
type AppMetadata struct {
	EndNodeUrl          *string   `xml:"EndNodeUrl,omitempty" json:"EndNodeUrl,omitempty" yaml:"EndNodeUrl,omitempty"`
	AppStatus           *string   `xml:"AppStatus,omitempty" json:"AppStatus,omitempty" yaml:"AppStatus,omitempty"`
	ActionUrl           *string   `xml:"ActionUrl,omitempty" json:"ActionUrl,omitempty" yaml:"ActionUrl,omitempty"`
	ProductId           *string   `xml:"ProductId,omitempty" json:"ProductId,omitempty" yaml:"ProductId,omitempty"`
	EnabledStatus       *bool     `xml:"EnabledStatus,omitempty" json:"EnabledStatus,omitempty" yaml:"EnabledStatus,omitempty"`
	ConsentState        *string   `xml:"ConsentState,omitempty" json:"ConsentState,omitempty" yaml:"ConsentState,omitempty"`
	ExtensionType       *string   `xml:"ExtensionType,omitempty" json:"ExtensionType,omitempty" yaml:"ExtensionType,omitempty"`
	MarketplaceAssetId  *string   `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty" yaml:"MarketplaceAssetId,omitempty"`
	LicenseStatus       *string   `xml:"LicenseStatus,omitempty" json:"LicenseStatus,omitempty" yaml:"LicenseStatus,omitempty"`
	TrialExpirationDate *DateTime `xml:"TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty" yaml:"TrialExpirationDate,omitempty"`
	InstalledBy         *string   `xml:"InstalledBy,omitempty" json:"InstalledBy,omitempty" yaml:"InstalledBy,omitempty"`
	IsMandatory         *bool     `xml:"IsMandatory,omitempty" json:"IsMandatory,omitempty" yaml:"IsMandatory,omitempty"`
}

// AppType was auto-generated from WSDL.
type AppType struct {
	Metadata *AppMetadata `xml:"Metadata,omitempty" json:"Metadata,omitempty" yaml:"Metadata,omitempty"`
	Manifest []byte       `xml:"Manifest" json:"Manifest" yaml:"Manifest"`
}

// AppendToFolderFieldType was auto-generated from WSDL.
type AppendToFolderFieldType struct {
	Path           *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Folder         *FolderType            `xml:"Folder,omitempty" json:"Folder,omitempty" yaml:"Folder,omitempty"`
	CalendarFolder *CalendarFolderType    `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty" yaml:"CalendarFolder,omitempty"`
	ContactsFolder *ContactsFolderType    `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty" yaml:"ContactsFolder,omitempty"`
	SearchFolder   *SearchFolderType      `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty" yaml:"SearchFolder,omitempty"`
	TasksFolder    *TasksFolderType       `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty" yaml:"TasksFolder,omitempty"`
	TypeAttrXSI    string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AppendToFolderFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AppendToFolderFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AppendToItemFieldType was auto-generated from WSDL.
type AppendToItemFieldType struct {
	Path                *BasePathToElementType          `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Item                *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message             *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage      *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem        *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact             *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	DistributionList    *DistributionListType           `xml:"DistributionList,omitempty" json:"DistributionList,omitempty" yaml:"DistributionList,omitempty"`
	MeetingMessage      *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest      *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse     *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem            *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	RoleMember          *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network             *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person              *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
	TypeAttrXSI         string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AppendToItemFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AppendToItemFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AppliedHashtagType was auto-generated from WSDL.
type AppliedHashtagType struct {
	Id                    string                    `xml:"Id" json:"Id" yaml:"Id"`
	CreatedBy             *EmailAddressExtendedType `xml:"CreatedBy" json:"CreatedBy" yaml:"CreatedBy"`
	CreatedDateTime       *string                   `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty" yaml:"CreatedDateTime,omitempty"`
	ServerCreatedDateTime *string                   `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty" yaml:"ServerCreatedDateTime,omitempty"`
	DeepLink              *string                   `xml:"DeepLink,omitempty" json:"DeepLink,omitempty" yaml:"DeepLink,omitempty"`
	Application           *string                   `xml:"Application,omitempty" json:"Application,omitempty" yaml:"Application,omitempty"`
	Tag                   string                    `xml:"Tag" json:"Tag" yaml:"Tag"`
	IsAutoTagged          bool                      `xml:"IsAutoTagged" json:"IsAutoTagged" yaml:"IsAutoTagged"`
	IsInlined             bool                      `xml:"IsInlined" json:"IsInlined" yaml:"IsInlined"`
}

// AppliedHashtagsPreviewType was auto-generated from WSDL.
type AppliedHashtagsPreviewType struct {
	Hashtags *ArrayOfStringsType `xml:"Hashtags" json:"Hashtags" yaml:"Hashtags"`
}

// ApplyConversationActionResponseMessageType was auto-generated
// from WSDL.
type ApplyConversationActionResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ApplyConversationActionResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ApplyConversationActionResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ApplyConversationActionResponseType was auto-generated from
// WSDL.
type ApplyConversationActionResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ApplyConversationActionResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ApplyConversationActionResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ApplyConversationActionType was auto-generated from WSDL.
type ApplyConversationActionType struct {
	ConversationActions *NonEmptyArrayOfApplyConversationActionType `xml:"ConversationActions,omitempty" json:"ConversationActions,omitempty" yaml:"ConversationActions,omitempty"`
	TypeAttrXSI         string                                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ApplyConversationActionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ApplyConversationActionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ApprovalRequestDataType was auto-generated from WSDL.
type ApprovalRequestDataType struct {
	IsUndecidedApprovalRequest *bool     `xml:"IsUndecidedApprovalRequest,omitempty" json:"IsUndecidedApprovalRequest,omitempty" yaml:"IsUndecidedApprovalRequest,omitempty"`
	ApprovalDecision           *int      `xml:"ApprovalDecision,omitempty" json:"ApprovalDecision,omitempty" yaml:"ApprovalDecision,omitempty"`
	ApprovalDecisionMaker      *string   `xml:"ApprovalDecisionMaker,omitempty" json:"ApprovalDecisionMaker,omitempty" yaml:"ApprovalDecisionMaker,omitempty"`
	ApprovalDecisionTime       *DateTime `xml:"ApprovalDecisionTime,omitempty" json:"ApprovalDecisionTime,omitempty" yaml:"ApprovalDecisionTime,omitempty"`
}

// ArchiveItemResponseType was auto-generated from WSDL.
type ArchiveItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ArchiveItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ArchiveItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ArchiveItemType was auto-generated from WSDL.
type ArchiveItemType struct {
	ArchiveSourceFolderId *TargetFolderIdType             `xml:"ArchiveSourceFolderId,omitempty" json:"ArchiveSourceFolderId,omitempty" yaml:"ArchiveSourceFolderId,omitempty"`
	ItemIds               *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	TypeAttrXSI           string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ArchiveItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ArchiveItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ArrayOfAbchPersonContactHandlesType was auto-generated from
// WSDL.
type ArrayOfAbchPersonContactHandlesType struct {
	ContactHandle []*AbchPersonContactHandle `xml:"ContactHandle,omitempty" json:"ContactHandle,omitempty" yaml:"ContactHandle,omitempty"`
}

// ArrayOfAddressEntitiesType was auto-generated from WSDL.
type ArrayOfAddressEntitiesType struct {
	AddressEntity []*AddressEntityType `xml:"AddressEntity,omitempty" json:"AddressEntity,omitempty" yaml:"AddressEntity,omitempty"`
}

// ArrayOfAddressesType was auto-generated from WSDL.
type ArrayOfAddressesType struct {
	Address []*string `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
}

// ArrayOfAppManifestsType was auto-generated from WSDL.
type ArrayOfAppManifestsType struct {
	Manifest []*[]byte `xml:"Manifest,omitempty" json:"Manifest,omitempty" yaml:"Manifest,omitempty"`
}

// ArrayOfAppsType was auto-generated from WSDL.
type ArrayOfAppsType struct {
	App      []*AppType `xml:"App,omitempty" json:"App,omitempty" yaml:"App,omitempty"`
	Metadata *Metadata  `xml:"Metadata,omitempty" json:"Metadata,omitempty" yaml:"Metadata,omitempty"`
}

// ArrayOfArraysOfTrackingPropertiesType was auto-generated from
// WSDL.
type ArrayOfArraysOfTrackingPropertiesType struct {
	ArrayOfTrackingPropertiesType *ArrayOfTrackingPropertiesType `xml:"ArrayOfTrackingPropertiesType,omitempty" json:"ArrayOfTrackingPropertiesType,omitempty" yaml:"ArrayOfTrackingPropertiesType,omitempty"`
}

// ArrayOfAttachmentsType was auto-generated from WSDL.
type ArrayOfAttachmentsType struct {
	ItemAttachment      *ItemAttachmentType      `xml:"ItemAttachment,omitempty" json:"ItemAttachment,omitempty" yaml:"ItemAttachment,omitempty"`
	FileAttachment      *FileAttachmentType      `xml:"FileAttachment,omitempty" json:"FileAttachment,omitempty" yaml:"FileAttachment,omitempty"`
	ReferenceAttachment *ReferenceAttachmentType `xml:"ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty" yaml:"ReferenceAttachment,omitempty"`
}

// ArrayOfAttendeeAvailability was auto-generated from WSDL.
type ArrayOfAttendeeAvailability struct {
	AttendeeAvailability []*AttendeeAvailability `xml:"AttendeeAvailability,omitempty" json:"AttendeeAvailability,omitempty" yaml:"AttendeeAvailability,omitempty"`
}

// ArrayOfAttendeeConflictData was auto-generated from WSDL.
type ArrayOfAttendeeConflictData struct {
	UnknownAttendeeConflictData     *UnknownAttendeeConflictData     `xml:"UnknownAttendeeConflictData,omitempty" json:"UnknownAttendeeConflictData,omitempty" yaml:"UnknownAttendeeConflictData,omitempty"`
	IndividualAttendeeConflictData  *IndividualAttendeeConflictData  `xml:"IndividualAttendeeConflictData,omitempty" json:"IndividualAttendeeConflictData,omitempty" yaml:"IndividualAttendeeConflictData,omitempty"`
	TooBigGroupAttendeeConflictData *TooBigGroupAttendeeConflictData `xml:"TooBigGroupAttendeeConflictData,omitempty" json:"TooBigGroupAttendeeConflictData,omitempty" yaml:"TooBigGroupAttendeeConflictData,omitempty"`
	GroupAttendeeConflictData       *GroupAttendeeConflictData       `xml:"GroupAttendeeConflictData,omitempty" json:"GroupAttendeeConflictData,omitempty" yaml:"GroupAttendeeConflictData,omitempty"`
}

// ArrayOfAttendeeConstraintItems was auto-generated from WSDL.
type ArrayOfAttendeeConstraintItems struct {
	AttendeeItem []*AttendeeConstraintItem `xml:"AttendeeItem,omitempty" json:"AttendeeItem,omitempty" yaml:"AttendeeItem,omitempty"`
}

// ArrayOfBaseItemIdsType was auto-generated from WSDL.
type ArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
}

// ArrayOfBinaryType was auto-generated from WSDL.
type ArrayOfBinaryType struct {
	Base64Binary []*[]byte `xml:"Base64Binary,omitempty" json:"Base64Binary,omitempty" yaml:"Base64Binary,omitempty"`
}

// ArrayOfBodyContentAttributedValuesType was auto-generated from
// WSDL.
type ArrayOfBodyContentAttributedValuesType struct {
	BodyContentAttributedValue []*BodyContentAttributedValueType `xml:"BodyContentAttributedValue,omitempty" json:"BodyContentAttributedValue,omitempty" yaml:"BodyContentAttributedValue,omitempty"`
}

// ArrayOfCalendarEvent was auto-generated from WSDL.
type ArrayOfCalendarEvent struct {
	CalendarEvent []*CalendarEvent `xml:"CalendarEvent,omitempty" json:"CalendarEvent,omitempty" yaml:"CalendarEvent,omitempty"`
}

// ArrayOfCalendarItemsType was auto-generated from WSDL.
type ArrayOfCalendarItemsType struct {
	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
}

// ArrayOfCalendarPermissionsType was auto-generated from WSDL.
type ArrayOfCalendarPermissionsType struct {
	CalendarPermission *CalendarPermissionType `xml:"CalendarPermission,omitempty" json:"CalendarPermission,omitempty" yaml:"CalendarPermission,omitempty"`
}

// ArrayOfCompanyInsightValue was auto-generated from WSDL.
type ArrayOfCompanyInsightValue struct {
	Item []*CompanyInsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// ArrayOfComputedInsightValueProperty was auto-generated from
// WSDL.
type ArrayOfComputedInsightValueProperty struct {
	Property []*ComputedInsightValueProperty `xml:"Property,omitempty" json:"Property,omitempty" yaml:"Property,omitempty"`
}

// ArrayOfContactsType was auto-generated from WSDL.
type ArrayOfContactsType struct {
	Contact []*ContactType `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
}

// ArrayOfContextProperty was auto-generated from WSDL.
type ArrayOfContextProperty struct {
	ContextProperty []*ContextPropertyType `xml:"ContextProperty" json:"ContextProperty" yaml:"ContextProperty"`
}

// ArrayOfConversationNodesType was auto-generated from WSDL.
type ArrayOfConversationNodesType struct {
	ConversationNode *ConversationNodeType `xml:"ConversationNode,omitempty" json:"ConversationNode,omitempty" yaml:"ConversationNode,omitempty"`
}

// ArrayOfConversationRequestsType was auto-generated from WSDL.
type ArrayOfConversationRequestsType struct {
	Conversation *ConversationRequestType `xml:"Conversation,omitempty" json:"Conversation,omitempty" yaml:"Conversation,omitempty"`
}

// ArrayOfConversationsType was auto-generated from WSDL.
type ArrayOfConversationsType struct {
	Conversation *ConversationType `xml:"Conversation,omitempty" json:"Conversation,omitempty" yaml:"Conversation,omitempty"`
}

// ArrayOfDLExpansionType was auto-generated from WSDL.
type ArrayOfDLExpansionType struct {
	Mailbox []*EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
}

// ArrayOfDelegateUserResponseMessageType was auto-generated from
// WSDL.
type ArrayOfDelegateUserResponseMessageType struct {
	DelegateUserResponseMessageType []*DelegateUserResponseMessageType `xml:"DelegateUserResponseMessageType" json:"DelegateUserResponseMessageType" yaml:"DelegateUserResponseMessageType"`
}

// ArrayOfDelegateUserType was auto-generated from WSDL.
type ArrayOfDelegateUserType struct {
	DelegateUser []*DelegateUserType `xml:"DelegateUser" json:"DelegateUser" yaml:"DelegateUser"`
}

// Array of discovery search configuration.
type ArrayOfDiscoverySearchConfigurationType struct {
	DiscoverySearchConfiguration []*DiscoverySearchConfigurationType `xml:"DiscoverySearchConfiguration,omitempty" json:"DiscoverySearchConfiguration,omitempty" yaml:"DiscoverySearchConfiguration,omitempty"`
}

// ArrayOfDistinguishedFolderIdType was auto-generated from WSDL.
type ArrayOfDistinguishedFolderIdType struct {
	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
}

// ArrayOfEmailAddressAttributedValuesType was auto-generated from
// WSDL.
type ArrayOfEmailAddressAttributedValuesType struct {
	EmailAddressAttributedValue []*EmailAddressAttributedValueType `xml:"EmailAddressAttributedValue,omitempty" json:"EmailAddressAttributedValue,omitempty" yaml:"EmailAddressAttributedValue,omitempty"`
}

// ArrayOfEmailAddressEntitiesType was auto-generated from WSDL.
type ArrayOfEmailAddressEntitiesType struct {
	EmailAddressEntity []*EmailAddressEntityType `xml:"EmailAddressEntity,omitempty" json:"EmailAddressEntity,omitempty" yaml:"EmailAddressEntity,omitempty"`
}

// ArrayOfEmailAddressesType was auto-generated from WSDL.
type ArrayOfEmailAddressesType struct {
	Address []*EmailAddressType `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
}

// ArrayOfEmailUsersType was auto-generated from WSDL.
type ArrayOfEmailUsersType struct {
	EmailUser []*EmailUserType `xml:"EmailUser,omitempty" json:"EmailUser,omitempty" yaml:"EmailUser,omitempty"`
}

// ArrayOfEncryptedSharedFolderDataType was auto-generated from
// WSDL.
type ArrayOfEncryptedSharedFolderDataType struct {
	EncryptedSharedFolderData *EncryptedSharedFolderDataType `xml:"EncryptedSharedFolderData,omitempty" json:"EncryptedSharedFolderData,omitempty" yaml:"EncryptedSharedFolderData,omitempty"`
}

// ArrayOfEntityFeedbackEntry was auto-generated from WSDL.
type ArrayOfEntityFeedbackEntry struct {
	EntityFeedbackEntry []*EntityFeedbackEntryType `xml:"EntityFeedbackEntry" json:"EntityFeedbackEntry" yaml:"EntityFeedbackEntry"`
}

// ArrayOfEventIDType was auto-generated from WSDL.
type ArrayOfEventIDType struct {
	EventToDeleteID *string `xml:"EventToDeleteID,omitempty" json:"EventToDeleteID,omitempty" yaml:"EventToDeleteID,omitempty"`
}

// Array of extended attributes of a target mailbox
type ArrayOfExtendedAttributesType struct {
	ExtendedAttribute []*ExtendedAttributeType `xml:"ExtendedAttribute,omitempty" json:"ExtendedAttribute,omitempty" yaml:"ExtendedAttribute,omitempty"`
}

// ArrayOfExtendedPropertyAttributedValueType was auto-generated
// from WSDL.
type ArrayOfExtendedPropertyAttributedValueType struct {
	ExtendedPropertyAttributedValue []*ExtendedPropertyAttributedValueType `xml:"ExtendedPropertyAttributedValue,omitempty" json:"ExtendedPropertyAttributedValue,omitempty" yaml:"ExtendedPropertyAttributedValue,omitempty"`
}

// ArrayOfExtensionUsageScenarioCounterType was auto-generated
// from WSDL.
type ArrayOfExtensionUsageScenarioCounterType struct {
	ScenarioName *string `xml:"ScenarioName,omitempty" json:"ScenarioName,omitempty" yaml:"ScenarioName,omitempty"`
	Count        *int    `xml:"Count,omitempty" json:"Count,omitempty" yaml:"Count,omitempty"`
}

// ArrayOfExtractedEmailAddresses was auto-generated from WSDL.
type ArrayOfExtractedEmailAddresses struct {
	EmailAddress []*string `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
}

// Array of failed mailbox and error message.
type ArrayOfFailedSearchMailboxesType struct {
	FailedMailbox []*FailedSearchMailboxType `xml:"FailedMailbox,omitempty" json:"FailedMailbox,omitempty" yaml:"FailedMailbox,omitempty"`
}

// ArrayOfFindMessageTrackingSearchResultType was auto-generated
// from WSDL.
type ArrayOfFindMessageTrackingSearchResultType struct {
	MessageTrackingSearchResult *FindMessageTrackingSearchResultType `xml:"MessageTrackingSearchResult,omitempty" json:"MessageTrackingSearchResult,omitempty" yaml:"MessageTrackingSearchResult,omitempty"`
}

// ArrayOfFlightReservationsType was auto-generated from WSDL.
type ArrayOfFlightReservationsType struct {
	FlightReservation []*FlightReservationEntityType `xml:"FlightReservation,omitempty" json:"FlightReservation,omitempty" yaml:"FlightReservation,omitempty"`
}

// ArrayOfFlightsType was auto-generated from WSDL.
type ArrayOfFlightsType struct {
	Flight []*FlightEntityType `xml:"Flight,omitempty" json:"Flight,omitempty" yaml:"Flight,omitempty"`
}

// ArrayOfFolderIdType was auto-generated from WSDL.
type ArrayOfFolderIdType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
}

// ArrayOfFoldersType was auto-generated from WSDL.
type ArrayOfFoldersType struct {
	Folder         *FolderType         `xml:"Folder,omitempty" json:"Folder,omitempty" yaml:"Folder,omitempty"`
	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty" yaml:"CalendarFolder,omitempty"`
	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty" yaml:"ContactsFolder,omitempty"`
	SearchFolder   *SearchFolderType   `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty" yaml:"SearchFolder,omitempty"`
	TasksFolder    *TasksFolderType    `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty" yaml:"TasksFolder,omitempty"`
}

// ArrayOfFreeBusyResponse was auto-generated from WSDL.
type ArrayOfFreeBusyResponse struct {
	FreeBusyResponse []*FreeBusyResponseType `xml:"FreeBusyResponse,omitempty" json:"FreeBusyResponse,omitempty" yaml:"FreeBusyResponse,omitempty"`
}

// ArrayOfGroupIdType was auto-generated from WSDL.
type ArrayOfGroupIdType struct {
	GroupId *[]byte `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
}

// ArrayOfGroupedItemsType was auto-generated from WSDL.
type ArrayOfGroupedItemsType struct {
	GroupedItems []*GroupedItemsType `xml:"GroupedItems,omitempty" json:"GroupedItems,omitempty" yaml:"GroupedItems,omitempty"`
}

// ArrayOfGuidType was auto-generated from WSDL.
type ArrayOfGuidType struct {
	Guid []*GuidType `xml:"Guid,omitempty" json:"Guid,omitempty" yaml:"Guid,omitempty"`
}

// ArrayOfHighlightTermsType was auto-generated from WSDL.
type ArrayOfHighlightTermsType struct {
	Term []*HighlightTermType `xml:"Term,omitempty" json:"Term,omitempty" yaml:"Term,omitempty"`
}

// ArrayOfImGroupType was auto-generated from WSDL.
type ArrayOfImGroupType struct {
	ImGroup *ImGroupType `xml:"ImGroup,omitempty" json:"ImGroup,omitempty" yaml:"ImGroup,omitempty"`
}

// ArrayOfInboxReminderType was auto-generated from WSDL.
type ArrayOfInboxReminderType struct {
	InboxReminder []*InboxReminderType `xml:"InboxReminder,omitempty" json:"InboxReminder,omitempty" yaml:"InboxReminder,omitempty"`
}

// ArrayOfInferenceClassificationOverridesType was auto-generated
// from WSDL.
type ArrayOfInferenceClassificationOverridesType struct {
	Override []*InferenceClassificationOverrideType `xml:"Override,omitempty" json:"Override,omitempty" yaml:"Override,omitempty"`
}

// ArrayOfInsight was auto-generated from WSDL.
type ArrayOfInsight struct {
	Insight []*Insight `xml:"Insight,omitempty" json:"Insight,omitempty" yaml:"Insight,omitempty"`
}

// ArrayOfInsightContextItem was auto-generated from WSDL.
type ArrayOfInsightContextItem struct {
	Context []*InsightContextItem `xml:"Context,omitempty" json:"Context,omitempty" yaml:"Context,omitempty"`
}

// ArrayOfInsightItemType was auto-generated from WSDL.
type ArrayOfInsightItemType struct {
	Insight []*InsightItemType `xml:"Insight,omitempty" json:"Insight,omitempty" yaml:"Insight,omitempty"`
}

// ArrayOfInsightValue was auto-generated from WSDL.
type ArrayOfInsightValue struct {
	Item []*InsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// ArrayOfInvalidRecipientsType was auto-generated from WSDL.
type ArrayOfInvalidRecipientsType struct {
	InvalidRecipient *InvalidRecipientType `xml:"InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty" yaml:"InvalidRecipient,omitempty"`
}

// ArrayOfItemClassType was auto-generated from WSDL.
type ArrayOfItemClassType struct {
	ItemClass *ItemClassType `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
}

// ArrayOfItemIdsType was auto-generated from WSDL.
type ArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
}

// ArrayOfItemsType was auto-generated from WSDL.
type ArrayOfItemsType struct {
	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// ArrayOfJobInsightValue was auto-generated from WSDL.
type ArrayOfJobInsightValue struct {
	Item []*JobInsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// Array of keyword statistics result.
type ArrayOfKeywordStatisticsSearchResultsType struct {
	KeywordStat []*KeywordStatisticsSearchResultType `xml:"KeywordStat,omitempty" json:"KeywordStat,omitempty" yaml:"KeywordStat,omitempty"`
}

// ArrayOfLocationConstraintItems was auto-generated from WSDL.
type ArrayOfLocationConstraintItems struct {
	LocationItem []*LocationConstraintItem `xml:"LocationItem,omitempty" json:"LocationItem,omitempty" yaml:"LocationItem,omitempty"`
}

// ArrayOfMailTipsResponseMessageType was auto-generated from WSDL.
type ArrayOfMailTipsResponseMessageType struct {
	MailTipsResponseMessageType []*MailTipsResponseMessageType `xml:"MailTipsResponseMessageType" json:"MailTipsResponseMessageType" yaml:"MailTipsResponseMessageType"`
}

// ArrayOfMailboxData was auto-generated from WSDL.
type ArrayOfMailboxData struct {
	MailboxData []*MailboxData `xml:"MailboxData,omitempty" json:"MailboxData,omitempty" yaml:"MailboxData,omitempty"`
}

// Array of mailbox hold status.
type ArrayOfMailboxHoldStatusType struct {
	MailboxHoldStatus []*MailboxHoldStatusType `xml:"MailboxHoldStatus,omitempty" json:"MailboxHoldStatus,omitempty" yaml:"MailboxHoldStatus,omitempty"`
}

// Array of mailbox statistics item.
type ArrayOfMailboxStatisticsItemsType struct {
	MailboxStat []*MailboxStatisticsItemType `xml:"MailboxStat,omitempty" json:"MailboxStat,omitempty" yaml:"MailboxStat,omitempty"`
}

// ArrayOfMeetingLocation was auto-generated from WSDL.
type ArrayOfMeetingLocation struct {
	MeetingLocation []*MeetingLocation `xml:"MeetingLocation,omitempty" json:"MeetingLocation,omitempty" yaml:"MeetingLocation,omitempty"`
}

// ArrayOfMeetingSuggestionsType was auto-generated from WSDL.
type ArrayOfMeetingSuggestionsType struct {
	MeetingSuggestion []*MeetingSuggestionType `xml:"MeetingSuggestion,omitempty" json:"MeetingSuggestion,omitempty" yaml:"MeetingSuggestion,omitempty"`
}

// ArrayOfMeetingTimeCandidate was auto-generated from WSDL.
type ArrayOfMeetingTimeCandidate struct {
	MeetingTimeCandidate []*MeetingTimeCandidate `xml:"MeetingTimeCandidate,omitempty" json:"MeetingTimeCandidate,omitempty" yaml:"MeetingTimeCandidate,omitempty"`
}

// Array of non indexable item details.
type ArrayOfNonIndexableItemDetailsType struct {
	NonIndexableItemDetail []*NonIndexableItemDetailType `xml:"NonIndexableItemDetail,omitempty" json:"NonIndexableItemDetail,omitempty" yaml:"NonIndexableItemDetail,omitempty"`
}

// Array of non indexable item statistics.
type ArrayOfNonIndexableItemStatisticsType struct {
	NonIndexableItemStatistic []*NonIndexableItemStatisticType `xml:"NonIndexableItemStatistic,omitempty" json:"NonIndexableItemStatistic,omitempty" yaml:"NonIndexableItemStatistic,omitempty"`
}

// ArrayOfOccurrenceRangesType was auto-generated from WSDL.
type ArrayOfOccurrenceRangesType struct {
	Range []*OccurrencesRangeType `xml:"Range,omitempty" json:"Range,omitempty" yaml:"Range,omitempty"`
}

// ArrayOfParcelDeliveryEntitiesType was auto-generated from WSDL.
type ArrayOfParcelDeliveryEntitiesType struct {
	ParcelDelivery []*ParcelDeliveryEntityType `xml:"ParcelDelivery,omitempty" json:"ParcelDelivery,omitempty" yaml:"ParcelDelivery,omitempty"`
}

// ArrayOfPeopleQuerySource was auto-generated from WSDL.
type ArrayOfPeopleQuerySource struct {
	Source []string `xml:"Source" json:"Source" yaml:"Source"`
}

// ArrayOfPeopleType was auto-generated from WSDL.
type ArrayOfPeopleType struct {
	Persona *PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty" yaml:"Persona,omitempty"`
}

// ArrayOfPermissionsType was auto-generated from WSDL.
type ArrayOfPermissionsType struct {
	Permission *PermissionType `xml:"Permission,omitempty" json:"Permission,omitempty" yaml:"Permission,omitempty"`
}

// ArrayOfPersonType was auto-generated from WSDL.
type ArrayOfPersonType struct {
	Person *PersonType `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
}

// ArrayOfPersonaAttributionsType was auto-generated from WSDL.
type ArrayOfPersonaAttributionsType struct {
	Attribution []*PersonaAttributionType `xml:"Attribution" json:"Attribution" yaml:"Attribution"`
}

// ArrayOfPhoneEntitiesType was auto-generated from WSDL.
type ArrayOfPhoneEntitiesType struct {
	Phone []*PhoneEntityType `xml:"Phone,omitempty" json:"Phone,omitempty" yaml:"Phone,omitempty"`
}

// ArrayOfPhoneNumberAttributedValuesType was auto-generated from
// WSDL.
type ArrayOfPhoneNumberAttributedValuesType struct {
	PhoneNumberAttributedValue []*PhoneNumberAttributedValueType `xml:"PhoneNumberAttributedValue,omitempty" json:"PhoneNumberAttributedValue,omitempty" yaml:"PhoneNumberAttributedValue,omitempty"`
}

// ArrayOfPhonesType was auto-generated from WSDL.
type ArrayOfPhonesType struct {
	Phone []*PhoneType `xml:"Phone,omitempty" json:"Phone,omitempty" yaml:"Phone,omitempty"`
}

// ArrayOfPostalAddressAttributedValuesType was auto-generated
// from WSDL.
type ArrayOfPostalAddressAttributedValuesType struct {
	PostalAddressAttributedValue []*PostalAddressAttributedValueType `xml:"PostalAddressAttributedValue,omitempty" json:"PostalAddressAttributedValue,omitempty" yaml:"PostalAddressAttributedValue,omitempty"`
}

// ArrayOfPrivateCatalogAddInsType was auto-generated from WSDL.
type ArrayOfPrivateCatalogAddInsType struct {
	AddIn []*PrivateCatalogAddInsType `xml:"AddIn,omitempty" json:"AddIn,omitempty" yaml:"AddIn,omitempty"`
}

// ArrayOfProfileInsightValue was auto-generated from WSDL.
type ArrayOfProfileInsightValue struct {
	Item []*ProfileInsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// ArrayOfProtectionRulesType was auto-generated from WSDL.
type ArrayOfProtectionRulesType struct {
	Rule []*ProtectionRuleType `xml:"Rule,omitempty" json:"Rule,omitempty" yaml:"Rule,omitempty"`
}

// ArrayOfRealItemsType was auto-generated from WSDL.
type ArrayOfRealItemsType struct {
	Item                *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message             *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage      *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem        *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact             *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	DistributionList    *DistributionListType           `xml:"DistributionList,omitempty" json:"DistributionList,omitempty" yaml:"DistributionList,omitempty"`
	MeetingMessage      *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest      *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse     *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem            *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	RoleMember          *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network             *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person              *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
}

// ArrayOfRecipientSuggestionsType was auto-generated from WSDL.
type ArrayOfRecipientSuggestionsType struct {
	RecipientSuggestion []*RecipientSuggestionType `xml:"RecipientSuggestion,omitempty" json:"RecipientSuggestion,omitempty" yaml:"RecipientSuggestion,omitempty"`
}

// ArrayOfRecipientTrackingEventType was auto-generated from WSDL.
type ArrayOfRecipientTrackingEventType struct {
	RecipientTrackingEvent *RecipientTrackingEventType `xml:"RecipientTrackingEvent,omitempty" json:"RecipientTrackingEvent,omitempty" yaml:"RecipientTrackingEvent,omitempty"`
}

// ArrayOfRecipientsType was auto-generated from WSDL.
type ArrayOfRecipientsType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
}

// ArrayOfRemindersType was auto-generated from WSDL.
type ArrayOfRemindersType struct {
	Reminder []*ReminderType `xml:"Reminder,omitempty" json:"Reminder,omitempty" yaml:"Reminder,omitempty"`
}

// ArrayOfResolutionType was auto-generated from WSDL.
type ArrayOfResolutionType struct {
	Resolution []*ResolutionType `xml:"Resolution,omitempty" json:"Resolution,omitempty" yaml:"Resolution,omitempty"`
}

// ArrayOfResponseMessagesType was auto-generated from WSDL.
type ArrayOfResponseMessagesType struct {
	CreateItemResponseMessage                      *ItemInfoResponseMessageType                        `xml:"CreateItemResponseMessage,omitempty" json:"CreateItemResponseMessage,omitempty" yaml:"CreateItemResponseMessage,omitempty"`
	DeleteItemResponseMessage                      *DeleteItemResponseMessageType                      `xml:"DeleteItemResponseMessage,omitempty" json:"DeleteItemResponseMessage,omitempty" yaml:"DeleteItemResponseMessage,omitempty"`
	GetItemResponseMessage                         *ItemInfoResponseMessageType                        `xml:"GetItemResponseMessage,omitempty" json:"GetItemResponseMessage,omitempty" yaml:"GetItemResponseMessage,omitempty"`
	UpdateItemResponseMessage                      *UpdateItemResponseMessageType                      `xml:"UpdateItemResponseMessage,omitempty" json:"UpdateItemResponseMessage,omitempty" yaml:"UpdateItemResponseMessage,omitempty"`
	UpdateItemInRecoverableItemsResponseMessage    *UpdateItemInRecoverableItemsResponseMessageType    `xml:"UpdateItemInRecoverableItemsResponseMessage,omitempty" json:"UpdateItemInRecoverableItemsResponseMessage,omitempty" yaml:"UpdateItemInRecoverableItemsResponseMessage,omitempty"`
	SendItemResponseMessage                        *ResponseMessageType                                `xml:"SendItemResponseMessage,omitempty" json:"SendItemResponseMessage,omitempty" yaml:"SendItemResponseMessage,omitempty"`
	DeleteFolderResponseMessage                    *ResponseMessageType                                `xml:"DeleteFolderResponseMessage,omitempty" json:"DeleteFolderResponseMessage,omitempty" yaml:"DeleteFolderResponseMessage,omitempty"`
	EmptyFolderResponseMessage                     *ResponseMessageType                                `xml:"EmptyFolderResponseMessage,omitempty" json:"EmptyFolderResponseMessage,omitempty" yaml:"EmptyFolderResponseMessage,omitempty"`
	CreateFolderResponseMessage                    *FolderInfoResponseMessageType                      `xml:"CreateFolderResponseMessage,omitempty" json:"CreateFolderResponseMessage,omitempty" yaml:"CreateFolderResponseMessage,omitempty"`
	GetFolderResponseMessage                       *FolderInfoResponseMessageType                      `xml:"GetFolderResponseMessage,omitempty" json:"GetFolderResponseMessage,omitempty" yaml:"GetFolderResponseMessage,omitempty"`
	FindFolderResponseMessage                      *FindFolderResponseMessageType                      `xml:"FindFolderResponseMessage,omitempty" json:"FindFolderResponseMessage,omitempty" yaml:"FindFolderResponseMessage,omitempty"`
	UpdateFolderResponseMessage                    *FolderInfoResponseMessageType                      `xml:"UpdateFolderResponseMessage,omitempty" json:"UpdateFolderResponseMessage,omitempty" yaml:"UpdateFolderResponseMessage,omitempty"`
	MoveFolderResponseMessage                      *FolderInfoResponseMessageType                      `xml:"MoveFolderResponseMessage,omitempty" json:"MoveFolderResponseMessage,omitempty" yaml:"MoveFolderResponseMessage,omitempty"`
	CopyFolderResponseMessage                      *FolderInfoResponseMessageType                      `xml:"CopyFolderResponseMessage,omitempty" json:"CopyFolderResponseMessage,omitempty" yaml:"CopyFolderResponseMessage,omitempty"`
	CreateFolderPathResponseMessage                *FolderInfoResponseMessageType                      `xml:"CreateFolderPathResponseMessage,omitempty" json:"CreateFolderPathResponseMessage,omitempty" yaml:"CreateFolderPathResponseMessage,omitempty"`
	CreateAttachmentResponseMessage                *AttachmentInfoResponseMessageType                  `xml:"CreateAttachmentResponseMessage,omitempty" json:"CreateAttachmentResponseMessage,omitempty" yaml:"CreateAttachmentResponseMessage,omitempty"`
	DeleteAttachmentResponseMessage                *DeleteAttachmentResponseMessageType                `xml:"DeleteAttachmentResponseMessage,omitempty" json:"DeleteAttachmentResponseMessage,omitempty" yaml:"DeleteAttachmentResponseMessage,omitempty"`
	GetAttachmentResponseMessage                   *AttachmentInfoResponseMessageType                  `xml:"GetAttachmentResponseMessage,omitempty" json:"GetAttachmentResponseMessage,omitempty" yaml:"GetAttachmentResponseMessage,omitempty"`
	UploadItemsResponseMessage                     *UploadItemsResponseMessageType                     `xml:"UploadItemsResponseMessage,omitempty" json:"UploadItemsResponseMessage,omitempty" yaml:"UploadItemsResponseMessage,omitempty"`
	ExportItemsResponseMessage                     *ExportItemsResponseMessageType                     `xml:"ExportItemsResponseMessage,omitempty" json:"ExportItemsResponseMessage,omitempty" yaml:"ExportItemsResponseMessage,omitempty"`
	MarkAllItemsAsReadResponseMessage              *ResponseMessageType                                `xml:"MarkAllItemsAsReadResponseMessage,omitempty" json:"MarkAllItemsAsReadResponseMessage,omitempty" yaml:"MarkAllItemsAsReadResponseMessage,omitempty"`
	GetClientAccessTokenResponseMessage            *GetClientAccessTokenResponseMessageType            `xml:"GetClientAccessTokenResponseMessage,omitempty" json:"GetClientAccessTokenResponseMessage,omitempty" yaml:"GetClientAccessTokenResponseMessage,omitempty"`
	GetAppManifestsResponseMessage                 *ResponseMessageType                                `xml:"GetAppManifestsResponseMessage,omitempty" json:"GetAppManifestsResponseMessage,omitempty" yaml:"GetAppManifestsResponseMessage,omitempty"`
	SetClientExtensionResponseMessage              *ResponseMessageType                                `xml:"SetClientExtensionResponseMessage,omitempty" json:"SetClientExtensionResponseMessage,omitempty" yaml:"SetClientExtensionResponseMessage,omitempty"`
	GetOMEConfigurationResponseMessage             *ResponseMessageType                                `xml:"GetOMEConfigurationResponseMessage,omitempty" json:"GetOMEConfigurationResponseMessage,omitempty" yaml:"GetOMEConfigurationResponseMessage,omitempty"`
	SetOMEConfigurationResponseMessage             *ResponseMessageType                                `xml:"SetOMEConfigurationResponseMessage,omitempty" json:"SetOMEConfigurationResponseMessage,omitempty" yaml:"SetOMEConfigurationResponseMessage,omitempty"`
	GetOMEMessageStatusResponseType                *ResponseMessageType                                `xml:"GetOMEMessageStatusResponseType,omitempty" json:"GetOMEMessageStatusResponseType,omitempty" yaml:"GetOMEMessageStatusResponseType,omitempty"`
	SetOMEMessageStatusResponseType                *ResponseMessageType                                `xml:"SetOMEMessageStatusResponseType,omitempty" json:"SetOMEMessageStatusResponseType,omitempty" yaml:"SetOMEMessageStatusResponseType,omitempty"`
	FindItemResponseMessage                        *FindItemResponseMessageType                        `xml:"FindItemResponseMessage,omitempty" json:"FindItemResponseMessage,omitempty" yaml:"FindItemResponseMessage,omitempty"`
	MoveItemResponseMessage                        *ItemInfoResponseMessageType                        `xml:"MoveItemResponseMessage,omitempty" json:"MoveItemResponseMessage,omitempty" yaml:"MoveItemResponseMessage,omitempty"`
	ArchiveItemResponseMessage                     *ItemInfoResponseMessageType                        `xml:"ArchiveItemResponseMessage,omitempty" json:"ArchiveItemResponseMessage,omitempty" yaml:"ArchiveItemResponseMessage,omitempty"`
	CopyItemResponseMessage                        *ItemInfoResponseMessageType                        `xml:"CopyItemResponseMessage,omitempty" json:"CopyItemResponseMessage,omitempty" yaml:"CopyItemResponseMessage,omitempty"`
	ResolveNamesResponseMessage                    *ResolveNamesResponseMessageType                    `xml:"ResolveNamesResponseMessage,omitempty" json:"ResolveNamesResponseMessage,omitempty" yaml:"ResolveNamesResponseMessage,omitempty"`
	ExpandDLResponseMessage                        *ExpandDLResponseMessageType                        `xml:"ExpandDLResponseMessage,omitempty" json:"ExpandDLResponseMessage,omitempty" yaml:"ExpandDLResponseMessage,omitempty"`
	GetServerTimeZonesResponseMessage              *GetServerTimeZonesResponseMessageType              `xml:"GetServerTimeZonesResponseMessage,omitempty" json:"GetServerTimeZonesResponseMessage,omitempty" yaml:"GetServerTimeZonesResponseMessage,omitempty"`
	GetEventsResponseMessage                       *GetEventsResponseMessageType                       `xml:"GetEventsResponseMessage,omitempty" json:"GetEventsResponseMessage,omitempty" yaml:"GetEventsResponseMessage,omitempty"`
	GetStreamingEventsResponseMessage              *GetStreamingEventsResponseMessageType              `xml:"GetStreamingEventsResponseMessage,omitempty" json:"GetStreamingEventsResponseMessage,omitempty" yaml:"GetStreamingEventsResponseMessage,omitempty"`
	SubscribeResponseMessage                       *SubscribeResponseMessageType                       `xml:"SubscribeResponseMessage,omitempty" json:"SubscribeResponseMessage,omitempty" yaml:"SubscribeResponseMessage,omitempty"`
	UnsubscribeResponseMessage                     *ResponseMessageType                                `xml:"UnsubscribeResponseMessage,omitempty" json:"UnsubscribeResponseMessage,omitempty" yaml:"UnsubscribeResponseMessage,omitempty"`
	SendNotificationResponseMessage                *SendNotificationResponseMessageType                `xml:"SendNotificationResponseMessage,omitempty" json:"SendNotificationResponseMessage,omitempty" yaml:"SendNotificationResponseMessage,omitempty"`
	SyncFolderHierarchyResponseMessage             *SyncFolderHierarchyResponseMessageType             `xml:"SyncFolderHierarchyResponseMessage,omitempty" json:"SyncFolderHierarchyResponseMessage,omitempty" yaml:"SyncFolderHierarchyResponseMessage,omitempty"`
	SyncFolderItemsResponseMessage                 *SyncFolderItemsResponseMessageType                 `xml:"SyncFolderItemsResponseMessage,omitempty" json:"SyncFolderItemsResponseMessage,omitempty" yaml:"SyncFolderItemsResponseMessage,omitempty"`
	CreateManagedFolderResponseMessage             *FolderInfoResponseMessageType                      `xml:"CreateManagedFolderResponseMessage,omitempty" json:"CreateManagedFolderResponseMessage,omitempty" yaml:"CreateManagedFolderResponseMessage,omitempty"`
	ConvertIdResponseMessage                       *ConvertIdResponseMessageType                       `xml:"ConvertIdResponseMessage,omitempty" json:"ConvertIdResponseMessage,omitempty" yaml:"ConvertIdResponseMessage,omitempty"`
	GetSharingMetadataResponseMessage              *GetSharingMetadataResponseMessageType              `xml:"GetSharingMetadataResponseMessage,omitempty" json:"GetSharingMetadataResponseMessage,omitempty" yaml:"GetSharingMetadataResponseMessage,omitempty"`
	RefreshSharingFolderResponseMessage            *RefreshSharingFolderResponseMessageType            `xml:"RefreshSharingFolderResponseMessage,omitempty" json:"RefreshSharingFolderResponseMessage,omitempty" yaml:"RefreshSharingFolderResponseMessage,omitempty"`
	GetSharingFolderResponseMessage                *GetSharingFolderResponseMessageType                `xml:"GetSharingFolderResponseMessage,omitempty" json:"GetSharingFolderResponseMessage,omitempty" yaml:"GetSharingFolderResponseMessage,omitempty"`
	CreateUserConfigurationResponseMessage         *ResponseMessageType                                `xml:"CreateUserConfigurationResponseMessage,omitempty" json:"CreateUserConfigurationResponseMessage,omitempty" yaml:"CreateUserConfigurationResponseMessage,omitempty"`
	DeleteUserConfigurationResponseMessage         *ResponseMessageType                                `xml:"DeleteUserConfigurationResponseMessage,omitempty" json:"DeleteUserConfigurationResponseMessage,omitempty" yaml:"DeleteUserConfigurationResponseMessage,omitempty"`
	GetUserConfigurationResponseMessage            *GetUserConfigurationResponseMessageType            `xml:"GetUserConfigurationResponseMessage,omitempty" json:"GetUserConfigurationResponseMessage,omitempty" yaml:"GetUserConfigurationResponseMessage,omitempty"`
	GetSpecificUserConfigurationResponseMessage    *GetSpecificUserConfigurationResponseMessageType    `xml:"GetSpecificUserConfigurationResponseMessage,omitempty" json:"GetSpecificUserConfigurationResponseMessage,omitempty" yaml:"GetSpecificUserConfigurationResponseMessage,omitempty"`
	UpdateUserConfigurationResponseMessage         *ResponseMessageType                                `xml:"UpdateUserConfigurationResponseMessage,omitempty" json:"UpdateUserConfigurationResponseMessage,omitempty" yaml:"UpdateUserConfigurationResponseMessage,omitempty"`
	GetRoomListsResponse                           *GetRoomListsResponseMessageType                    `xml:"GetRoomListsResponse,omitempty" json:"GetRoomListsResponse,omitempty" yaml:"GetRoomListsResponse,omitempty"`
	GetRoomsResponse                               *GetRoomsResponseMessageType                        `xml:"GetRoomsResponse,omitempty" json:"GetRoomsResponse,omitempty" yaml:"GetRoomsResponse,omitempty"`
	GetRemindersResponse                           *GetRemindersResponseMessageType                    `xml:"GetRemindersResponse,omitempty" json:"GetRemindersResponse,omitempty" yaml:"GetRemindersResponse,omitempty"`
	PerformReminderActionResponse                  *PerformReminderActionResponseMessageType           `xml:"PerformReminderActionResponse,omitempty" json:"PerformReminderActionResponse,omitempty" yaml:"PerformReminderActionResponse,omitempty"`
	ApplyConversationActionResponseMessage         *ApplyConversationActionResponseMessageType         `xml:"ApplyConversationActionResponseMessage,omitempty" json:"ApplyConversationActionResponseMessage,omitempty" yaml:"ApplyConversationActionResponseMessage,omitempty"`
	FindMailboxStatisticsByKeywordsResponseMessage *FindMailboxStatisticsByKeywordsResponseMessageType `xml:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty" json:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty" yaml:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty"`
	GetSearchableMailboxesResponseMessage          *GetSearchableMailboxesResponseMessageType          `xml:"GetSearchableMailboxesResponseMessage,omitempty" json:"GetSearchableMailboxesResponseMessage,omitempty" yaml:"GetSearchableMailboxesResponseMessage,omitempty"`
	SearchMailboxesResponseMessage                 *SearchMailboxesResponseMessageType                 `xml:"SearchMailboxesResponseMessage,omitempty" json:"SearchMailboxesResponseMessage,omitempty" yaml:"SearchMailboxesResponseMessage,omitempty"`
	GetDiscoverySearchConfigurationResponseMessage *GetDiscoverySearchConfigurationResponseMessageType `xml:"GetDiscoverySearchConfigurationResponseMessage,omitempty" json:"GetDiscoverySearchConfigurationResponseMessage,omitempty" yaml:"GetDiscoverySearchConfigurationResponseMessage,omitempty"`
	GetHoldOnMailboxesResponseMessage              *GetHoldOnMailboxesResponseMessageType              `xml:"GetHoldOnMailboxesResponseMessage,omitempty" json:"GetHoldOnMailboxesResponseMessage,omitempty" yaml:"GetHoldOnMailboxesResponseMessage,omitempty"`
	SetHoldOnMailboxesResponseMessage              *SetHoldOnMailboxesResponseMessageType              `xml:"SetHoldOnMailboxesResponseMessage,omitempty" json:"SetHoldOnMailboxesResponseMessage,omitempty" yaml:"SetHoldOnMailboxesResponseMessage,omitempty"`
	GetNonIndexableItemStatisticsResponseMessage   *GetNonIndexableItemStatisticsResponseMessageType   `xml:"GetNonIndexableItemStatisticsResponseMessage,omitempty" json:"GetNonIndexableItemStatisticsResponseMessage,omitempty" yaml:"GetNonIndexableItemStatisticsResponseMessage,omitempty"`
	GetNonIndexableItemDetailsResponseMessage      *GetNonIndexableItemDetailsResponseMessageType      `xml:"GetNonIndexableItemDetailsResponseMessage,omitempty" json:"GetNonIndexableItemDetailsResponseMessage,omitempty" yaml:"GetNonIndexableItemDetailsResponseMessage,omitempty"`
	FindPeopleResponseMessage                      *FindPeopleResponseMessageType                      `xml:"FindPeopleResponseMessage,omitempty" json:"FindPeopleResponseMessage,omitempty" yaml:"FindPeopleResponseMessage,omitempty"`
	FindTagsResponseMessage                        *FindTagsResponseMessageType                        `xml:"FindTagsResponseMessage,omitempty" json:"FindTagsResponseMessage,omitempty" yaml:"FindTagsResponseMessage,omitempty"`
	AddTagResponseMessage                          *AddTagResponseMessageType                          `xml:"AddTagResponseMessage,omitempty" json:"AddTagResponseMessage,omitempty" yaml:"AddTagResponseMessage,omitempty"`
	HideTagResponseMessage                         *HideTagResponseMessageType                         `xml:"HideTagResponseMessage,omitempty" json:"HideTagResponseMessage,omitempty" yaml:"HideTagResponseMessage,omitempty"`
	GetPasswordExpirationDateResponse              *GetPasswordExpirationDateResponseMessageType       `xml:"GetPasswordExpirationDateResponse,omitempty" json:"GetPasswordExpirationDateResponse,omitempty" yaml:"GetPasswordExpirationDateResponse,omitempty"`
	GetPersonaResponseMessage                      *GetPersonaResponseMessageType                      `xml:"GetPersonaResponseMessage,omitempty" json:"GetPersonaResponseMessage,omitempty" yaml:"GetPersonaResponseMessage,omitempty"`
	GetConversationItemsResponseMessage            *GetConversationItemsResponseMessageType            `xml:"GetConversationItemsResponseMessage,omitempty" json:"GetConversationItemsResponseMessage,omitempty" yaml:"GetConversationItemsResponseMessage,omitempty"`
	GetUserRetentionPolicyTagsResponseMessage      *GetUserRetentionPolicyTagsResponseMessageType      `xml:"GetUserRetentionPolicyTagsResponseMessage,omitempty" json:"GetUserRetentionPolicyTagsResponseMessage,omitempty" yaml:"GetUserRetentionPolicyTagsResponseMessage,omitempty"`
	GetUserPhotoResponseMessage                    *GetUserPhotoResponseMessageType                    `xml:"GetUserPhotoResponseMessage,omitempty" json:"GetUserPhotoResponseMessage,omitempty" yaml:"GetUserPhotoResponseMessage,omitempty"`
	MarkAsJunkResponseMessage                      *MarkAsJunkResponseMessageType                      `xml:"MarkAsJunkResponseMessage,omitempty" json:"MarkAsJunkResponseMessage,omitempty" yaml:"MarkAsJunkResponseMessage,omitempty"`
	MarkAsPhishingResponseMessage                  *MarkAsPhishingResponseMessageType                  `xml:"MarkAsPhishingResponseMessage,omitempty" json:"MarkAsPhishingResponseMessage,omitempty" yaml:"MarkAsPhishingResponseMessage,omitempty"`
	ReportMessageResponseMessage                   *ReportMessageResponseMessageType                   `xml:"ReportMessageResponseMessage,omitempty" json:"ReportMessageResponseMessage,omitempty" yaml:"ReportMessageResponseMessage,omitempty"`
	PostModernGroupItemResponseMessage             *ItemInfoResponseMessageType                        `xml:"PostModernGroupItemResponseMessage,omitempty" json:"PostModernGroupItemResponseMessage,omitempty" yaml:"PostModernGroupItemResponseMessage,omitempty"`
	GetLastPrivateCatalogUpdateResponseMessage     *ResponseMessageType                                `xml:"GetLastPrivateCatalogUpdateResponseMessage,omitempty" json:"GetLastPrivateCatalogUpdateResponseMessage,omitempty" yaml:"GetLastPrivateCatalogUpdateResponseMessage,omitempty"`
	GetPrivateCatalogAddInsResponseMessage         *ResponseMessageType                                `xml:"GetPrivateCatalogAddInsResponseMessage,omitempty" json:"GetPrivateCatalogAddInsResponseMessage,omitempty" yaml:"GetPrivateCatalogAddInsResponseMessage,omitempty"`
}

// Array of retention policy tags.
type ArrayOfRetentionPolicyTagsType struct {
	RetentionPolicyTag []*RetentionPolicyTagType `xml:"RetentionPolicyTag,omitempty" json:"RetentionPolicyTag,omitempty" yaml:"RetentionPolicyTag,omitempty"`
}

// ArrayOfRoomsType was auto-generated from WSDL.
type ArrayOfRoomsType struct {
	Room []*RoomType `xml:"Room,omitempty" json:"Room,omitempty" yaml:"Room,omitempty"`
}

// ArrayOfRuleOperationErrorsType was auto-generated from WSDL.
type ArrayOfRuleOperationErrorsType struct {
	RuleOperationError []*RuleOperationErrorType `xml:"RuleOperationError" json:"RuleOperationError" yaml:"RuleOperationError"`
}

// Represents an array of rule operations to be performed
type ArrayOfRuleOperationsType struct {
	CreateRuleOperation *CreateRuleOperationType `xml:"CreateRuleOperation,omitempty" json:"CreateRuleOperation,omitempty" yaml:"CreateRuleOperation,omitempty"`
	SetRuleOperation    *SetRuleOperationType    `xml:"SetRuleOperation,omitempty" json:"SetRuleOperation,omitempty" yaml:"SetRuleOperation,omitempty"`
	DeleteRuleOperation *DeleteRuleOperationType `xml:"DeleteRuleOperation,omitempty" json:"DeleteRuleOperation,omitempty" yaml:"DeleteRuleOperation,omitempty"`
}

// Represents an array of rule validation errors
type ArrayOfRuleValidationErrorsType struct {
	Error []*RuleValidationErrorType `xml:"Error" json:"Error" yaml:"Error"`
}

// Array of rule objects
type ArrayOfRulesType struct {
	Rule []*RuleType `xml:"Rule,omitempty" json:"Rule,omitempty" yaml:"Rule,omitempty"`
}

// Array of search item kind enum.
type ArrayOfSearchItemKindsType struct {
	SearchItemKind []SearchItemKindType `xml:"SearchItemKind" json:"SearchItemKind" yaml:"SearchItemKind"`
}

// Array of search preview item.
type ArrayOfSearchPreviewItemsType struct {
	SearchPreviewItem []*SearchPreviewItemType `xml:"SearchPreviewItem,omitempty" json:"SearchPreviewItem,omitempty" yaml:"SearchPreviewItem,omitempty"`
}

// Array of search refiner item.
type ArrayOfSearchRefinerItemsType struct {
	Refiner []*SearchRefinerItemType `xml:"Refiner,omitempty" json:"Refiner,omitempty" yaml:"Refiner,omitempty"`
}

// ArrayOfSearchScopeType was auto-generated from WSDL.
type ArrayOfSearchScopeType struct {
	PrimaryMailboxSearchScope     *PrimaryMailboxSearchScopeType     `xml:"PrimaryMailboxSearchScope,omitempty" json:"PrimaryMailboxSearchScope,omitempty" yaml:"PrimaryMailboxSearchScope,omitempty"`
	LargeArchiveSearchScope       *LargeArchiveSearchScopeType       `xml:"LargeArchiveSearchScope,omitempty" json:"LargeArchiveSearchScope,omitempty" yaml:"LargeArchiveSearchScope,omitempty"`
	GroupSearchScope              *GroupSearchScopeType              `xml:"GroupSearchScope,omitempty" json:"GroupSearchScope,omitempty" yaml:"GroupSearchScope,omitempty"`
	CustomSearchScope             []*CustomSearchScopeType           `xml:"CustomSearchScope,omitempty" json:"CustomSearchScope,omitempty" yaml:"CustomSearchScope,omitempty"`
	OneDriveSearchScope           *OneDriveSearchScopeType           `xml:"OneDriveSearchScope,omitempty" json:"OneDriveSearchScope,omitempty" yaml:"OneDriveSearchScope,omitempty"`
	SingleLargeArchiveSearchScope *SingleLargeArchiveSearchScopeType `xml:"SingleLargeArchiveSearchScope,omitempty" json:"SingleLargeArchiveSearchScope,omitempty" yaml:"SingleLargeArchiveSearchScope,omitempty"`
	DelveSearchScope              *DelveSearchScopeType              `xml:"DelveSearchScope,omitempty" json:"DelveSearchScope,omitempty" yaml:"DelveSearchScope,omitempty"`
}

// Array of searchable mailbox.
type ArrayOfSearchableMailboxesType struct {
	SearchableMailbox []*SearchableMailboxType `xml:"SearchableMailbox,omitempty" json:"SearchableMailbox,omitempty" yaml:"SearchableMailbox,omitempty"`
}

// ArrayOfSenderAddInsType was auto-generated from WSDL.
type ArrayOfSenderAddInsType struct {
	MicrosoftOutlookServicesSenderApp []*SenderAddInEntityType `xml:"Microsoft.OutlookServices.SenderApp,omitempty" json:"Microsoft.OutlookServices.SenderApp,omitempty" yaml:"Microsoft.OutlookServices.SenderApp,omitempty"`
}

// ArrayOfServiceConfigurationResponseMessageType was auto-generated
// from WSDL.
type ArrayOfServiceConfigurationResponseMessageType struct {
	ServiceConfigurationResponseMessageType []*ServiceConfigurationResponseMessageType `xml:"ServiceConfigurationResponseMessageType" json:"ServiceConfigurationResponseMessageType" yaml:"ServiceConfigurationResponseMessageType"`
}

// ArrayOfServiceConfigurationType was auto-generated from WSDL.
type ArrayOfServiceConfigurationType struct {
	ConfigurationName *ServiceConfigurationType `xml:"ConfigurationName,omitempty" json:"ConfigurationName,omitempty" yaml:"ConfigurationName,omitempty"`
}

// ArrayOfSharingMessageActionType was auto-generated from WSDL.
type ArrayOfSharingMessageActionType struct {
	SharingMessageAction *SharingMessageActionType `xml:"SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty" yaml:"SharingMessageAction,omitempty"`
}

// ArrayOfSkillInsightValue was auto-generated from WSDL.
type ArrayOfSkillInsightValue struct {
	Item []*SkillInsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
}

// ArrayOfSmtpAddressType was auto-generated from WSDL.
type ArrayOfSmtpAddressType struct {
	SmtpAddress *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
}

// ArrayOfStringArrayAttributedValuesType was auto-generated from
// WSDL.
type ArrayOfStringArrayAttributedValuesType struct {
	StringArrayAttributedValue []*StringArrayAttributedValueType `xml:"StringArrayAttributedValue,omitempty" json:"StringArrayAttributedValue,omitempty" yaml:"StringArrayAttributedValue,omitempty"`
}

// ArrayOfStringAttributedValuesType was auto-generated from WSDL.
type ArrayOfStringAttributedValuesType struct {
	StringAttributedValue []*StringAttributedValueType `xml:"StringAttributedValue,omitempty" json:"StringAttributedValue,omitempty" yaml:"StringAttributedValue,omitempty"`
}

// ArrayOfStringValueType was auto-generated from WSDL.
type ArrayOfStringValueType struct {
	Value []string `xml:"Value" json:"Value" yaml:"Value"`
}

// ArrayOfStringsType was auto-generated from WSDL.
type ArrayOfStringsType struct {
	String []*string `xml:"String,omitempty" json:"String,omitempty" yaml:"String,omitempty"`
}

// ArrayOfSuggestion was auto-generated from WSDL.
type ArrayOfSuggestion struct {
	Suggestion []*Suggestion `xml:"Suggestion,omitempty" json:"Suggestion,omitempty" yaml:"Suggestion,omitempty"`
}

// ArrayOfSuggestionDayResult was auto-generated from WSDL.
type ArrayOfSuggestionDayResult struct {
	SuggestionDayResult []*SuggestionDayResult `xml:"SuggestionDayResult,omitempty" json:"SuggestionDayResult,omitempty" yaml:"SuggestionDayResult,omitempty"`
}

// ArrayOfTaskSuggestionsType was auto-generated from WSDL.
type ArrayOfTaskSuggestionsType struct {
	TaskSuggestion []*TaskSuggestionType `xml:"TaskSuggestion,omitempty" json:"TaskSuggestion,omitempty" yaml:"TaskSuggestion,omitempty"`
}

// ArrayOfTimeSlot was auto-generated from WSDL.
type ArrayOfTimeSlot struct {
	TimeSlot []*TimeSlot `xml:"TimeSlot,omitempty" json:"TimeSlot,omitempty" yaml:"TimeSlot,omitempty"`
}

// ArrayOfTimeZoneDefinitionType was auto-generated from WSDL.
type ArrayOfTimeZoneDefinitionType struct {
	TimeZoneDefinition *TimeZoneDefinitionType `xml:"TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty" yaml:"TimeZoneDefinition,omitempty"`
}

// ArrayOfTrackingPropertiesType was auto-generated from WSDL.
type ArrayOfTrackingPropertiesType struct {
	TrackingPropertyType *TrackingPropertyType `xml:"TrackingPropertyType,omitempty" json:"TrackingPropertyType,omitempty" yaml:"TrackingPropertyType,omitempty"`
}

// ArrayOfTransitionsGroupsType was auto-generated from WSDL.
type ArrayOfTransitionsGroupsType struct {
	TransitionsGroup []*ArrayOfTransitionsType `xml:"TransitionsGroup,omitempty" json:"TransitionsGroup,omitempty" yaml:"TransitionsGroup,omitempty"`
}

// ArrayOfTransitionsType was auto-generated from WSDL.
type ArrayOfTransitionsType struct {
	Transition *TransitionType `xml:"Transition,omitempty" json:"Transition,omitempty" yaml:"Transition,omitempty"`
	Id         string          `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
}

// ArrayOfUnknownEntriesType was auto-generated from WSDL.
type ArrayOfUnknownEntriesType struct {
	UnknownEntry *string `xml:"UnknownEntry,omitempty" json:"UnknownEntry,omitempty" yaml:"UnknownEntry,omitempty"`
}

// ArrayOfUpdateExtensionUsageItemType was auto-generated from
// WSDL.
type ArrayOfUpdateExtensionUsageItemType struct {
	ExtensionId *string                                   `xml:"ExtensionId,omitempty" json:"ExtensionId,omitempty" yaml:"ExtensionId,omitempty"`
	Scenarios   *ArrayOfExtensionUsageScenarioCounterType `xml:"Scenarios,omitempty" json:"Scenarios,omitempty" yaml:"Scenarios,omitempty"`
}

// ArrayOfUrlEntitiesType was auto-generated from WSDL.
type ArrayOfUrlEntitiesType struct {
	UrlEntity []*UrlEntityType `xml:"UrlEntity,omitempty" json:"UrlEntity,omitempty" yaml:"UrlEntity,omitempty"`
}

// ArrayOfUrlsType was auto-generated from WSDL.
type ArrayOfUrlsType struct {
	Url []*string `xml:"Url,omitempty" json:"Url,omitempty" yaml:"Url,omitempty"`
}

// ArrayOfUserIdType was auto-generated from WSDL.
type ArrayOfUserIdType struct {
	UserId []*UserIdType `xml:"UserId" json:"UserId" yaml:"UserId"`
}

// Array of user mailbox.
type ArrayOfUserMailboxesType struct {
	UserMailbox []*UserMailboxType `xml:"UserMailbox" json:"UserMailbox" yaml:"UserMailbox"`
}

// ArrayOfValueAttributionsType was auto-generated from WSDL.
type ArrayOfValueAttributionsType struct {
	Attribution []string `xml:"Attribution" json:"Attribution" yaml:"Attribution"`
}

// ArrayOfVotingOptionDataType was auto-generated from WSDL.
type ArrayOfVotingOptionDataType struct {
	VotingOptionData []*VotingOptionDataType `xml:"VotingOptionData,omitempty" json:"VotingOptionData,omitempty" yaml:"VotingOptionData,omitempty"`
}

// ArrayOfWorkHours was auto-generated from WSDL.
type ArrayOfWorkHours struct {
	WorkHours []*WorkHoursType `xml:"WorkHours,omitempty" json:"WorkHours,omitempty" yaml:"WorkHours,omitempty"`
}

// ArrayOfWorkTimeSlot was auto-generated from WSDL.
type ArrayOfWorkTimeSlot struct {
	TimeSlot []*WorkTimeSlot `xml:"TimeSlot,omitempty" json:"TimeSlot,omitempty" yaml:"TimeSlot,omitempty"`
}

// ArrayOfWorkingPeriod was auto-generated from WSDL.
type ArrayOfWorkingPeriod struct {
	WorkingPeriod []*WorkingPeriod `xml:"WorkingPeriod,omitempty" json:"WorkingPeriod,omitempty" yaml:"WorkingPeriod,omitempty"`
}

// AttachmentIdType was auto-generated from WSDL.
type AttachmentIdType struct {
	Id                string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	RootItemId        string `xml:"RootItemId,attr,omitempty" json:"RootItemId,attr,omitempty" yaml:"RootItemId,attr,omitempty"`
	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,attr,omitempty" yaml:"RootItemChangeKey,attr,omitempty"`
	TypeAttrXSI       string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AttachmentIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AttachmentIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AttachmentInfoResponseMessageType was auto-generated from WSDL.
type AttachmentInfoResponseMessageType struct {
	MessageText        *string                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Attachments        *ArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AttachmentInfoResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AttachmentInfoResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// AttachmentRefinerType was auto-generated from WSDL.
type AttachmentRefinerType struct {
	RefinerType   RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner       *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount   *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
	HasAttachment *bool                    `xml:"HasAttachment,omitempty" json:"HasAttachment,omitempty" yaml:"HasAttachment,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AttachmentRefinerType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AttachmentRefinerType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AttachmentResponseShapeType was auto-generated from WSDL.
type AttachmentResponseShapeType struct {
	IncludeMimeContent   *bool                              `xml:"IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty" yaml:"IncludeMimeContent,omitempty"`
	BodyType             *BodyTypeResponseType              `xml:"BodyType,omitempty" json:"BodyType,omitempty" yaml:"BodyType,omitempty"`
	FilterHtmlContent    *bool                              `xml:"FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty" yaml:"FilterHtmlContent,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// AttachmentType was auto-generated from WSDL.
type AttachmentType struct {
	AttachmentId          *AttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	Name                  *string           `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	ContentType           *string           `xml:"ContentType,omitempty" json:"ContentType,omitempty" yaml:"ContentType,omitempty"`
	ContentId             *string           `xml:"ContentId,omitempty" json:"ContentId,omitempty" yaml:"ContentId,omitempty"`
	ContentLocation       *string           `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty" yaml:"ContentLocation,omitempty"`
	AttachmentOriginalUrl *string           `xml:"AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty" yaml:"AttachmentOriginalUrl,omitempty"`
	Size                  *int              `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	LastModifiedTime      *DateTime         `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsInline              *bool             `xml:"IsInline,omitempty" json:"IsInline,omitempty" yaml:"IsInline,omitempty"`
}

// AttendeeAvailability was auto-generated from WSDL.
type AttendeeAvailability struct {
	EmailAddress *string                 `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	Availability *AvailabilityStatusType `xml:"Availability,omitempty" json:"Availability,omitempty" yaml:"Availability,omitempty"`
}

// AttendeeConflictData was auto-generated from WSDL.
type AttendeeConflictData interface{}

// AttendeeConstraintItem was auto-generated from WSDL.
type AttendeeConstraintItem struct {
	Email         *string `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	IsRequired    *bool   `xml:"IsRequired,omitempty" json:"IsRequired,omitempty" yaml:"IsRequired,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AttendeeConstraintItem) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AttendeeConstraintItem"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// AttendeeType was auto-generated from WSDL.
type AttendeeType struct {
	Mailbox          *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	ResponseType     *ResponseTypeType `xml:"ResponseType,omitempty" json:"ResponseType,omitempty" yaml:"ResponseType,omitempty"`
	LastResponseTime *DateTime         `xml:"LastResponseTime,omitempty" json:"LastResponseTime,omitempty" yaml:"LastResponseTime,omitempty"`
	ProposedStart    *DateTime         `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd      *DateTime         `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
}

// BaseAvailabilityCalendarViewType was auto-generated from WSDL.
type BaseAvailabilityCalendarViewType struct {
	FreeBusyViewType FreeBusyViewType `xml:"FreeBusyViewType" json:"FreeBusyViewType" yaml:"FreeBusyViewType"`
}

// BaseCalendarItemStateDefinitionType was auto-generated from
// WSDL.
type BaseCalendarItemStateDefinitionType struct {
}

// BaseDelegateResponseMessageType was auto-generated from WSDL.
type BaseDelegateResponseMessageType interface{}

// BaseDelegateType was auto-generated from WSDL.
type BaseDelegateType interface{}

// BaseEmailAddressType was auto-generated from WSDL.
type BaseEmailAddressType struct {
}

// Utility type which should never appear in user documents
type BaseFolderIdType interface{}

// BaseFolderType was auto-generated from WSDL.
type BaseFolderType interface{}

// BaseGroupByType was auto-generated from WSDL.
type BaseGroupByType interface{}

// Abstract base type for item identifiers. Should never be used
// in web service calls
type BaseItemIdType interface{}

// BaseMoveCopyFolderType was auto-generated from WSDL.
type BaseMoveCopyFolderType struct {
	ToFolderId    *TargetFolderIdType               `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	FolderIds     *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *BaseMoveCopyFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:BaseMoveCopyFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// BaseMoveCopyItemType was auto-generated from WSDL.
type BaseMoveCopyItemType struct {
	ToFolderId       *TargetFolderIdType             `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	ItemIds          *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	ReturnNewItemIds *bool                           `xml:"ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty" yaml:"ReturnNewItemIds,omitempty"`
	TypeAttrXSI      string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *BaseMoveCopyItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:BaseMoveCopyItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// BaseNotificationEventType was auto-generated from WSDL.
type BaseNotificationEventType struct {
	Watermark *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
}

// BaseObjectChangedEventType was auto-generated from WSDL.
type BaseObjectChangedEventType struct {
	Watermark      *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	TimeStamp      *DateTime      `xml:"TimeStamp,omitempty" json:"TimeStamp,omitempty" yaml:"TimeStamp,omitempty"`
	ParentFolderId *FolderIdType  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderId       *FolderIdType  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ItemId         *ItemIdType    `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	TypeAttrXSI    string         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *BaseObjectChangedEventType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:BaseObjectChangedEventType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// BasePagingType was auto-generated from WSDL.
type BasePagingType interface{}

// BasePathToElementType was auto-generated from WSDL.
type BasePathToElementType interface{}

// A permission on a folder
type BasePermissionType interface{}

// BaseRequestType was auto-generated from WSDL.
type BaseRequestType interface{}

// BaseResponseMessageType was auto-generated from WSDL.
type BaseResponseMessageType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
}

// BaseSubscriptionRequestType was auto-generated from WSDL.
type BaseSubscriptionRequestType interface{}

// BodyContentAttributedValueType was auto-generated from WSDL.
type BodyContentAttributedValueType struct {
	Value        *BodyContentType              `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// BodyContentType was auto-generated from WSDL.
type BodyContentType struct {
	Value    string       `xml:"Value" json:"Value" yaml:"Value"`
	BodyType BodyTypeType `xml:"BodyType" json:"BodyType" yaml:"BodyType"`
}

// BodyType was auto-generated from WSDL.
type BodyType struct {
	Content     *string      `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	BodyType    BodyTypeType `xml:"BodyType,attr,omitempty" json:"BodyType,attr,omitempty" yaml:"BodyType,attr,omitempty"`
	IsTruncated bool         `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,attr,omitempty" yaml:"IsTruncated,attr,omitempty"`
}

// CalendarActivityDataType was auto-generated from WSDL.
type CalendarActivityDataType struct {
	ActivityAction string   `xml:"ActivityAction" json:"ActivityAction" yaml:"ActivityAction"`
	ClientId       string   `xml:"ClientId" json:"ClientId" yaml:"ClientId"`
	CasRequestId   GuidType `xml:"CasRequestId" json:"CasRequestId" yaml:"CasRequestId"`
	IndexSelected  int      `xml:"IndexSelected" json:"IndexSelected" yaml:"IndexSelected"`
}

// CalendarEvent was auto-generated from WSDL.
type CalendarEvent struct {
	StartTime            DateTime              `xml:"StartTime" json:"StartTime" yaml:"StartTime"`
	EndTime              DateTime              `xml:"EndTime" json:"EndTime" yaml:"EndTime"`
	BusyType             LegacyFreeBusyType    `xml:"BusyType" json:"BusyType" yaml:"BusyType"`
	CalendarEventDetails *CalendarEventDetails `xml:"CalendarEventDetails,omitempty" json:"CalendarEventDetails,omitempty" yaml:"CalendarEventDetails,omitempty"`
}

// CalendarEventDetails was auto-generated from WSDL.
type CalendarEventDetails struct {
	ID            *string `xml:"ID,omitempty" json:"ID,omitempty" yaml:"ID,omitempty"`
	Subject       *string `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Location      *string `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	IsMeeting     bool    `xml:"IsMeeting" json:"IsMeeting" yaml:"IsMeeting"`
	IsRecurring   bool    `xml:"IsRecurring" json:"IsRecurring" yaml:"IsRecurring"`
	IsException   bool    `xml:"IsException" json:"IsException" yaml:"IsException"`
	IsReminderSet bool    `xml:"IsReminderSet" json:"IsReminderSet" yaml:"IsReminderSet"`
	IsPrivate     bool    `xml:"IsPrivate" json:"IsPrivate" yaml:"IsPrivate"`
}

// CalendarFolderType was auto-generated from WSDL.
type CalendarFolderType struct {
	FolderId                 *FolderIdType                     `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ParentFolderId           *FolderIdType                     `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderClass              *string                           `xml:"FolderClass,omitempty" json:"FolderClass,omitempty" yaml:"FolderClass,omitempty"`
	DisplayName              *string                           `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TotalCount               *int                              `xml:"TotalCount,omitempty" json:"TotalCount,omitempty" yaml:"TotalCount,omitempty"`
	ChildFolderCount         *int                              `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty" yaml:"ChildFolderCount,omitempty"`
	ExtendedProperty         []*ExtendedPropertyType           `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	ManagedFolderInformation *ManagedFolderInformationType     `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty" yaml:"ManagedFolderInformation,omitempty"`
	EffectiveRights          *EffectiveRightsType              `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	DistinguishedFolderId    *DistinguishedFolderIdNameType    `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	PolicyTag                *RetentionTagType                 `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag               *RetentionTagType                 `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	ReplicaList              *ArrayOfStringsType               `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty" yaml:"ReplicaList,omitempty"`
	SharingEffectiveRights   *CalendarPermissionReadAccessType `xml:"SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty" yaml:"SharingEffectiveRights,omitempty"`
	PermissionSet            *CalendarPermissionSetType        `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty" yaml:"PermissionSet,omitempty"`
	TypeAttrXSI              string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CalendarFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CalendarFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// CalendarItemType was auto-generated from WSDL.
type CalendarItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	UID                          *string                                   `xml:"UID,omitempty" json:"UID,omitempty" yaml:"UID,omitempty"`
	RecurrenceId                 *DateTime                                 `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty" yaml:"RecurrenceId,omitempty"`
	DateTimeStamp                *DateTime                                 `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty" yaml:"DateTimeStamp,omitempty"`
	Start                        *DateTime                                 `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	End                          *DateTime                                 `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
	OriginalStart                *DateTime                                 `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty" yaml:"OriginalStart,omitempty"`
	IsAllDayEvent                *bool                                     `xml:"IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty" yaml:"IsAllDayEvent,omitempty"`
	LegacyFreeBusyStatus         *LegacyFreeBusyType                       `xml:"LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty" yaml:"LegacyFreeBusyStatus,omitempty"`
	Location                     *string                                   `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	When                         *string                                   `xml:"When,omitempty" json:"When,omitempty" yaml:"When,omitempty"`
	IsMeeting                    *bool                                     `xml:"IsMeeting,omitempty" json:"IsMeeting,omitempty" yaml:"IsMeeting,omitempty"`
	IsCancelled                  *bool                                     `xml:"IsCancelled,omitempty" json:"IsCancelled,omitempty" yaml:"IsCancelled,omitempty"`
	IsRecurring                  *bool                                     `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty" yaml:"IsRecurring,omitempty"`
	MeetingRequestWasSent        *bool                                     `xml:"MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty" yaml:"MeetingRequestWasSent,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	CalendarItemType             *CalendarItemTypeType                     `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty" yaml:"CalendarItemType,omitempty"`
	MyResponseType               *ResponseTypeType                         `xml:"MyResponseType,omitempty" json:"MyResponseType,omitempty" yaml:"MyResponseType,omitempty"`
	Organizer                    *SingleRecipientType                      `xml:"Organizer,omitempty" json:"Organizer,omitempty" yaml:"Organizer,omitempty"`
	RequiredAttendees            *NonEmptyArrayOfAttendeesType             `xml:"RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty" yaml:"RequiredAttendees,omitempty"`
	OptionalAttendees            *NonEmptyArrayOfAttendeesType             `xml:"OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty" yaml:"OptionalAttendees,omitempty"`
	Resources                    *NonEmptyArrayOfAttendeesType             `xml:"Resources,omitempty" json:"Resources,omitempty" yaml:"Resources,omitempty"`
	InboxReminders               *ArrayOfInboxReminderType                 `xml:"InboxReminders,omitempty" json:"InboxReminders,omitempty" yaml:"InboxReminders,omitempty"`
	ConflictingMeetingCount      *int                                      `xml:"ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty" yaml:"ConflictingMeetingCount,omitempty"`
	AdjacentMeetingCount         *int                                      `xml:"AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty" yaml:"AdjacentMeetingCount,omitempty"`
	ConflictingMeetings          *NonEmptyArrayOfAllItemsType              `xml:"ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty" yaml:"ConflictingMeetings,omitempty"`
	AdjacentMeetings             *NonEmptyArrayOfAllItemsType              `xml:"AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty" yaml:"AdjacentMeetings,omitempty"`
	Duration                     *string                                   `xml:"Duration,omitempty" json:"Duration,omitempty" yaml:"Duration,omitempty"`
	TimeZone                     *string                                   `xml:"TimeZone,omitempty" json:"TimeZone,omitempty" yaml:"TimeZone,omitempty"`
	AppointmentReplyTime         *DateTime                                 `xml:"AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty" yaml:"AppointmentReplyTime,omitempty"`
	AppointmentSequenceNumber    *int                                      `xml:"AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty" yaml:"AppointmentSequenceNumber,omitempty"`
	AppointmentState             *int                                      `xml:"AppointmentState,omitempty" json:"AppointmentState,omitempty" yaml:"AppointmentState,omitempty"`
	Recurrence                   *RecurrenceType                           `xml:"Recurrence,omitempty" json:"Recurrence,omitempty" yaml:"Recurrence,omitempty"`
	FirstOccurrence              *OccurrenceInfoType                       `xml:"FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty" yaml:"FirstOccurrence,omitempty"`
	LastOccurrence               *OccurrenceInfoType                       `xml:"LastOccurrence,omitempty" json:"LastOccurrence,omitempty" yaml:"LastOccurrence,omitempty"`
	ModifiedOccurrences          *NonEmptyArrayOfOccurrenceInfoType        `xml:"ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty" yaml:"ModifiedOccurrences,omitempty"`
	DeletedOccurrences           *NonEmptyArrayOfDeletedOccurrencesType    `xml:"DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty" yaml:"DeletedOccurrences,omitempty"`
	MeetingTimeZone              *TimeZoneType                             `xml:"MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty" yaml:"MeetingTimeZone,omitempty"`
	StartTimeZone                *TimeZoneDefinitionType                   `xml:"StartTimeZone,omitempty" json:"StartTimeZone,omitempty" yaml:"StartTimeZone,omitempty"`
	EndTimeZone                  *TimeZoneDefinitionType                   `xml:"EndTimeZone,omitempty" json:"EndTimeZone,omitempty" yaml:"EndTimeZone,omitempty"`
	ConferenceType               *int                                      `xml:"ConferenceType,omitempty" json:"ConferenceType,omitempty" yaml:"ConferenceType,omitempty"`
	AllowNewTimeProposal         *bool                                     `xml:"AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty" yaml:"AllowNewTimeProposal,omitempty"`
	IsOnlineMeeting              *bool                                     `xml:"IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty" yaml:"IsOnlineMeeting,omitempty"`
	MeetingWorkspaceUrl          *string                                   `xml:"MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty" yaml:"MeetingWorkspaceUrl,omitempty"`
	NetShowUrl                   *string                                   `xml:"NetShowUrl,omitempty" json:"NetShowUrl,omitempty" yaml:"NetShowUrl,omitempty"`
	EnhancedLocation             *EnhancedLocationType                     `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty" yaml:"EnhancedLocation,omitempty"`
	StartWallClock               *DateTime                                 `xml:"StartWallClock,omitempty" json:"StartWallClock,omitempty" yaml:"StartWallClock,omitempty"`
	EndWallClock                 *DateTime                                 `xml:"EndWallClock,omitempty" json:"EndWallClock,omitempty" yaml:"EndWallClock,omitempty"`
	StartTimeZoneId              *string                                   `xml:"StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty" yaml:"StartTimeZoneId,omitempty"`
	EndTimeZoneId                *string                                   `xml:"EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty" yaml:"EndTimeZoneId,omitempty"`
	IntendedFreeBusyStatus       *LegacyFreeBusyType                       `xml:"IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty" yaml:"IntendedFreeBusyStatus,omitempty"`
	JoinOnlineMeetingUrl         *string                                   `xml:"JoinOnlineMeetingUrl,omitempty" json:"JoinOnlineMeetingUrl,omitempty" yaml:"JoinOnlineMeetingUrl,omitempty"`
	OnlineMeetingSettings        *OnlineMeetingSettingsType                `xml:"OnlineMeetingSettings,omitempty" json:"OnlineMeetingSettings,omitempty" yaml:"OnlineMeetingSettings,omitempty"`
	IsOrganizer                  *bool                                     `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty" yaml:"IsOrganizer,omitempty"`
	CalendarActivityData         *CalendarActivityDataType                 `xml:"CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty" yaml:"CalendarActivityData,omitempty"`
	DoNotForwardMeeting          *bool                                     `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty" yaml:"DoNotForwardMeeting,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CalendarItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CalendarItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// The set of permissions on a folder
type CalendarPermissionSetType struct {
	CalendarPermissions *ArrayOfCalendarPermissionsType `xml:"CalendarPermissions,omitempty" json:"CalendarPermissions,omitempty" yaml:"CalendarPermissions,omitempty"`
	UnknownEntries      *ArrayOfUnknownEntriesType      `xml:"UnknownEntries,omitempty" json:"UnknownEntries,omitempty" yaml:"UnknownEntries,omitempty"`
}

// CalendarPermissionType was auto-generated from WSDL.
type CalendarPermissionType struct {
	UserId                  *UserIdType                       `xml:"UserId" json:"UserId" yaml:"UserId"`
	CanCreateItems          *bool                             `xml:"CanCreateItems,omitempty" json:"CanCreateItems,omitempty" yaml:"CanCreateItems,omitempty"`
	CanCreateSubFolders     *bool                             `xml:"CanCreateSubFolders,omitempty" json:"CanCreateSubFolders,omitempty" yaml:"CanCreateSubFolders,omitempty"`
	IsFolderOwner           *bool                             `xml:"IsFolderOwner,omitempty" json:"IsFolderOwner,omitempty" yaml:"IsFolderOwner,omitempty"`
	IsFolderVisible         *bool                             `xml:"IsFolderVisible,omitempty" json:"IsFolderVisible,omitempty" yaml:"IsFolderVisible,omitempty"`
	IsFolderContact         *bool                             `xml:"IsFolderContact,omitempty" json:"IsFolderContact,omitempty" yaml:"IsFolderContact,omitempty"`
	EditItems               *PermissionActionType             `xml:"EditItems,omitempty" json:"EditItems,omitempty" yaml:"EditItems,omitempty"`
	DeleteItems             *PermissionActionType             `xml:"DeleteItems,omitempty" json:"DeleteItems,omitempty" yaml:"DeleteItems,omitempty"`
	ReadItems               *CalendarPermissionReadAccessType `xml:"ReadItems,omitempty" json:"ReadItems,omitempty" yaml:"ReadItems,omitempty"`
	CalendarPermissionLevel CalendarPermissionLevelType       `xml:"CalendarPermissionLevel" json:"CalendarPermissionLevel" yaml:"CalendarPermissionLevel"`
	TypeAttrXSI             string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace           string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CalendarPermissionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CalendarPermissionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// CalendarViewType was auto-generated from WSDL.
type CalendarViewType struct {
	MaxEntriesReturned int      `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,attr,omitempty" yaml:"MaxEntriesReturned,attr,omitempty"`
	StartDate          DateTime `xml:"StartDate,attr,omitempty" json:"StartDate,attr,omitempty" yaml:"StartDate,attr,omitempty"`
	EndDate            DateTime `xml:"EndDate,attr,omitempty" json:"EndDate,attr,omitempty" yaml:"EndDate,attr,omitempty"`
	TypeAttrXSI        string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CalendarViewType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CalendarViewType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// CancelCalendarItemType was auto-generated from WSDL.
type CancelCalendarItemType struct {
	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CancelCalendarItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CancelCalendarItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ChangeDescriptionType was auto-generated from WSDL.
type ChangeDescriptionType interface{}

// ChangeHighlightsType was auto-generated from WSDL.
type ChangeHighlightsType struct {
	HasLocationChanged  *bool     `xml:"HasLocationChanged,omitempty" json:"HasLocationChanged,omitempty" yaml:"HasLocationChanged,omitempty"`
	Location            *string   `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	HasStartTimeChanged *bool     `xml:"HasStartTimeChanged,omitempty" json:"HasStartTimeChanged,omitempty" yaml:"HasStartTimeChanged,omitempty"`
	Start               *DateTime `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	HasEndTimeChanged   *bool     `xml:"HasEndTimeChanged,omitempty" json:"HasEndTimeChanged,omitempty" yaml:"HasEndTimeChanged,omitempty"`
	End                 *DateTime `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
}

// ClientAccessTokenRequestType was auto-generated from WSDL.
type ClientAccessTokenRequestType struct {
	Id                    *string                    `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	TokenType             *ClientAccessTokenTypeType `xml:"TokenType,omitempty" json:"TokenType,omitempty" yaml:"TokenType,omitempty"`
	Scope                 *string                    `xml:"Scope,omitempty" json:"Scope,omitempty" yaml:"Scope,omitempty"`
	ResourceUri           *string                    `xml:"ResourceUri,omitempty" json:"ResourceUri,omitempty" yaml:"ResourceUri,omitempty"`
	IdentityAndEwsTokenId *string                    `xml:"IdentityAndEwsTokenId,omitempty" json:"IdentityAndEwsTokenId,omitempty" yaml:"IdentityAndEwsTokenId,omitempty"`
	RequestedCapabilities *string                    `xml:"RequestedCapabilities,omitempty" json:"RequestedCapabilities,omitempty" yaml:"RequestedCapabilities,omitempty"`
	SupportsSharedFolders *bool                      `xml:"SupportsSharedFolders,omitempty" json:"SupportsSharedFolders,omitempty" yaml:"SupportsSharedFolders,omitempty"`
}

// ClientAccessTokenType was auto-generated from WSDL.
type ClientAccessTokenType struct {
	Id         *string                    `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	TokenType  *ClientAccessTokenTypeType `xml:"TokenType,omitempty" json:"TokenType,omitempty" yaml:"TokenType,omitempty"`
	TokenValue *string                    `xml:"TokenValue,omitempty" json:"TokenValue,omitempty" yaml:"TokenValue,omitempty"`
	TTL        *int64                     `xml:"TTL,omitempty" json:"TTL,omitempty" yaml:"TTL,omitempty"`
}

// ClientExtensionType was auto-generated from WSDL.
type ClientExtensionType struct {
	SpecificUsers            *ArrayOfStringsType           `xml:"SpecificUsers,omitempty" json:"SpecificUsers,omitempty" yaml:"SpecificUsers,omitempty"`
	Manifest                 *[]byte                       `xml:"Manifest,omitempty" json:"Manifest,omitempty" yaml:"Manifest,omitempty"`
	IsAvailable              bool                          `xml:"IsAvailable,attr,omitempty" json:"IsAvailable,attr,omitempty" yaml:"IsAvailable,attr,omitempty"`
	IsMandatory              bool                          `xml:"IsMandatory,attr,omitempty" json:"IsMandatory,attr,omitempty" yaml:"IsMandatory,attr,omitempty"`
	IsEnabledByDefault       bool                          `xml:"IsEnabledByDefault,attr,omitempty" json:"IsEnabledByDefault,attr,omitempty" yaml:"IsEnabledByDefault,attr,omitempty"`
	ProvidedTo               ClientExtensionProvidedToType `xml:"ProvidedTo,attr,omitempty" json:"ProvidedTo,attr,omitempty" yaml:"ProvidedTo,attr,omitempty"`
	Type                     ClientExtensionTypeType       `xml:"Type,attr,omitempty" json:"Type,attr,omitempty" yaml:"Type,attr,omitempty"`
	Scope                    ClientExtensionScopeType      `xml:"Scope,attr,omitempty" json:"Scope,attr,omitempty" yaml:"Scope,attr,omitempty"`
	MarketplaceAssetId       string                        `xml:"MarketplaceAssetId,attr,omitempty" json:"MarketplaceAssetId,attr,omitempty" yaml:"MarketplaceAssetId,attr,omitempty"`
	MarketplaceContentMarket string                        `xml:"MarketplaceContentMarket,attr,omitempty" json:"MarketplaceContentMarket,attr,omitempty" yaml:"MarketplaceContentMarket,attr,omitempty"`
	AppStatus                string                        `xml:"AppStatus,attr,omitempty" json:"AppStatus,attr,omitempty" yaml:"AppStatus,attr,omitempty"`
	Etoken                   string                        `xml:"Etoken,attr,omitempty" json:"Etoken,attr,omitempty" yaml:"Etoken,attr,omitempty"`
	InstalledDateTime        string                        `xml:"InstalledDateTime,attr,omitempty" json:"InstalledDateTime,attr,omitempty" yaml:"InstalledDateTime,attr,omitempty"`
	Version                  string                        `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
	ExtensionId              string                        `xml:"ExtensionId,attr,omitempty" json:"ExtensionId,attr,omitempty" yaml:"ExtensionId,attr,omitempty"`
}

// CompanyInsightValue was auto-generated from WSDL.
type CompanyInsightValue struct {
	InsightSource          *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks        *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Name                   string  `xml:"Name" json:"Name" yaml:"Name"`
	SatoriId               *string `xml:"SatoriId,omitempty" json:"SatoriId,omitempty" yaml:"SatoriId,omitempty"`
	Description            *string `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	DescriptionAttribution *string `xml:"DescriptionAttribution,omitempty" json:"DescriptionAttribution,omitempty" yaml:"DescriptionAttribution,omitempty"`
	ImageUrl               *string `xml:"ImageUrl,omitempty" json:"ImageUrl,omitempty" yaml:"ImageUrl,omitempty"`
	ImageUrlAttribution    *string `xml:"ImageUrlAttribution,omitempty" json:"ImageUrlAttribution,omitempty" yaml:"ImageUrlAttribution,omitempty"`
	YearFound              *string `xml:"YearFound,omitempty" json:"YearFound,omitempty" yaml:"YearFound,omitempty"`
	FinanceSymbol          *string `xml:"FinanceSymbol,omitempty" json:"FinanceSymbol,omitempty" yaml:"FinanceSymbol,omitempty"`
	WebsiteUrl             *string `xml:"WebsiteUrl,omitempty" json:"WebsiteUrl,omitempty" yaml:"WebsiteUrl,omitempty"`
	TypeAttrXSI            string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CompanyInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CompanyInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// CompleteNameType was auto-generated from WSDL.
type CompleteNameType struct {
	Title         *string `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	FirstName     *string `xml:"FirstName,omitempty" json:"FirstName,omitempty" yaml:"FirstName,omitempty"`
	MiddleName    *string `xml:"MiddleName,omitempty" json:"MiddleName,omitempty" yaml:"MiddleName,omitempty"`
	LastName      *string `xml:"LastName,omitempty" json:"LastName,omitempty" yaml:"LastName,omitempty"`
	Suffix        *string `xml:"Suffix,omitempty" json:"Suffix,omitempty" yaml:"Suffix,omitempty"`
	Initials      *string `xml:"Initials,omitempty" json:"Initials,omitempty" yaml:"Initials,omitempty"`
	FullName      *string `xml:"FullName,omitempty" json:"FullName,omitempty" yaml:"FullName,omitempty"`
	Nickname      *string `xml:"Nickname,omitempty" json:"Nickname,omitempty" yaml:"Nickname,omitempty"`
	YomiFirstName *string `xml:"YomiFirstName,omitempty" json:"YomiFirstName,omitempty" yaml:"YomiFirstName,omitempty"`
	YomiLastName  *string `xml:"YomiLastName,omitempty" json:"YomiLastName,omitempty" yaml:"YomiLastName,omitempty"`
}

// ComputedInsightValue was auto-generated from WSDL.
type ComputedInsightValue struct {
	InsightSource   *string                              `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64                               `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Properties      *ArrayOfComputedInsightValueProperty `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
	TypeAttrXSI     string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ComputedInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ComputedInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ComputedInsightValueProperty was auto-generated from WSDL.
type ComputedInsightValueProperty struct {
	Key   string `xml:"Key" json:"Key" yaml:"Key"`
	Value string `xml:"Value" json:"Value" yaml:"Value"`
}

// ConfigurationRequestDetailsType was auto-generated from WSDL.
type ConfigurationRequestDetailsType []interface{}

// ConflictResultsType was auto-generated from WSDL.
type ConflictResultsType struct {
	Count *int `xml:"Count,omitempty" json:"Count,omitempty" yaml:"Count,omitempty"`
}

// ConnectingSIDType was auto-generated from WSDL.
type ConnectingSIDType struct {
	PrincipalName      *PrincipalNameType      `xml:"PrincipalName,omitempty" json:"PrincipalName,omitempty" yaml:"PrincipalName,omitempty"`
	SID                *SIDType                `xml:"SID,omitempty" json:"SID,omitempty" yaml:"SID,omitempty"`
	PrimarySmtpAddress *PrimarySmtpAddressType `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty" yaml:"PrimarySmtpAddress,omitempty"`
	SmtpAddress        *SmtpAddressType        `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
}

// ConstantValueType was auto-generated from WSDL.
type ConstantValueType struct {
	Value string `xml:"Value,attr,omitempty" json:"Value,attr,omitempty" yaml:"Value,attr,omitempty"`
}

// ContactItemType was auto-generated from WSDL.
type ContactItemType struct {
	MimeContent                     *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                          *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId                  *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                       *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                         *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                     *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                            *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                     *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived                *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                            *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                      *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                      *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                       *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                     *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                         *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                        *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                        *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                    *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders          *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                    *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated                 *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects                 *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                   *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                   *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime                *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart      *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                       *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                       *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                      *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments                  *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty                []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                         *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights                 *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName                *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime                *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                    *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString    *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString    *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId                  *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                      *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                            *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                    *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                     *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody                  *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult          *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                       *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                      *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                   *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                         *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData     *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons          *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                       *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                     *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages                *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                        *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                       *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                       *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                         *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                        *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                        *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                     *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview                 *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                      *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags                 *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview          *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                           *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                    *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds     *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                    *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                       *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification         *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	FileAs                          *string                                   `xml:"FileAs,omitempty" json:"FileAs,omitempty" yaml:"FileAs,omitempty"`
	FileAsMapping                   *FileAsMappingType                        `xml:"FileAsMapping,omitempty" json:"FileAsMapping,omitempty" yaml:"FileAsMapping,omitempty"`
	DisplayName                     *string                                   `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	GivenName                       *string                                   `xml:"GivenName,omitempty" json:"GivenName,omitempty" yaml:"GivenName,omitempty"`
	Initials                        *string                                   `xml:"Initials,omitempty" json:"Initials,omitempty" yaml:"Initials,omitempty"`
	MiddleName                      *string                                   `xml:"MiddleName,omitempty" json:"MiddleName,omitempty" yaml:"MiddleName,omitempty"`
	Nickname                        *string                                   `xml:"Nickname,omitempty" json:"Nickname,omitempty" yaml:"Nickname,omitempty"`
	CompleteName                    *CompleteNameType                         `xml:"CompleteName,omitempty" json:"CompleteName,omitempty" yaml:"CompleteName,omitempty"`
	CompanyName                     *string                                   `xml:"CompanyName,omitempty" json:"CompanyName,omitempty" yaml:"CompanyName,omitempty"`
	EmailAddresses                  *EmailAddressDictionaryType               `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty" yaml:"EmailAddresses,omitempty"`
	AbchEmailAddresses              *AbchEmailAddressDictionaryType           `xml:"AbchEmailAddresses,omitempty" json:"AbchEmailAddresses,omitempty" yaml:"AbchEmailAddresses,omitempty"`
	PhysicalAddresses               *PhysicalAddressDictionaryType            `xml:"PhysicalAddresses,omitempty" json:"PhysicalAddresses,omitempty" yaml:"PhysicalAddresses,omitempty"`
	PhoneNumbers                    *PhoneNumberDictionaryType                `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty" yaml:"PhoneNumbers,omitempty"`
	AssistantName                   *string                                   `xml:"AssistantName,omitempty" json:"AssistantName,omitempty" yaml:"AssistantName,omitempty"`
	Birthday                        *DateTime                                 `xml:"Birthday,omitempty" json:"Birthday,omitempty" yaml:"Birthday,omitempty"`
	BusinessHomePage                *string                                   `xml:"BusinessHomePage,omitempty" json:"BusinessHomePage,omitempty" yaml:"BusinessHomePage,omitempty"`
	Children                        *ArrayOfStringsType                       `xml:"Children,omitempty" json:"Children,omitempty" yaml:"Children,omitempty"`
	Companies                       *ArrayOfStringsType                       `xml:"Companies,omitempty" json:"Companies,omitempty" yaml:"Companies,omitempty"`
	ContactSource                   *ContactSourceType                        `xml:"ContactSource,omitempty" json:"ContactSource,omitempty" yaml:"ContactSource,omitempty"`
	Department                      *string                                   `xml:"Department,omitempty" json:"Department,omitempty" yaml:"Department,omitempty"`
	Generation                      *string                                   `xml:"Generation,omitempty" json:"Generation,omitempty" yaml:"Generation,omitempty"`
	ImAddresses                     *ImAddressDictionaryType                  `xml:"ImAddresses,omitempty" json:"ImAddresses,omitempty" yaml:"ImAddresses,omitempty"`
	JobTitle                        *string                                   `xml:"JobTitle,omitempty" json:"JobTitle,omitempty" yaml:"JobTitle,omitempty"`
	Manager                         *string                                   `xml:"Manager,omitempty" json:"Manager,omitempty" yaml:"Manager,omitempty"`
	Mileage                         *string                                   `xml:"Mileage,omitempty" json:"Mileage,omitempty" yaml:"Mileage,omitempty"`
	OfficeLocation                  *string                                   `xml:"OfficeLocation,omitempty" json:"OfficeLocation,omitempty" yaml:"OfficeLocation,omitempty"`
	PostalAddressIndex              *PhysicalAddressIndexType                 `xml:"PostalAddressIndex,omitempty" json:"PostalAddressIndex,omitempty" yaml:"PostalAddressIndex,omitempty"`
	Profession                      *string                                   `xml:"Profession,omitempty" json:"Profession,omitempty" yaml:"Profession,omitempty"`
	SpouseName                      *string                                   `xml:"SpouseName,omitempty" json:"SpouseName,omitempty" yaml:"SpouseName,omitempty"`
	Surname                         *string                                   `xml:"Surname,omitempty" json:"Surname,omitempty" yaml:"Surname,omitempty"`
	WeddingAnniversary              *DateTime                                 `xml:"WeddingAnniversary,omitempty" json:"WeddingAnniversary,omitempty" yaml:"WeddingAnniversary,omitempty"`
	HasPicture                      *bool                                     `xml:"HasPicture,omitempty" json:"HasPicture,omitempty" yaml:"HasPicture,omitempty"`
	PhoneticFullName                *string                                   `xml:"PhoneticFullName,omitempty" json:"PhoneticFullName,omitempty" yaml:"PhoneticFullName,omitempty"`
	PhoneticFirstName               *string                                   `xml:"PhoneticFirstName,omitempty" json:"PhoneticFirstName,omitempty" yaml:"PhoneticFirstName,omitempty"`
	PhoneticLastName                *string                                   `xml:"PhoneticLastName,omitempty" json:"PhoneticLastName,omitempty" yaml:"PhoneticLastName,omitempty"`
	Alias                           *string                                   `xml:"Alias,omitempty" json:"Alias,omitempty" yaml:"Alias,omitempty"`
	Notes                           *string                                   `xml:"Notes,omitempty" json:"Notes,omitempty" yaml:"Notes,omitempty"`
	Photo                           *[]byte                                   `xml:"Photo,omitempty" json:"Photo,omitempty" yaml:"Photo,omitempty"`
	UserSMIMECertificate            *ArrayOfBinaryType                        `xml:"UserSMIMECertificate,omitempty" json:"UserSMIMECertificate,omitempty" yaml:"UserSMIMECertificate,omitempty"`
	MSExchangeCertificate           *ArrayOfBinaryType                        `xml:"MSExchangeCertificate,omitempty" json:"MSExchangeCertificate,omitempty" yaml:"MSExchangeCertificate,omitempty"`
	DirectoryId                     *string                                   `xml:"DirectoryId,omitempty" json:"DirectoryId,omitempty" yaml:"DirectoryId,omitempty"`
	ManagerMailbox                  *SingleRecipientType                      `xml:"ManagerMailbox,omitempty" json:"ManagerMailbox,omitempty" yaml:"ManagerMailbox,omitempty"`
	DirectReports                   *ArrayOfRecipientsType                    `xml:"DirectReports,omitempty" json:"DirectReports,omitempty" yaml:"DirectReports,omitempty"`
	AccountName                     *string                                   `xml:"AccountName,omitempty" json:"AccountName,omitempty" yaml:"AccountName,omitempty"`
	IsAutoUpdateDisabled            *bool                                     `xml:"IsAutoUpdateDisabled,omitempty" json:"IsAutoUpdateDisabled,omitempty" yaml:"IsAutoUpdateDisabled,omitempty"`
	IsMessengerEnabled              *bool                                     `xml:"IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty" yaml:"IsMessengerEnabled,omitempty"`
	Comment                         *string                                   `xml:"Comment,omitempty" json:"Comment,omitempty" yaml:"Comment,omitempty"`
	ContactShortId                  *int                                      `xml:"ContactShortId,omitempty" json:"ContactShortId,omitempty" yaml:"ContactShortId,omitempty"`
	ContactType                     *string                                   `xml:"ContactType,omitempty" json:"ContactType,omitempty" yaml:"ContactType,omitempty"`
	Gender                          *string                                   `xml:"Gender,omitempty" json:"Gender,omitempty" yaml:"Gender,omitempty"`
	IsHidden                        *bool                                     `xml:"IsHidden,omitempty" json:"IsHidden,omitempty" yaml:"IsHidden,omitempty"`
	ObjectId                        *string                                   `xml:"ObjectId,omitempty" json:"ObjectId,omitempty" yaml:"ObjectId,omitempty"`
	PassportId                      *int64                                    `xml:"PassportId,omitempty" json:"PassportId,omitempty" yaml:"PassportId,omitempty"`
	IsPrivate                       *bool                                     `xml:"IsPrivate,omitempty" json:"IsPrivate,omitempty" yaml:"IsPrivate,omitempty"`
	SourceId                        *string                                   `xml:"SourceId,omitempty" json:"SourceId,omitempty" yaml:"SourceId,omitempty"`
	TrustLevel                      *int                                      `xml:"TrustLevel,omitempty" json:"TrustLevel,omitempty" yaml:"TrustLevel,omitempty"`
	CreatedBy                       *string                                   `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty" yaml:"CreatedBy,omitempty"`
	Urls                            *ContactUrlDictionaryType                 `xml:"Urls,omitempty" json:"Urls,omitempty" yaml:"Urls,omitempty"`
	Cid                             *int64                                    `xml:"Cid,omitempty" json:"Cid,omitempty" yaml:"Cid,omitempty"`
	SkypeAuthCertificate            *string                                   `xml:"SkypeAuthCertificate,omitempty" json:"SkypeAuthCertificate,omitempty" yaml:"SkypeAuthCertificate,omitempty"`
	SkypeContext                    *string                                   `xml:"SkypeContext,omitempty" json:"SkypeContext,omitempty" yaml:"SkypeContext,omitempty"`
	SkypeId                         *string                                   `xml:"SkypeId,omitempty" json:"SkypeId,omitempty" yaml:"SkypeId,omitempty"`
	SkypeRelationship               *string                                   `xml:"SkypeRelationship,omitempty" json:"SkypeRelationship,omitempty" yaml:"SkypeRelationship,omitempty"`
	YomiNickname                    *string                                   `xml:"YomiNickname,omitempty" json:"YomiNickname,omitempty" yaml:"YomiNickname,omitempty"`
	XboxLiveTag                     *string                                   `xml:"XboxLiveTag,omitempty" json:"XboxLiveTag,omitempty" yaml:"XboxLiveTag,omitempty"`
	InviteFree                      *bool                                     `xml:"InviteFree,omitempty" json:"InviteFree,omitempty" yaml:"InviteFree,omitempty"`
	HidePresenceAndProfile          *bool                                     `xml:"HidePresenceAndProfile,omitempty" json:"HidePresenceAndProfile,omitempty" yaml:"HidePresenceAndProfile,omitempty"`
	IsPendingOutbound               *bool                                     `xml:"IsPendingOutbound,omitempty" json:"IsPendingOutbound,omitempty" yaml:"IsPendingOutbound,omitempty"`
	SupportGroupFeeds               *bool                                     `xml:"SupportGroupFeeds,omitempty" json:"SupportGroupFeeds,omitempty" yaml:"SupportGroupFeeds,omitempty"`
	UserTileHash                    *string                                   `xml:"UserTileHash,omitempty" json:"UserTileHash,omitempty" yaml:"UserTileHash,omitempty"`
	UnifiedInbox                    *bool                                     `xml:"UnifiedInbox,omitempty" json:"UnifiedInbox,omitempty" yaml:"UnifiedInbox,omitempty"`
	Mris                            *ArrayOfStringsType                       `xml:"Mris,omitempty" json:"Mris,omitempty" yaml:"Mris,omitempty"`
	Wlid                            *string                                   `xml:"Wlid,omitempty" json:"Wlid,omitempty" yaml:"Wlid,omitempty"`
	AbchContactId                   *GuidType                                 `xml:"AbchContactId,omitempty" json:"AbchContactId,omitempty" yaml:"AbchContactId,omitempty"`
	NotInBirthdayCalendar           *bool                                     `xml:"NotInBirthdayCalendar,omitempty" json:"NotInBirthdayCalendar,omitempty" yaml:"NotInBirthdayCalendar,omitempty"`
	ShellContactType                *string                                   `xml:"ShellContactType,omitempty" json:"ShellContactType,omitempty" yaml:"ShellContactType,omitempty"`
	ImMri                           *string                                   `xml:"ImMri,omitempty" json:"ImMri,omitempty" yaml:"ImMri,omitempty"`
	PresenceTrustLevel              *int                                      `xml:"PresenceTrustLevel,omitempty" json:"PresenceTrustLevel,omitempty" yaml:"PresenceTrustLevel,omitempty"`
	OtherMri                        *string                                   `xml:"OtherMri,omitempty" json:"OtherMri,omitempty" yaml:"OtherMri,omitempty"`
	ProfileLastChanged              *string                                   `xml:"ProfileLastChanged,omitempty" json:"ProfileLastChanged,omitempty" yaml:"ProfileLastChanged,omitempty"`
	MobileIMEnabled                 *bool                                     `xml:"MobileIMEnabled,omitempty" json:"MobileIMEnabled,omitempty" yaml:"MobileIMEnabled,omitempty"`
	PartnerNetworkProfilePhotoUrl   *string                                   `xml:"PartnerNetworkProfilePhotoUrl,omitempty" json:"PartnerNetworkProfilePhotoUrl,omitempty" yaml:"PartnerNetworkProfilePhotoUrl,omitempty"`
	PartnerNetworkThumbnailPhotoUrl *string                                   `xml:"PartnerNetworkThumbnailPhotoUrl,omitempty" json:"PartnerNetworkThumbnailPhotoUrl,omitempty" yaml:"PartnerNetworkThumbnailPhotoUrl,omitempty"`
	PersonId                        *string                                   `xml:"PersonId,omitempty" json:"PersonId,omitempty" yaml:"PersonId,omitempty"`
	ConversationGuid                *GuidType                                 `xml:"ConversationGuid,omitempty" json:"ConversationGuid,omitempty" yaml:"ConversationGuid,omitempty"`
	TypeAttrXSI                     string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                   string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ContactItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ContactItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ContactType was auto-generated from WSDL.
type ContactType struct {
	Position       []*EmailPositionType            `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	PersonName     *string                         `xml:"PersonName,omitempty" json:"PersonName,omitempty" yaml:"PersonName,omitempty"`
	BusinessName   *string                         `xml:"BusinessName,omitempty" json:"BusinessName,omitempty" yaml:"BusinessName,omitempty"`
	PhoneNumbers   *ArrayOfPhonesType              `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty" yaml:"PhoneNumbers,omitempty"`
	Urls           *ArrayOfUrlsType                `xml:"Urls,omitempty" json:"Urls,omitempty" yaml:"Urls,omitempty"`
	EmailAddresses *ArrayOfExtractedEmailAddresses `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty" yaml:"EmailAddresses,omitempty"`
	Addresses      *ArrayOfAddressesType           `xml:"Addresses,omitempty" json:"Addresses,omitempty" yaml:"Addresses,omitempty"`
	ContactString  *string                         `xml:"ContactString,omitempty" json:"ContactString,omitempty" yaml:"ContactString,omitempty"`
	TypeAttrXSI    string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ContactType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ContactType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ContactUrlDictionaryEntryType was auto-generated from WSDL.
type ContactUrlDictionaryEntryType struct {
	Type    ContactUrlKeyType `xml:"Type" json:"Type" yaml:"Type"`
	Name    *string           `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Address *string           `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
}

// ContactUrlDictionaryType was auto-generated from WSDL.
type ContactUrlDictionaryType struct {
	Url []*ContactUrlDictionaryEntryType `xml:"Url,omitempty" json:"Url,omitempty" yaml:"Url,omitempty"`
}

// ContactsFolderType was auto-generated from WSDL.
type ContactsFolderType struct {
	FolderId                 *FolderIdType                  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ParentFolderId           *FolderIdType                  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderClass              *string                        `xml:"FolderClass,omitempty" json:"FolderClass,omitempty" yaml:"FolderClass,omitempty"`
	DisplayName              *string                        `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TotalCount               *int                           `xml:"TotalCount,omitempty" json:"TotalCount,omitempty" yaml:"TotalCount,omitempty"`
	ChildFolderCount         *int                           `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty" yaml:"ChildFolderCount,omitempty"`
	ExtendedProperty         []*ExtendedPropertyType        `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	ManagedFolderInformation *ManagedFolderInformationType  `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty" yaml:"ManagedFolderInformation,omitempty"`
	EffectiveRights          *EffectiveRightsType           `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	DistinguishedFolderId    *DistinguishedFolderIdNameType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	PolicyTag                *RetentionTagType              `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag               *RetentionTagType              `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	ReplicaList              *ArrayOfStringsType            `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty" yaml:"ReplicaList,omitempty"`
	SharingEffectiveRights   *PermissionReadAccessType      `xml:"SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty" yaml:"SharingEffectiveRights,omitempty"`
	PermissionSet            *PermissionSetType             `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty" yaml:"PermissionSet,omitempty"`
	SourceId                 *string                        `xml:"SourceId,omitempty" json:"SourceId,omitempty" yaml:"SourceId,omitempty"`
	AccountName              *string                        `xml:"AccountName,omitempty" json:"AccountName,omitempty" yaml:"AccountName,omitempty"`
	TypeAttrXSI              string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ContactsFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ContactsFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ContactsViewType was auto-generated from WSDL.
type ContactsViewType struct {
	MaxEntriesReturned int    `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,attr,omitempty" yaml:"MaxEntriesReturned,attr,omitempty"`
	InitialName        string `xml:"InitialName,attr,omitempty" json:"InitialName,attr,omitempty" yaml:"InitialName,attr,omitempty"`
	FinalName          string `xml:"FinalName,attr,omitempty" json:"FinalName,attr,omitempty" yaml:"FinalName,attr,omitempty"`
	TypeAttrXSI        string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ContactsViewType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ContactsViewType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ContainsExpressionType was auto-generated from WSDL.
type ContainsExpressionType struct {
	ContainmentMode       ContainmentModeType       `xml:"ContainmentMode,attr,omitempty" json:"ContainmentMode,attr,omitempty" yaml:"ContainmentMode,attr,omitempty"`
	ContainmentComparison ContainmentComparisonType `xml:"ContainmentComparison,attr,omitempty" json:"ContainmentComparison,attr,omitempty" yaml:"ContainmentComparison,attr,omitempty"`
	Path                  *BasePathToElementType    `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Constant              *ConstantValueType        `xml:"Constant,omitempty" json:"Constant,omitempty" yaml:"Constant,omitempty"`
	TypeAttrXSI           string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ContainsExpressionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ContainsExpressionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ContentActivity was auto-generated from WSDL.
type ContentActivity struct {
	Id              GuidType                 `xml:"Id" json:"Id" yaml:"Id"`
	SharedBy        string                   `xml:"SharedBy" json:"SharedBy" yaml:"SharedBy"`
	ContentLocation string                   `xml:"ContentLocation" json:"ContentLocation" yaml:"ContentLocation"`
	StartTime       string                   `xml:"StartTime" json:"StartTime" yaml:"StartTime"`
	EndTime         string                   `xml:"EndTime" json:"EndTime" yaml:"EndTime"`
	Type            ContentActivityType      `xml:"Type" json:"Type" yaml:"Type"`
	MediaType       ContentActivityMediaType `xml:"MediaType" json:"MediaType" yaml:"MediaType"`
	Acl             ContentActivityAcl       `xml:"Acl" json:"Acl" yaml:"Acl"`
}

// ContextPropertyType was auto-generated from WSDL.
type ContextPropertyType struct {
	Key   string `xml:"Key" json:"Key" yaml:"Key"`
	Value string `xml:"Value" json:"Value" yaml:"Value"`
}

// ConversationActionType was auto-generated from WSDL.
type ConversationActionType struct {
	Action                   ConversationActionTypeType `xml:"Action" json:"Action" yaml:"Action"`
	ConversationId           *ItemIdType                `xml:"ConversationId" json:"ConversationId" yaml:"ConversationId"`
	ContextFolderId          *TargetFolderIdType        `xml:"ContextFolderId,omitempty" json:"ContextFolderId,omitempty" yaml:"ContextFolderId,omitempty"`
	ConversationLastSyncTime *DateTime                  `xml:"ConversationLastSyncTime,omitempty" json:"ConversationLastSyncTime,omitempty" yaml:"ConversationLastSyncTime,omitempty"`
	ProcessRightAway         *bool                      `xml:"ProcessRightAway,omitempty" json:"ProcessRightAway,omitempty" yaml:"ProcessRightAway,omitempty"`
	DestinationFolderId      *TargetFolderIdType        `xml:"DestinationFolderId,omitempty" json:"DestinationFolderId,omitempty" yaml:"DestinationFolderId,omitempty"`
	Categories               *ArrayOfStringsType        `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	EnableAlwaysDelete       *bool                      `xml:"EnableAlwaysDelete,omitempty" json:"EnableAlwaysDelete,omitempty" yaml:"EnableAlwaysDelete,omitempty"`
	IsRead                   *bool                      `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	DeleteType               *DisposalType              `xml:"DeleteType,omitempty" json:"DeleteType,omitempty" yaml:"DeleteType,omitempty"`
	RetentionPolicyType      *RetentionType             `xml:"RetentionPolicyType,omitempty" json:"RetentionPolicyType,omitempty" yaml:"RetentionPolicyType,omitempty"`
	RetentionPolicyTagId     *string                    `xml:"RetentionPolicyTagId,omitempty" json:"RetentionPolicyTagId,omitempty" yaml:"RetentionPolicyTagId,omitempty"`
	Flag                     *FlagType                  `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	SuppressReadReceipts     *bool                      `xml:"SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty" yaml:"SuppressReadReceipts,omitempty"`
}

// ConversationNodeType was auto-generated from WSDL.
type ConversationNodeType struct {
	InternetMessageId       *string                      `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	ParentInternetMessageId *string                      `xml:"ParentInternetMessageId,omitempty" json:"ParentInternetMessageId,omitempty" yaml:"ParentInternetMessageId,omitempty"`
	Items                   *NonEmptyArrayOfAllItemsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
}

// ConversationRequestType was auto-generated from WSDL.
type ConversationRequestType struct {
	ConversationId *ItemIdType `xml:"ConversationId" json:"ConversationId" yaml:"ConversationId"`
	SyncState      *[]byte     `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
}

// ConversationResponseShapeType was auto-generated from WSDL.
type ConversationResponseShapeType struct {
	BaseShape            *DefaultShapeNamesType             `xml:"BaseShape,omitempty" json:"BaseShape,omitempty" yaml:"BaseShape,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// ConversationResponseType was auto-generated from WSDL.
type ConversationResponseType struct {
	ConversationId    *ItemIdType                   `xml:"ConversationId" json:"ConversationId" yaml:"ConversationId"`
	SyncState         *[]byte                       `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
	ConversationNodes *ArrayOfConversationNodesType `xml:"ConversationNodes,omitempty" json:"ConversationNodes,omitempty" yaml:"ConversationNodes,omitempty"`
	CanDelete         *bool                         `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
}

// ConversationType was auto-generated from WSDL.
type ConversationType struct {
	ConversationId            *ItemIdType                     `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	ConversationTopic         *string                         `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	UniqueRecipients          *ArrayOfStringsType             `xml:"UniqueRecipients,omitempty" json:"UniqueRecipients,omitempty" yaml:"UniqueRecipients,omitempty"`
	GlobalUniqueRecipients    *ArrayOfStringsType             `xml:"GlobalUniqueRecipients,omitempty" json:"GlobalUniqueRecipients,omitempty" yaml:"GlobalUniqueRecipients,omitempty"`
	UniqueUnreadSenders       *ArrayOfStringsType             `xml:"UniqueUnreadSenders,omitempty" json:"UniqueUnreadSenders,omitempty" yaml:"UniqueUnreadSenders,omitempty"`
	GlobalUniqueUnreadSenders *ArrayOfStringsType             `xml:"GlobalUniqueUnreadSenders,omitempty" json:"GlobalUniqueUnreadSenders,omitempty" yaml:"GlobalUniqueUnreadSenders,omitempty"`
	UniqueSenders             *ArrayOfStringsType             `xml:"UniqueSenders,omitempty" json:"UniqueSenders,omitempty" yaml:"UniqueSenders,omitempty"`
	GlobalUniqueSenders       *ArrayOfStringsType             `xml:"GlobalUniqueSenders,omitempty" json:"GlobalUniqueSenders,omitempty" yaml:"GlobalUniqueSenders,omitempty"`
	LastDeliveryTime          *DateTime                       `xml:"LastDeliveryTime,omitempty" json:"LastDeliveryTime,omitempty" yaml:"LastDeliveryTime,omitempty"`
	GlobalLastDeliveryTime    *DateTime                       `xml:"GlobalLastDeliveryTime,omitempty" json:"GlobalLastDeliveryTime,omitempty" yaml:"GlobalLastDeliveryTime,omitempty"`
	Categories                *ArrayOfStringsType             `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	GlobalCategories          *ArrayOfStringsType             `xml:"GlobalCategories,omitempty" json:"GlobalCategories,omitempty" yaml:"GlobalCategories,omitempty"`
	FlagStatus                *FlagStatusType                 `xml:"FlagStatus,omitempty" json:"FlagStatus,omitempty" yaml:"FlagStatus,omitempty"`
	GlobalFlagStatus          *FlagStatusType                 `xml:"GlobalFlagStatus,omitempty" json:"GlobalFlagStatus,omitempty" yaml:"GlobalFlagStatus,omitempty"`
	HasAttachments            *bool                           `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	GlobalHasAttachments      *bool                           `xml:"GlobalHasAttachments,omitempty" json:"GlobalHasAttachments,omitempty" yaml:"GlobalHasAttachments,omitempty"`
	MessageCount              *int                            `xml:"MessageCount,omitempty" json:"MessageCount,omitempty" yaml:"MessageCount,omitempty"`
	GlobalMessageCount        *int                            `xml:"GlobalMessageCount,omitempty" json:"GlobalMessageCount,omitempty" yaml:"GlobalMessageCount,omitempty"`
	UnreadCount               *int                            `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	GlobalUnreadCount         *int                            `xml:"GlobalUnreadCount,omitempty" json:"GlobalUnreadCount,omitempty" yaml:"GlobalUnreadCount,omitempty"`
	Size                      *int                            `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	GlobalSize                *int                            `xml:"GlobalSize,omitempty" json:"GlobalSize,omitempty" yaml:"GlobalSize,omitempty"`
	ItemClasses               *ArrayOfItemClassType           `xml:"ItemClasses,omitempty" json:"ItemClasses,omitempty" yaml:"ItemClasses,omitempty"`
	GlobalItemClasses         *ArrayOfItemClassType           `xml:"GlobalItemClasses,omitempty" json:"GlobalItemClasses,omitempty" yaml:"GlobalItemClasses,omitempty"`
	Importance                *ImportanceChoicesType          `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	GlobalImportance          *ImportanceChoicesType          `xml:"GlobalImportance,omitempty" json:"GlobalImportance,omitempty" yaml:"GlobalImportance,omitempty"`
	ItemIds                   *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	GlobalItemIds             *NonEmptyArrayOfBaseItemIdsType `xml:"GlobalItemIds,omitempty" json:"GlobalItemIds,omitempty" yaml:"GlobalItemIds,omitempty"`
	LastModifiedTime          *DateTime                       `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	InstanceKey               *[]byte                         `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	Preview                   *string                         `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	MailboxScope              *MailboxSearchLocationType      `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty" yaml:"MailboxScope,omitempty"`
	IconIndex                 *IconIndexType                  `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	GlobalIconIndex           *IconIndexType                  `xml:"GlobalIconIndex,omitempty" json:"GlobalIconIndex,omitempty" yaml:"GlobalIconIndex,omitempty"`
	DraftItemIds              *NonEmptyArrayOfBaseItemIdsType `xml:"DraftItemIds,omitempty" json:"DraftItemIds,omitempty" yaml:"DraftItemIds,omitempty"`
	HasIrm                    *bool                           `xml:"HasIrm,omitempty" json:"HasIrm,omitempty" yaml:"HasIrm,omitempty"`
	GlobalHasIrm              *bool                           `xml:"GlobalHasIrm,omitempty" json:"GlobalHasIrm,omitempty" yaml:"GlobalHasIrm,omitempty"`
	InferenceClassification   *InferenceClassificationType    `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	SortKey                   *int64                          `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	MentionedMe               *bool                           `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	GlobalMentionedMe         *bool                           `xml:"GlobalMentionedMe,omitempty" json:"GlobalMentionedMe,omitempty" yaml:"GlobalMentionedMe,omitempty"`
	SenderSMTPAddress         *SmtpAddressType                `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids              []*GuidType                     `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	From                      *SingleRecipientType            `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	AtAllMention              *bool                           `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	GlobalAtAllMention        *bool                           `xml:"GlobalAtAllMention,omitempty" json:"GlobalAtAllMention,omitempty" yaml:"GlobalAtAllMention,omitempty"`
}

// Response Message for a single id conversion in the ConvertId
// web method.  Note         that the AlternateId element will
// be missing in the case of an error.
type ConvertIdResponseMessageType struct {
	MessageText        *string              `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType    `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                 `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}       `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType    `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	AlternateId        *AlternateIdBaseType `xml:"AlternateId,omitempty" json:"AlternateId,omitempty" yaml:"AlternateId,omitempty"`
	TypeAttrXSI        string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ConvertIdResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ConvertIdResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response type for the ConvertId web method
type ConvertIdResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ConvertIdResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ConvertIdResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Converts the passed source ids into the destination format.
//
//	Change keys are not         returned.
type ConvertIdType struct {
	DestinationFormat IdFormatType                     `xml:"DestinationFormat,attr,omitempty" json:"DestinationFormat,attr,omitempty" yaml:"DestinationFormat,attr,omitempty"`
	SourceIds         *NonEmptyArrayOfAlternateIdsType `xml:"SourceIds" json:"SourceIds" yaml:"SourceIds"`
	TypeAttrXSI       string                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ConvertIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ConvertIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CopyFolderResponseType was auto-generated from WSDL.
type CopyFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CopyFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CopyFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CopyFolderType was auto-generated from WSDL.
type CopyFolderType struct {
	ToFolderId    *TargetFolderIdType               `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	FolderIds     *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CopyFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CopyFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CopyItemResponseType was auto-generated from WSDL.
type CopyItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CopyItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CopyItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CopyItemType was auto-generated from WSDL.
type CopyItemType struct {
	ToFolderId       *TargetFolderIdType             `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	ItemIds          *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	ReturnNewItemIds *bool                           `xml:"ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty" yaml:"ReturnNewItemIds,omitempty"`
	TypeAttrXSI      string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CopyItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CopyItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateAttachmentResponseType was auto-generated from WSDL.
type CreateAttachmentResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateAttachmentResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateAttachmentResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateAttachmentType was auto-generated from WSDL.
type CreateAttachmentType struct {
	ParentItemId  *ItemIdType                     `xml:"ParentItemId" json:"ParentItemId" yaml:"ParentItemId"`
	Attachments   *NonEmptyArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateFolderPathResponseType was auto-generated from WSDL.
type CreateFolderPathResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateFolderPathResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateFolderPathResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateFolderPathType was auto-generated from WSDL.
type CreateFolderPathType struct {
	ParentFolderId     *TargetFolderIdType         `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	RelativeFolderPath *NonEmptyArrayOfFoldersType `xml:"RelativeFolderPath,omitempty" json:"RelativeFolderPath,omitempty" yaml:"RelativeFolderPath,omitempty"`
	TypeAttrXSI        string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateFolderPathType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateFolderPathType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateFolderResponseType was auto-generated from WSDL.
type CreateFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateFolderType was auto-generated from WSDL.
type CreateFolderType struct {
	ParentFolderId *TargetFolderIdType         `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	Folders        *NonEmptyArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty" yaml:"Folders,omitempty"`
	TypeAttrXSI    string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateItemResponseType was auto-generated from WSDL.
type CreateItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateItemType was auto-generated from WSDL.
type CreateItemType struct {
	MessageDisposition     MessageDispositionType                  `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,attr,omitempty" yaml:"MessageDisposition,attr,omitempty"`
	SendMeetingInvitations CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingInvitations,attr,omitempty" json:"SendMeetingInvitations,attr,omitempty" yaml:"SendMeetingInvitations,attr,omitempty"`
	SavedItemFolderId      *TargetFolderIdType                     `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty" yaml:"SavedItemFolderId,omitempty"`
	Items                  *NonEmptyArrayOfAllItemsType            `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	TypeAttrXSI            string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateManagedFolderRequestType was auto-generated from WSDL.
type CreateManagedFolderRequestType struct {
	FolderNames   *NonEmptyArrayOfFolderNamesType `xml:"FolderNames,omitempty" json:"FolderNames,omitempty" yaml:"FolderNames,omitempty"`
	Mailbox       *EmailAddressType               `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateManagedFolderRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateManagedFolderRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateManagedFolderResponseType was auto-generated from WSDL.
type CreateManagedFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateManagedFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateManagedFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateMeetingInstanceRequestType was auto-generated from WSDL.
type CreateMeetingInstanceRequestType struct {
	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance" json:"MeetingInstance" yaml:"MeetingInstance"`
	TypeAttrXSI     string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateMeetingInstanceRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateMeetingInstanceRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateMeetingInstanceResponseMessageType was auto-generated
// from WSDL.
type CreateMeetingInstanceResponseMessageType struct {
	MessageText        *string              `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType    `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                 `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}       `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType    `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingInstance    *MeetingInstanceType `xml:"MeetingInstance" json:"MeetingInstance" yaml:"MeetingInstance"`
	TypeAttrXSI        string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateMeetingInstanceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateMeetingInstanceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateMeetingSpaceResponseMessageType was auto-generated from
// WSDL.
type CreateMeetingSpaceResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingSpace       *MeetingSpaceType `xml:"MeetingSpace" json:"MeetingSpace" yaml:"MeetingSpace"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateMeetingSpaceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateMeetingSpaceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateMeetingSpaceType was auto-generated from WSDL.
type CreateMeetingSpaceType struct {
	MeetingSpace  *MeetingSpaceType `xml:"MeetingSpace" json:"MeetingSpace" yaml:"MeetingSpace"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateMeetingSpaceType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateMeetingSpaceType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateOrUpdateFocusedOtherOverrideRequestType was auto-generated
// from WSDL.
type CreateOrUpdateFocusedOtherOverrideRequestType struct {
	SenderSmtpAddress string                      `xml:"SenderSmtpAddress" json:"SenderSmtpAddress" yaml:"SenderSmtpAddress"`
	SenderDisplayName *string                     `xml:"SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty" yaml:"SenderDisplayName,omitempty"`
	AlwaysClassifyAs  InferenceClassificationType `xml:"AlwaysClassifyAs" json:"AlwaysClassifyAs" yaml:"AlwaysClassifyAs"`
	TypeAttrXSI       string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateOrUpdateFocusedOtherOverrideRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateOrUpdateFocusedOtherOverrideRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateOrUpdateFocusedOtherOverrideResponseType was auto-generated
// from WSDL.
type CreateOrUpdateFocusedOtherOverrideResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType         `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	Override         *InferenceClassificationOverrideType `xml:"Override" json:"Override" yaml:"Override"`
	TypeAttrXSI      string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateOrUpdateFocusedOtherOverrideResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateOrUpdateFocusedOtherOverrideResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateRuleOperationType was auto-generated from WSDL.
type CreateRuleOperationType struct {
	Rule          *RuleType `xml:"Rule" json:"Rule" yaml:"Rule"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateRuleOperationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateRuleOperationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// CreateUserConfigurationResponseType was auto-generated from
// WSDL.
type CreateUserConfigurationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateUserConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateUserConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CreateUserConfigurationType was auto-generated from WSDL.
type CreateUserConfigurationType struct {
	UserConfiguration *UserConfigurationType `xml:"UserConfiguration" json:"UserConfiguration" yaml:"UserConfiguration"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreateUserConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreateUserConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// CustomSearchScopeType was auto-generated from WSDL.
type CustomSearchScopeType struct {
	MailboxGuid     *GuidType              `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty" yaml:"MailboxGuid,omitempty"`
	FolderScope     *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty" yaml:"FolderScope,omitempty"`
	IsDeepTraversal *bool                  `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty" yaml:"IsDeepTraversal,omitempty"`
}

// DailyRecurrencePatternType was auto-generated from WSDL.
type DailyRecurrencePatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DailyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DailyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DailyRegeneratingPatternType was auto-generated from WSDL.
type DailyRegeneratingPatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DailyRegeneratingPatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DailyRegeneratingPatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DeclineItemType was auto-generated from WSDL.
type DeclineItemType struct {
	ProposedStart *DateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd   *DateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeclineItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeclineItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DelegatePermissionsType was auto-generated from WSDL.
type DelegatePermissionsType struct {
	CalendarFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"CalendarFolderPermissionLevel,omitempty" json:"CalendarFolderPermissionLevel,omitempty" yaml:"CalendarFolderPermissionLevel,omitempty"`
	TasksFolderPermissionLevel    *DelegateFolderPermissionLevelType `xml:"TasksFolderPermissionLevel,omitempty" json:"TasksFolderPermissionLevel,omitempty" yaml:"TasksFolderPermissionLevel,omitempty"`
	InboxFolderPermissionLevel    *DelegateFolderPermissionLevelType `xml:"InboxFolderPermissionLevel,omitempty" json:"InboxFolderPermissionLevel,omitempty" yaml:"InboxFolderPermissionLevel,omitempty"`
	ContactsFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"ContactsFolderPermissionLevel,omitempty" json:"ContactsFolderPermissionLevel,omitempty" yaml:"ContactsFolderPermissionLevel,omitempty"`
	NotesFolderPermissionLevel    *DelegateFolderPermissionLevelType `xml:"NotesFolderPermissionLevel,omitempty" json:"NotesFolderPermissionLevel,omitempty" yaml:"NotesFolderPermissionLevel,omitempty"`
	JournalFolderPermissionLevel  *DelegateFolderPermissionLevelType `xml:"JournalFolderPermissionLevel,omitempty" json:"JournalFolderPermissionLevel,omitempty" yaml:"JournalFolderPermissionLevel,omitempty"`
}

// DelegateUserResponseMessageType was auto-generated from WSDL.
type DelegateUserResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	DelegateUser       *DelegateUserType `xml:"DelegateUser,omitempty" json:"DelegateUser,omitempty" yaml:"DelegateUser,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DelegateUserResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DelegateUserResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DelegateUserType was auto-generated from WSDL.
type DelegateUserType struct {
	UserId                         *UserIdType              `xml:"UserId" json:"UserId" yaml:"UserId"`
	DelegatePermissions            *DelegatePermissionsType `xml:"DelegatePermissions,omitempty" json:"DelegatePermissions,omitempty" yaml:"DelegatePermissions,omitempty"`
	ReceiveCopiesOfMeetingMessages *bool                    `xml:"ReceiveCopiesOfMeetingMessages,omitempty" json:"ReceiveCopiesOfMeetingMessages,omitempty" yaml:"ReceiveCopiesOfMeetingMessages,omitempty"`
	ViewPrivateItems               *bool                    `xml:"ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty" yaml:"ViewPrivateItems,omitempty"`
}

// DeleteAttachmentResponseMessageType was auto-generated from
// WSDL.
type DeleteAttachmentResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RootItemId         *RootItemIdType   `xml:"RootItemId,omitempty" json:"RootItemId,omitempty" yaml:"RootItemId,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteAttachmentResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteAttachmentResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteAttachmentResponseType was auto-generated from WSDL.
type DeleteAttachmentResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteAttachmentResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteAttachmentResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteAttachmentType was auto-generated from WSDL.
type DeleteAttachmentType struct {
	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"AttachmentIds,omitempty" json:"AttachmentIds,omitempty" yaml:"AttachmentIds,omitempty"`
	TypeAttrXSI   string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteFocusedOtherOverrideRequestType was auto-generated from
// WSDL.
type DeleteFocusedOtherOverrideRequestType struct {
	Id            GuidType `xml:"Id" json:"Id" yaml:"Id"`
	TypeAttrXSI   string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFocusedOtherOverrideRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFocusedOtherOverrideRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteFocusedOtherOverrideResponseType was auto-generated from
// WSDL.
type DeleteFocusedOtherOverrideResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType         `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	Override         *InferenceClassificationOverrideType `xml:"Override" json:"Override" yaml:"Override"`
	TypeAttrXSI      string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFocusedOtherOverrideResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFocusedOtherOverrideResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteFolderFieldType was auto-generated from WSDL.
type DeleteFolderFieldType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFolderFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFolderFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DeleteFolderResponseType was auto-generated from WSDL.
type DeleteFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteFolderType was auto-generated from WSDL.
type DeleteFolderType struct {
	DeleteType    DisposalType                      `xml:"DeleteType,attr,omitempty" json:"DeleteType,attr,omitempty" yaml:"DeleteType,attr,omitempty"`
	FolderIds     *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteFromFolderStateDefinitionType was auto-generated from
// WSDL.
type DeleteFromFolderStateDefinitionType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteFromFolderStateDefinitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteFromFolderStateDefinitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DeleteItemFieldType was auto-generated from WSDL.
type DeleteItemFieldType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteItemFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteItemFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DeleteItemResponseMessageType was auto-generated from WSDL.
type DeleteItemResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteItemResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteItemResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteItemResponseType was auto-generated from WSDL.
type DeleteItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteItemType was auto-generated from WSDL.
type DeleteItemType struct {
	DeleteType               DisposalType                            `xml:"DeleteType,attr,omitempty" json:"DeleteType,attr,omitempty" yaml:"DeleteType,attr,omitempty"`
	SendMeetingCancellations CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingCancellations,attr,omitempty" json:"SendMeetingCancellations,attr,omitempty" yaml:"SendMeetingCancellations,attr,omitempty"`
	AffectedTaskOccurrences  AffectedTaskOccurrencesType             `xml:"AffectedTaskOccurrences,attr,omitempty" json:"AffectedTaskOccurrences,attr,omitempty" yaml:"AffectedTaskOccurrences,attr,omitempty"`
	SuppressReadReceipts     bool                                    `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,attr,omitempty" yaml:"SuppressReadReceipts,attr,omitempty"`
	ItemIds                  *NonEmptyArrayOfBaseItemIdsType         `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	TypeAttrXSI              string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteMeetingInstanceRequestType was auto-generated from WSDL.
type DeleteMeetingInstanceRequestType struct {
	ItemId        *ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteMeetingInstanceRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteMeetingInstanceRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteMeetingInstanceResponseMessageType was auto-generated
// from WSDL.
type DeleteMeetingInstanceResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteMeetingInstanceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteMeetingInstanceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteMeetingSpaceResponseMessageType was auto-generated from
// WSDL.
type DeleteMeetingSpaceResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteMeetingSpaceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteMeetingSpaceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteMeetingSpaceType was auto-generated from WSDL.
type DeleteMeetingSpaceType struct {
	ItemId        *ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteMeetingSpaceType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteMeetingSpaceType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteRuleOperationType was auto-generated from WSDL.
type DeleteRuleOperationType struct {
	RuleId        string `xml:"RuleId" json:"RuleId" yaml:"RuleId"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteRuleOperationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteRuleOperationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DeleteSearchSuggestion was auto-generated from WSDL.
type DeleteSearchSuggestion struct {
	SearchSessionId GuidType                `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	Query           string                  `xml:"Query" json:"Query" yaml:"Query"`
	SuggestionTypes SuggestionKindType      `xml:"SuggestionTypes" json:"SuggestionTypes" yaml:"SuggestionTypes"`
	SearchScope     *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty" yaml:"SearchScope,omitempty"`
	Scenario        *string                 `xml:"Scenario,omitempty" json:"Scenario,omitempty" yaml:"Scenario,omitempty"`
	TypeAttrXSI     string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteSearchSuggestion) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteSearchSuggestion"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteSearchSuggestionResponseMessageType was auto-generated
// from WSDL.
type DeleteSearchSuggestionResponseMessageType struct {
	MessageText        *string                             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Response           *DeleteSearchSuggestionResponseType `xml:"Response,omitempty" json:"Response,omitempty" yaml:"Response,omitempty"`
	TypeAttrXSI        string                              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteSearchSuggestionResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteSearchSuggestionResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteSearchSuggestionResponseType was auto-generated from WSDL.
type DeleteSearchSuggestionResponseType struct {
	Success         bool                   `xml:"Success" json:"Success" yaml:"Success"`
	StatusMessage   *string                `xml:"StatusMessage,omitempty" json:"StatusMessage,omitempty" yaml:"StatusMessage,omitempty"`
	DiagnosticsData *SearchDiagnosticsType `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty" yaml:"DiagnosticsData,omitempty"`
}

// DeleteUserConfigurationResponseType was auto-generated from
// WSDL.
type DeleteUserConfigurationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteUserConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteUserConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeleteUserConfigurationType was auto-generated from WSDL.
type DeleteUserConfigurationType struct {
	UserConfigurationName *UserConfigurationNameType `xml:"UserConfigurationName" json:"UserConfigurationName" yaml:"UserConfigurationName"`
	TypeAttrXSI           string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeleteUserConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeleteUserConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DeletedOccurrenceInfoType was auto-generated from WSDL.
type DeletedOccurrenceInfoType struct {
	Start *DateTime `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
}

// DeletedOccurrenceStateDefinitionType was auto-generated from
// WSDL.
type DeletedOccurrenceStateDefinitionType struct {
	OccurrenceDate      DateTime `xml:"OccurrenceDate" json:"OccurrenceDate" yaml:"OccurrenceDate"`
	IsOccurrencePresent *bool    `xml:"IsOccurrencePresent,omitempty" json:"IsOccurrencePresent,omitempty" yaml:"IsOccurrencePresent,omitempty"`
	TypeAttrXSI         string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeletedOccurrenceStateDefinitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeletedOccurrenceStateDefinitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DelveDocument was auto-generated from WSDL.
type DelveDocument struct {
	InsightSource      *string  `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks    *int64   `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Rank               *float64 `xml:"Rank,omitempty" json:"Rank,omitempty" yaml:"Rank,omitempty"`
	Author             *string  `xml:"Author,omitempty" json:"Author,omitempty" yaml:"Author,omitempty"`
	Created            *string  `xml:"Created,omitempty" json:"Created,omitempty" yaml:"Created,omitempty"`
	LastModifiedTime   *string  `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	DefaultEncodingURL *string  `xml:"DefaultEncodingURL,omitempty" json:"DefaultEncodingURL,omitempty" yaml:"DefaultEncodingURL,omitempty"`
	FileType           *string  `xml:"FileType,omitempty" json:"FileType,omitempty" yaml:"FileType,omitempty"`
	Title              *string  `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	DocumentId         *string  `xml:"DocumentId,omitempty" json:"DocumentId,omitempty" yaml:"DocumentId,omitempty"`
	PreviewURL         *string  `xml:"PreviewURL,omitempty" json:"PreviewURL,omitempty" yaml:"PreviewURL,omitempty"`
	LastEditor         *string  `xml:"LastEditor,omitempty" json:"LastEditor,omitempty" yaml:"LastEditor,omitempty"`
	TypeAttrXSI        string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DelveDocument) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DelveDocument"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DelveItemType was auto-generated from WSDL.
type DelveItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	GraphNodeLogicalId           string                                    `xml:"GraphNodeLogicalId" json:"GraphNodeLogicalId" yaml:"GraphNodeLogicalId"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DelveItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DelveItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DelveSearchScopeType was auto-generated from WSDL.
type DelveSearchScopeType struct {
	DelveView DelveViewType `xml:"DelveView" json:"DelveView" yaml:"DelveView"`
}

// DirectoryEntryType was auto-generated from WSDL.
type DirectoryEntryType struct {
	Id *EmailAddressType `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
}

// DisableAppResponseType was auto-generated from WSDL.
type DisableAppResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DisableAppResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DisableAppResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DisableAppType was auto-generated from WSDL.
type DisableAppType struct {
	ID            string            `xml:"ID" json:"ID" yaml:"ID"`
	DisableReason DisableReasonType `xml:"DisableReason" json:"DisableReason" yaml:"DisableReason"`
	IsMetaOSApp   *bool             `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty" yaml:"IsMetaOSApp,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DisableAppType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DisableAppType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DisconnectPhoneCallResponseMessageType was auto-generated from
// WSDL.
type DisconnectPhoneCallResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DisconnectPhoneCallResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DisconnectPhoneCallResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// DisconnectPhoneCallType was auto-generated from WSDL.
type DisconnectPhoneCallType struct {
	PhoneCallId   *PhoneCallIdType `xml:"PhoneCallId" json:"PhoneCallId" yaml:"PhoneCallId"`
	TypeAttrXSI   string           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DisconnectPhoneCallType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DisconnectPhoneCallType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Discovery search configuration.
type DiscoverySearchConfigurationType struct {
	SearchId              string                          `xml:"SearchId" json:"SearchId" yaml:"SearchId"`
	SearchQuery           string                          `xml:"SearchQuery" json:"SearchQuery" yaml:"SearchQuery"`
	SearchableMailboxes   *ArrayOfSearchableMailboxesType `xml:"SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty" yaml:"SearchableMailboxes,omitempty"`
	InPlaceHoldIdentity   *string                         `xml:"InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty" yaml:"InPlaceHoldIdentity,omitempty"`
	ManagedByOrganization *string                         `xml:"ManagedByOrganization,omitempty" json:"ManagedByOrganization,omitempty" yaml:"ManagedByOrganization,omitempty"`
	Language              *string                         `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
}

// Identifier for a distinguished folder
type DistinguishedFolderIdType struct {
	Id            DistinguishedFolderIdNameType `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey     string                        `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	Mailbox       *EmailAddressType             `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	TypeAttrXSI   string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DistinguishedFolderIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DistinguishedFolderIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Allows consumers to access standard groupings for FindItem queries.
// This is in                 contrast to the arbitrary (custom)
// groupings available via the t:GroupByType
type DistinguishedGroupByType struct {
	Order           SortDirectionType    `xml:"Order,attr,omitempty" json:"Order,attr,omitempty" yaml:"Order,attr,omitempty"`
	StandardGroupBy *StandardGroupByType `xml:"StandardGroupBy,omitempty" json:"StandardGroupBy,omitempty" yaml:"StandardGroupBy,omitempty"`
	TypeAttrXSI     string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DistinguishedGroupByType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DistinguishedGroupByType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DistributionListType was auto-generated from WSDL.
type DistributionListType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	DisplayName                  *string                                   `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	FileAs                       *string                                   `xml:"FileAs,omitempty" json:"FileAs,omitempty" yaml:"FileAs,omitempty"`
	ContactSource                *ContactSourceType                        `xml:"ContactSource,omitempty" json:"ContactSource,omitempty" yaml:"ContactSource,omitempty"`
	Members                      *MembersListType                          `xml:"Members,omitempty" json:"Members,omitempty" yaml:"Members,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DistributionListType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DistributionListType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// DocumentFileItemType was auto-generated from WSDL.
type DocumentFileItemType struct {
	MimeContent                         *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                              *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId                      *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                           *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                             *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                         *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                                *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                         *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived                    *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                                *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                          *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                          *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                           *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                         *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                             *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                            *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                            *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                        *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders              *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                        *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated                     *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects                     *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                       *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                       *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime                    *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart          *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                           *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                           *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                          *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments                      *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty                    []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                             *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights                     *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName                    *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime                    *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                        *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString        *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString        *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId                      *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                          *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                                *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                        *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                         *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody                      *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult              *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                           *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                          *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                       *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                             *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData         *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons              *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                           *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                         *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages                    *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                            *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                           *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                           *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                             *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                            *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                            *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                         *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview                     *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                          *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags                     *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview              *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                               *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                        *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds         *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                        *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                           *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification             *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	FileName                            *string                                   `xml:"FileName,omitempty" json:"FileName,omitempty" yaml:"FileName,omitempty"`
	FileExtension                       *string                                   `xml:"FileExtension,omitempty" json:"FileExtension,omitempty" yaml:"FileExtension,omitempty"`
	FileSize                            *int64                                    `xml:"FileSize,omitempty" json:"FileSize,omitempty" yaml:"FileSize,omitempty"`
	FileCreatedTime                     *string                                   `xml:"FileCreatedTime,omitempty" json:"FileCreatedTime,omitempty" yaml:"FileCreatedTime,omitempty"`
	FileModifiedTime                    *string                                   `xml:"FileModifiedTime,omitempty" json:"FileModifiedTime,omitempty" yaml:"FileModifiedTime,omitempty"`
	StorageProviderContext              *string                                   `xml:"StorageProviderContext,omitempty" json:"StorageProviderContext,omitempty" yaml:"StorageProviderContext,omitempty"`
	FileID                              *string                                   `xml:"FileID,omitempty" json:"FileID,omitempty" yaml:"FileID,omitempty"`
	ItemReferenceId                     *string                                   `xml:"ItemReferenceId,omitempty" json:"ItemReferenceId,omitempty" yaml:"ItemReferenceId,omitempty"`
	ReferenceId                         *string                                   `xml:"ReferenceId,omitempty" json:"ReferenceId,omitempty" yaml:"ReferenceId,omitempty"`
	Sender                              *string                                   `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ItemReceivedTime                    *string                                   `xml:"ItemReceivedTime,omitempty" json:"ItemReceivedTime,omitempty" yaml:"ItemReceivedTime,omitempty"`
	ItemPath                            *string                                   `xml:"ItemPath,omitempty" json:"ItemPath,omitempty" yaml:"ItemPath,omitempty"`
	ItemSentTime                        *string                                   `xml:"ItemSentTime,omitempty" json:"ItemSentTime,omitempty" yaml:"ItemSentTime,omitempty"`
	FileContexts                        *ArrayOfStringsType                       `xml:"FileContexts,omitempty" json:"FileContexts,omitempty" yaml:"FileContexts,omitempty"`
	VisualizationContainerUrl           *string                                   `xml:"VisualizationContainerUrl,omitempty" json:"VisualizationContainerUrl,omitempty" yaml:"VisualizationContainerUrl,omitempty"`
	VisualizationContainerTitle         *string                                   `xml:"VisualizationContainerTitle,omitempty" json:"VisualizationContainerTitle,omitempty" yaml:"VisualizationContainerTitle,omitempty"`
	VisualizationAccessUrl              *string                                   `xml:"VisualizationAccessUrl,omitempty" json:"VisualizationAccessUrl,omitempty" yaml:"VisualizationAccessUrl,omitempty"`
	ReferenceAttachmentProviderEndpoint *string                                   `xml:"ReferenceAttachmentProviderEndpoint,omitempty" json:"ReferenceAttachmentProviderEndpoint,omitempty" yaml:"ReferenceAttachmentProviderEndpoint,omitempty"`
	ReferenceAttachmentProviderType     *string                                   `xml:"ReferenceAttachmentProviderType,omitempty" json:"ReferenceAttachmentProviderType,omitempty" yaml:"ReferenceAttachmentProviderType,omitempty"`
	ItemConversationId                  *string                                   `xml:"ItemConversationId,omitempty" json:"ItemConversationId,omitempty" yaml:"ItemConversationId,omitempty"`
	SharepointItemListId                *GuidType                                 `xml:"SharepointItemListId,omitempty" json:"SharepointItemListId,omitempty" yaml:"SharepointItemListId,omitempty"`
	SharepointItemListItemId            *string                                   `xml:"SharepointItemListItemId,omitempty" json:"SharepointItemListItemId,omitempty" yaml:"SharepointItemListItemId,omitempty"`
	SharepointItemSiteId                *GuidType                                 `xml:"SharepointItemSiteId,omitempty" json:"SharepointItemSiteId,omitempty" yaml:"SharepointItemSiteId,omitempty"`
	SharepointItemSitePath              *string                                   `xml:"SharepointItemSitePath,omitempty" json:"SharepointItemSitePath,omitempty" yaml:"SharepointItemSitePath,omitempty"`
	SharepointItemWebId                 *GuidType                                 `xml:"SharepointItemWebId,omitempty" json:"SharepointItemWebId,omitempty" yaml:"SharepointItemWebId,omitempty"`
	AttachmentId                        *string                                   `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	Author                              *ArrayOfStringsType                       `xml:"Author,omitempty" json:"Author,omitempty" yaml:"Author,omitempty"`
	Title                               *string                                   `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	LastModifiedBy                      *string                                   `xml:"LastModifiedBy,omitempty" json:"LastModifiedBy,omitempty" yaml:"LastModifiedBy,omitempty"`
	TypeAttrXSI                         string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                       string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DocumentFileItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DocumentFileItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Duration was auto-generated from WSDL.
type Duration struct {
	StartTime DateTime `xml:"StartTime" json:"StartTime" yaml:"StartTime"`
	EndTime   DateTime `xml:"EndTime" json:"EndTime" yaml:"EndTime"`
}

// DynamicRefinerQueryType was auto-generated from WSDL.
type DynamicRefinerQueryType struct {
	RefinerQuery string `xml:"RefinerQuery" json:"RefinerQuery" yaml:"RefinerQuery"`
	TDRefinerId  int    `xml:"TDRefinerId" json:"TDRefinerId" yaml:"TDRefinerId"`
}

// EducationInsightValue was auto-generated from WSDL.
type EducationInsightValue struct {
	InsightSource   *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Institute       *string `xml:"Institute,omitempty" json:"Institute,omitempty" yaml:"Institute,omitempty"`
	Degree          *string `xml:"Degree,omitempty" json:"Degree,omitempty" yaml:"Degree,omitempty"`
	StartUtcTicks   *int64  `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty" yaml:"StartUtcTicks,omitempty"`
	EndUtcTicks     *int64  `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty" yaml:"EndUtcTicks,omitempty"`
	TypeAttrXSI     string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EducationInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EducationInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// EffectiveRightsType was auto-generated from WSDL.
type EffectiveRightsType struct {
	CreateAssociated *bool `xml:"CreateAssociated,omitempty" json:"CreateAssociated,omitempty" yaml:"CreateAssociated,omitempty"`
	CreateContents   *bool `xml:"CreateContents,omitempty" json:"CreateContents,omitempty" yaml:"CreateContents,omitempty"`
	CreateHierarchy  *bool `xml:"CreateHierarchy,omitempty" json:"CreateHierarchy,omitempty" yaml:"CreateHierarchy,omitempty"`
	Delete           *bool `xml:"Delete,omitempty" json:"Delete,omitempty" yaml:"Delete,omitempty"`
	Modify           *bool `xml:"Modify,omitempty" json:"Modify,omitempty" yaml:"Modify,omitempty"`
	Read             *bool `xml:"Read,omitempty" json:"Read,omitempty" yaml:"Read,omitempty"`
	ViewPrivateItems *bool `xml:"ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty" yaml:"ViewPrivateItems,omitempty"`
}

// EmailAddress was auto-generated from WSDL.
type EmailAddress struct {
	Name        *string `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Address     string  `xml:"Address" json:"Address" yaml:"Address"`
	RoutingType *string `xml:"RoutingType,omitempty" json:"RoutingType,omitempty" yaml:"RoutingType,omitempty"`
}

// EmailAddressAttributedValueType was auto-generated from WSDL.
type EmailAddressAttributedValueType struct {
	Value        *EmailAddressType             `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// EmailAddressDictionaryEntryType was auto-generated from WSDL.
type EmailAddressDictionaryEntryType struct {
	Content     *string             `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Key         EmailAddressKeyType `xml:"Key,attr,omitempty" json:"Key,attr,omitempty" yaml:"Key,attr,omitempty"`
	Name        string              `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
	RoutingType string              `xml:"RoutingType,attr,omitempty" json:"RoutingType,attr,omitempty" yaml:"RoutingType,attr,omitempty"`
	MailboxType MailboxTypeType     `xml:"MailboxType,attr,omitempty" json:"MailboxType,attr,omitempty" yaml:"MailboxType,attr,omitempty"`
}

// EmailAddressDictionaryType was auto-generated from WSDL.
type EmailAddressDictionaryType struct {
	Entry []*EmailAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty" yaml:"Entry,omitempty"`
}

// EmailAddressEntityType was auto-generated from WSDL.
type EmailAddressEntityType struct {
	Position      []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	EmailAddress  *string              `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	TypeAttrXSI   string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmailAddressEntityType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmailAddressEntityType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Extends EmailAddress by adding the external object id
type EmailAddressExtendedType struct {
	Name                *string             `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	EmailAddress        *NonEmptyStringType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	RoutingType         *NonEmptyStringType `xml:"RoutingType,omitempty" json:"RoutingType,omitempty" yaml:"RoutingType,omitempty"`
	MailboxType         *MailboxTypeType    `xml:"MailboxType,omitempty" json:"MailboxType,omitempty" yaml:"MailboxType,omitempty"`
	ItemId              *ItemIdType         `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	OriginalDisplayName *string             `xml:"OriginalDisplayName,omitempty" json:"OriginalDisplayName,omitempty" yaml:"OriginalDisplayName,omitempty"`
	ExternalObjectId    *string             `xml:"ExternalObjectId,omitempty" json:"ExternalObjectId,omitempty" yaml:"ExternalObjectId,omitempty"`
	PrimaryEmailAddress *NonEmptyStringType `xml:"PrimaryEmailAddress,omitempty" json:"PrimaryEmailAddress,omitempty" yaml:"PrimaryEmailAddress,omitempty"`
	TypeAttrXSI         string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmailAddressExtendedType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmailAddressExtendedType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Identifier for a fully resolved email address
type EmailAddressType struct {
	Name                *string             `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	EmailAddress        *NonEmptyStringType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	RoutingType         *NonEmptyStringType `xml:"RoutingType,omitempty" json:"RoutingType,omitempty" yaml:"RoutingType,omitempty"`
	MailboxType         *MailboxTypeType    `xml:"MailboxType,omitempty" json:"MailboxType,omitempty" yaml:"MailboxType,omitempty"`
	ItemId              *ItemIdType         `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	OriginalDisplayName *string             `xml:"OriginalDisplayName,omitempty" json:"OriginalDisplayName,omitempty" yaml:"OriginalDisplayName,omitempty"`
	TypeAttrXSI         string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmailAddressType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmailAddressType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// EmailInsightValue was auto-generated from WSDL.
type EmailInsightValue struct {
	InsightSource         *string              `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks       *int64               `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Id                    *string              `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	ThreadId              *string              `xml:"ThreadId,omitempty" json:"ThreadId,omitempty" yaml:"ThreadId,omitempty"`
	Subject               *string              `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	LastEmailDateUtcTicks *int64               `xml:"LastEmailDateUtcTicks,omitempty" json:"LastEmailDateUtcTicks,omitempty" yaml:"LastEmailDateUtcTicks,omitempty"`
	Body                  *string              `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	LastEmailSender       *ProfileInsightValue `xml:"LastEmailSender,omitempty" json:"LastEmailSender,omitempty" yaml:"LastEmailSender,omitempty"`
	EmailsCount           *int                 `xml:"EmailsCount,omitempty" json:"EmailsCount,omitempty" yaml:"EmailsCount,omitempty"`
	TypeAttrXSI           string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmailInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmailInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// EmailUserType was auto-generated from WSDL.
type EmailUserType struct {
	Name   *string `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	UserId *string `xml:"UserId,omitempty" json:"UserId,omitempty" yaml:"UserId,omitempty"`
}

// EmptyFolderResponseType was auto-generated from WSDL.
type EmptyFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmptyFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmptyFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// EmptyFolderType was auto-generated from WSDL.
type EmptyFolderType struct {
	DeleteType       DisposalType                      `xml:"DeleteType,attr,omitempty" json:"DeleteType,attr,omitempty" yaml:"DeleteType,attr,omitempty"`
	DeleteSubFolders bool                              `xml:"DeleteSubFolders,attr,omitempty" json:"DeleteSubFolders,attr,omitempty" yaml:"DeleteSubFolders,attr,omitempty"`
	FolderIds        *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI      string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EmptyFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EmptyFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// EncryptedDataContainerType was auto-generated from WSDL.
type EncryptedDataContainerType []interface{}

// EncryptedSharedFolderDataType was auto-generated from WSDL.
type EncryptedSharedFolderDataType struct {
	Token *EncryptedDataContainerType `xml:"Token,omitempty" json:"Token,omitempty" yaml:"Token,omitempty"`
	Data  *EncryptedDataContainerType `xml:"Data,omitempty" json:"Data,omitempty" yaml:"Data,omitempty"`
}

// EndDateRecurrenceRangeType was auto-generated from WSDL.
type EndDateRecurrenceRangeType struct {
	StartDate     *Date  `xml:"StartDate,omitempty" json:"StartDate,omitempty" yaml:"StartDate,omitempty"`
	EndDate       *Date  `xml:"EndDate,omitempty" json:"EndDate,omitempty" yaml:"EndDate,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EndDateRecurrenceRangeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EndDateRecurrenceRangeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// EndInstantSearchSessionRequest was auto-generated from WSDL.
type EndInstantSearchSessionRequest struct {
	SessionId     string `xml:"SessionId" json:"SessionId" yaml:"SessionId"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EndInstantSearchSessionRequest) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EndInstantSearchSessionRequest"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// EndSearchSession was auto-generated from WSDL.
type EndSearchSession struct {
	SearchSessionId GuidType `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	TypeAttrXSI     string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EndSearchSession) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EndSearchSession"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// EndSearchSessionResponseMessage was auto-generated from WSDL.
type EndSearchSessionResponseMessage struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EndSearchSessionResponseMessage) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EndSearchSessionResponseMessage"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// EnhancedLocationType was auto-generated from WSDL.
type EnhancedLocationType struct {
	DisplayName   *string                   `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	Annotation    *string                   `xml:"Annotation,omitempty" json:"Annotation,omitempty" yaml:"Annotation,omitempty"`
	PostalAddress *PersonaPostalAddressType `xml:"PostalAddress,omitempty" json:"PostalAddress,omitempty" yaml:"PostalAddress,omitempty"`
}

// EntityExtractionResultType was auto-generated from WSDL.
type EntityExtractionResultType struct {
	Addresses          *ArrayOfAddressEntitiesType        `xml:"Addresses,omitempty" json:"Addresses,omitempty" yaml:"Addresses,omitempty"`
	MeetingSuggestions *ArrayOfMeetingSuggestionsType     `xml:"MeetingSuggestions,omitempty" json:"MeetingSuggestions,omitempty" yaml:"MeetingSuggestions,omitempty"`
	TaskSuggestions    *ArrayOfTaskSuggestionsType        `xml:"TaskSuggestions,omitempty" json:"TaskSuggestions,omitempty" yaml:"TaskSuggestions,omitempty"`
	EmailAddresses     *ArrayOfEmailAddressEntitiesType   `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty" yaml:"EmailAddresses,omitempty"`
	Contacts           *ArrayOfContactsType               `xml:"Contacts,omitempty" json:"Contacts,omitempty" yaml:"Contacts,omitempty"`
	Urls               *ArrayOfUrlEntitiesType            `xml:"Urls,omitempty" json:"Urls,omitempty" yaml:"Urls,omitempty"`
	PhoneNumbers       *ArrayOfPhoneEntitiesType          `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty" yaml:"PhoneNumbers,omitempty"`
	ParcelDeliveries   *ArrayOfParcelDeliveryEntitiesType `xml:"ParcelDeliveries,omitempty" json:"ParcelDeliveries,omitempty" yaml:"ParcelDeliveries,omitempty"`
	FlightReservations *ArrayOfFlightReservationsType     `xml:"FlightReservations,omitempty" json:"FlightReservations,omitempty" yaml:"FlightReservations,omitempty"`
	SenderAddIns       *ArrayOfSenderAddInsType           `xml:"SenderAddIns,omitempty" json:"SenderAddIns,omitempty" yaml:"SenderAddIns,omitempty"`
}

// EntityFeedbackEntryType was auto-generated from WSDL.
type EntityFeedbackEntryType struct {
	ClientEventTimeUtc   DateTime                           `xml:"ClientEventTimeUtc" json:"ClientEventTimeUtc" yaml:"ClientEventTimeUtc"`
	ClientEventTimeLocal DateTime                           `xml:"ClientEventTimeLocal" json:"ClientEventTimeLocal" yaml:"ClientEventTimeLocal"`
	ClientSessionId      GuidType                           `xml:"ClientSessionId" json:"ClientSessionId" yaml:"ClientSessionId"`
	ClientVersion        string                             `xml:"ClientVersion" json:"ClientVersion" yaml:"ClientVersion"`
	ClientId             ClientIdType                       `xml:"ClientId" json:"ClientId" yaml:"ClientId"`
	EntrySequenceNumber  int                                `xml:"EntrySequenceNumber" json:"EntrySequenceNumber" yaml:"EntrySequenceNumber"`
	TransactionId        *string                            `xml:"TransactionId,omitempty" json:"TransactionId,omitempty" yaml:"TransactionId,omitempty"`
	EventType            string                             `xml:"EventType" json:"EventType" yaml:"EventType"`
	TargetEntityList     *string                            `xml:"TargetEntityList,omitempty" json:"TargetEntityList,omitempty" yaml:"TargetEntityList,omitempty"`
	EntityAddSource      *EntityFeedbackEntityAddSourceType `xml:"EntityAddSource,omitempty" json:"EntityAddSource,omitempty" yaml:"EntityAddSource,omitempty"`
	JsonPropertyBag      *string                            `xml:"JsonPropertyBag,omitempty" json:"JsonPropertyBag,omitempty" yaml:"JsonPropertyBag,omitempty"`
}

// EntityType was auto-generated from WSDL.
type EntityType struct {
	Position []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
}

// ExchangeImpersonationType was auto-generated from WSDL.
type ExchangeImpersonationType struct {
	ConnectingSID *ConnectingSIDType `xml:"ConnectingSID,omitempty" json:"ConnectingSID,omitempty" yaml:"ConnectingSID,omitempty"`
}

// ExcludesType was auto-generated from WSDL.
type ExcludesType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Bitmask       *ExcludesValueType     `xml:"Bitmask,omitempty" json:"Bitmask,omitempty" yaml:"Bitmask,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExcludesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExcludesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ExcludesValueType was auto-generated from WSDL.
type ExcludesValueType struct {
	Value ExcludesAttributeType `xml:"Value,attr,omitempty" json:"Value,attr,omitempty" yaml:"Value,attr,omitempty"`
}

// ExecuteSearch was auto-generated from WSDL.
type ExecuteSearch struct {
	ApplicationId                  SearchApplicationIdType           `xml:"ApplicationId" json:"ApplicationId" yaml:"ApplicationId"`
	Scenario                       string                            `xml:"Scenario" json:"Scenario" yaml:"Scenario"`
	SearchSessionId                GuidType                          `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	SearchScope                    *ArrayOfSearchScopeType           `xml:"SearchScope" json:"SearchScope" yaml:"SearchScope"`
	Query                          string                            `xml:"Query" json:"Query" yaml:"Query"`
	AnalyzedQuery                  *AnalyzedQuery                    `xml:"AnalyzedQuery,omitempty" json:"AnalyzedQuery,omitempty" yaml:"AnalyzedQuery,omitempty"`
	ResultRowCount                 *int64                            `xml:"ResultRowCount,omitempty" json:"ResultRowCount,omitempty" yaml:"ResultRowCount,omitempty"`
	ResultRowOffset                *int64                            `xml:"ResultRowOffset,omitempty" json:"ResultRowOffset,omitempty" yaml:"ResultRowOffset,omitempty"`
	MaxResultsCountHint            *int64                            `xml:"MaxResultsCountHint,omitempty" json:"MaxResultsCountHint,omitempty" yaml:"MaxResultsCountHint,omitempty"`
	MaxPreviewLength               *int64                            `xml:"MaxPreviewLength,omitempty" json:"MaxPreviewLength,omitempty" yaml:"MaxPreviewLength,omitempty"`
	SearchRefiners                 []*DynamicRefinerQueryType        `xml:"SearchRefiners>SearchRefiner,omitempty" json:"SearchRefiners>SearchRefiner,omitempty" yaml:"SearchRefiners>SearchRefiner,omitempty"`
	ExtendedKeywords               []*ExtendedKeywordDefinitionType  `xml:"ExtendedKeywords>ExtendedKeywordDefinition,omitempty" json:"ExtendedKeywords>ExtendedKeywordDefinition,omitempty" yaml:"ExtendedKeywords>ExtendedKeywordDefinition,omitempty"`
	RetrieveRefiners               *bool                             `xml:"RetrieveRefiners,omitempty" json:"RetrieveRefiners,omitempty" yaml:"RetrieveRefiners,omitempty"`
	MaxRefinersCountPerRefinerType *int64                            `xml:"MaxRefinersCountPerRefinerType,omitempty" json:"MaxRefinersCountPerRefinerType,omitempty" yaml:"MaxRefinersCountPerRefinerType,omitempty"`
	IdFormat                       *IdFormatType                     `xml:"IdFormat,omitempty" json:"IdFormat,omitempty" yaml:"IdFormat,omitempty"`
	ItemTypes                      ItemTypesFilterType               `xml:"ItemTypes" json:"ItemTypes" yaml:"ItemTypes"`
	PropertySetName                *SearchResultsPropertySetNameType `xml:"PropertySetName,omitempty" json:"PropertySetName,omitempty" yaml:"PropertySetName,omitempty"`
	SearchRestrictions             *RestrictionType                  `xml:"SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty" yaml:"SearchRestrictions,omitempty"`
	IncludeDeleted                 *bool                             `xml:"IncludeDeleted,omitempty" json:"IncludeDeleted,omitempty" yaml:"IncludeDeleted,omitempty"`
	SortOrder                      *ExecuteSearchSortOrderType       `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	KeywordMatchOption             *MatchOptionsType                 `xml:"KeywordMatchOption,omitempty" json:"KeywordMatchOption,omitempty" yaml:"KeywordMatchOption,omitempty"`
	ReturnAdditionalIds            *bool                             `xml:"ReturnAdditionalIds,omitempty" json:"ReturnAdditionalIds,omitempty" yaml:"ReturnAdditionalIds,omitempty"`
	RequestedProperties            *ArrayOfStringsType               `xml:"RequestedProperties,omitempty" json:"RequestedProperties,omitempty" yaml:"RequestedProperties,omitempty"`
	TypeAttrXSI                    string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                  string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExecuteSearch) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExecuteSearch"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExecuteSearchQueryIdType was auto-generated from WSDL.
type ExecuteSearchQueryIdType struct {
	Id GuidType `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
}

// ExecuteSearchResponseMessage was auto-generated from WSDL.
type ExecuteSearchResponseMessage struct {
	MessageText        *string            `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType  `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int               `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}     `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType  `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SearchResults      *SearchResultsType `xml:"SearchResults,omitempty" json:"SearchResults,omitempty" yaml:"SearchResults,omitempty"`
	TypeAttrXSI        string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExecuteSearchResponseMessage) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExecuteSearchResponseMessage"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExistsType was auto-generated from WSDL.
type ExistsType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExistsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExistsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ExpandDLResponseMessageType was auto-generated from WSDL.
type ExpandDLResponseMessageType struct {
	MessageText        *string                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	DLExpansion        *ArrayOfDLExpansionType `xml:"DLExpansion,omitempty" json:"DLExpansion,omitempty" yaml:"DLExpansion,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExpandDLResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExpandDLResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExpandDLResponseType was auto-generated from WSDL.
type ExpandDLResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExpandDLResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExpandDLResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExpandDLType was auto-generated from WSDL.
type ExpandDLType struct {
	Mailbox       *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExpandDLType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExpandDLType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExportItemsResponseMessageType was auto-generated from WSDL.
type ExportItemsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ItemId             *ItemIdType       `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	Data               *[]byte           `xml:"Data,omitempty" json:"Data,omitempty" yaml:"Data,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExportItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExportItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExportItemsResponseType was auto-generated from WSDL.
type ExportItemsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExportItemsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExportItemsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ExportItemsType was auto-generated from WSDL.
type ExportItemsType struct {
	ItemIds       *NonEmptyArrayOfItemIdsType `xml:"ItemIds" json:"ItemIds" yaml:"ItemIds"`
	TypeAttrXSI   string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ExportItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ExportItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Extended attributes of a target mailbox.
type ExtendedAttributeType struct {
	Name  string `xml:"Name" json:"Name" yaml:"Name"`
	Value string `xml:"Value" json:"Value" yaml:"Value"`
}

// ExtendedKeywordDefinitionType was auto-generated from WSDL.
type ExtendedKeywordDefinitionType struct {
	Keyword    string                                `xml:"Keyword" json:"Keyword" yaml:"Keyword"`
	Properties *NonEmptyArrayOfExtendedFieldURIsType `xml:"Properties" json:"Properties" yaml:"Properties"`
}

// ExtendedPropertyAttributedValueType was auto-generated from
// WSDL.
type ExtendedPropertyAttributedValueType struct {
	Value        *ExtendedPropertyType         `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// Represents an extended property instance (both its path identifier
// along with its                 associated value).
type ExtendedPropertyType struct {
	ExtendedFieldURI *PathToExtendedFieldType           `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty" yaml:"ExtendedFieldURI,omitempty"`
	Value            *string                            `xml:"Value,omitempty" json:"Value,omitempty" yaml:"Value,omitempty"`
	Values           *NonEmptyArrayOfPropertyValuesType `xml:"Values,omitempty" json:"Values,omitempty" yaml:"Values,omitempty"`
}

// Mailbox failed on search and its error message.
type FailedSearchMailboxType struct {
	Mailbox      string `xml:"Mailbox" json:"Mailbox" yaml:"Mailbox"`
	ErrorCode    int    `xml:"ErrorCode" json:"ErrorCode" yaml:"ErrorCode"`
	ErrorMessage string `xml:"ErrorMessage" json:"ErrorMessage" yaml:"ErrorMessage"`
	IsArchive    bool   `xml:"IsArchive" json:"IsArchive" yaml:"IsArchive"`
}

// FieldOrderType was auto-generated from WSDL.
type FieldOrderType struct {
	Path  *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Order SortDirectionType      `xml:"Order,attr,omitempty" json:"Order,attr,omitempty" yaml:"Order,attr,omitempty"`
}

// FieldURIOrConstantType was auto-generated from WSDL.
type FieldURIOrConstantType struct {
	Path     *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Constant *ConstantValueType     `xml:"Constant,omitempty" json:"Constant,omitempty" yaml:"Constant,omitempty"`
}

// FileAttachmentType was auto-generated from WSDL.
type FileAttachmentType struct {
	AttachmentId          *AttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	Name                  *string           `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	ContentType           *string           `xml:"ContentType,omitempty" json:"ContentType,omitempty" yaml:"ContentType,omitempty"`
	ContentId             *string           `xml:"ContentId,omitempty" json:"ContentId,omitempty" yaml:"ContentId,omitempty"`
	ContentLocation       *string           `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty" yaml:"ContentLocation,omitempty"`
	AttachmentOriginalUrl *string           `xml:"AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty" yaml:"AttachmentOriginalUrl,omitempty"`
	Size                  *int              `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	LastModifiedTime      *DateTime         `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsInline              *bool             `xml:"IsInline,omitempty" json:"IsInline,omitempty" yaml:"IsInline,omitempty"`
	IsContactPhoto        *bool             `xml:"IsContactPhoto,omitempty" json:"IsContactPhoto,omitempty" yaml:"IsContactPhoto,omitempty"`
	Content               *[]byte           `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	TypeAttrXSI           string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FileAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FileAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FileItemType was auto-generated from WSDL.
type FileItemType struct {
	MimeContent                         *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                              *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId                      *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                           *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                             *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                         *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                                *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                         *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived                    *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                                *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                          *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                          *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                           *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                         *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                             *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                            *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                            *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                        *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders              *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                        *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated                     *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects                     *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                       *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                       *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime                    *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart          *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                           *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                           *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                          *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments                      *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty                    []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                             *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights                     *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName                    *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime                    *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                        *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString        *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString        *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId                      *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                          *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                                *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                        *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                         *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody                      *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult              *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                           *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                          *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                       *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                             *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData         *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons              *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                           *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                         *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages                    *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                            *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                           *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                           *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                             *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                            *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                            *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                         *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview                     *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                          *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags                     *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview              *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                               *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                        *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds         *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                        *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                           *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification             *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	FileName                            *string                                   `xml:"FileName,omitempty" json:"FileName,omitempty" yaml:"FileName,omitempty"`
	FileExtension                       *string                                   `xml:"FileExtension,omitempty" json:"FileExtension,omitempty" yaml:"FileExtension,omitempty"`
	FileSize                            *int64                                    `xml:"FileSize,omitempty" json:"FileSize,omitempty" yaml:"FileSize,omitempty"`
	FileCreatedTime                     *string                                   `xml:"FileCreatedTime,omitempty" json:"FileCreatedTime,omitempty" yaml:"FileCreatedTime,omitempty"`
	FileModifiedTime                    *string                                   `xml:"FileModifiedTime,omitempty" json:"FileModifiedTime,omitempty" yaml:"FileModifiedTime,omitempty"`
	StorageProviderContext              *string                                   `xml:"StorageProviderContext,omitempty" json:"StorageProviderContext,omitempty" yaml:"StorageProviderContext,omitempty"`
	FileID                              *string                                   `xml:"FileID,omitempty" json:"FileID,omitempty" yaml:"FileID,omitempty"`
	ItemReferenceId                     *string                                   `xml:"ItemReferenceId,omitempty" json:"ItemReferenceId,omitempty" yaml:"ItemReferenceId,omitempty"`
	ReferenceId                         *string                                   `xml:"ReferenceId,omitempty" json:"ReferenceId,omitempty" yaml:"ReferenceId,omitempty"`
	Sender                              *string                                   `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ItemReceivedTime                    *string                                   `xml:"ItemReceivedTime,omitempty" json:"ItemReceivedTime,omitempty" yaml:"ItemReceivedTime,omitempty"`
	ItemPath                            *string                                   `xml:"ItemPath,omitempty" json:"ItemPath,omitempty" yaml:"ItemPath,omitempty"`
	ItemSentTime                        *string                                   `xml:"ItemSentTime,omitempty" json:"ItemSentTime,omitempty" yaml:"ItemSentTime,omitempty"`
	FileContexts                        *ArrayOfStringsType                       `xml:"FileContexts,omitempty" json:"FileContexts,omitempty" yaml:"FileContexts,omitempty"`
	VisualizationContainerUrl           *string                                   `xml:"VisualizationContainerUrl,omitempty" json:"VisualizationContainerUrl,omitempty" yaml:"VisualizationContainerUrl,omitempty"`
	VisualizationContainerTitle         *string                                   `xml:"VisualizationContainerTitle,omitempty" json:"VisualizationContainerTitle,omitempty" yaml:"VisualizationContainerTitle,omitempty"`
	VisualizationAccessUrl              *string                                   `xml:"VisualizationAccessUrl,omitempty" json:"VisualizationAccessUrl,omitempty" yaml:"VisualizationAccessUrl,omitempty"`
	ReferenceAttachmentProviderEndpoint *string                                   `xml:"ReferenceAttachmentProviderEndpoint,omitempty" json:"ReferenceAttachmentProviderEndpoint,omitempty" yaml:"ReferenceAttachmentProviderEndpoint,omitempty"`
	ReferenceAttachmentProviderType     *string                                   `xml:"ReferenceAttachmentProviderType,omitempty" json:"ReferenceAttachmentProviderType,omitempty" yaml:"ReferenceAttachmentProviderType,omitempty"`
	ItemConversationId                  *string                                   `xml:"ItemConversationId,omitempty" json:"ItemConversationId,omitempty" yaml:"ItemConversationId,omitempty"`
	SharepointItemListId                *GuidType                                 `xml:"SharepointItemListId,omitempty" json:"SharepointItemListId,omitempty" yaml:"SharepointItemListId,omitempty"`
	SharepointItemListItemId            *string                                   `xml:"SharepointItemListItemId,omitempty" json:"SharepointItemListItemId,omitempty" yaml:"SharepointItemListItemId,omitempty"`
	SharepointItemSiteId                *GuidType                                 `xml:"SharepointItemSiteId,omitempty" json:"SharepointItemSiteId,omitempty" yaml:"SharepointItemSiteId,omitempty"`
	SharepointItemSitePath              *string                                   `xml:"SharepointItemSitePath,omitempty" json:"SharepointItemSitePath,omitempty" yaml:"SharepointItemSitePath,omitempty"`
	SharepointItemWebId                 *GuidType                                 `xml:"SharepointItemWebId,omitempty" json:"SharepointItemWebId,omitempty" yaml:"SharepointItemWebId,omitempty"`
	AttachmentId                        *string                                   `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	TypeAttrXSI                         string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                       string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FileItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FileItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FileSuggestionType was auto-generated from WSDL.
type FileSuggestionType struct {
	SuggestedQuery  string             `xml:"SuggestedQuery" json:"SuggestedQuery" yaml:"SuggestedQuery"`
	DisplayText     string             `xml:"DisplayText" json:"DisplayText" yaml:"DisplayText"`
	SuggestionType  SuggestionKindType `xml:"SuggestionType" json:"SuggestionType" yaml:"SuggestionType"`
	Trigger         *string            `xml:"Trigger,omitempty" json:"Trigger,omitempty" yaml:"Trigger,omitempty"`
	TDSuggestionId  *int               `xml:"TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty" yaml:"TDSuggestionId,omitempty"`
	IsDeletable     *bool              `xml:"IsDeletable,omitempty" json:"IsDeletable,omitempty" yaml:"IsDeletable,omitempty"`
	FileName        string             `xml:"FileName" json:"FileName" yaml:"FileName"`
	FileExtension   string             `xml:"FileExtension" json:"FileExtension" yaml:"FileExtension"`
	FileReferenceId *string            `xml:"FileReferenceId,omitempty" json:"FileReferenceId,omitempty" yaml:"FileReferenceId,omitempty"`
	FileTitle       *string            `xml:"FileTitle,omitempty" json:"FileTitle,omitempty" yaml:"FileTitle,omitempty"`
	ContainerTitle  *string            `xml:"ContainerTitle,omitempty" json:"ContainerTitle,omitempty" yaml:"ContainerTitle,omitempty"`
	ContainerUrl    *string            `xml:"ContainerUrl,omitempty" json:"ContainerUrl,omitempty" yaml:"ContainerUrl,omitempty"`
	TypeAttrXSI     string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FileSuggestionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FileSuggestionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FindAvailableMeetingTimesResponseMessageType was auto-generated
// from WSDL.
type FindAvailableMeetingTimesResponseMessageType struct {
	MessageText           *string                      `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode          *ResponseCodeType            `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey    *int                         `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml            []*interface{}               `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass         ResponseClassType            `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"MeetingTimeCandidates" json:"MeetingTimeCandidates" yaml:"MeetingTimeCandidates"`
	EmptySuggestionsHint  *EmptySuggestionReason       `xml:"EmptySuggestionsHint,omitempty" json:"EmptySuggestionsHint,omitempty" yaml:"EmptySuggestionsHint,omitempty"`
	TypeAttrXSI           string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindAvailableMeetingTimesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindAvailableMeetingTimesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindAvailableMeetingTimesType was auto-generated from WSDL.
type FindAvailableMeetingTimesType struct {
	Attendees                *ArrayOfSmtpAddressType `xml:"Attendees,omitempty" json:"Attendees,omitempty" yaml:"Attendees,omitempty"`
	SearchWindowStart        *DateTime               `xml:"SearchWindowStart,omitempty" json:"SearchWindowStart,omitempty" yaml:"SearchWindowStart,omitempty"`
	SearchWindowDuration     *Duration               `xml:"SearchWindowDuration,omitempty" json:"SearchWindowDuration,omitempty" yaml:"SearchWindowDuration,omitempty"`
	MeetingDurationInMinutes *int                    `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty" yaml:"MeetingDurationInMinutes,omitempty"`
	Location                 *string                 `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	MaxCandidates            *int                    `xml:"MaxCandidates,omitempty" json:"MaxCandidates,omitempty" yaml:"MaxCandidates,omitempty"`
	ActivityDomain           *ActivityDomainType     `xml:"ActivityDomain,omitempty" json:"ActivityDomain,omitempty" yaml:"ActivityDomain,omitempty"`
	TypeAttrXSI              string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindAvailableMeetingTimesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindAvailableMeetingTimesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindConversationResponseMessageType was auto-generated from
// WSDL.
type FindConversationResponseMessageType struct {
	MessageText              *string                    `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode             *ResponseCodeType          `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey       *int                       `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml               []*interface{}             `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass            ResponseClassType          `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Conversations            *ArrayOfConversationsType  `xml:"Conversations,omitempty" json:"Conversations,omitempty" yaml:"Conversations,omitempty"`
	HighlightTerms           *ArrayOfHighlightTermsType `xml:"HighlightTerms,omitempty" json:"HighlightTerms,omitempty" yaml:"HighlightTerms,omitempty"`
	TotalConversationsInView *int                       `xml:"TotalConversationsInView,omitempty" json:"TotalConversationsInView,omitempty" yaml:"TotalConversationsInView,omitempty"`
	IndexedOffset            *int                       `xml:"IndexedOffset,omitempty" json:"IndexedOffset,omitempty" yaml:"IndexedOffset,omitempty"`
	TypeAttrXSI              string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindConversationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindConversationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindConversationType was auto-generated from WSDL.
type FindConversationType struct {
	Traversal                   ConversationQueryTraversalType  `xml:"Traversal,attr,omitempty" json:"Traversal,attr,omitempty" yaml:"Traversal,attr,omitempty"`
	ViewFilter                  ViewFilterType                  `xml:"ViewFilter,attr,omitempty" json:"ViewFilter,attr,omitempty" yaml:"ViewFilter,attr,omitempty"`
	SortOrder                   *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	ParentFolderId              *TargetFolderIdType             `xml:"ParentFolderId" json:"ParentFolderId" yaml:"ParentFolderId"`
	MailboxScope                *MailboxSearchLocationType      `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty" yaml:"MailboxScope,omitempty"`
	QueryString                 *QueryStringType                `xml:"QueryString,omitempty" json:"QueryString,omitempty" yaml:"QueryString,omitempty"`
	ConversationShape           *ConversationResponseShapeType  `xml:"ConversationShape,omitempty" json:"ConversationShape,omitempty" yaml:"ConversationShape,omitempty"`
	IndexedPageItemView         *IndexedPageViewType            `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty" yaml:"IndexedPageItemView,omitempty"`
	SeekToConditionPageItemView *SeekToConditionPageViewType    `xml:"SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty" yaml:"SeekToConditionPageItemView,omitempty"`
	TypeAttrXSI                 string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindConversationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindConversationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindFolderParentType was auto-generated from WSDL.
type FindFolderParentType struct {
	Folders *ArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty" yaml:"Folders,omitempty"`
}

// FindFolderResponseMessageType was auto-generated from WSDL.
type FindFolderResponseMessageType struct {
	MessageText        *string               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RootFolder         *FindFolderParentType `xml:"RootFolder,omitempty" json:"RootFolder,omitempty" yaml:"RootFolder,omitempty"`
	TypeAttrXSI        string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindFolderResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindFolderResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindFolderResponseType was auto-generated from WSDL.
type FindFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindFolderType was auto-generated from WSDL.
type FindFolderType struct {
	Traversal                FolderQueryTraversalType          `xml:"Traversal,attr,omitempty" json:"Traversal,attr,omitempty" yaml:"Traversal,attr,omitempty"`
	FolderShape              *FolderResponseShapeType          `xml:"FolderShape,omitempty" json:"FolderShape,omitempty" yaml:"FolderShape,omitempty"`
	Restriction              *RestrictionType                  `xml:"Restriction,omitempty" json:"Restriction,omitempty" yaml:"Restriction,omitempty"`
	ParentFolderIds          *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty" yaml:"ParentFolderIds,omitempty"`
	IndexedPageFolderView    *IndexedPageViewType              `xml:"IndexedPageFolderView,omitempty" json:"IndexedPageFolderView,omitempty" yaml:"IndexedPageFolderView,omitempty"`
	FractionalPageFolderView *FractionalPageViewType           `xml:"FractionalPageFolderView,omitempty" json:"FractionalPageFolderView,omitempty" yaml:"FractionalPageFolderView,omitempty"`
	TypeAttrXSI              string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindItemParentType was auto-generated from WSDL.
type FindItemParentType struct {
	Items  *ArrayOfRealItemsType    `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	Groups *ArrayOfGroupedItemsType `xml:"Groups,omitempty" json:"Groups,omitempty" yaml:"Groups,omitempty"`
}

// FindItemResponseMessageType was auto-generated from WSDL.
type FindItemResponseMessageType struct {
	MessageText        *string                    `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType          `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                       `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}             `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType          `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RootFolder         *FindItemParentType        `xml:"RootFolder,omitempty" json:"RootFolder,omitempty" yaml:"RootFolder,omitempty"`
	HighlightTerms     *ArrayOfHighlightTermsType `xml:"HighlightTerms,omitempty" json:"HighlightTerms,omitempty" yaml:"HighlightTerms,omitempty"`
	TypeAttrXSI        string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindItemResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindItemResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindItemResponseType was auto-generated from WSDL.
type FindItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindItemType was auto-generated from WSDL.
type FindItemType struct {
	Traversal                   ItemQueryTraversalType            `xml:"Traversal,attr,omitempty" json:"Traversal,attr,omitempty" yaml:"Traversal,attr,omitempty"`
	ItemShape                   *ItemResponseShapeType            `xml:"ItemShape,omitempty" json:"ItemShape,omitempty" yaml:"ItemShape,omitempty"`
	Restriction                 *RestrictionType                  `xml:"Restriction,omitempty" json:"Restriction,omitempty" yaml:"Restriction,omitempty"`
	SortOrder                   *NonEmptyArrayOfFieldOrdersType   `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	ParentFolderIds             *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty" yaml:"ParentFolderIds,omitempty"`
	QueryString                 *QueryStringType                  `xml:"QueryString,omitempty" json:"QueryString,omitempty" yaml:"QueryString,omitempty"`
	IndexedPageItemView         *IndexedPageViewType              `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty" yaml:"IndexedPageItemView,omitempty"`
	FractionalPageItemView      *FractionalPageViewType           `xml:"FractionalPageItemView,omitempty" json:"FractionalPageItemView,omitempty" yaml:"FractionalPageItemView,omitempty"`
	SeekToConditionPageItemView *SeekToConditionPageViewType      `xml:"SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty" yaml:"SeekToConditionPageItemView,omitempty"`
	CalendarView                *CalendarViewType                 `xml:"CalendarView,omitempty" json:"CalendarView,omitempty" yaml:"CalendarView,omitempty"`
	ContactsView                *ContactsViewType                 `xml:"ContactsView,omitempty" json:"ContactsView,omitempty" yaml:"ContactsView,omitempty"`
	GroupBy                     *GroupByType                      `xml:"GroupBy,omitempty" json:"GroupBy,omitempty" yaml:"GroupBy,omitempty"`
	DistinguishedGroupBy        *DistinguishedGroupByType         `xml:"DistinguishedGroupBy,omitempty" json:"DistinguishedGroupBy,omitempty" yaml:"DistinguishedGroupBy,omitempty"`
	TypeAttrXSI                 string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the FindMailboxStatisticsByKeywords
// web method.
type FindMailboxStatisticsByKeywordsResponseMessageType struct {
	MessageText                   *string                            `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                  *ResponseCodeType                  `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey            *int                               `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                    []*interface{}                     `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                 ResponseClassType                  `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MailboxStatisticsSearchResult *MailboxStatisticsSearchResultType `xml:"MailboxStatisticsSearchResult,omitempty" json:"MailboxStatisticsSearchResult,omitempty" yaml:"MailboxStatisticsSearchResult,omitempty"`
	TypeAttrXSI                   string                             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string                             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMailboxStatisticsByKeywordsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMailboxStatisticsByKeywordsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response type for the FindMailboxStatisticsByKeywords web method.
type FindMailboxStatisticsByKeywordsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMailboxStatisticsByKeywordsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMailboxStatisticsByKeywordsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the FindMailboxStatisticsByKeywords web method.
type FindMailboxStatisticsByKeywordsType struct {
	Mailboxes                *ArrayOfUserMailboxesType   `xml:"Mailboxes" json:"Mailboxes" yaml:"Mailboxes"`
	Keywords                 *ArrayOfStringsType         `xml:"Keywords" json:"Keywords" yaml:"Keywords"`
	Language                 *string                     `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	Senders                  *ArrayOfSmtpAddressType     `xml:"Senders,omitempty" json:"Senders,omitempty" yaml:"Senders,omitempty"`
	Recipients               *ArrayOfSmtpAddressType     `xml:"Recipients,omitempty" json:"Recipients,omitempty" yaml:"Recipients,omitempty"`
	FromDate                 *DateTime                   `xml:"FromDate,omitempty" json:"FromDate,omitempty" yaml:"FromDate,omitempty"`
	ToDate                   *DateTime                   `xml:"ToDate,omitempty" json:"ToDate,omitempty" yaml:"ToDate,omitempty"`
	MessageTypes             *ArrayOfSearchItemKindsType `xml:"MessageTypes,omitempty" json:"MessageTypes,omitempty" yaml:"MessageTypes,omitempty"`
	SearchDumpster           *bool                       `xml:"SearchDumpster,omitempty" json:"SearchDumpster,omitempty" yaml:"SearchDumpster,omitempty"`
	IncludePersonalArchive   *bool                       `xml:"IncludePersonalArchive,omitempty" json:"IncludePersonalArchive,omitempty" yaml:"IncludePersonalArchive,omitempty"`
	IncludeUnsearchableItems *bool                       `xml:"IncludeUnsearchableItems,omitempty" json:"IncludeUnsearchableItems,omitempty" yaml:"IncludeUnsearchableItems,omitempty"`
	TypeAttrXSI              string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMailboxStatisticsByKeywordsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMailboxStatisticsByKeywordsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMeetingSpaceByJoinUrlResponseMessageType was auto-generated
// from WSDL.
type FindMeetingSpaceByJoinUrlResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingSpace       *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty" yaml:"MeetingSpace,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMeetingSpaceByJoinUrlResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMeetingSpaceByJoinUrlResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMeetingSpaceByJoinUrlType was auto-generated from WSDL.
type FindMeetingSpaceByJoinUrlType struct {
	JoinUrl       string `xml:"JoinUrl" json:"JoinUrl" yaml:"JoinUrl"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMeetingSpaceByJoinUrlType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMeetingSpaceByJoinUrlType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMeetingTimeCandidatesResponseMessageType was auto-generated
// from WSDL.
type FindMeetingTimeCandidatesResponseMessageType struct {
	MessageText           *string                      `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode          *ResponseCodeType            `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey    *int                         `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml            []*interface{}               `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass         ResponseClassType            `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"MeetingTimeCandidates" json:"MeetingTimeCandidates" yaml:"MeetingTimeCandidates"`
	TypeAttrXSI           string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMeetingTimeCandidatesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMeetingTimeCandidatesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMeetingTimeCandidatesType was auto-generated from WSDL.
type FindMeetingTimeCandidatesType struct {
	AttendeeConstraints *FindMeetingTimesAttendeeConstraints `xml:"AttendeeConstraints,omitempty" json:"AttendeeConstraints,omitempty" yaml:"AttendeeConstraints,omitempty"`
	LocationConstraints *FindMeetingTimesLocationConstraints `xml:"LocationConstraints,omitempty" json:"LocationConstraints,omitempty" yaml:"LocationConstraints,omitempty"`
	SearchConstraints   *FindMeetingTimesSearchConstraints   `xml:"SearchConstraints,omitempty" json:"SearchConstraints,omitempty" yaml:"SearchConstraints,omitempty"`
	Constraints         *FindMeetingTimesConstraints         `xml:"Constraints,omitempty" json:"Constraints,omitempty" yaml:"Constraints,omitempty"`
	TypeAttrXSI         string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMeetingTimeCandidatesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMeetingTimeCandidatesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMeetingTimesAttendeeConstraints was auto-generated from
// WSDL.
type FindMeetingTimesAttendeeConstraints struct {
	AttendeeEntries *ArrayOfAttendeeConstraintItems `xml:"AttendeeEntries,omitempty" json:"AttendeeEntries,omitempty" yaml:"AttendeeEntries,omitempty"`
}

// FindMeetingTimesConstraints was auto-generated from WSDL.
type FindMeetingTimesConstraints struct {
	MaxCandidates             *int     `xml:"MaxCandidates,omitempty" json:"MaxCandidates,omitempty" yaml:"MaxCandidates,omitempty"`
	IsOrganizerOptional       *bool    `xml:"IsOrganizerOptional,omitempty" json:"IsOrganizerOptional,omitempty" yaml:"IsOrganizerOptional,omitempty"`
	ReturnSuggestionHints     *bool    `xml:"ReturnSuggestionHints,omitempty" json:"ReturnSuggestionHints,omitempty" yaml:"ReturnSuggestionHints,omitempty"`
	AppName                   *string  `xml:"AppName,omitempty" json:"AppName,omitempty" yaml:"AppName,omitempty"`
	AppScenario               *string  `xml:"AppScenario,omitempty" json:"AppScenario,omitempty" yaml:"AppScenario,omitempty"`
	MinimumAttendeePercentage *float64 `xml:"MinimumAttendeePercentage,omitempty" json:"MinimumAttendeePercentage,omitempty" yaml:"MinimumAttendeePercentage,omitempty"`
}

// FindMeetingTimesLocationConstraints was auto-generated from
// WSDL.
type FindMeetingTimesLocationConstraints struct {
	LocationEntries *ArrayOfLocationConstraintItems `xml:"LocationEntries,omitempty" json:"LocationEntries,omitempty" yaml:"LocationEntries,omitempty"`
	IsRequired      *bool                           `xml:"IsRequired,omitempty" json:"IsRequired,omitempty" yaml:"IsRequired,omitempty"`
	SuggestLocation *bool                           `xml:"SuggestLocation,omitempty" json:"SuggestLocation,omitempty" yaml:"SuggestLocation,omitempty"`
}

// FindMeetingTimesSearchConstraints was auto-generated from WSDL.
type FindMeetingTimesSearchConstraints struct {
	SearchWindows            *ArrayOfTimeSlot    `xml:"SearchWindows,omitempty" json:"SearchWindows,omitempty" yaml:"SearchWindows,omitempty"`
	MeetingDurationInMinutes *int                `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty" yaml:"MeetingDurationInMinutes,omitempty"`
	ActivityDomain           *ActivityDomainType `xml:"ActivityDomain,omitempty" json:"ActivityDomain,omitempty" yaml:"ActivityDomain,omitempty"`
}

// FindMessageTrackingReportRequestType was auto-generated from
// WSDL.
type FindMessageTrackingReportRequestType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMessageTrackingReportRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMessageTrackingReportRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMessageTrackingReportResponseMessageType was auto-generated
// from WSDL.
type FindMessageTrackingReportResponseMessageType struct {
	MessageText                  *string                                     `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                 *ResponseCodeType                           `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey           *int                                        `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                   []*interface{}                              `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                ResponseClassType                           `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Diagnostics                  *ArrayOfStringsType                         `xml:"Diagnostics,omitempty" json:"Diagnostics,omitempty" yaml:"Diagnostics,omitempty"`
	MessageTrackingSearchResults *ArrayOfFindMessageTrackingSearchResultType `xml:"MessageTrackingSearchResults,omitempty" json:"MessageTrackingSearchResults,omitempty" yaml:"MessageTrackingSearchResults,omitempty"`
	ExecutedSearchScope          *string                                     `xml:"ExecutedSearchScope,omitempty" json:"ExecutedSearchScope,omitempty" yaml:"ExecutedSearchScope,omitempty"`
	Errors                       *ArrayOfArraysOfTrackingPropertiesType      `xml:"Errors,omitempty" json:"Errors,omitempty" yaml:"Errors,omitempty"`
	Properties                   *ArrayOfTrackingPropertiesType              `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
	TypeAttrXSI                  string                                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindMessageTrackingReportResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindMessageTrackingReportResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindMessageTrackingSearchResultType was auto-generated from
// WSDL.
type FindMessageTrackingSearchResultType struct {
	Subject                 *string                        `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sender                  *EmailAddressType              `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	PurportedSender         *EmailAddressType              `xml:"PurportedSender,omitempty" json:"PurportedSender,omitempty" yaml:"PurportedSender,omitempty"`
	Recipients              *ArrayOfRecipientsType         `xml:"Recipients,omitempty" json:"Recipients,omitempty" yaml:"Recipients,omitempty"`
	SubmittedTime           *DateTime                      `xml:"SubmittedTime,omitempty" json:"SubmittedTime,omitempty" yaml:"SubmittedTime,omitempty"`
	MessageTrackingReportId *NonEmptyStringType            `xml:"MessageTrackingReportId,omitempty" json:"MessageTrackingReportId,omitempty" yaml:"MessageTrackingReportId,omitempty"`
	PreviousHopServer       *NonEmptyStringType            `xml:"PreviousHopServer,omitempty" json:"PreviousHopServer,omitempty" yaml:"PreviousHopServer,omitempty"`
	FirstHopServer          *NonEmptyStringType            `xml:"FirstHopServer,omitempty" json:"FirstHopServer,omitempty" yaml:"FirstHopServer,omitempty"`
	Properties              *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
}

// FindPeopleResponseMessageType was auto-generated from WSDL.
type FindPeopleResponseMessageType struct {
	MessageText               *string            `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode              *ResponseCodeType  `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey        *int               `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                []*interface{}     `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass             ResponseClassType  `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	People                    *ArrayOfPeopleType `xml:"People,omitempty" json:"People,omitempty" yaml:"People,omitempty"`
	TotalNumberOfPeopleInView *int               `xml:"TotalNumberOfPeopleInView,omitempty" json:"TotalNumberOfPeopleInView,omitempty" yaml:"TotalNumberOfPeopleInView,omitempty"`
	FirstMatchingRowIndex     *int               `xml:"FirstMatchingRowIndex,omitempty" json:"FirstMatchingRowIndex,omitempty" yaml:"FirstMatchingRowIndex,omitempty"`
	FirstLoadedRowIndex       *int               `xml:"FirstLoadedRowIndex,omitempty" json:"FirstLoadedRowIndex,omitempty" yaml:"FirstLoadedRowIndex,omitempty"`
	TransactionId             *GuidType          `xml:"TransactionId,omitempty" json:"TransactionId,omitempty" yaml:"TransactionId,omitempty"`
	TypeAttrXSI               string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindPeopleResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindPeopleResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindPeopleType was auto-generated from WSDL.
type FindPeopleType struct {
	PersonaShape                *PersonaResponseShapeType       `xml:"PersonaShape,omitempty" json:"PersonaShape,omitempty" yaml:"PersonaShape,omitempty"`
	IndexedPageItemView         *IndexedPageViewType            `xml:"IndexedPageItemView" json:"IndexedPageItemView" yaml:"IndexedPageItemView"`
	Restriction                 *RestrictionType                `xml:"Restriction,omitempty" json:"Restriction,omitempty" yaml:"Restriction,omitempty"`
	AggregationRestriction      *RestrictionType                `xml:"AggregationRestriction,omitempty" json:"AggregationRestriction,omitempty" yaml:"AggregationRestriction,omitempty"`
	SortOrder                   *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	ParentFolderId              *TargetFolderIdType             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	QueryString                 *string                         `xml:"QueryString,omitempty" json:"QueryString,omitempty" yaml:"QueryString,omitempty"`
	SearchPeopleSuggestionIndex *bool                           `xml:"SearchPeopleSuggestionIndex,omitempty" json:"SearchPeopleSuggestionIndex,omitempty" yaml:"SearchPeopleSuggestionIndex,omitempty"`
	TopicQueryString            *string                         `xml:"TopicQueryString,omitempty" json:"TopicQueryString,omitempty" yaml:"TopicQueryString,omitempty"`
	Context                     *ArrayOfContextProperty         `xml:"Context,omitempty" json:"Context,omitempty" yaml:"Context,omitempty"`
	QuerySources                *ArrayOfPeopleQuerySource       `xml:"QuerySources,omitempty" json:"QuerySources,omitempty" yaml:"QuerySources,omitempty"`
	ReturnFlattenedResults      *bool                           `xml:"ReturnFlattenedResults,omitempty" json:"ReturnFlattenedResults,omitempty" yaml:"ReturnFlattenedResults,omitempty"`
	TypeAttrXSI                 string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindPeopleType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindPeopleType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindTagsResponseMessageType was auto-generated from WSDL.
type FindTagsResponseMessageType struct {
	MessageText        *string             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Tags               *ArrayOfStringsType `xml:"Tags,omitempty" json:"Tags,omitempty" yaml:"Tags,omitempty"`
	TypeAttrXSI        string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindTagsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindTagsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FindTagsType was auto-generated from WSDL.
type FindTagsType struct {
	IndexedPageItemView *IndexedPageViewType            `xml:"IndexedPageItemView" json:"IndexedPageItemView" yaml:"IndexedPageItemView"`
	SortOrder           *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	QueryString         *string                         `xml:"QueryString,omitempty" json:"QueryString,omitempty" yaml:"QueryString,omitempty"`
	Context             *ArrayOfContextProperty         `xml:"Context,omitempty" json:"Context,omitempty" yaml:"Context,omitempty"`
	TypeAttrXSI         string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FindTagsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FindTagsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FlagType was auto-generated from WSDL.
type FlagType struct {
	FlagStatus   FlagStatusType `xml:"FlagStatus" json:"FlagStatus" yaml:"FlagStatus"`
	StartDate    *DateTime      `xml:"StartDate,omitempty" json:"StartDate,omitempty" yaml:"StartDate,omitempty"`
	DueDate      *DateTime      `xml:"DueDate,omitempty" json:"DueDate,omitempty" yaml:"DueDate,omitempty"`
	CompleteDate *DateTime      `xml:"CompleteDate,omitempty" json:"CompleteDate,omitempty" yaml:"CompleteDate,omitempty"`
}

// FlightEntityType was auto-generated from WSDL.
type FlightEntityType struct {
	FlightNumber             *string `xml:"FlightNumber,omitempty" json:"FlightNumber,omitempty" yaml:"FlightNumber,omitempty"`
	AirlineIataCode          *string `xml:"AirlineIataCode,omitempty" json:"AirlineIataCode,omitempty" yaml:"AirlineIataCode,omitempty"`
	DepartureTime            *string `xml:"DepartureTime,omitempty" json:"DepartureTime,omitempty" yaml:"DepartureTime,omitempty"`
	WindowsTimeZoneName      *string `xml:"WindowsTimeZoneName,omitempty" json:"WindowsTimeZoneName,omitempty" yaml:"WindowsTimeZoneName,omitempty"`
	DepartureAirportIataCode *string `xml:"DepartureAirportIataCode,omitempty" json:"DepartureAirportIataCode,omitempty" yaml:"DepartureAirportIataCode,omitempty"`
	ArrivalAirportIataCode   *string `xml:"ArrivalAirportIataCode,omitempty" json:"ArrivalAirportIataCode,omitempty" yaml:"ArrivalAirportIataCode,omitempty"`
}

// FlightReservationEntityType was auto-generated from WSDL.
type FlightReservationEntityType struct {
	ReservationId     *string             `xml:"ReservationId,omitempty" json:"ReservationId,omitempty" yaml:"ReservationId,omitempty"`
	ReservationStatus *string             `xml:"ReservationStatus,omitempty" json:"ReservationStatus,omitempty" yaml:"ReservationStatus,omitempty"`
	UnderName         *string             `xml:"UnderName,omitempty" json:"UnderName,omitempty" yaml:"UnderName,omitempty"`
	BrokerName        *string             `xml:"BrokerName,omitempty" json:"BrokerName,omitempty" yaml:"BrokerName,omitempty"`
	BrokerPhone       *string             `xml:"BrokerPhone,omitempty" json:"BrokerPhone,omitempty" yaml:"BrokerPhone,omitempty"`
	Flights           *ArrayOfFlightsType `xml:"Flights,omitempty" json:"Flights,omitempty" yaml:"Flights,omitempty"`
}

// FolderChangeDescriptionType was auto-generated from WSDL.
type FolderChangeDescriptionType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FolderChangeDescriptionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FolderChangeDescriptionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FolderChangeType was auto-generated from WSDL.
type FolderChangeType struct {
	Updates               *NonEmptyArrayOfFolderChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty" yaml:"Updates,omitempty"`
	FolderId              *FolderIdType                                `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	DistinguishedFolderId *DistinguishedFolderIdType                   `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
}

// Identifier for a fully resolved folder
type FolderIdType struct {
	Id            string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey     string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FolderIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FolderIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FolderInfoResponseMessageType was auto-generated from WSDL.
type FolderInfoResponseMessageType struct {
	MessageText        *string             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Folders            *ArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty" yaml:"Folders,omitempty"`
	TypeAttrXSI        string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FolderInfoResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FolderInfoResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// FolderRefinerType was auto-generated from WSDL.
type FolderRefinerType struct {
	RefinerType   RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner       *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount   *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
	FolderId      *FolderIdType            `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FolderRefinerType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FolderRefinerType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FolderResponseShapeType was auto-generated from WSDL.
type FolderResponseShapeType struct {
	BaseShape            *DefaultShapeNamesType             `xml:"BaseShape,omitempty" json:"BaseShape,omitempty" yaml:"BaseShape,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// FolderType was auto-generated from WSDL.
type FolderType struct {
	FolderId                 *FolderIdType                  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ParentFolderId           *FolderIdType                  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderClass              *string                        `xml:"FolderClass,omitempty" json:"FolderClass,omitempty" yaml:"FolderClass,omitempty"`
	DisplayName              *string                        `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TotalCount               *int                           `xml:"TotalCount,omitempty" json:"TotalCount,omitempty" yaml:"TotalCount,omitempty"`
	ChildFolderCount         *int                           `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty" yaml:"ChildFolderCount,omitempty"`
	ExtendedProperty         []*ExtendedPropertyType        `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	ManagedFolderInformation *ManagedFolderInformationType  `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty" yaml:"ManagedFolderInformation,omitempty"`
	EffectiveRights          *EffectiveRightsType           `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	DistinguishedFolderId    *DistinguishedFolderIdNameType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	PolicyTag                *RetentionTagType              `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag               *RetentionTagType              `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	ReplicaList              *ArrayOfStringsType            `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty" yaml:"ReplicaList,omitempty"`
	PermissionSet            *PermissionSetType             `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty" yaml:"PermissionSet,omitempty"`
	UnreadCount              *int                           `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	TypeAttrXSI              string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ForwardItemType was auto-generated from WSDL.
type ForwardItemType struct {
	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ForwardItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ForwardItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FractionalPageViewType was auto-generated from WSDL.
type FractionalPageViewType struct {
	MaxEntriesReturned int    `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,attr,omitempty" yaml:"MaxEntriesReturned,attr,omitempty"`
	Numerator          int    `xml:"Numerator,attr,omitempty" json:"Numerator,attr,omitempty" yaml:"Numerator,attr,omitempty"`
	Denominator        int    `xml:"Denominator,attr,omitempty" json:"Denominator,attr,omitempty" yaml:"Denominator,attr,omitempty"`
	TypeAttrXSI        string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FractionalPageViewType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FractionalPageViewType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// FreeBusyResponseType was auto-generated from WSDL.
type FreeBusyResponseType struct {
	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty" yaml:"ResponseMessage,omitempty"`
	FreeBusyView    *FreeBusyView        `xml:"FreeBusyView,omitempty" json:"FreeBusyView,omitempty" yaml:"FreeBusyView,omitempty"`
}

// FreeBusyView was auto-generated from WSDL.
type FreeBusyView struct {
	FreeBusyViewType   FreeBusyViewType      `xml:"FreeBusyViewType" json:"FreeBusyViewType" yaml:"FreeBusyViewType"`
	MergedFreeBusy     *string               `xml:"MergedFreeBusy,omitempty" json:"MergedFreeBusy,omitempty" yaml:"MergedFreeBusy,omitempty"`
	CalendarEventArray *ArrayOfCalendarEvent `xml:"CalendarEventArray,omitempty" json:"CalendarEventArray,omitempty" yaml:"CalendarEventArray,omitempty"`
	WorkingHours       *WorkingHours         `xml:"WorkingHours,omitempty" json:"WorkingHours,omitempty" yaml:"WorkingHours,omitempty"`
}

// FreeBusyViewOptionsType was auto-generated from WSDL.
type FreeBusyViewOptionsType struct {
	TimeWindow                      Duration          `xml:"TimeWindow" json:"TimeWindow" yaml:"TimeWindow"`
	MergedFreeBusyIntervalInMinutes *int              `xml:"MergedFreeBusyIntervalInMinutes,omitempty" json:"MergedFreeBusyIntervalInMinutes,omitempty" yaml:"MergedFreeBusyIntervalInMinutes,omitempty"`
	RequestedView                   *FreeBusyViewType `xml:"RequestedView,omitempty" json:"RequestedView,omitempty" yaml:"RequestedView,omitempty"`
}

// GetAppManifestsResponseType was auto-generated from WSDL.
type GetAppManifestsResponseType struct {
	MessageText        *string                  `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType        `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                     `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}           `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType        `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Apps               *ArrayOfAppsType         `xml:"Apps,omitempty" json:"Apps,omitempty" yaml:"Apps,omitempty"`
	Manifests          *ArrayOfAppManifestsType `xml:"Manifests,omitempty" json:"Manifests,omitempty" yaml:"Manifests,omitempty"`
	TypeAttrXSI        string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAppManifestsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAppManifestsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetAppManifestsType was auto-generated from WSDL.
type GetAppManifestsType struct {
	ApiVersionSupported       *string                          `xml:"ApiVersionSupported,omitempty" json:"ApiVersionSupported,omitempty" yaml:"ApiVersionSupported,omitempty"`
	SchemaVersionSupported    *string                          `xml:"SchemaVersionSupported,omitempty" json:"SchemaVersionSupported,omitempty" yaml:"SchemaVersionSupported,omitempty"`
	IncludeAllInstalledAddIns *bool                            `xml:"IncludeAllInstalledAddIns,omitempty" json:"IncludeAllInstalledAddIns,omitempty" yaml:"IncludeAllInstalledAddIns,omitempty"`
	IncludeEntitlementData    *bool                            `xml:"IncludeEntitlementData,omitempty" json:"IncludeEntitlementData,omitempty" yaml:"IncludeEntitlementData,omitempty"`
	IncludeManifestData       *bool                            `xml:"IncludeManifestData,omitempty" json:"IncludeManifestData,omitempty" yaml:"IncludeManifestData,omitempty"`
	IncludeCustomAppsData     *bool                            `xml:"IncludeCustomAppsData,omitempty" json:"IncludeCustomAppsData,omitempty" yaml:"IncludeCustomAppsData,omitempty"`
	ExtensionIds              *ListOfExtensionIdsType          `xml:"ExtensionIds,omitempty" json:"ExtensionIds,omitempty" yaml:"ExtensionIds,omitempty"`
	AddIns                    *ArrayOfPrivateCatalogAddInsType `xml:"AddIns,omitempty" json:"AddIns,omitempty" yaml:"AddIns,omitempty"`
	IncludeExtensionMetaData  *bool                            `xml:"IncludeExtensionMetaData,omitempty" json:"IncludeExtensionMetaData,omitempty" yaml:"IncludeExtensionMetaData,omitempty"`
	TypeAttrXSI               string                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAppManifestsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAppManifestsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetAppMarketplaceUrlResponseMessageType was auto-generated from
// WSDL.
type GetAppMarketplaceUrlResponseMessageType struct {
	MessageText             *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode            *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey      *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml              []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass           ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	AppMarketplaceUrl       *string           `xml:"AppMarketplaceUrl,omitempty" json:"AppMarketplaceUrl,omitempty" yaml:"AppMarketplaceUrl,omitempty"`
	ConnectorsManagementUrl *string           `xml:"ConnectorsManagementUrl,omitempty" json:"ConnectorsManagementUrl,omitempty" yaml:"ConnectorsManagementUrl,omitempty"`
	TypeAttrXSI             string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace           string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAppMarketplaceUrlResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAppMarketplaceUrlResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetAppMarketplaceUrlType was auto-generated from WSDL.
type GetAppMarketplaceUrlType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAppMarketplaceUrlType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAppMarketplaceUrlType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetAttachmentResponseType was auto-generated from WSDL.
type GetAttachmentResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAttachmentResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAttachmentResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetAttachmentType was auto-generated from WSDL.
type GetAttachmentType struct {
	AttachmentShape *AttachmentResponseShapeType             `xml:"AttachmentShape,omitempty" json:"AttachmentShape,omitempty" yaml:"AttachmentShape,omitempty"`
	AttachmentIds   *NonEmptyArrayOfRequestAttachmentIdsType `xml:"AttachmentIds,omitempty" json:"AttachmentIds,omitempty" yaml:"AttachmentIds,omitempty"`
	TypeAttrXSI     string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetClientAccessTokenResponseMessageType was auto-generated from
// WSDL.
type GetClientAccessTokenResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Token              *ClientAccessTokenType `xml:"Token,omitempty" json:"Token,omitempty" yaml:"Token,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetClientAccessTokenResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetClientAccessTokenResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetClientAccessTokenResponseType was auto-generated from WSDL.
type GetClientAccessTokenResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetClientAccessTokenResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetClientAccessTokenResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetClientAccessTokenType was auto-generated from WSDL.
type GetClientAccessTokenType struct {
	TokenRequests *NonEmptyArrayOfClientAccessTokenRequestsType `xml:"TokenRequests" json:"TokenRequests" yaml:"TokenRequests"`
	TypeAttrXSI   string                                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetClientAccessTokenType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetClientAccessTokenType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetConversationItemsResponseMessageType was auto-generated from
// WSDL.
type GetConversationItemsResponseMessageType struct {
	MessageText        *string                   `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType         `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                      `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}            `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType         `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Conversation       *ConversationResponseType `xml:"Conversation,omitempty" json:"Conversation,omitempty" yaml:"Conversation,omitempty"`
	TypeAttrXSI        string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetConversationItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetConversationItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetConversationItemsResponseType was auto-generated from WSDL.
type GetConversationItemsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetConversationItemsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetConversationItemsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetConversationItemsType was auto-generated from WSDL.
type GetConversationItemsType struct {
	ItemShape        *ItemResponseShapeType            `xml:"ItemShape" json:"ItemShape" yaml:"ItemShape"`
	FoldersToIgnore  *NonEmptyArrayOfBaseFolderIdsType `xml:"FoldersToIgnore,omitempty" json:"FoldersToIgnore,omitempty" yaml:"FoldersToIgnore,omitempty"`
	MaxItemsToReturn *int                              `xml:"MaxItemsToReturn,omitempty" json:"MaxItemsToReturn,omitempty" yaml:"MaxItemsToReturn,omitempty"`
	SortOrder        *ConversationNodeSortOrder        `xml:"SortOrder,omitempty" json:"SortOrder,omitempty" yaml:"SortOrder,omitempty"`
	MailboxScope     *MailboxSearchLocationType        `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty" yaml:"MailboxScope,omitempty"`
	Conversations    *ArrayOfConversationRequestsType  `xml:"Conversations" json:"Conversations" yaml:"Conversations"`
	TypeAttrXSI      string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetConversationItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetConversationItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetDelegateResponseMessageType was auto-generated from WSDL.
type GetDelegateResponseMessageType struct {
	MessageText            *string                                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode           *ResponseCodeType                       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey     *int                                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml             []*interface{}                          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass          ResponseClassType                       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages       *ArrayOfDelegateUserResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	DeliverMeetingRequests *DeliverMeetingRequestsType             `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty" yaml:"DeliverMeetingRequests,omitempty"`
	TypeAttrXSI            string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetDelegateResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetDelegateResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetDelegateType was auto-generated from WSDL.
type GetDelegateType struct {
	Mailbox            *EmailAddressType  `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	IncludePermissions bool               `xml:"IncludePermissions,attr,omitempty" json:"IncludePermissions,attr,omitempty" yaml:"IncludePermissions,attr,omitempty"`
	UserIds            *ArrayOfUserIdType `xml:"UserIds,omitempty" json:"UserIds,omitempty" yaml:"UserIds,omitempty"`
	TypeAttrXSI        string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetDelegateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetDelegateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetDiscoverySearchConfiguration
// web method.
type GetDiscoverySearchConfigurationResponseMessageType struct {
	MessageText                   *string                                  `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                  *ResponseCodeType                        `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey            *int                                     `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                    []*interface{}                           `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                 ResponseClassType                        `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	DiscoverySearchConfigurations *ArrayOfDiscoverySearchConfigurationType `xml:"DiscoverySearchConfigurations,omitempty" json:"DiscoverySearchConfigurations,omitempty" yaml:"DiscoverySearchConfigurations,omitempty"`
	TypeAttrXSI                   string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetDiscoverySearchConfigurationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetDiscoverySearchConfigurationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetDiscoverySearchConfiguration web method.
type GetDiscoverySearchConfigurationType struct {
	SearchId                     *string `xml:"SearchId,omitempty" json:"SearchId,omitempty" yaml:"SearchId,omitempty"`
	ExpandGroupMembership        *bool   `xml:"ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty" yaml:"ExpandGroupMembership,omitempty"`
	InPlaceHoldConfigurationOnly *bool   `xml:"InPlaceHoldConfigurationOnly,omitempty" json:"InPlaceHoldConfigurationOnly,omitempty" yaml:"InPlaceHoldConfigurationOnly,omitempty"`
	TypeAttrXSI                  string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetDiscoverySearchConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetDiscoverySearchConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetEventsResponseMessageType was auto-generated from WSDL.
type GetEventsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Notification       *NotificationType `xml:"Notification,omitempty" json:"Notification,omitempty" yaml:"Notification,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetEventsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetEventsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetEventsResponseType was auto-generated from WSDL.
type GetEventsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetEventsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetEventsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetEventsType was auto-generated from WSDL.
type GetEventsType struct {
	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty" yaml:"SubscriptionId,omitempty"`
	Watermark      *WatermarkType      `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetEventsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetEventsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetFocusedOtherOverridesRequestType was auto-generated from
// WSDL.
type GetFocusedOtherOverridesRequestType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetFocusedOtherOverridesRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetFocusedOtherOverridesRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetFocusedOtherOverridesResponseType was auto-generated from
// WSDL.
type GetFocusedOtherOverridesResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType                 `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	Overrides        *ArrayOfInferenceClassificationOverridesType `xml:"Overrides" json:"Overrides" yaml:"Overrides"`
	TypeAttrXSI      string                                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetFocusedOtherOverridesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetFocusedOtherOverridesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetFolderResponseType was auto-generated from WSDL.
type GetFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetFolderType was auto-generated from WSDL.
type GetFolderType struct {
	FolderShape   *FolderResponseShapeType          `xml:"FolderShape,omitempty" json:"FolderShape,omitempty" yaml:"FolderShape,omitempty"`
	FolderIds     *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetHoldOnMailboxes web method.
type GetHoldOnMailboxesResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MailboxHoldResult  *MailboxHoldResultType `xml:"MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty" yaml:"MailboxHoldResult,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetHoldOnMailboxesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetHoldOnMailboxesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetHoldOnMailboxes web method.
type GetHoldOnMailboxesType struct {
	HoldId        string `xml:"HoldId" json:"HoldId" yaml:"HoldId"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetHoldOnMailboxesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetHoldOnMailboxesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetImItemListResponseMessageType was auto-generated from WSDL.
type GetImItemListResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ImItemList         *ImItemListType   `xml:"ImItemList,omitempty" json:"ImItemList,omitempty" yaml:"ImItemList,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetImItemListResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetImItemListResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetImItemListType was auto-generated from WSDL.
type GetImItemListType struct {
	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty" yaml:"ExtendedProperties,omitempty"`
	TypeAttrXSI        string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetImItemListType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetImItemListType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetImItemsResponseMessageType was auto-generated from WSDL.
type GetImItemsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ImItemList         *ImItemListType   `xml:"ImItemList,omitempty" json:"ImItemList,omitempty" yaml:"ImItemList,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetImItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetImItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetImItemsType was auto-generated from WSDL.
type GetImItemsType struct {
	ContactIds         *NonEmptyArrayOfBaseItemIdsType   `xml:"ContactIds,omitempty" json:"ContactIds,omitempty" yaml:"ContactIds,omitempty"`
	GroupIds           *NonEmptyArrayOfBaseItemIdsType   `xml:"GroupIds,omitempty" json:"GroupIds,omitempty" yaml:"GroupIds,omitempty"`
	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty" yaml:"ExtendedProperties,omitempty"`
	TypeAttrXSI        string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetImItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetImItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetInboxRulesRequestType was auto-generated from WSDL.
type GetInboxRulesRequestType struct {
	MailboxSmtpAddress *string `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty" yaml:"MailboxSmtpAddress,omitempty"`
	TypeAttrXSI        string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetInboxRulesRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetInboxRulesRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetInboxRulesResponseType was auto-generated from WSDL.
type GetInboxRulesResponseType struct {
	MessageText           *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode          *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey    *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml            []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass         ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	OutlookRuleBlobExists *bool             `xml:"OutlookRuleBlobExists,omitempty" json:"OutlookRuleBlobExists,omitempty" yaml:"OutlookRuleBlobExists,omitempty"`
	InboxRules            *ArrayOfRulesType `xml:"InboxRules,omitempty" json:"InboxRules,omitempty" yaml:"InboxRules,omitempty"`
	TypeAttrXSI           string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetInboxRulesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetInboxRulesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetItemResponseType was auto-generated from WSDL.
type GetItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetItemType was auto-generated from WSDL.
type GetItemType struct {
	ItemShape     *ItemResponseShapeType          `xml:"ItemShape,omitempty" json:"ItemShape,omitempty" yaml:"ItemShape,omitempty"`
	ItemIds       *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetLastPrivateCatalogUpdateResponseType was auto-generated from
// WSDL.
type GetLastPrivateCatalogUpdateResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	LastUpdate         *DateTime         `xml:"LastUpdate,omitempty" json:"LastUpdate,omitempty" yaml:"LastUpdate,omitempty"`
	CatalogHash        *string           `xml:"CatalogHash,omitempty" json:"CatalogHash,omitempty" yaml:"CatalogHash,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetLastPrivateCatalogUpdateResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetLastPrivateCatalogUpdateResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetLastPrivateCatalogUpdateType was auto-generated from WSDL.
type GetLastPrivateCatalogUpdateType struct {
	Client        *OfficeClientType `xml:"Client,omitempty" json:"Client,omitempty" yaml:"Client,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetLastPrivateCatalogUpdateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetLastPrivateCatalogUpdateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMailTipsResponseMessageType was auto-generated from WSDL.
type GetMailTipsResponseMessageType struct {
	MessageText        *string                             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages   *ArrayOfMailTipsResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI        string                              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMailTipsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMailTipsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMailTipsType was auto-generated from WSDL.
type GetMailTipsType struct {
	SendingAs         *EmailAddressType      `xml:"SendingAs" json:"SendingAs" yaml:"SendingAs"`
	Recipients        *ArrayOfRecipientsType `xml:"Recipients" json:"Recipients" yaml:"Recipients"`
	MailTipsRequested MailTipTypes           `xml:"MailTipsRequested" json:"MailTipsRequested" yaml:"MailTipsRequested"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMailTipsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMailTipsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMeetingInstanceRequestType was auto-generated from WSDL.
type GetMeetingInstanceRequestType struct {
	ItemId        *ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMeetingInstanceRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMeetingInstanceRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMeetingInstanceResponseMessageType was auto-generated from
// WSDL.
type GetMeetingInstanceResponseMessageType struct {
	MessageText        *string              `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType    `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                 `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}       `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType    `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingInstance    *MeetingInstanceType `xml:"MeetingInstance" json:"MeetingInstance" yaml:"MeetingInstance"`
	TypeAttrXSI        string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMeetingInstanceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMeetingInstanceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMeetingSpaceResponseMessageType was auto-generated from WSDL.
type GetMeetingSpaceResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingSpace       *MeetingSpaceType `xml:"MeetingSpace" json:"MeetingSpace" yaml:"MeetingSpace"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMeetingSpaceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMeetingSpaceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMeetingSpaceType was auto-generated from WSDL.
type GetMeetingSpaceType struct {
	ItemId        *ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMeetingSpaceType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMeetingSpaceType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMessageTrackingReportRequestType was auto-generated from
// WSDL.
type GetMessageTrackingReportRequestType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMessageTrackingReportRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMessageTrackingReportRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetMessageTrackingReportResponseMessageType was auto-generated
// from WSDL.
type GetMessageTrackingReportResponseMessageType struct {
	MessageText           *string                                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode          *ResponseCodeType                      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey    *int                                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml            []*interface{}                         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass         ResponseClassType                      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MessageTrackingReport *MessageTrackingReportType             `xml:"MessageTrackingReport,omitempty" json:"MessageTrackingReport,omitempty" yaml:"MessageTrackingReport,omitempty"`
	Diagnostics           *ArrayOfStringsType                    `xml:"Diagnostics,omitempty" json:"Diagnostics,omitempty" yaml:"Diagnostics,omitempty"`
	Errors                *ArrayOfArraysOfTrackingPropertiesType `xml:"Errors,omitempty" json:"Errors,omitempty" yaml:"Errors,omitempty"`
	Properties            *ArrayOfTrackingPropertiesType         `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
	TypeAttrXSI           string                                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetMessageTrackingReportResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetMessageTrackingReportResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetNonIndexableItemDetails web
// method.
type GetNonIndexableItemDetailsResponseMessageType struct {
	MessageText                   *string                           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                  *ResponseCodeType                 `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey            *int                              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                    []*interface{}                    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                 ResponseClassType                 `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	NonIndexableItemDetailsResult *NonIndexableItemDetailResultType `xml:"NonIndexableItemDetailsResult,omitempty" json:"NonIndexableItemDetailsResult,omitempty" yaml:"NonIndexableItemDetailsResult,omitempty"`
	TypeAttrXSI                   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetNonIndexableItemDetailsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetNonIndexableItemDetailsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetNonIndexableItemDetails web method.
type GetNonIndexableItemDetailsType struct {
	Mailboxes         *NonEmptyArrayOfLegacyDNsType `xml:"Mailboxes" json:"Mailboxes" yaml:"Mailboxes"`
	PageSize          *int                          `xml:"PageSize,omitempty" json:"PageSize,omitempty" yaml:"PageSize,omitempty"`
	PageItemReference *string                       `xml:"PageItemReference,omitempty" json:"PageItemReference,omitempty" yaml:"PageItemReference,omitempty"`
	PageDirection     *SearchPageDirectionType      `xml:"PageDirection,omitempty" json:"PageDirection,omitempty" yaml:"PageDirection,omitempty"`
	SearchArchiveOnly *bool                         `xml:"SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty" yaml:"SearchArchiveOnly,omitempty"`
	TypeAttrXSI       string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetNonIndexableItemDetailsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetNonIndexableItemDetailsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetNonIndexableItemStatistics
// web method.
type GetNonIndexableItemStatisticsResponseMessageType struct {
	MessageText                *string                                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode               *ResponseCodeType                      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey         *int                                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                 []*interface{}                         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass              ResponseClassType                      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	NonIndexableItemStatistics *ArrayOfNonIndexableItemStatisticsType `xml:"NonIndexableItemStatistics,omitempty" json:"NonIndexableItemStatistics,omitempty" yaml:"NonIndexableItemStatistics,omitempty"`
	TypeAttrXSI                string                                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string                                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetNonIndexableItemStatisticsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetNonIndexableItemStatisticsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetNonIndexableItemStatistics web method.
type GetNonIndexableItemStatisticsType struct {
	Mailboxes         *NonEmptyArrayOfLegacyDNsType `xml:"Mailboxes" json:"Mailboxes" yaml:"Mailboxes"`
	SearchArchiveOnly *bool                         `xml:"SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty" yaml:"SearchArchiveOnly,omitempty"`
	TypeAttrXSI       string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetNonIndexableItemStatisticsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetNonIndexableItemStatisticsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetOMEConfigurationType was auto-generated from WSDL.
type GetOMEConfigurationType struct {
	TemplateName  *string `xml:"TemplateName,omitempty" json:"TemplateName,omitempty" yaml:"TemplateName,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetOMEConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetOMEConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetOMEMessageStatusResponseType was auto-generated from WSDL.
type GetOMEMessageStatusResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	IsRevoked          *bool             `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty" yaml:"IsRevoked,omitempty"`
	ReceivedTime       *DateTime         `xml:"ReceivedTime,omitempty" json:"ReceivedTime,omitempty" yaml:"ReceivedTime,omitempty"`
	Subject            *string           `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Container          *string           `xml:"Container,omitempty" json:"Container,omitempty" yaml:"Container,omitempty"`
	IsRevocable        *bool             `xml:"IsRevocable,omitempty" json:"IsRevocable,omitempty" yaml:"IsRevocable,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetOMEMessageStatusResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetOMEMessageStatusResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetOMEMessageStatusType was auto-generated from WSDL.
type GetOMEMessageStatusType struct {
	MessageId     *string `xml:"MessageId,omitempty" json:"MessageId,omitempty" yaml:"MessageId,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetOMEMessageStatusType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetOMEMessageStatusType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPasswordExpirationDateResponseMessageType was auto-generated
// from WSDL.
type GetPasswordExpirationDateResponseMessageType struct {
	MessageText            *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode           *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey     *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml             []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass          ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	PasswordExpirationDate *DateTime         `xml:"PasswordExpirationDate,omitempty" json:"PasswordExpirationDate,omitempty" yaml:"PasswordExpirationDate,omitempty"`
	TypeAttrXSI            string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPasswordExpirationDateResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPasswordExpirationDateResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPasswordExpirationDateType was auto-generated from WSDL.
type GetPasswordExpirationDateType struct {
	MailboxSmtpAddress *string `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty" yaml:"MailboxSmtpAddress,omitempty"`
	TypeAttrXSI        string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPasswordExpirationDateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPasswordExpirationDateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPersonaResponseMessageType was auto-generated from WSDL.
type GetPersonaResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Persona            *PersonaType      `xml:"Persona,omitempty" json:"Persona,omitempty" yaml:"Persona,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPersonaResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPersonaResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPersonaType was auto-generated from WSDL.
type GetPersonaType struct {
	PersonaId            *ItemIdType                        `xml:"PersonaId,omitempty" json:"PersonaId,omitempty" yaml:"PersonaId,omitempty"`
	EmailAddress         *EmailAddressType                  `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	ParentFolderId       *TargetFolderIdType                `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemLinkId           *string                            `xml:"ItemLinkId,omitempty" json:"ItemLinkId,omitempty" yaml:"ItemLinkId,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
	TypeAttrXSI          string                             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPersonaType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPersonaType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPhoneCallInformationResponseMessageType was auto-generated
// from WSDL.
type GetPhoneCallInformationResponseMessageType struct {
	MessageText          *string                   `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode         *ResponseCodeType         `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey   *int                      `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml           []*interface{}            `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass        ResponseClassType         `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	PhoneCallInformation *PhoneCallInformationType `xml:"PhoneCallInformation,omitempty" json:"PhoneCallInformation,omitempty" yaml:"PhoneCallInformation,omitempty"`
	TypeAttrXSI          string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPhoneCallInformationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPhoneCallInformationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPhoneCallInformationType was auto-generated from WSDL.
type GetPhoneCallInformationType struct {
	PhoneCallId   *PhoneCallIdType `xml:"PhoneCallId" json:"PhoneCallId" yaml:"PhoneCallId"`
	TypeAttrXSI   string           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPhoneCallInformationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPhoneCallInformationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPrivateCatalogAddInsResponseType was auto-generated from
// WSDL.
type GetPrivateCatalogAddInsResponseType struct {
	MessageText        *string                          `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                             `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                   `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	AddIns             *ArrayOfPrivateCatalogAddInsType `xml:"AddIns,omitempty" json:"AddIns,omitempty" yaml:"AddIns,omitempty"`
	TypeAttrXSI        string                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPrivateCatalogAddInsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPrivateCatalogAddInsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetPrivateCatalogAddInsType was auto-generated from WSDL.
type GetPrivateCatalogAddInsType struct {
	Client        *OfficeClientType `xml:"Client,omitempty" json:"Client,omitempty" yaml:"Client,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetPrivateCatalogAddInsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetPrivateCatalogAddInsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRemindersResponseMessageType was auto-generated from WSDL.
type GetRemindersResponseMessageType struct {
	MessageText        *string               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Reminders          *ArrayOfRemindersType `xml:"Reminders" json:"Reminders" yaml:"Reminders"`
	TypeAttrXSI        string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRemindersResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRemindersResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRemindersType was auto-generated from WSDL.
type GetRemindersType struct {
	BeginTime     *DateTime `xml:"BeginTime,omitempty" json:"BeginTime,omitempty" yaml:"BeginTime,omitempty"`
	EndTime       *DateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty" yaml:"EndTime,omitempty"`
	MaxItems      *string   `xml:"MaxItems,omitempty" json:"MaxItems,omitempty" yaml:"MaxItems,omitempty"`
	ReminderType  *string   `xml:"ReminderType,omitempty" json:"ReminderType,omitempty" yaml:"ReminderType,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRemindersType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRemindersType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRoomListsResponseMessageType was auto-generated from WSDL.
type GetRoomListsResponseMessageType struct {
	MessageText        *string                    `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType          `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                       `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}             `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType          `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RoomLists          *ArrayOfEmailAddressesType `xml:"RoomLists,omitempty" json:"RoomLists,omitempty" yaml:"RoomLists,omitempty"`
	TypeAttrXSI        string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRoomListsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRoomListsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRoomListsType was auto-generated from WSDL.
type GetRoomListsType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRoomListsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRoomListsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRoomsResponseMessageType was auto-generated from WSDL.
type GetRoomsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Rooms              *ArrayOfRoomsType `xml:"Rooms,omitempty" json:"Rooms,omitempty" yaml:"Rooms,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRoomsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRoomsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetRoomsType was auto-generated from WSDL.
type GetRoomsType struct {
	RoomList      *EmailAddressType `xml:"RoomList" json:"RoomList" yaml:"RoomList"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetRoomsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetRoomsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSearchSuggestions was auto-generated from WSDL.
type GetSearchSuggestions struct {
	SearchSessionId                      GuidType                `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	Query                                *string                 `xml:"Query,omitempty" json:"Query,omitempty" yaml:"Query,omitempty"`
	SuggestionTypes                      *SuggestionKindType     `xml:"SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty" yaml:"SuggestionTypes,omitempty"`
	SuggestionsPrimer                    *bool                   `xml:"SuggestionsPrimer,omitempty" json:"SuggestionsPrimer,omitempty" yaml:"SuggestionsPrimer,omitempty"`
	MaxSuggestionsCountPerSuggestionType *int64                  `xml:"MaxSuggestionsCountPerSuggestionType,omitempty" json:"MaxSuggestionsCountPerSuggestionType,omitempty" yaml:"MaxSuggestionsCountPerSuggestionType,omitempty"`
	SearchScope                          *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty" yaml:"SearchScope,omitempty"`
	Scenario                             *string                 `xml:"Scenario,omitempty" json:"Scenario,omitempty" yaml:"Scenario,omitempty"`
	TypeAttrXSI                          string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                        string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSearchSuggestions) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSearchSuggestions"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSearchSuggestionsResponseMessage was auto-generated from
// WSDL.
type GetSearchSuggestionsResponseMessage struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SearchSuggestions  *SearchSuggestionsType `xml:"SearchSuggestions,omitempty" json:"SearchSuggestions,omitempty" yaml:"SearchSuggestions,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSearchSuggestionsResponseMessage) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSearchSuggestionsResponseMessage"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetSearchableMailboxes web method.
type GetSearchableMailboxesResponseMessageType struct {
	MessageText         *string                           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode        *ResponseCodeType                 `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey  *int                              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml          []*interface{}                    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass       ResponseClassType                 `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SearchableMailboxes *ArrayOfSearchableMailboxesType   `xml:"SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty" yaml:"SearchableMailboxes,omitempty"`
	FailedMailboxes     *ArrayOfFailedSearchMailboxesType `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty" yaml:"FailedMailboxes,omitempty"`
	TypeAttrXSI         string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSearchableMailboxesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSearchableMailboxesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetSearchableMailboxes web method.
type GetSearchableMailboxesType struct {
	SearchFilter          *string `xml:"SearchFilter,omitempty" json:"SearchFilter,omitempty" yaml:"SearchFilter,omitempty"`
	ExpandGroupMembership *bool   `xml:"ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty" yaml:"ExpandGroupMembership,omitempty"`
	TypeAttrXSI           string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSearchableMailboxesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSearchableMailboxesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetServerTimeZonesResponseMessageType was auto-generated from
// WSDL.
type GetServerTimeZonesResponseMessageType struct {
	MessageText         *string                        `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode        *ResponseCodeType              `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey  *int                           `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml          []*interface{}                 `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass       ResponseClassType              `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TimeZoneDefinitions *ArrayOfTimeZoneDefinitionType `xml:"TimeZoneDefinitions" json:"TimeZoneDefinitions" yaml:"TimeZoneDefinitions"`
	TypeAttrXSI         string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetServerTimeZonesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetServerTimeZonesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetServerTimeZonesResponseType was auto-generated from WSDL.
type GetServerTimeZonesResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetServerTimeZonesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetServerTimeZonesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetServerTimeZonesType was auto-generated from WSDL.
type GetServerTimeZonesType struct {
	ReturnFullTimeZoneData bool                           `xml:"ReturnFullTimeZoneData,attr,omitempty" json:"ReturnFullTimeZoneData,attr,omitempty" yaml:"ReturnFullTimeZoneData,attr,omitempty"`
	Ids                    *NonEmptyArrayOfTimeZoneIdType `xml:"Ids,omitempty" json:"Ids,omitempty" yaml:"Ids,omitempty"`
	TypeAttrXSI            string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetServerTimeZonesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetServerTimeZonesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetServiceConfigurationResponseMessageType was auto-generated
// from WSDL.
type GetServiceConfigurationResponseMessageType struct {
	MessageText        *string                                         `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                               `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                            `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                                  `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                               `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages   *ArrayOfServiceConfigurationResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI        string                                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetServiceConfigurationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetServiceConfigurationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetServiceConfigurationType was auto-generated from WSDL.
type GetServiceConfigurationType struct {
	ActingAs                    *EmailAddressType                `xml:"ActingAs,omitempty" json:"ActingAs,omitempty" yaml:"ActingAs,omitempty"`
	RequestedConfiguration      *ArrayOfServiceConfigurationType `xml:"RequestedConfiguration" json:"RequestedConfiguration" yaml:"RequestedConfiguration"`
	ConfigurationRequestDetails *ConfigurationRequestDetailsType `xml:"ConfigurationRequestDetails,omitempty" json:"ConfigurationRequestDetails,omitempty" yaml:"ConfigurationRequestDetails,omitempty"`
	TypeAttrXSI                 string                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetServiceConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetServiceConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSharingFolderResponseMessageType was auto-generated from
// WSDL.
type GetSharingFolderResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SharingFolderId    *FolderIdType     `xml:"SharingFolderId,omitempty" json:"SharingFolderId,omitempty" yaml:"SharingFolderId,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSharingFolderResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSharingFolderResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSharingFolderType was auto-generated from WSDL.
type GetSharingFolderType struct {
	SmtpAddress    *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
	DataType       *SharingDataType    `xml:"DataType,omitempty" json:"DataType,omitempty" yaml:"DataType,omitempty"`
	SharedFolderId *NonEmptyStringType `xml:"SharedFolderId,omitempty" json:"SharedFolderId,omitempty" yaml:"SharedFolderId,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSharingFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSharingFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSharingMetadataResponseMessageType was auto-generated from
// WSDL.
type GetSharingMetadataResponseMessageType struct {
	MessageText                         *string                               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                        *ResponseCodeType                     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey                  *int                                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                          []*interface{}                        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                       ResponseClassType                     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	EncryptedSharedFolderDataCollection *ArrayOfEncryptedSharedFolderDataType `xml:"EncryptedSharedFolderDataCollection,omitempty" json:"EncryptedSharedFolderDataCollection,omitempty" yaml:"EncryptedSharedFolderDataCollection,omitempty"`
	InvalidRecipients                   *ArrayOfInvalidRecipientsType         `xml:"InvalidRecipients,omitempty" json:"InvalidRecipients,omitempty" yaml:"InvalidRecipients,omitempty"`
	TypeAttrXSI                         string                                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                       string                                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSharingMetadataResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSharingMetadataResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSharingMetadataType was auto-generated from WSDL.
type GetSharingMetadataType struct {
	IdOfFolderToShare *FolderIdType           `xml:"IdOfFolderToShare,omitempty" json:"IdOfFolderToShare,omitempty" yaml:"IdOfFolderToShare,omitempty"`
	SenderSmtpAddress *NonEmptyStringType     `xml:"SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty" yaml:"SenderSmtpAddress,omitempty"`
	Recipients        *ArrayOfSmtpAddressType `xml:"Recipients,omitempty" json:"Recipients,omitempty" yaml:"Recipients,omitempty"`
	TypeAttrXSI       string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSharingMetadataType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSharingMetadataType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSpecificUserConfigurationResponseMessageType was auto-generated
// from WSDL.
type GetSpecificUserConfigurationResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	UserConfiguration  *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty" yaml:"UserConfiguration,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSpecificUserConfigurationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSpecificUserConfigurationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSpecificUserConfigurationResponseType was auto-generated
// from WSDL.
type GetSpecificUserConfigurationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSpecificUserConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSpecificUserConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetSpecificUserConfigurationType was auto-generated from WSDL.
type GetSpecificUserConfigurationType struct {
	UserConfigurationName       *UserConfigurationNameType    `xml:"UserConfigurationName" json:"UserConfigurationName" yaml:"UserConfigurationName"`
	UserConfigurationProperties UserConfigurationPropertyType `xml:"UserConfigurationProperties" json:"UserConfigurationProperties" yaml:"UserConfigurationProperties"`
	TypeAttrXSI                 string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetSpecificUserConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetSpecificUserConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetStreamingEventsResponseMessageType was auto-generated from
// WSDL.
type GetStreamingEventsResponseMessageType struct {
	MessageText          *string                             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode         *ResponseCodeType                   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey   *int                                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml           []*interface{}                      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass        ResponseClassType                   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Notifications        *NonEmptyArrayOfNotificationsType   `xml:"Notifications,omitempty" json:"Notifications,omitempty" yaml:"Notifications,omitempty"`
	ErrorSubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"ErrorSubscriptionIds,omitempty" json:"ErrorSubscriptionIds,omitempty" yaml:"ErrorSubscriptionIds,omitempty"`
	ConnectionStatus     *ConnectionStatusType               `xml:"ConnectionStatus,omitempty" json:"ConnectionStatus,omitempty" yaml:"ConnectionStatus,omitempty"`
	TypeAttrXSI          string                              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetStreamingEventsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetStreamingEventsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetStreamingEventsResponseType was auto-generated from WSDL.
type GetStreamingEventsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetStreamingEventsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetStreamingEventsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetStreamingEventsType was auto-generated from WSDL.
type GetStreamingEventsType struct {
	SubscriptionIds   *NonEmptyArrayOfSubscriptionIdsType         `xml:"SubscriptionIds,omitempty" json:"SubscriptionIds,omitempty" yaml:"SubscriptionIds,omitempty"`
	ConnectionTimeout *StreamingSubscriptionConnectionTimeoutType `xml:"ConnectionTimeout,omitempty" json:"ConnectionTimeout,omitempty" yaml:"ConnectionTimeout,omitempty"`
	TypeAttrXSI       string                                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetStreamingEventsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetStreamingEventsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserAvailabilityRequestType was auto-generated from WSDL.
type GetUserAvailabilityRequestType struct {
	TimeZone               *SerializableTimeZone       `xml:"TimeZone,omitempty" json:"TimeZone,omitempty" yaml:"TimeZone,omitempty"`
	MailboxDataArray       *ArrayOfMailboxData         `xml:"MailboxDataArray,omitempty" json:"MailboxDataArray,omitempty" yaml:"MailboxDataArray,omitempty"`
	FreeBusyViewOptions    *FreeBusyViewOptionsType    `xml:"FreeBusyViewOptions,omitempty" json:"FreeBusyViewOptions,omitempty" yaml:"FreeBusyViewOptions,omitempty"`
	SuggestionsViewOptions *SuggestionsViewOptionsType `xml:"SuggestionsViewOptions,omitempty" json:"SuggestionsViewOptions,omitempty" yaml:"SuggestionsViewOptions,omitempty"`
	TypeAttrXSI            string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserAvailabilityRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserAvailabilityRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserAvailabilityResponseType was auto-generated from WSDL.
type GetUserAvailabilityResponseType struct {
	FreeBusyResponseArray *ArrayOfFreeBusyResponse `xml:"FreeBusyResponseArray,omitempty" json:"FreeBusyResponseArray,omitempty" yaml:"FreeBusyResponseArray,omitempty"`
	SuggestionsResponse   *SuggestionsResponseType `xml:"SuggestionsResponse,omitempty" json:"SuggestionsResponse,omitempty" yaml:"SuggestionsResponse,omitempty"`
}

// GetUserConfigurationResponseMessageType was auto-generated from
// WSDL.
type GetUserConfigurationResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	UserConfiguration  *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty" yaml:"UserConfiguration,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserConfigurationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserConfigurationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserConfigurationResponseType was auto-generated from WSDL.
type GetUserConfigurationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserConfigurationType was auto-generated from WSDL.
type GetUserConfigurationType struct {
	UserConfigurationName       *UserConfigurationNameType    `xml:"UserConfigurationName" json:"UserConfigurationName" yaml:"UserConfigurationName"`
	UserConfigurationProperties UserConfigurationPropertyType `xml:"UserConfigurationProperties" json:"UserConfigurationProperties" yaml:"UserConfigurationProperties"`
	TypeAttrXSI                 string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserOofSettingsRequest was auto-generated from WSDL.
type GetUserOofSettingsRequest struct {
	Mailbox       *EmailAddress `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	TypeAttrXSI   string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserOofSettingsRequest) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserOofSettingsRequest"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserOofSettingsResponse was auto-generated from WSDL.
type GetUserOofSettingsResponse struct {
	ResponseMessage  *ResponseMessageType `xml:"ResponseMessage" json:"ResponseMessage" yaml:"ResponseMessage"`
	OofSettings      *UserOofSettings     `xml:"OofSettings,omitempty" json:"OofSettings,omitempty" yaml:"OofSettings,omitempty"`
	AllowExternalOof *ExternalAudience    `xml:"AllowExternalOof,omitempty" json:"AllowExternalOof,omitempty" yaml:"AllowExternalOof,omitempty"`
}

// GetUserPhotoResponseMessageType was auto-generated from WSDL.
type GetUserPhotoResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	HasChanged         bool              `xml:"HasChanged" json:"HasChanged" yaml:"HasChanged"`
	PictureData        *[]byte           `xml:"PictureData,omitempty" json:"PictureData,omitempty" yaml:"PictureData,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserPhotoResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserPhotoResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserPhotoResponseType was auto-generated from WSDL.
type GetUserPhotoResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserPhotoResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserPhotoResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GetUserPhotoType was auto-generated from WSDL.
type GetUserPhotoType struct {
	Email         string             `xml:"Email" json:"Email" yaml:"Email"`
	SizeRequested UserPhotoSizeType  `xml:"SizeRequested" json:"SizeRequested" yaml:"SizeRequested"`
	TypeRequested *UserPhotoTypeType `xml:"TypeRequested,omitempty" json:"TypeRequested,omitempty" yaml:"TypeRequested,omitempty"`
	TypeAttrXSI   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserPhotoType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserPhotoType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response message type for the GetUserRetentionPolicyTags web
// method.
type GetUserRetentionPolicyTagsResponseMessageType struct {
	MessageText         *string                         `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode        *ResponseCodeType               `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey  *int                            `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml          []*interface{}                  `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass       ResponseClassType               `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RetentionPolicyTags *ArrayOfRetentionPolicyTagsType `xml:"RetentionPolicyTags,omitempty" json:"RetentionPolicyTags,omitempty" yaml:"RetentionPolicyTags,omitempty"`
	TypeAttrXSI         string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserRetentionPolicyTagsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserRetentionPolicyTagsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the GetUserRetentionPolicyTags web method.
type GetUserRetentionPolicyTagsType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GetUserRetentionPolicyTagsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GetUserRetentionPolicyTagsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// GroupAttendeeConflictData was auto-generated from WSDL.
type GroupAttendeeConflictData struct {
	NumberOfMembers             int    `xml:"NumberOfMembers" json:"NumberOfMembers" yaml:"NumberOfMembers"`
	NumberOfMembersAvailable    int    `xml:"NumberOfMembersAvailable" json:"NumberOfMembersAvailable" yaml:"NumberOfMembersAvailable"`
	NumberOfMembersWithConflict int    `xml:"NumberOfMembersWithConflict" json:"NumberOfMembersWithConflict" yaml:"NumberOfMembersWithConflict"`
	NumberOfMembersWithNoData   int    `xml:"NumberOfMembersWithNoData" json:"NumberOfMembersWithNoData" yaml:"NumberOfMembersWithNoData"`
	TypeAttrXSI                 string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace               string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GroupAttendeeConflictData) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GroupAttendeeConflictData"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Allows consumers to specify arbitrary groupings for FindItem
// queries.
type GroupByType struct {
	Order                SortDirectionType         `xml:"Order,attr,omitempty" json:"Order,attr,omitempty" yaml:"Order,attr,omitempty"`
	AggregateOn          *AggregateOnType          `xml:"AggregateOn,omitempty" json:"AggregateOn,omitempty" yaml:"AggregateOn,omitempty"`
	UseCollapsibleGroups *bool                     `xml:"UseCollapsibleGroups,omitempty" json:"UseCollapsibleGroups,omitempty" yaml:"UseCollapsibleGroups,omitempty"`
	ItemsPerGroup        *uint                     `xml:"ItemsPerGroup,omitempty" json:"ItemsPerGroup,omitempty" yaml:"ItemsPerGroup,omitempty"`
	MaxItemsPerGroup     *uint                     `xml:"MaxItemsPerGroup,omitempty" json:"MaxItemsPerGroup,omitempty" yaml:"MaxItemsPerGroup,omitempty"`
	GroupsToExpand       *ArrayOfGroupIdType       `xml:"GroupsToExpand,omitempty" json:"GroupsToExpand,omitempty" yaml:"GroupsToExpand,omitempty"`
	FieldURI             *PathToUnindexedFieldType `xml:"FieldURI,omitempty" json:"FieldURI,omitempty" yaml:"FieldURI,omitempty"`
	IndexedFieldURI      *PathToIndexedFieldType   `xml:"IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty" yaml:"IndexedFieldURI,omitempty"`
	ExtendedFieldURI     *PathToExtendedFieldType  `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty" yaml:"ExtendedFieldURI,omitempty"`
	TypeAttrXSI          string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GroupByType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GroupByType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// GroupLocatorType was auto-generated from WSDL.
type GroupLocatorType struct {
	ExternalDirectoryObjectId *string `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty" yaml:"ExternalDirectoryObjectId,omitempty"`
	LegacyDn                  *string `xml:"LegacyDn,omitempty" json:"LegacyDn,omitempty" yaml:"LegacyDn,omitempty"`
	EmailAddress              *string `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	DisplayName               *string `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	OrganizationId            *string `xml:"OrganizationId,omitempty" json:"OrganizationId,omitempty" yaml:"OrganizationId,omitempty"`
	AccessType                *int    `xml:"AccessType,omitempty" json:"AccessType,omitempty" yaml:"AccessType,omitempty"`
	TypeAttrXSI               string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *GroupLocatorType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:GroupLocatorType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// GroupSearchScopeType was auto-generated from WSDL.
type GroupSearchScopeType struct {
	GroupTypes *SearchScopeGroupsType `xml:"GroupTypes,omitempty" json:"GroupTypes,omitempty" yaml:"GroupTypes,omitempty"`
}

// GroupSummaryType was auto-generated from WSDL.
type GroupSummaryType struct {
	GroupCount   *int    `xml:"GroupCount,omitempty" json:"GroupCount,omitempty" yaml:"GroupCount,omitempty"`
	UnreadCount  *int    `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	InstanceKey  *[]byte `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	GroupByValue *string `xml:"GroupByValue,omitempty" json:"GroupByValue,omitempty" yaml:"GroupByValue,omitempty"`
}

// GroupedItemsType was auto-generated from WSDL.
type GroupedItemsType struct {
	GroupIndex   *string               `xml:"GroupIndex,omitempty" json:"GroupIndex,omitempty" yaml:"GroupIndex,omitempty"`
	Items        *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	GroupSummary *GroupSummaryType     `xml:"GroupSummary,omitempty" json:"GroupSummary,omitempty" yaml:"GroupSummary,omitempty"`
}

// HashtagRefinerType was auto-generated from WSDL.
type HashtagRefinerType struct {
	RefinerType   RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner       *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount   *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
	DisplayName   *string                  `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *HashtagRefinerType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:HashtagRefinerType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// HideTagResponseMessageType was auto-generated from WSDL.
type HideTagResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	WasSuccessful      *bool             `xml:"WasSuccessful,omitempty" json:"WasSuccessful,omitempty" yaml:"WasSuccessful,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *HideTagResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:HideTagResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// HideTagType was auto-generated from WSDL.
type HideTagType struct {
	Tag           string `xml:"Tag" json:"Tag" yaml:"Tag"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *HideTagType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:HideTagType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// HighlightTermType was auto-generated from WSDL.
type HighlightTermType struct {
	Scope string `xml:"Scope" json:"Scope" yaml:"Scope"`
	Value string `xml:"Value" json:"Value" yaml:"Value"`
}

// ImAddressDictionaryEntryType was auto-generated from WSDL.
type ImAddressDictionaryEntryType struct {
	Content *string          `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Key     ImAddressKeyType `xml:"Key,attr,omitempty" json:"Key,attr,omitempty" yaml:"Key,attr,omitempty"`
}

// ImAddressDictionaryType was auto-generated from WSDL.
type ImAddressDictionaryType struct {
	Entry []*ImAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty" yaml:"Entry,omitempty"`
}

// A Group on the ImContactList, with one or more members
type ImGroupType struct {
	DisplayName          *NonEmptyStringType                  `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	GroupType            *NonEmptyStringType                  `xml:"GroupType,omitempty" json:"GroupType,omitempty" yaml:"GroupType,omitempty"`
	ExchangeStoreId      *ItemIdType                          `xml:"ExchangeStoreId,omitempty" json:"ExchangeStoreId,omitempty" yaml:"ExchangeStoreId,omitempty"`
	MemberCorrelationKey *NonEmptyArrayOfItemIdsType          `xml:"MemberCorrelationKey,omitempty" json:"MemberCorrelationKey,omitempty" yaml:"MemberCorrelationKey,omitempty"`
	ExtendedProperties   *NonEmptyArrayOfExtendedPropertyType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty" yaml:"ExtendedProperties,omitempty"`
	SmtpAddress          *string                              `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
}

// IM Contact List
type ImItemListType struct {
	Groups   *ArrayOfImGroupType `xml:"Groups,omitempty" json:"Groups,omitempty" yaml:"Groups,omitempty"`
	Personas *ArrayOfPeopleType  `xml:"Personas,omitempty" json:"Personas,omitempty" yaml:"Personas,omitempty"`
}

// InboxReminderType was auto-generated from WSDL.
type InboxReminderType struct {
	Id                  *GuidType                `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	ReminderOffset      *int                     `xml:"ReminderOffset,omitempty" json:"ReminderOffset,omitempty" yaml:"ReminderOffset,omitempty"`
	Message             *string                  `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	IsOrganizerReminder *bool                    `xml:"IsOrganizerReminder,omitempty" json:"IsOrganizerReminder,omitempty" yaml:"IsOrganizerReminder,omitempty"`
	OccurrenceChange    *EmailReminderChangeType `xml:"OccurrenceChange,omitempty" json:"OccurrenceChange,omitempty" yaml:"OccurrenceChange,omitempty"`
	SendOption          *EmailReminderSendOption `xml:"SendOption,omitempty" json:"SendOption,omitempty" yaml:"SendOption,omitempty"`
	Subject             *string                  `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	RichTextMessage     *string                  `xml:"RichTextMessage,omitempty" json:"RichTextMessage,omitempty" yaml:"RichTextMessage,omitempty"`
}

// IndexedPageViewType was auto-generated from WSDL.
type IndexedPageViewType struct {
	MaxEntriesReturned int                `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,attr,omitempty" yaml:"MaxEntriesReturned,attr,omitempty"`
	Offset             int                `xml:"Offset,attr,omitempty" json:"Offset,attr,omitempty" yaml:"Offset,attr,omitempty"`
	BasePoint          IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,attr,omitempty" yaml:"BasePoint,attr,omitempty"`
	TypeAttrXSI        string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IndexedPageViewType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IndexedPageViewType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IndividualAttendeeConflictData was auto-generated from WSDL.
type IndividualAttendeeConflictData struct {
	BusyType      LegacyFreeBusyType `xml:"BusyType" json:"BusyType" yaml:"BusyType"`
	TypeAttrXSI   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IndividualAttendeeConflictData) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IndividualAttendeeConflictData"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// InferenceClassificationOverrideType was auto-generated from
// WSDL.
type InferenceClassificationOverrideType struct {
	Id                GuidType                    `xml:"Id" json:"Id" yaml:"Id"`
	SenderSmtpAddress string                      `xml:"SenderSmtpAddress" json:"SenderSmtpAddress" yaml:"SenderSmtpAddress"`
	SenderDisplayName string                      `xml:"SenderDisplayName" json:"SenderDisplayName" yaml:"SenderDisplayName"`
	AlwaysClassifyAs  InferenceClassificationType `xml:"AlwaysClassifyAs" json:"AlwaysClassifyAs" yaml:"AlwaysClassifyAs"`
}

// Insight was auto-generated from WSDL.
type Insight struct {
	InsightType   *string              `xml:"InsightType,omitempty" json:"InsightType,omitempty" yaml:"InsightType,omitempty"`
	Rank          *float64             `xml:"Rank,omitempty" json:"Rank,omitempty" yaml:"Rank,omitempty"`
	Content       *InsightContent      `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Text          *string              `xml:"Text,omitempty" json:"Text,omitempty" yaml:"Text,omitempty"`
	ItemList      *ArrayOfInsightValue `xml:"ItemList,omitempty" json:"ItemList,omitempty" yaml:"ItemList,omitempty"`
	RequiresToken *bool                `xml:"RequiresToken,omitempty" json:"RequiresToken,omitempty" yaml:"RequiresToken,omitempty"`
}

// InsightContent was auto-generated from WSDL.
type InsightContent struct {
}

// InsightContextItem was auto-generated from WSDL.
type InsightContextItem struct {
	Name *string `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Val  *string `xml:"Val,omitempty" json:"Val,omitempty" yaml:"Val,omitempty"`
}

// InsightFiltersType was auto-generated from WSDL.
type InsightFiltersType struct {
	Count           *int                `xml:"Count,omitempty" json:"Count,omitempty" yaml:"Count,omitempty"`
	Types           *ArrayOfStringsType `xml:"Types,omitempty" json:"Types,omitempty" yaml:"Types,omitempty"`
	KeyInsightsOnly *bool               `xml:"KeyInsightsOnly,omitempty" json:"KeyInsightsOnly,omitempty" yaml:"KeyInsightsOnly,omitempty"`
}

// InsightItemType was auto-generated from WSDL.
type InsightItemType struct {
	ItemId           *ItemIdType                `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	InsightId        GuidType                   `xml:"InsightId" json:"InsightId" yaml:"InsightId"`
	Type             *string                    `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	StartTimeUtc     *DateTime                  `xml:"StartTimeUtc,omitempty" json:"StartTimeUtc,omitempty" yaml:"StartTimeUtc,omitempty"`
	EndTimeUtc       *DateTime                  `xml:"EndTimeUtc,omitempty" json:"EndTimeUtc,omitempty" yaml:"EndTimeUtc,omitempty"`
	Status           *InsightStatusType         `xml:"Status,omitempty" json:"Status,omitempty" yaml:"Status,omitempty"`
	Version          *string                    `xml:"Version,omitempty" json:"Version,omitempty" yaml:"Version,omitempty"`
	Context          *ArrayOfInsightContextItem `xml:"Context,omitempty" json:"Context,omitempty" yaml:"Context,omitempty"`
	Text             *string                    `xml:"Text,omitempty" json:"Text,omitempty" yaml:"Text,omitempty"`
	ApplicationsIds  *ArrayOfStringsType        `xml:"ApplicationsIds,omitempty" json:"ApplicationsIds,omitempty" yaml:"ApplicationsIds,omitempty"`
	SuggestedActions *string                    `xml:"SuggestedActions,omitempty" json:"SuggestedActions,omitempty" yaml:"SuggestedActions,omitempty"`
	AppContexts      *ArrayOfStringsType        `xml:"AppContexts,omitempty" json:"AppContexts,omitempty" yaml:"AppContexts,omitempty"`
}

// InsightValue was auto-generated from WSDL.
type InsightValue struct {
	InsightSource   *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
}

// InstallAppResponseType was auto-generated from WSDL.
type InstallAppResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	WasFirstInstall    *bool             `xml:"WasFirstInstall,omitempty" json:"WasFirstInstall,omitempty" yaml:"WasFirstInstall,omitempty"`
	Extension          *InstalledAppType `xml:"Extension,omitempty" json:"Extension,omitempty" yaml:"Extension,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InstallAppResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InstallAppResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// InstallAppType was auto-generated from WSDL.
type InstallAppType struct {
	Manifest                 []byte  `xml:"Manifest" json:"Manifest" yaml:"Manifest"`
	MarketplaceAssetId       *string `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty" yaml:"MarketplaceAssetId,omitempty"`
	MarketplaceContentMarket *string `xml:"MarketplaceContentMarket,omitempty" json:"MarketplaceContentMarket,omitempty" yaml:"MarketplaceContentMarket,omitempty"`
	SendWelcomeEmail         *bool   `xml:"SendWelcomeEmail,omitempty" json:"SendWelcomeEmail,omitempty" yaml:"SendWelcomeEmail,omitempty"`
	ManifestUrl              *string `xml:"ManifestUrl,omitempty" json:"ManifestUrl,omitempty" yaml:"ManifestUrl,omitempty"`
	MarketplaceCorrelationId *string `xml:"MarketplaceCorrelationId,omitempty" json:"MarketplaceCorrelationId,omitempty" yaml:"MarketplaceCorrelationId,omitempty"`
	CampaignId               *string `xml:"CampaignId,omitempty" json:"CampaignId,omitempty" yaml:"CampaignId,omitempty"`
	Id                       *string `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	IsMetaOSApp              *bool   `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty" yaml:"IsMetaOSApp,omitempty"`
	MetaOSSyncData           *string `xml:"MetaOSSyncData,omitempty" json:"MetaOSSyncData,omitempty" yaml:"MetaOSSyncData,omitempty"`
	TypeAttrXSI              string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InstallAppType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InstallAppType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// InstalledAppType was auto-generated from WSDL.
type InstalledAppType struct {
	Id                    *string   `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	MarketplaceAssetId    *string   `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty" yaml:"MarketplaceAssetId,omitempty"`
	Enabled               *bool     `xml:"Enabled,omitempty" json:"Enabled,omitempty" yaml:"Enabled,omitempty"`
	ConsentState          *string   `xml:"ConsentState,omitempty" json:"ConsentState,omitempty" yaml:"ConsentState,omitempty"`
	Type                  *string   `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	LicenseStatus         *string   `xml:"LicenseStatus,omitempty" json:"LicenseStatus,omitempty" yaml:"LicenseStatus,omitempty"`
	TrialExpirationDate   *DateTime `xml:"TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty" yaml:"TrialExpirationDate,omitempty"`
	ProviderName          *string   `xml:"ProviderName,omitempty" json:"ProviderName,omitempty" yaml:"ProviderName,omitempty"`
	IconUrl               *string   `xml:"IconUrl,omitempty" json:"IconUrl,omitempty" yaml:"IconUrl,omitempty"`
	HighResolutionIconUrl *string   `xml:"HighResolutionIconUrl,omitempty" json:"HighResolutionIconUrl,omitempty" yaml:"HighResolutionIconUrl,omitempty"`
	DisplayName           *string   `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	Description           *string   `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	Requirements          *string   `xml:"Requirements,omitempty" json:"Requirements,omitempty" yaml:"Requirements,omitempty"`
	Version               *string   `xml:"Version,omitempty" json:"Version,omitempty" yaml:"Version,omitempty"`
}

// InstantSearchPayloadType was auto-generated from WSDL.
type InstantSearchPayloadType struct {
	SearchSessionId string                    `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	SearchRequestId int64                     `xml:"SearchRequestId" json:"SearchRequestId" yaml:"SearchRequestId"`
	ResultType      InstantSearchResultType   `xml:"ResultType" json:"ResultType" yaml:"ResultType"`
	Items           *ArrayOfItemsType         `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	Conversations   *ArrayOfConversationsType `xml:"Conversations,omitempty" json:"Conversations,omitempty" yaml:"Conversations,omitempty"`
	CalendarItems   *ArrayOfCalendarItemsType `xml:"CalendarItems,omitempty" json:"CalendarItems,omitempty" yaml:"CalendarItems,omitempty"`
}

// InternetHeaderType was auto-generated from WSDL.
type InternetHeaderType struct {
	Content    *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	HeaderName string  `xml:"HeaderName,attr,omitempty" json:"HeaderName,attr,omitempty" yaml:"HeaderName,attr,omitempty"`
}

// IntervalRecurrencePatternBaseType was auto-generated from WSDL.
type IntervalRecurrencePatternBaseType interface{}

// InvalidRecipientType was auto-generated from WSDL.
type InvalidRecipientType struct {
	SmtpAddress  *NonEmptyStringType               `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
	ResponseCode *InvalidRecipientResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	MessageText  *string                           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
}

// IsEqualToType was auto-generated from WSDL.
type IsEqualToType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsEqualToType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsEqualToType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IsGreaterThanOrEqualToType was auto-generated from WSDL.
type IsGreaterThanOrEqualToType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsGreaterThanOrEqualToType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsGreaterThanOrEqualToType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IsGreaterThanType was auto-generated from WSDL.
type IsGreaterThanType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsGreaterThanType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsGreaterThanType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IsLessThanOrEqualToType was auto-generated from WSDL.
type IsLessThanOrEqualToType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsLessThanOrEqualToType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsLessThanOrEqualToType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IsLessThanType was auto-generated from WSDL.
type IsLessThanType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsLessThanType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsLessThanType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// IsNotEqualToType was auto-generated from WSDL.
type IsNotEqualToType struct {
	Path               *BasePathToElementType  `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty" yaml:"FieldURIOrConstant,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *IsNotEqualToType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:IsNotEqualToType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ItemAttachmentType was auto-generated from WSDL.
type ItemAttachmentType struct {
	AttachmentId          *AttachmentIdType               `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	Name                  *string                         `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	ContentType           *string                         `xml:"ContentType,omitempty" json:"ContentType,omitempty" yaml:"ContentType,omitempty"`
	ContentId             *string                         `xml:"ContentId,omitempty" json:"ContentId,omitempty" yaml:"ContentId,omitempty"`
	ContentLocation       *string                         `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty" yaml:"ContentLocation,omitempty"`
	AttachmentOriginalUrl *string                         `xml:"AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty" yaml:"AttachmentOriginalUrl,omitempty"`
	Size                  *int                            `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	LastModifiedTime      *DateTime                       `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsInline              *bool                           `xml:"IsInline,omitempty" json:"IsInline,omitempty" yaml:"IsInline,omitempty"`
	Item                  *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message               *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage        *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem          *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact               *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	MeetingMessage        *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest        *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse       *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation   *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                  *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem              *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	RoleMember            *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network               *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person                *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
	TypeAttrXSI           string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ItemAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ItemAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ItemChangeDescriptionType was auto-generated from WSDL.
type ItemChangeDescriptionType struct {
	Path          *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ItemChangeDescriptionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ItemChangeDescriptionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ItemChangeType was auto-generated from WSDL.
type ItemChangeType struct {
	Updates               *NonEmptyArrayOfItemChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty" yaml:"Updates,omitempty"`
	CalendarActivityData  *CalendarActivityDataType                  `xml:"CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty" yaml:"CalendarActivityData,omitempty"`
	ItemId                *ItemIdType                                `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	OccurrenceItemId      *OccurrenceItemIdType                      `xml:"OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty" yaml:"OccurrenceItemId,omitempty"`
	RecurringMasterItemId *RecurringMasterItemIdType                 `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty" yaml:"RecurringMasterItemId,omitempty"`
}

// Identifier for a fully resolved item
type ItemIdType struct {
	Id            string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey     string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ItemInfoResponseMessageType was auto-generated from WSDL.
type ItemInfoResponseMessageType struct {
	MessageText        *string               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Items              *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	TypeAttrXSI        string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ItemInfoResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ItemInfoResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ItemResponseShapeType was auto-generated from WSDL.
type ItemResponseShapeType struct {
	BaseShape                 *DefaultShapeNamesType             `xml:"BaseShape,omitempty" json:"BaseShape,omitempty" yaml:"BaseShape,omitempty"`
	IncludeMimeContent        *bool                              `xml:"IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty" yaml:"IncludeMimeContent,omitempty"`
	BodyType                  *BodyTypeResponseType              `xml:"BodyType,omitempty" json:"BodyType,omitempty" yaml:"BodyType,omitempty"`
	UniqueBodyType            *BodyTypeResponseType              `xml:"UniqueBodyType,omitempty" json:"UniqueBodyType,omitempty" yaml:"UniqueBodyType,omitempty"`
	NormalizedBodyType        *BodyTypeResponseType              `xml:"NormalizedBodyType,omitempty" json:"NormalizedBodyType,omitempty" yaml:"NormalizedBodyType,omitempty"`
	FilterHtmlContent         *bool                              `xml:"FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty" yaml:"FilterHtmlContent,omitempty"`
	ConvertHtmlCodePageToUTF8 *bool                              `xml:"ConvertHtmlCodePageToUTF8,omitempty" json:"ConvertHtmlCodePageToUTF8,omitempty" yaml:"ConvertHtmlCodePageToUTF8,omitempty"`
	InlineImageUrlTemplate    *string                            `xml:"InlineImageUrlTemplate,omitempty" json:"InlineImageUrlTemplate,omitempty" yaml:"InlineImageUrlTemplate,omitempty"`
	BlockExternalImages       *bool                              `xml:"BlockExternalImages,omitempty" json:"BlockExternalImages,omitempty" yaml:"BlockExternalImages,omitempty"`
	AddBlankTargetToLinks     *bool                              `xml:"AddBlankTargetToLinks,omitempty" json:"AddBlankTargetToLinks,omitempty" yaml:"AddBlankTargetToLinks,omitempty"`
	MaximumBodySize           *int                               `xml:"MaximumBodySize,omitempty" json:"MaximumBodySize,omitempty" yaml:"MaximumBodySize,omitempty"`
	AdditionalProperties      *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// ItemType was auto-generated from WSDL.
type ItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
}

// JobInsightValue was auto-generated from WSDL.
type JobInsightValue struct {
	InsightSource      *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks    *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Company            *string `xml:"Company,omitempty" json:"Company,omitempty" yaml:"Company,omitempty"`
	CompanyDescription *string `xml:"CompanyDescription,omitempty" json:"CompanyDescription,omitempty" yaml:"CompanyDescription,omitempty"`
	CompanyTicker      *string `xml:"CompanyTicker,omitempty" json:"CompanyTicker,omitempty" yaml:"CompanyTicker,omitempty"`
	CompanyLogoUrl     *string `xml:"CompanyLogoUrl,omitempty" json:"CompanyLogoUrl,omitempty" yaml:"CompanyLogoUrl,omitempty"`
	CompanyWebsiteUrl  *string `xml:"CompanyWebsiteUrl,omitempty" json:"CompanyWebsiteUrl,omitempty" yaml:"CompanyWebsiteUrl,omitempty"`
	CompanyLinkedInUrl *string `xml:"CompanyLinkedInUrl,omitempty" json:"CompanyLinkedInUrl,omitempty" yaml:"CompanyLinkedInUrl,omitempty"`
	Title              *string `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	StartUtcTicks      *int64  `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty" yaml:"StartUtcTicks,omitempty"`
	EndUtcTicks        *int64  `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty" yaml:"EndUtcTicks,omitempty"`
	TypeAttrXSI        string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *JobInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:JobInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Keyword statistics search result.
type KeywordStatisticsSearchResultType struct {
	Keyword  string `xml:"Keyword" json:"Keyword" yaml:"Keyword"`
	ItemHits int    `xml:"ItemHits" json:"ItemHits" yaml:"ItemHits"`
	Size     int64  `xml:"Size" json:"Size" yaml:"Size"`
}

// LargeArchiveSearchScopeType was auto-generated from WSDL.
type LargeArchiveSearchScopeType struct {
	ArchiveTypes *SearchScopeArchivesType `xml:"ArchiveTypes,omitempty" json:"ArchiveTypes,omitempty" yaml:"ArchiveTypes,omitempty"`
}

// LikeType was auto-generated from WSDL.
type LikeType struct {
	Id                    string                    `xml:"Id" json:"Id" yaml:"Id"`
	CreatedBy             *EmailAddressExtendedType `xml:"CreatedBy" json:"CreatedBy" yaml:"CreatedBy"`
	CreatedDateTime       *string                   `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty" yaml:"CreatedDateTime,omitempty"`
	ServerCreatedDateTime *string                   `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty" yaml:"ServerCreatedDateTime,omitempty"`
	DeepLink              *string                   `xml:"DeepLink,omitempty" json:"DeepLink,omitempty" yaml:"DeepLink,omitempty"`
	Application           *string                   `xml:"Application,omitempty" json:"Application,omitempty" yaml:"Application,omitempty"`
}

// LikesPreviewType was auto-generated from WSDL.
type LikesPreviewType struct {
	LikeCount int `xml:"LikeCount" json:"LikeCount" yaml:"LikeCount"`
}

// LocationBasedStateDefinitionType was auto-generated from WSDL.
type LocationBasedStateDefinitionType struct {
	OrganizerLocation string `xml:"OrganizerLocation" json:"OrganizerLocation" yaml:"OrganizerLocation"`
	AttendeeLocation  string `xml:"AttendeeLocation" json:"AttendeeLocation" yaml:"AttendeeLocation"`
	TypeAttrXSI       string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LocationBasedStateDefinitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LocationBasedStateDefinitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// LocationConstraintItem was auto-generated from WSDL.
type LocationConstraintItem struct {
	Email               *string `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	Name                *string `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	ResolveAvailability *bool   `xml:"ResolveAvailability,omitempty" json:"ResolveAvailability,omitempty" yaml:"ResolveAvailability,omitempty"`
	TypeAttrXSI         string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LocationConstraintItem) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LocationConstraintItem"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MailTips was auto-generated from WSDL.
type MailTips struct {
	RecipientAddress        *EmailAddressType                `xml:"RecipientAddress" json:"RecipientAddress" yaml:"RecipientAddress"`
	PendingMailTips         MailTipTypes                     `xml:"PendingMailTips" json:"PendingMailTips" yaml:"PendingMailTips"`
	OutOfOffice             *OutOfOfficeMailTip              `xml:"OutOfOffice,omitempty" json:"OutOfOffice,omitempty" yaml:"OutOfOffice,omitempty"`
	MailboxFull             *bool                            `xml:"MailboxFull,omitempty" json:"MailboxFull,omitempty" yaml:"MailboxFull,omitempty"`
	CustomMailTip           *string                          `xml:"CustomMailTip,omitempty" json:"CustomMailTip,omitempty" yaml:"CustomMailTip,omitempty"`
	TotalMemberCount        *int                             `xml:"TotalMemberCount,omitempty" json:"TotalMemberCount,omitempty" yaml:"TotalMemberCount,omitempty"`
	ExternalMemberCount     *int                             `xml:"ExternalMemberCount,omitempty" json:"ExternalMemberCount,omitempty" yaml:"ExternalMemberCount,omitempty"`
	MaxMessageSize          *int                             `xml:"MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty" yaml:"MaxMessageSize,omitempty"`
	DeliveryRestricted      *bool                            `xml:"DeliveryRestricted,omitempty" json:"DeliveryRestricted,omitempty" yaml:"DeliveryRestricted,omitempty"`
	IsModerated             *bool                            `xml:"IsModerated,omitempty" json:"IsModerated,omitempty" yaml:"IsModerated,omitempty"`
	InvalidRecipient        *bool                            `xml:"InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty" yaml:"InvalidRecipient,omitempty"`
	Scope                   *int                             `xml:"Scope,omitempty" json:"Scope,omitempty" yaml:"Scope,omitempty"`
	RecipientSuggestions    *ArrayOfRecipientSuggestionsType `xml:"RecipientSuggestions,omitempty" json:"RecipientSuggestions,omitempty" yaml:"RecipientSuggestions,omitempty"`
	PreferAccessibleContent *bool                            `xml:"PreferAccessibleContent,omitempty" json:"PreferAccessibleContent,omitempty" yaml:"PreferAccessibleContent,omitempty"`
}

// MailTipsResponseMessageType was auto-generated from WSDL.
type MailTipsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MailTips           *MailTips         `xml:"MailTips,omitempty" json:"MailTips,omitempty" yaml:"MailTips,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MailTipsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MailTipsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MailTipsServiceConfiguration was auto-generated from WSDL.
type MailTipsServiceConfiguration struct {
	MailTipsEnabled                    bool            `xml:"MailTipsEnabled" json:"MailTipsEnabled" yaml:"MailTipsEnabled"`
	MaxRecipientsPerGetMailTipsRequest int             `xml:"MaxRecipientsPerGetMailTipsRequest" json:"MaxRecipientsPerGetMailTipsRequest" yaml:"MaxRecipientsPerGetMailTipsRequest"`
	MaxMessageSize                     int             `xml:"MaxMessageSize" json:"MaxMessageSize" yaml:"MaxMessageSize"`
	LargeAudienceThreshold             int             `xml:"LargeAudienceThreshold" json:"LargeAudienceThreshold" yaml:"LargeAudienceThreshold"`
	ShowExternalRecipientCount         bool            `xml:"ShowExternalRecipientCount" json:"ShowExternalRecipientCount" yaml:"ShowExternalRecipientCount"`
	InternalDomains                    *SmtpDomainList `xml:"InternalDomains" json:"InternalDomains" yaml:"InternalDomains"`
	PolicyTipsEnabled                  bool            `xml:"PolicyTipsEnabled" json:"PolicyTipsEnabled" yaml:"PolicyTipsEnabled"`
	LargeAudienceCap                   int             `xml:"LargeAudienceCap" json:"LargeAudienceCap" yaml:"LargeAudienceCap"`
	TypeAttrXSI                        string          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                      string          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MailTipsServiceConfiguration) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MailTipsServiceConfiguration"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MailboxCultureType was auto-generated from WSDL.
type MailboxCultureType struct {
	Content *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// MailboxData was auto-generated from WSDL.
type MailboxData struct {
	Email            *EmailAddress       `xml:"Email" json:"Email" yaml:"Email"`
	AttendeeType     MeetingAttendeeType `xml:"AttendeeType" json:"AttendeeType" yaml:"AttendeeType"`
	ExcludeConflicts *bool               `xml:"ExcludeConflicts,omitempty" json:"ExcludeConflicts,omitempty" yaml:"ExcludeConflicts,omitempty"`
}

// Mailbox hold result.
type MailboxHoldResultType struct {
	HoldId              *string                       `xml:"HoldId,omitempty" json:"HoldId,omitempty" yaml:"HoldId,omitempty"`
	Query               *string                       `xml:"Query,omitempty" json:"Query,omitempty" yaml:"Query,omitempty"`
	MailboxHoldStatuses *ArrayOfMailboxHoldStatusType `xml:"MailboxHoldStatuses,omitempty" json:"MailboxHoldStatuses,omitempty" yaml:"MailboxHoldStatuses,omitempty"`
}

// Mailbox hold status.
type MailboxHoldStatusType struct {
	Mailbox        string         `xml:"Mailbox" json:"Mailbox" yaml:"Mailbox"`
	Status         HoldStatusType `xml:"Status" json:"Status" yaml:"Status"`
	AdditionalInfo *string        `xml:"AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty" yaml:"AdditionalInfo,omitempty"`
}

// MailboxInformationType was auto-generated from WSDL.
type MailboxInformationType struct {
}

// MailboxLocatorType was auto-generated from WSDL.
type MailboxLocatorType struct {
	ExternalDirectoryObjectId *string `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty" yaml:"ExternalDirectoryObjectId,omitempty"`
	LegacyDn                  *string `xml:"LegacyDn,omitempty" json:"LegacyDn,omitempty" yaml:"LegacyDn,omitempty"`
	EmailAddress              *string `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	DisplayName               *string `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	OrganizationId            *string `xml:"OrganizationId,omitempty" json:"OrganizationId,omitempty" yaml:"OrganizationId,omitempty"`
}

// Pair of query and a set of mailbox search scopes.
type MailboxQueryType struct {
	Query               string                                  `xml:"Query" json:"Query" yaml:"Query"`
	MailboxSearchScopes *NonEmptyArrayOfMailboxSearchScopesType `xml:"MailboxSearchScopes" json:"MailboxSearchScopes" yaml:"MailboxSearchScopes"`
}

// MailboxRefinerType was auto-generated from WSDL.
type MailboxRefinerType struct {
	RefinerType        RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner            *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount        *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
	MailboxDisplayName *string                  `xml:"MailboxDisplayName,omitempty" json:"MailboxDisplayName,omitempty" yaml:"MailboxDisplayName,omitempty"`
	TypeAttrXSI        string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MailboxRefinerType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MailboxRefinerType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Set of mailbox, search scope and its extended attributes.
type MailboxSearchScopeType struct {
	Mailbox            string                         `xml:"Mailbox" json:"Mailbox" yaml:"Mailbox"`
	SearchScope        MailboxSearchLocationType      `xml:"SearchScope" json:"SearchScope" yaml:"SearchScope"`
	ExtendedAttributes *ArrayOfExtendedAttributesType `xml:"ExtendedAttributes,omitempty" json:"ExtendedAttributes,omitempty" yaml:"ExtendedAttributes,omitempty"`
}

// Mailbox statistics item.
type MailboxStatisticsItemType struct {
	MailboxId   string `xml:"MailboxId" json:"MailboxId" yaml:"MailboxId"`
	DisplayName string `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	ItemCount   int64  `xml:"ItemCount" json:"ItemCount" yaml:"ItemCount"`
	Size        int64  `xml:"Size" json:"Size" yaml:"Size"`
}

// Mailbox statistics search result.
type MailboxStatisticsSearchResultType struct {
	UserMailbox                   *UserMailboxType                   `xml:"UserMailbox" json:"UserMailbox" yaml:"UserMailbox"`
	KeywordStatisticsSearchResult *KeywordStatisticsSearchResultType `xml:"KeywordStatisticsSearchResult,omitempty" json:"KeywordStatisticsSearchResult,omitempty" yaml:"KeywordStatisticsSearchResult,omitempty"`
}

// Compound property for Managed Folder related information for
// Managed Folders.
type ManagedFolderInformationType struct {
	CanDelete            *bool   `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	CanRenameOrMove      *bool   `xml:"CanRenameOrMove,omitempty" json:"CanRenameOrMove,omitempty" yaml:"CanRenameOrMove,omitempty"`
	MustDisplayComment   *bool   `xml:"MustDisplayComment,omitempty" json:"MustDisplayComment,omitempty" yaml:"MustDisplayComment,omitempty"`
	HasQuota             *bool   `xml:"HasQuota,omitempty" json:"HasQuota,omitempty" yaml:"HasQuota,omitempty"`
	IsManagedFoldersRoot *bool   `xml:"IsManagedFoldersRoot,omitempty" json:"IsManagedFoldersRoot,omitempty" yaml:"IsManagedFoldersRoot,omitempty"`
	ManagedFolderId      *string `xml:"ManagedFolderId,omitempty" json:"ManagedFolderId,omitempty" yaml:"ManagedFolderId,omitempty"`
	Comment              *string `xml:"Comment,omitempty" json:"Comment,omitempty" yaml:"Comment,omitempty"`
	StorageQuota         *int    `xml:"StorageQuota,omitempty" json:"StorageQuota,omitempty" yaml:"StorageQuota,omitempty"`
	FolderSize           *int    `xml:"FolderSize,omitempty" json:"FolderSize,omitempty" yaml:"FolderSize,omitempty"`
	HomePage             *string `xml:"HomePage,omitempty" json:"HomePage,omitempty" yaml:"HomePage,omitempty"`
}

// ManagementRoleType was auto-generated from WSDL.
type ManagementRoleType struct {
	UserRoles        *NonEmptyArrayOfRoleType `xml:"UserRoles,omitempty" json:"UserRoles,omitempty" yaml:"UserRoles,omitempty"`
	ApplicationRoles *NonEmptyArrayOfRoleType `xml:"ApplicationRoles,omitempty" json:"ApplicationRoles,omitempty" yaml:"ApplicationRoles,omitempty"`
}

// MarkAllItemsAsReadResponseType was auto-generated from WSDL.
type MarkAllItemsAsReadResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAllItemsAsReadResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAllItemsAsReadResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAllItemsAsReadType was auto-generated from WSDL.
type MarkAllItemsAsReadType struct {
	ReadFlag             bool                              `xml:"ReadFlag" json:"ReadFlag" yaml:"ReadFlag"`
	SuppressReadReceipts bool                              `xml:"SuppressReadReceipts" json:"SuppressReadReceipts" yaml:"SuppressReadReceipts"`
	FolderIds            *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI          string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAllItemsAsReadType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAllItemsAsReadType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsJunkResponseMessageType was auto-generated from WSDL.
type MarkAsJunkResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsJunkResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsJunkResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsJunkResponseType was auto-generated from WSDL.
type MarkAsJunkResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsJunkResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsJunkResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsJunkType was auto-generated from WSDL.
type MarkAsJunkType struct {
	IsJunk        bool                            `xml:"IsJunk,attr,omitempty" json:"IsJunk,attr,omitempty" yaml:"IsJunk,attr,omitempty"`
	MoveItem      bool                            `xml:"MoveItem,attr,omitempty" json:"MoveItem,attr,omitempty" yaml:"MoveItem,attr,omitempty"`
	ItemIds       *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds" json:"ItemIds" yaml:"ItemIds"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsJunkType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsJunkType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsPhishingResponseMessageType was auto-generated from WSDL.
type MarkAsPhishingResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsPhishingResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsPhishingResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsPhishingResponseType was auto-generated from WSDL.
type MarkAsPhishingResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsPhishingResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsPhishingResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MarkAsPhishingType was auto-generated from WSDL.
type MarkAsPhishingType struct {
	MoveItem      bool                            `xml:"MoveItem,attr,omitempty" json:"MoveItem,attr,omitempty" yaml:"MoveItem,attr,omitempty"`
	ItemIds       *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds" json:"ItemIds" yaml:"ItemIds"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MarkAsPhishingType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MarkAsPhishingType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MeetingCancellationMessageType was auto-generated from WSDL.
type MeetingCancellationMessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	AssociatedCalendarItemId     *ItemIdType                               `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty" yaml:"AssociatedCalendarItemId,omitempty"`
	IsDelegated                  *bool                                     `xml:"IsDelegated,omitempty" json:"IsDelegated,omitempty" yaml:"IsDelegated,omitempty"`
	IsOutOfDate                  *bool                                     `xml:"IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty" yaml:"IsOutOfDate,omitempty"`
	HasBeenProcessed             *bool                                     `xml:"HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty" yaml:"HasBeenProcessed,omitempty"`
	ResponseType                 *ResponseTypeType                         `xml:"ResponseType,omitempty" json:"ResponseType,omitempty" yaml:"ResponseType,omitempty"`
	UID                          *string                                   `xml:"UID,omitempty" json:"UID,omitempty" yaml:"UID,omitempty"`
	RecurrenceId                 *DateTime                                 `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty" yaml:"RecurrenceId,omitempty"`
	DateTimeStamp                *DateTime                                 `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty" yaml:"DateTimeStamp,omitempty"`
	IsOrganizer                  *bool                                     `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty" yaml:"IsOrganizer,omitempty"`
	Start                        *DateTime                                 `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	End                          *DateTime                                 `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
	Location                     *string                                   `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	Recurrence                   *RecurrenceType                           `xml:"Recurrence,omitempty" json:"Recurrence,omitempty" yaml:"Recurrence,omitempty"`
	CalendarItemType             *string                                   `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty" yaml:"CalendarItemType,omitempty"`
	EnhancedLocation             *EnhancedLocationType                     `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty" yaml:"EnhancedLocation,omitempty"`
	DoNotForwardMeeting          *bool                                     `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty" yaml:"DoNotForwardMeeting,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingCancellationMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingCancellationMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingInsightValue was auto-generated from WSDL.
type MeetingInsightValue struct {
	InsightSource   *string                     `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64                      `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Id              *string                     `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	Subject         *string                     `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	StartUtcTicks   *int64                      `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty" yaml:"StartUtcTicks,omitempty"`
	EndUtcTicks     *int64                      `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty" yaml:"EndUtcTicks,omitempty"`
	Location        *string                     `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	Organizer       *ProfileInsightValue        `xml:"Organizer,omitempty" json:"Organizer,omitempty" yaml:"Organizer,omitempty"`
	Attendees       *ArrayOfProfileInsightValue `xml:"Attendees,omitempty" json:"Attendees,omitempty" yaml:"Attendees,omitempty"`
	TypeAttrXSI     string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingInstanceType was auto-generated from WSDL.
type MeetingInstanceType struct {
	Id                    *string                               `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	ChangeKey             *string                               `xml:"ChangeKey,omitempty" json:"ChangeKey,omitempty" yaml:"ChangeKey,omitempty"`
	Version               *string                               `xml:"Version,omitempty" json:"Version,omitempty" yaml:"Version,omitempty"`
	JoinUrl               *string                               `xml:"JoinUrl,omitempty" json:"JoinUrl,omitempty" yaml:"JoinUrl,omitempty"`
	DateTimeCreated       *string                               `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	DateTimeModified      *string                               `xml:"DateTimeModified,omitempty" json:"DateTimeModified,omitempty" yaml:"DateTimeModified,omitempty"`
	Meadata               *string                               `xml:"Meadata,omitempty" json:"Meadata,omitempty" yaml:"Meadata,omitempty"`
	Tag                   *string                               `xml:"Tag,omitempty" json:"Tag,omitempty" yaml:"Tag,omitempty"`
	ParentGoid            *string                               `xml:"ParentGoid,omitempty" json:"ParentGoid,omitempty" yaml:"ParentGoid,omitempty"`
	ParticipantActivities *NonEmptyArrayOfParticipantActivities `xml:"ParticipantActivities,omitempty" json:"ParticipantActivities,omitempty" yaml:"ParticipantActivities,omitempty"`
	ContentActivities     *NonEmptyArrayOfContentActivities     `xml:"ContentActivities,omitempty" json:"ContentActivities,omitempty" yaml:"ContentActivities,omitempty"`
}

// MeetingLocation was auto-generated from WSDL.
type MeetingLocation struct {
	EmailAddress *string `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	DisplayName  *string `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
}

// MeetingMessageType was auto-generated from WSDL.
type MeetingMessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	AssociatedCalendarItemId     *ItemIdType                               `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty" yaml:"AssociatedCalendarItemId,omitempty"`
	IsDelegated                  *bool                                     `xml:"IsDelegated,omitempty" json:"IsDelegated,omitempty" yaml:"IsDelegated,omitempty"`
	IsOutOfDate                  *bool                                     `xml:"IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty" yaml:"IsOutOfDate,omitempty"`
	HasBeenProcessed             *bool                                     `xml:"HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty" yaml:"HasBeenProcessed,omitempty"`
	ResponseType                 *ResponseTypeType                         `xml:"ResponseType,omitempty" json:"ResponseType,omitempty" yaml:"ResponseType,omitempty"`
	UID                          *string                                   `xml:"UID,omitempty" json:"UID,omitempty" yaml:"UID,omitempty"`
	RecurrenceId                 *DateTime                                 `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty" yaml:"RecurrenceId,omitempty"`
	DateTimeStamp                *DateTime                                 `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty" yaml:"DateTimeStamp,omitempty"`
	IsOrganizer                  *bool                                     `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty" yaml:"IsOrganizer,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingRegistrationResponseObjectType was auto-generated from
// WSDL.
type MeetingRegistrationResponseObjectType struct {
	ProposedStart *DateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd   *DateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingRegistrationResponseObjectType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingRegistrationResponseObjectType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingRequestMessageType was auto-generated from WSDL.
type MeetingRequestMessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	AssociatedCalendarItemId     *ItemIdType                               `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty" yaml:"AssociatedCalendarItemId,omitempty"`
	IsDelegated                  *bool                                     `xml:"IsDelegated,omitempty" json:"IsDelegated,omitempty" yaml:"IsDelegated,omitempty"`
	IsOutOfDate                  *bool                                     `xml:"IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty" yaml:"IsOutOfDate,omitempty"`
	HasBeenProcessed             *bool                                     `xml:"HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty" yaml:"HasBeenProcessed,omitempty"`
	ResponseType                 *ResponseTypeType                         `xml:"ResponseType,omitempty" json:"ResponseType,omitempty" yaml:"ResponseType,omitempty"`
	UID                          *string                                   `xml:"UID,omitempty" json:"UID,omitempty" yaml:"UID,omitempty"`
	RecurrenceId                 *DateTime                                 `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty" yaml:"RecurrenceId,omitempty"`
	DateTimeStamp                *DateTime                                 `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty" yaml:"DateTimeStamp,omitempty"`
	IsOrganizer                  *bool                                     `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty" yaml:"IsOrganizer,omitempty"`
	MeetingRequestType           *MeetingRequestTypeType                   `xml:"MeetingRequestType,omitempty" json:"MeetingRequestType,omitempty" yaml:"MeetingRequestType,omitempty"`
	IntendedFreeBusyStatus       *LegacyFreeBusyType                       `xml:"IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty" yaml:"IntendedFreeBusyStatus,omitempty"`
	Start                        *DateTime                                 `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	End                          *DateTime                                 `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
	OriginalStart                *DateTime                                 `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty" yaml:"OriginalStart,omitempty"`
	IsAllDayEvent                *bool                                     `xml:"IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty" yaml:"IsAllDayEvent,omitempty"`
	LegacyFreeBusyStatus         *LegacyFreeBusyType                       `xml:"LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty" yaml:"LegacyFreeBusyStatus,omitempty"`
	Location                     *string                                   `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	When                         *string                                   `xml:"When,omitempty" json:"When,omitempty" yaml:"When,omitempty"`
	IsMeeting                    *bool                                     `xml:"IsMeeting,omitempty" json:"IsMeeting,omitempty" yaml:"IsMeeting,omitempty"`
	IsCancelled                  *bool                                     `xml:"IsCancelled,omitempty" json:"IsCancelled,omitempty" yaml:"IsCancelled,omitempty"`
	IsRecurring                  *bool                                     `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty" yaml:"IsRecurring,omitempty"`
	MeetingRequestWasSent        *bool                                     `xml:"MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty" yaml:"MeetingRequestWasSent,omitempty"`
	CalendarItemType             *CalendarItemTypeType                     `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty" yaml:"CalendarItemType,omitempty"`
	MyResponseType               *ResponseTypeType                         `xml:"MyResponseType,omitempty" json:"MyResponseType,omitempty" yaml:"MyResponseType,omitempty"`
	Organizer                    *SingleRecipientType                      `xml:"Organizer,omitempty" json:"Organizer,omitempty" yaml:"Organizer,omitempty"`
	RequiredAttendees            *NonEmptyArrayOfAttendeesType             `xml:"RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty" yaml:"RequiredAttendees,omitempty"`
	OptionalAttendees            *NonEmptyArrayOfAttendeesType             `xml:"OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty" yaml:"OptionalAttendees,omitempty"`
	Resources                    *NonEmptyArrayOfAttendeesType             `xml:"Resources,omitempty" json:"Resources,omitempty" yaml:"Resources,omitempty"`
	ConflictingMeetingCount      *int                                      `xml:"ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty" yaml:"ConflictingMeetingCount,omitempty"`
	AdjacentMeetingCount         *int                                      `xml:"AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty" yaml:"AdjacentMeetingCount,omitempty"`
	ConflictingMeetings          *NonEmptyArrayOfAllItemsType              `xml:"ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty" yaml:"ConflictingMeetings,omitempty"`
	AdjacentMeetings             *NonEmptyArrayOfAllItemsType              `xml:"AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty" yaml:"AdjacentMeetings,omitempty"`
	Duration                     *string                                   `xml:"Duration,omitempty" json:"Duration,omitempty" yaml:"Duration,omitempty"`
	TimeZone                     *string                                   `xml:"TimeZone,omitempty" json:"TimeZone,omitempty" yaml:"TimeZone,omitempty"`
	AppointmentReplyTime         *DateTime                                 `xml:"AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty" yaml:"AppointmentReplyTime,omitempty"`
	AppointmentSequenceNumber    *int                                      `xml:"AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty" yaml:"AppointmentSequenceNumber,omitempty"`
	AppointmentState             *int                                      `xml:"AppointmentState,omitempty" json:"AppointmentState,omitempty" yaml:"AppointmentState,omitempty"`
	Recurrence                   *RecurrenceType                           `xml:"Recurrence,omitempty" json:"Recurrence,omitempty" yaml:"Recurrence,omitempty"`
	FirstOccurrence              *OccurrenceInfoType                       `xml:"FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty" yaml:"FirstOccurrence,omitempty"`
	LastOccurrence               *OccurrenceInfoType                       `xml:"LastOccurrence,omitempty" json:"LastOccurrence,omitempty" yaml:"LastOccurrence,omitempty"`
	ModifiedOccurrences          *NonEmptyArrayOfOccurrenceInfoType        `xml:"ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty" yaml:"ModifiedOccurrences,omitempty"`
	DeletedOccurrences           *NonEmptyArrayOfDeletedOccurrencesType    `xml:"DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty" yaml:"DeletedOccurrences,omitempty"`
	MeetingTimeZone              *TimeZoneType                             `xml:"MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty" yaml:"MeetingTimeZone,omitempty"`
	StartTimeZone                *TimeZoneDefinitionType                   `xml:"StartTimeZone,omitempty" json:"StartTimeZone,omitempty" yaml:"StartTimeZone,omitempty"`
	EndTimeZone                  *TimeZoneDefinitionType                   `xml:"EndTimeZone,omitempty" json:"EndTimeZone,omitempty" yaml:"EndTimeZone,omitempty"`
	ConferenceType               *int                                      `xml:"ConferenceType,omitempty" json:"ConferenceType,omitempty" yaml:"ConferenceType,omitempty"`
	AllowNewTimeProposal         *bool                                     `xml:"AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty" yaml:"AllowNewTimeProposal,omitempty"`
	IsOnlineMeeting              *bool                                     `xml:"IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty" yaml:"IsOnlineMeeting,omitempty"`
	MeetingWorkspaceUrl          *string                                   `xml:"MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty" yaml:"MeetingWorkspaceUrl,omitempty"`
	NetShowUrl                   *string                                   `xml:"NetShowUrl,omitempty" json:"NetShowUrl,omitempty" yaml:"NetShowUrl,omitempty"`
	EnhancedLocation             *EnhancedLocationType                     `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty" yaml:"EnhancedLocation,omitempty"`
	ChangeHighlights             *ChangeHighlightsType                     `xml:"ChangeHighlights,omitempty" json:"ChangeHighlights,omitempty" yaml:"ChangeHighlights,omitempty"`
	StartWallClock               *DateTime                                 `xml:"StartWallClock,omitempty" json:"StartWallClock,omitempty" yaml:"StartWallClock,omitempty"`
	EndWallClock                 *DateTime                                 `xml:"EndWallClock,omitempty" json:"EndWallClock,omitempty" yaml:"EndWallClock,omitempty"`
	StartTimeZoneId              *string                                   `xml:"StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty" yaml:"StartTimeZoneId,omitempty"`
	EndTimeZoneId                *string                                   `xml:"EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty" yaml:"EndTimeZoneId,omitempty"`
	DoNotForwardMeeting          *bool                                     `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty" yaml:"DoNotForwardMeeting,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingRequestMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingRequestMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingResponseMessageType was auto-generated from WSDL.
type MeetingResponseMessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	AssociatedCalendarItemId     *ItemIdType                               `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty" yaml:"AssociatedCalendarItemId,omitempty"`
	IsDelegated                  *bool                                     `xml:"IsDelegated,omitempty" json:"IsDelegated,omitempty" yaml:"IsDelegated,omitempty"`
	IsOutOfDate                  *bool                                     `xml:"IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty" yaml:"IsOutOfDate,omitempty"`
	HasBeenProcessed             *bool                                     `xml:"HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty" yaml:"HasBeenProcessed,omitempty"`
	ResponseType                 *ResponseTypeType                         `xml:"ResponseType,omitempty" json:"ResponseType,omitempty" yaml:"ResponseType,omitempty"`
	UID                          *string                                   `xml:"UID,omitempty" json:"UID,omitempty" yaml:"UID,omitempty"`
	RecurrenceId                 *DateTime                                 `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty" yaml:"RecurrenceId,omitempty"`
	DateTimeStamp                *DateTime                                 `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty" yaml:"DateTimeStamp,omitempty"`
	IsOrganizer                  *bool                                     `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty" yaml:"IsOrganizer,omitempty"`
	Start                        *DateTime                                 `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	End                          *DateTime                                 `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
	Location                     *string                                   `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	Recurrence                   *RecurrenceType                           `xml:"Recurrence,omitempty" json:"Recurrence,omitempty" yaml:"Recurrence,omitempty"`
	CalendarItemType             *string                                   `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty" yaml:"CalendarItemType,omitempty"`
	ProposedStart                *DateTime                                 `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd                  *DateTime                                 `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
	EnhancedLocation             *EnhancedLocationType                     `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty" yaml:"EnhancedLocation,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingSpaceType was auto-generated from WSDL.
type MeetingSpaceType struct {
	Id               *string               `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	ChangeKey        *string               `xml:"ChangeKey,omitempty" json:"ChangeKey,omitempty" yaml:"ChangeKey,omitempty"`
	Type             *MeetingSpaceTypeEnum `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	Version          *string               `xml:"Version,omitempty" json:"Version,omitempty" yaml:"Version,omitempty"`
	JoinUrl          *string               `xml:"JoinUrl,omitempty" json:"JoinUrl,omitempty" yaml:"JoinUrl,omitempty"`
	DateTimeCreated  *string               `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	DateTimeModified *string               `xml:"DateTimeModified,omitempty" json:"DateTimeModified,omitempty" yaml:"DateTimeModified,omitempty"`
	ExpiryTime       *string               `xml:"ExpiryTime,omitempty" json:"ExpiryTime,omitempty" yaml:"ExpiryTime,omitempty"`
	Meadata          *string               `xml:"Meadata,omitempty" json:"Meadata,omitempty" yaml:"Meadata,omitempty"`
	Tag              *string               `xml:"Tag,omitempty" json:"Tag,omitempty" yaml:"Tag,omitempty"`
}

// MeetingSuggestionType was auto-generated from WSDL.
type MeetingSuggestionType struct {
	Position             []*EmailPositionType   `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	Attendees            *ArrayOfEmailUsersType `xml:"Attendees,omitempty" json:"Attendees,omitempty" yaml:"Attendees,omitempty"`
	Location             *string                `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	Subject              *string                `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	MeetingString        *string                `xml:"MeetingString,omitempty" json:"MeetingString,omitempty" yaml:"MeetingString,omitempty"`
	StartTime            *DateTime              `xml:"StartTime,omitempty" json:"StartTime,omitempty" yaml:"StartTime,omitempty"`
	EndTime              *DateTime              `xml:"EndTime,omitempty" json:"EndTime,omitempty" yaml:"EndTime,omitempty"`
	TimeStringBeginIndex *int64                 `xml:"TimeStringBeginIndex,omitempty" json:"TimeStringBeginIndex,omitempty" yaml:"TimeStringBeginIndex,omitempty"`
	TimeStringLength     *int64                 `xml:"TimeStringLength,omitempty" json:"TimeStringLength,omitempty" yaml:"TimeStringLength,omitempty"`
	EntityId             *string                `xml:"EntityId,omitempty" json:"EntityId,omitempty" yaml:"EntityId,omitempty"`
	ExtractionId         *string                `xml:"ExtractionId,omitempty" json:"ExtractionId,omitempty" yaml:"ExtractionId,omitempty"`
	TypeAttrXSI          string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace        string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MeetingSuggestionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MeetingSuggestionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MeetingTimeCandidate was auto-generated from WSDL.
type MeetingTimeCandidate struct {
	MeetingTimeslot        *TimeSlot                    `xml:"MeetingTimeslot,omitempty" json:"MeetingTimeslot,omitempty" yaml:"MeetingTimeslot,omitempty"`
	Confidence             *float64                     `xml:"Confidence,omitempty" json:"Confidence,omitempty" yaml:"Confidence,omitempty"`
	Score                  *int                         `xml:"Score,omitempty" json:"Score,omitempty" yaml:"Score,omitempty"`
	OrganizerAvailability  *AvailabilityStatusType      `xml:"OrganizerAvailability,omitempty" json:"OrganizerAvailability,omitempty" yaml:"OrganizerAvailability,omitempty"`
	AttendeeAvailabilities *ArrayOfAttendeeAvailability `xml:"AttendeeAvailabilities,omitempty" json:"AttendeeAvailabilities,omitempty" yaml:"AttendeeAvailabilities,omitempty"`
	Locations              *ArrayOfMeetingLocation      `xml:"Locations,omitempty" json:"Locations,omitempty" yaml:"Locations,omitempty"`
	SuggestionHint         *string                      `xml:"SuggestionHint,omitempty" json:"SuggestionHint,omitempty" yaml:"SuggestionHint,omitempty"`
}

// MeetingTimeCandidatesConstraintItem was auto-generated from
// WSDL.
type MeetingTimeCandidatesConstraintItem struct {
	Email *string `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
}

// MemberType was auto-generated from WSDL.
type MemberType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	Status  *MemberStatusType `xml:"Status,omitempty" json:"Status,omitempty" yaml:"Status,omitempty"`
	Key     string            `xml:"Key,attr,omitempty" json:"Key,attr,omitempty" yaml:"Key,attr,omitempty"`
}

// MembersListType was auto-generated from WSDL.
type MembersListType struct {
	Member []*MemberType `xml:"Member,omitempty" json:"Member,omitempty" yaml:"Member,omitempty"`
}

// MentionActionType was auto-generated from WSDL.
type MentionActionType struct {
	Id                    string                    `xml:"Id" json:"Id" yaml:"Id"`
	CreatedBy             *EmailAddressExtendedType `xml:"CreatedBy" json:"CreatedBy" yaml:"CreatedBy"`
	CreatedDateTime       *string                   `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty" yaml:"CreatedDateTime,omitempty"`
	ServerCreatedDateTime *string                   `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty" yaml:"ServerCreatedDateTime,omitempty"`
	DeepLink              *string                   `xml:"DeepLink,omitempty" json:"DeepLink,omitempty" yaml:"DeepLink,omitempty"`
	Application           *string                   `xml:"Application,omitempty" json:"Application,omitempty" yaml:"Application,omitempty"`
	Mentioned             *EmailAddressExtendedType `xml:"Mentioned" json:"Mentioned" yaml:"Mentioned"`
	MentionText           *string                   `xml:"MentionText,omitempty" json:"MentionText,omitempty" yaml:"MentionText,omitempty"`
	ClientReference       *string                   `xml:"ClientReference,omitempty" json:"ClientReference,omitempty" yaml:"ClientReference,omitempty"`
}

// MentionsPreviewType was auto-generated from WSDL.
type MentionsPreviewType struct {
	IsMentioned bool `xml:"IsMentioned" json:"IsMentioned" yaml:"IsMentioned"`
}

// MessageSafetyType was auto-generated from WSDL.
type MessageSafetyType struct {
	MessageSafetyLevel  *int    `xml:"MessageSafetyLevel,omitempty" json:"MessageSafetyLevel,omitempty" yaml:"MessageSafetyLevel,omitempty"`
	MessageSafetyReason *int    `xml:"MessageSafetyReason,omitempty" json:"MessageSafetyReason,omitempty" yaml:"MessageSafetyReason,omitempty"`
	Info                *string `xml:"Info,omitempty" json:"Info,omitempty" yaml:"Info,omitempty"`
}

// MessageTrackingReportType was auto-generated from WSDL.
type MessageTrackingReportType struct {
	Sender                  *EmailAddressType                  `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	PurportedSender         *EmailAddressType                  `xml:"PurportedSender,omitempty" json:"PurportedSender,omitempty" yaml:"PurportedSender,omitempty"`
	Subject                 *string                            `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	SubmitTime              *DateTime                          `xml:"SubmitTime,omitempty" json:"SubmitTime,omitempty" yaml:"SubmitTime,omitempty"`
	OriginalRecipients      *ArrayOfEmailAddressesType         `xml:"OriginalRecipients,omitempty" json:"OriginalRecipients,omitempty" yaml:"OriginalRecipients,omitempty"`
	RecipientTrackingEvents *ArrayOfRecipientTrackingEventType `xml:"RecipientTrackingEvents,omitempty" json:"RecipientTrackingEvents,omitempty" yaml:"RecipientTrackingEvents,omitempty"`
	Properties              *ArrayOfTrackingPropertiesType     `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
}

// MessageType was auto-generated from WSDL.
type MessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Metadata was auto-generated from WSDL.
type Metadata struct {
	CustomApps  string  `xml:"CustomApps" json:"CustomApps" yaml:"CustomApps"`
	GenericInfo *string `xml:"GenericInfo,omitempty" json:"GenericInfo,omitempty" yaml:"GenericInfo,omitempty"`
}

// MimeContentType was auto-generated from WSDL.
type MimeContentType struct {
	Content      *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	CharacterSet string  `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,attr,omitempty" yaml:"CharacterSet,attr,omitempty"`
}

// MimeContentUTF8Type was auto-generated from WSDL.
type MimeContentUTF8Type struct {
	Content      *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	CharacterSet string  `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,attr,omitempty" yaml:"CharacterSet,attr,omitempty"`
}

// ModifiedEventType was auto-generated from WSDL.
type ModifiedEventType struct {
	Watermark      *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	TimeStamp      *DateTime      `xml:"TimeStamp,omitempty" json:"TimeStamp,omitempty" yaml:"TimeStamp,omitempty"`
	ParentFolderId *FolderIdType  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderId       *FolderIdType  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ItemId         *ItemIdType    `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	UnreadCount    *int           `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	TypeAttrXSI    string         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ModifiedEventType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ModifiedEventType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MonthlyRegeneratingPatternType was auto-generated from WSDL.
type MonthlyRegeneratingPatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MonthlyRegeneratingPatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MonthlyRegeneratingPatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MoveFolderResponseType was auto-generated from WSDL.
type MoveFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MoveFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MoveFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MoveFolderType was auto-generated from WSDL.
type MoveFolderType struct {
	ToFolderId    *TargetFolderIdType               `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	FolderIds     *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MoveFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MoveFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MoveItemResponseType was auto-generated from WSDL.
type MoveItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MoveItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MoveItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MoveItemType was auto-generated from WSDL.
type MoveItemType struct {
	ToFolderId       *TargetFolderIdType             `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty" yaml:"ToFolderId,omitempty"`
	ItemIds          *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	ReturnNewItemIds *bool                           `xml:"ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty" yaml:"ReturnNewItemIds,omitempty"`
	TypeAttrXSI      string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MoveItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MoveItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// MovedCopiedEventType was auto-generated from WSDL.
type MovedCopiedEventType struct {
	Watermark         *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	TimeStamp         *DateTime      `xml:"TimeStamp,omitempty" json:"TimeStamp,omitempty" yaml:"TimeStamp,omitempty"`
	ParentFolderId    *FolderIdType  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderId          *FolderIdType  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ItemId            *ItemIdType    `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	OldParentFolderId *FolderIdType  `xml:"OldParentFolderId,omitempty" json:"OldParentFolderId,omitempty" yaml:"OldParentFolderId,omitempty"`
	OldFolderId       *FolderIdType  `xml:"OldFolderId,omitempty" json:"OldFolderId,omitempty" yaml:"OldFolderId,omitempty"`
	OldItemId         *ItemIdType    `xml:"OldItemId,omitempty" json:"OldItemId,omitempty" yaml:"OldItemId,omitempty"`
	TypeAttrXSI       string         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MovedCopiedEventType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MovedCopiedEventType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MultiValueInsightContent was auto-generated from WSDL.
type MultiValueInsightContent struct {
	ItemList      *ArrayOfInsightValue `xml:"ItemList,omitempty" json:"ItemList,omitempty" yaml:"ItemList,omitempty"`
	TypeAttrXSI   string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *MultiValueInsightContent) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:MultiValueInsightContent"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// MultipleOperandBooleanExpressionType was auto-generated from
// WSDL.
type MultipleOperandBooleanExpressionType interface{}

// NearType was auto-generated from WSDL.
type NearType struct {
	SearchExpression *SearchExpressionType `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty" yaml:"SearchExpression,omitempty"`
	Distance         *uint                 `xml:"Distance,omitempty" json:"Distance,omitempty" yaml:"Distance,omitempty"`
	Ordered          *bool                 `xml:"Ordered,omitempty" json:"Ordered,omitempty" yaml:"Ordered,omitempty"`
	TypeAttrXSI      string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NearType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NearType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// NetworkItemType was auto-generated from WSDL.
type NetworkItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	DomainId                     *int                                      `xml:"DomainId,omitempty" json:"DomainId,omitempty" yaml:"DomainId,omitempty"`
	DomainTag                    *string                                   `xml:"DomainTag,omitempty" json:"DomainTag,omitempty" yaml:"DomainTag,omitempty"`
	UserTileUrl                  *string                                   `xml:"UserTileUrl,omitempty" json:"UserTileUrl,omitempty" yaml:"UserTileUrl,omitempty"`
	ProfileUrl                   *string                                   `xml:"ProfileUrl,omitempty" json:"ProfileUrl,omitempty" yaml:"ProfileUrl,omitempty"`
	Settings                     *int                                      `xml:"Settings,omitempty" json:"Settings,omitempty" yaml:"Settings,omitempty"`
	IsDefault                    *bool                                     `xml:"IsDefault,omitempty" json:"IsDefault,omitempty" yaml:"IsDefault,omitempty"`
	AutoLinkError                *string                                   `xml:"AutoLinkError,omitempty" json:"AutoLinkError,omitempty" yaml:"AutoLinkError,omitempty"`
	AutoLinkSuccess              *string                                   `xml:"AutoLinkSuccess,omitempty" json:"AutoLinkSuccess,omitempty" yaml:"AutoLinkSuccess,omitempty"`
	UserEmail                    *string                                   `xml:"UserEmail,omitempty" json:"UserEmail,omitempty" yaml:"UserEmail,omitempty"`
	ClientPublishSecret          *string                                   `xml:"ClientPublishSecret,omitempty" json:"ClientPublishSecret,omitempty" yaml:"ClientPublishSecret,omitempty"`
	ClientToken                  *string                                   `xml:"ClientToken,omitempty" json:"ClientToken,omitempty" yaml:"ClientToken,omitempty"`
	ClientToken2                 *string                                   `xml:"ClientToken2,omitempty" json:"ClientToken2,omitempty" yaml:"ClientToken2,omitempty"`
	ContactSyncError             *string                                   `xml:"ContactSyncError,omitempty" json:"ContactSyncError,omitempty" yaml:"ContactSyncError,omitempty"`
	ContactSyncSuccess           *string                                   `xml:"ContactSyncSuccess,omitempty" json:"ContactSyncSuccess,omitempty" yaml:"ContactSyncSuccess,omitempty"`
	ErrorOffers                  *int                                      `xml:"ErrorOffers,omitempty" json:"ErrorOffers,omitempty" yaml:"ErrorOffers,omitempty"`
	FirstAuthErrorDates          *string                                   `xml:"FirstAuthErrorDates,omitempty" json:"FirstAuthErrorDates,omitempty" yaml:"FirstAuthErrorDates,omitempty"`
	LastVersionSaved             *int                                      `xml:"LastVersionSaved,omitempty" json:"LastVersionSaved,omitempty" yaml:"LastVersionSaved,omitempty"`
	LastWelcomeContact           *string                                   `xml:"LastWelcomeContact,omitempty" json:"LastWelcomeContact,omitempty" yaml:"LastWelcomeContact,omitempty"`
	Offers                       *int                                      `xml:"Offers,omitempty" json:"Offers,omitempty" yaml:"Offers,omitempty"`
	PsaLastChanged               *DateTime                                 `xml:"PsaLastChanged,omitempty" json:"PsaLastChanged,omitempty" yaml:"PsaLastChanged,omitempty"`
	RefreshToken2                *string                                   `xml:"RefreshToken2,omitempty" json:"RefreshToken2,omitempty" yaml:"RefreshToken2,omitempty"`
	RefreshTokenExpiry2          *string                                   `xml:"RefreshTokenExpiry2,omitempty" json:"RefreshTokenExpiry2,omitempty" yaml:"RefreshTokenExpiry2,omitempty"`
	SessionHandle                *string                                   `xml:"SessionHandle,omitempty" json:"SessionHandle,omitempty" yaml:"SessionHandle,omitempty"`
	RejectedOffers               *int                                      `xml:"RejectedOffers,omitempty" json:"RejectedOffers,omitempty" yaml:"RejectedOffers,omitempty"`
	SyncEnabled                  *bool                                     `xml:"SyncEnabled,omitempty" json:"SyncEnabled,omitempty" yaml:"SyncEnabled,omitempty"`
	TokenRefreshLastAttempted    *DateTime                                 `xml:"TokenRefreshLastAttempted,omitempty" json:"TokenRefreshLastAttempted,omitempty" yaml:"TokenRefreshLastAttempted,omitempty"`
	TokenRefreshLastCompleted    *DateTime                                 `xml:"TokenRefreshLastCompleted,omitempty" json:"TokenRefreshLastCompleted,omitempty" yaml:"TokenRefreshLastCompleted,omitempty"`
	PsaState                     *string                                   `xml:"PsaState,omitempty" json:"PsaState,omitempty" yaml:"PsaState,omitempty"`
	SourceEntryID                *[]byte                                   `xml:"SourceEntryID,omitempty" json:"SourceEntryID,omitempty" yaml:"SourceEntryID,omitempty"`
	AccountName                  *string                                   `xml:"AccountName,omitempty" json:"AccountName,omitempty" yaml:"AccountName,omitempty"`
	LastSync                     *DateTime                                 `xml:"LastSync,omitempty" json:"LastSync,omitempty" yaml:"LastSync,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NetworkItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NetworkItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// NoEndRecurrenceRangeType was auto-generated from WSDL.
type NoEndRecurrenceRangeType struct {
	StartDate     *Date  `xml:"StartDate,omitempty" json:"StartDate,omitempty" yaml:"StartDate,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NoEndRecurrenceRangeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NoEndRecurrenceRangeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// NonEmptyArrayOfAllItemsType was auto-generated from WSDL.
type NonEmptyArrayOfAllItemsType struct {
	Item                    *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message                 *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage          *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem            *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact                 *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	DistributionList        *DistributionListType           `xml:"DistributionList,omitempty" json:"DistributionList,omitempty" yaml:"DistributionList,omitempty"`
	MeetingMessage          *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest          *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse         *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation     *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                    *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem                *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	ReplyToItem             *ReplyToItemType                `xml:"ReplyToItem,omitempty" json:"ReplyToItem,omitempty" yaml:"ReplyToItem,omitempty"`
	ForwardItem             *ForwardItemType                `xml:"ForwardItem,omitempty" json:"ForwardItem,omitempty" yaml:"ForwardItem,omitempty"`
	ReplyAllToItem          *ReplyAllToItemType             `xml:"ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty" yaml:"ReplyAllToItem,omitempty"`
	AcceptItem              *AcceptItemType                 `xml:"AcceptItem,omitempty" json:"AcceptItem,omitempty" yaml:"AcceptItem,omitempty"`
	TentativelyAcceptItem   *TentativelyAcceptItemType      `xml:"TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty" yaml:"TentativelyAcceptItem,omitempty"`
	DeclineItem             *DeclineItemType                `xml:"DeclineItem,omitempty" json:"DeclineItem,omitempty" yaml:"DeclineItem,omitempty"`
	CancelCalendarItem      *CancelCalendarItemType         `xml:"CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty" yaml:"CancelCalendarItem,omitempty"`
	RemoveItem              *RemoveItemType                 `xml:"RemoveItem,omitempty" json:"RemoveItem,omitempty" yaml:"RemoveItem,omitempty"`
	SuppressReadReceipt     *SuppressReadReceiptType        `xml:"SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty" yaml:"SuppressReadReceipt,omitempty"`
	PostReplyItem           *PostReplyItemType              `xml:"PostReplyItem,omitempty" json:"PostReplyItem,omitempty" yaml:"PostReplyItem,omitempty"`
	AcceptSharingInvitation *AcceptSharingInvitationType    `xml:"AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty" yaml:"AcceptSharingInvitation,omitempty"`
	RoleMember              *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network                 *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person                  *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
}

// A non-empty array of alternate Ids.
type NonEmptyArrayOfAlternateIdsType struct {
	AlternateId                 *AlternateIdType                 `xml:"AlternateId,omitempty" json:"AlternateId,omitempty" yaml:"AlternateId,omitempty"`
	AlternatePublicFolderId     *AlternatePublicFolderIdType     `xml:"AlternatePublicFolderId,omitempty" json:"AlternatePublicFolderId,omitempty" yaml:"AlternatePublicFolderId,omitempty"`
	AlternatePublicFolderItemId *AlternatePublicFolderItemIdType `xml:"AlternatePublicFolderItemId,omitempty" json:"AlternatePublicFolderItemId,omitempty" yaml:"AlternatePublicFolderItemId,omitempty"`
}

// NonEmptyArrayOfAppliedHashtagType was auto-generated from WSDL.
type NonEmptyArrayOfAppliedHashtagType struct {
	AppliedHashtag []*AppliedHashtagType `xml:"AppliedHashtag,omitempty" json:"AppliedHashtag,omitempty" yaml:"AppliedHashtag,omitempty"`
}

// NonEmptyArrayOfApplyConversationActionType was auto-generated
// from WSDL.
type NonEmptyArrayOfApplyConversationActionType struct {
	ConversationAction []*ConversationActionType `xml:"ConversationAction,omitempty" json:"ConversationAction,omitempty" yaml:"ConversationAction,omitempty"`
}

// NonEmptyArrayOfAttachmentsType was auto-generated from WSDL.
type NonEmptyArrayOfAttachmentsType struct {
	ItemAttachment      *ItemAttachmentType      `xml:"ItemAttachment,omitempty" json:"ItemAttachment,omitempty" yaml:"ItemAttachment,omitempty"`
	FileAttachment      *FileAttachmentType      `xml:"FileAttachment,omitempty" json:"FileAttachment,omitempty" yaml:"FileAttachment,omitempty"`
	ReferenceAttachment *ReferenceAttachmentType `xml:"ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty" yaml:"ReferenceAttachment,omitempty"`
}

// NonEmptyArrayOfAttendeesType was auto-generated from WSDL.
type NonEmptyArrayOfAttendeesType struct {
	Attendee []*AttendeeType `xml:"Attendee,omitempty" json:"Attendee,omitempty" yaml:"Attendee,omitempty"`
}

// NonEmptyArrayOfBaseFolderIdsType was auto-generated from WSDL.
type NonEmptyArrayOfBaseFolderIdsType struct {
	FolderId              *FolderIdType              `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
}

// NonEmptyArrayOfBaseItemIdsType was auto-generated from WSDL.
type NonEmptyArrayOfBaseItemIdsType struct {
	ItemId                      *ItemIdType                      `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	OccurrenceItemId            *OccurrenceItemIdType            `xml:"OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty" yaml:"OccurrenceItemId,omitempty"`
	RecurringMasterItemId       *RecurringMasterItemIdType       `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty" yaml:"RecurringMasterItemId,omitempty"`
	RecurringMasterItemIdRanges *RecurringMasterItemIdRangesType `xml:"RecurringMasterItemIdRanges,omitempty" json:"RecurringMasterItemIdRanges,omitempty" yaml:"RecurringMasterItemIdRanges,omitempty"`
}

// NonEmptyArrayOfClientAccessTokenRequestsType was auto-generated
// from WSDL.
type NonEmptyArrayOfClientAccessTokenRequestsType struct {
	TokenRequest []*ClientAccessTokenRequestType `xml:"TokenRequest" json:"TokenRequest" yaml:"TokenRequest"`
}

// NonEmptyArrayOfContentActivities was auto-generated from WSDL.
type NonEmptyArrayOfContentActivities struct {
	ContentActivity []*ContentActivity `xml:"ContentActivity,omitempty" json:"ContentActivity,omitempty" yaml:"ContentActivity,omitempty"`
}

// NonEmptyArrayOfDeletedOccurrencesType was auto-generated from
// WSDL.
type NonEmptyArrayOfDeletedOccurrencesType struct {
	DeletedOccurrence []*DeletedOccurrenceInfoType `xml:"DeletedOccurrence,omitempty" json:"DeletedOccurrence,omitempty" yaml:"DeletedOccurrence,omitempty"`
}

// NonEmptyArrayOfExtendedFieldURIs was auto-generated from WSDL.
type NonEmptyArrayOfExtendedFieldURIs struct {
	ExtendedProperty *PathToExtendedFieldType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
}

// NonEmptyArrayOfExtendedFieldURIsType was auto-generated from
// WSDL.
type NonEmptyArrayOfExtendedFieldURIsType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty" yaml:"ExtendedFieldURI,omitempty"`
}

// NonEmptyArrayOfExtendedPropertyType was auto-generated from
// WSDL.
type NonEmptyArrayOfExtendedPropertyType struct {
	ExtendedProperty []*ExtendedPropertyType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
}

// NonEmptyArrayOfFieldOrdersType was auto-generated from WSDL.
type NonEmptyArrayOfFieldOrdersType struct {
	FieldOrder []*FieldOrderType `xml:"FieldOrder,omitempty" json:"FieldOrder,omitempty" yaml:"FieldOrder,omitempty"`
}

// NonEmptyArrayOfFolderChangeDescriptionsType was auto-generated
// from WSDL.
type NonEmptyArrayOfFolderChangeDescriptionsType struct {
	AppendToFolderField *AppendToFolderFieldType `xml:"AppendToFolderField,omitempty" json:"AppendToFolderField,omitempty" yaml:"AppendToFolderField,omitempty"`
	SetFolderField      *SetFolderFieldType      `xml:"SetFolderField,omitempty" json:"SetFolderField,omitempty" yaml:"SetFolderField,omitempty"`
	DeleteFolderField   *DeleteFolderFieldType   `xml:"DeleteFolderField,omitempty" json:"DeleteFolderField,omitempty" yaml:"DeleteFolderField,omitempty"`
}

// NonEmptyArrayOfFolderChangesType was auto-generated from WSDL.
type NonEmptyArrayOfFolderChangesType struct {
	FolderChange []*FolderChangeType `xml:"FolderChange,omitempty" json:"FolderChange,omitempty" yaml:"FolderChange,omitempty"`
}

// NonEmptyArrayOfFolderNamesType was auto-generated from WSDL.
type NonEmptyArrayOfFolderNamesType struct {
	FolderName []*string `xml:"FolderName,omitempty" json:"FolderName,omitempty" yaml:"FolderName,omitempty"`
}

// NonEmptyArrayOfFoldersType was auto-generated from WSDL.
type NonEmptyArrayOfFoldersType struct {
	Folder         *FolderType         `xml:"Folder,omitempty" json:"Folder,omitempty" yaml:"Folder,omitempty"`
	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty" yaml:"CalendarFolder,omitempty"`
	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty" yaml:"ContactsFolder,omitempty"`
	SearchFolder   *SearchFolderType   `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty" yaml:"SearchFolder,omitempty"`
	TasksFolder    *TasksFolderType    `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty" yaml:"TasksFolder,omitempty"`
}

// NonEmptyArrayOfGroupIdentifiersType was auto-generated from
// WSDL.
type NonEmptyArrayOfGroupIdentifiersType struct {
	GroupIdentifier []*SidAndAttributesType `xml:"GroupIdentifier,omitempty" json:"GroupIdentifier,omitempty" yaml:"GroupIdentifier,omitempty"`
}

// NonEmptyArrayOfInternetHeadersType was auto-generated from WSDL.
type NonEmptyArrayOfInternetHeadersType struct {
	InternetMessageHeader []*InternetHeaderType `xml:"InternetMessageHeader,omitempty" json:"InternetMessageHeader,omitempty" yaml:"InternetMessageHeader,omitempty"`
}

// NonEmptyArrayOfItemChangeDescriptionsType was auto-generated
// from WSDL.
type NonEmptyArrayOfItemChangeDescriptionsType struct {
	AppendToItemField *AppendToItemFieldType `xml:"AppendToItemField,omitempty" json:"AppendToItemField,omitempty" yaml:"AppendToItemField,omitempty"`
	SetItemField      *SetItemFieldType      `xml:"SetItemField,omitempty" json:"SetItemField,omitempty" yaml:"SetItemField,omitempty"`
	DeleteItemField   *DeleteItemFieldType   `xml:"DeleteItemField,omitempty" json:"DeleteItemField,omitempty" yaml:"DeleteItemField,omitempty"`
}

// NonEmptyArrayOfItemChangesType was auto-generated from WSDL.
type NonEmptyArrayOfItemChangesType struct {
	ItemChange []*ItemChangeType `xml:"ItemChange,omitempty" json:"ItemChange,omitempty" yaml:"ItemChange,omitempty"`
}

// NonEmptyArrayOfItemIdsType was auto-generated from WSDL.
type NonEmptyArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
}

// NonEmptyArrayOfLegacyDNsType was auto-generated from WSDL.
type NonEmptyArrayOfLegacyDNsType struct {
	LegacyDN []string `xml:"LegacyDN" json:"LegacyDN" yaml:"LegacyDN"`
}

// NonEmptyArrayOfLikeType was auto-generated from WSDL.
type NonEmptyArrayOfLikeType struct {
	Like []*LikeType `xml:"Like,omitempty" json:"Like,omitempty" yaml:"Like,omitempty"`
}

// Array of query and mailboxes.
type NonEmptyArrayOfMailboxQueriesType struct {
	MailboxQuery []*MailboxQueryType `xml:"MailboxQuery" json:"MailboxQuery" yaml:"MailboxQuery"`
}

// Array of mailbox and its search scope.
type NonEmptyArrayOfMailboxSearchScopesType struct {
	MailboxSearchScope []*MailboxSearchScopeType `xml:"MailboxSearchScope" json:"MailboxSearchScope" yaml:"MailboxSearchScope"`
}

// NonEmptyArrayOfMentionActionsType was auto-generated from WSDL.
type NonEmptyArrayOfMentionActionsType struct {
	MentionAction []*MentionActionType `xml:"MentionAction,omitempty" json:"MentionAction,omitempty" yaml:"MentionAction,omitempty"`
}

// NonEmptyArrayOfNotificationEventTypesType was auto-generated
// from WSDL.
type NonEmptyArrayOfNotificationEventTypesType struct {
	EventType *NotificationEventTypeType `xml:"EventType,omitempty" json:"EventType,omitempty" yaml:"EventType,omitempty"`
}

// NonEmptyArrayOfNotificationsType was auto-generated from WSDL.
type NonEmptyArrayOfNotificationsType struct {
	Notification []*NotificationType `xml:"Notification,omitempty" json:"Notification,omitempty" yaml:"Notification,omitempty"`
}

// NonEmptyArrayOfOccurrenceInfoType was auto-generated from WSDL.
type NonEmptyArrayOfOccurrenceInfoType struct {
	Occurrence []*OccurrenceInfoType `xml:"Occurrence,omitempty" json:"Occurrence,omitempty" yaml:"Occurrence,omitempty"`
}

// NonEmptyArrayOfParticipantActivities was auto-generated from
// WSDL.
type NonEmptyArrayOfParticipantActivities struct {
	ParticipantActivity []*ParticipantActivity `xml:"ParticipantActivity,omitempty" json:"ParticipantActivity,omitempty" yaml:"ParticipantActivity,omitempty"`
}

// NonEmptyArrayOfPathsToElementType was auto-generated from WSDL.
type NonEmptyArrayOfPathsToElementType struct {
	Path *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
}

// NonEmptyArrayOfPeopleTokenType was auto-generated from WSDL.
type NonEmptyArrayOfPeopleTokenType struct {
	PeopleToken []*PeopleTokenType `xml:"PeopleToken" json:"PeopleToken" yaml:"PeopleToken"`
}

// NonEmptyArrayOfPeriodsType was auto-generated from WSDL.
type NonEmptyArrayOfPeriodsType struct {
	Period []*PeriodType `xml:"Period,omitempty" json:"Period,omitempty" yaml:"Period,omitempty"`
}

// NonEmptyArrayOfPredictedActionReasonType was auto-generated
// from WSDL.
type NonEmptyArrayOfPredictedActionReasonType struct {
	PredictedActionReason []*PredictedActionReasonType `xml:"PredictedActionReason,omitempty" json:"PredictedActionReason,omitempty" yaml:"PredictedActionReason,omitempty"`
}

// NonEmptyArrayOfPropertyValuesType was auto-generated from WSDL.
type NonEmptyArrayOfPropertyValuesType struct {
	Value []*string `xml:"Value,omitempty" json:"Value,omitempty" yaml:"Value,omitempty"`
}

// NonEmptyArrayOfReminderItemActionType was auto-generated from
// WSDL.
type NonEmptyArrayOfReminderItemActionType struct {
	ReminderItemAction []*ReminderItemActionType `xml:"ReminderItemAction" json:"ReminderItemAction" yaml:"ReminderItemAction"`
}

// NonEmptyArrayOfRequestAttachmentIdsType was auto-generated from
// WSDL.
type NonEmptyArrayOfRequestAttachmentIdsType struct {
	AttachmentId *RequestAttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
}

// NonEmptyArrayOfResponseObjectsType was auto-generated from WSDL.
type NonEmptyArrayOfResponseObjectsType struct {
	AcceptItem              *AcceptItemType              `xml:"AcceptItem,omitempty" json:"AcceptItem,omitempty" yaml:"AcceptItem,omitempty"`
	TentativelyAcceptItem   *TentativelyAcceptItemType   `xml:"TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty" yaml:"TentativelyAcceptItem,omitempty"`
	DeclineItem             *DeclineItemType             `xml:"DeclineItem,omitempty" json:"DeclineItem,omitempty" yaml:"DeclineItem,omitempty"`
	ReplyToItem             *ReplyToItemType             `xml:"ReplyToItem,omitempty" json:"ReplyToItem,omitempty" yaml:"ReplyToItem,omitempty"`
	ForwardItem             *ForwardItemType             `xml:"ForwardItem,omitempty" json:"ForwardItem,omitempty" yaml:"ForwardItem,omitempty"`
	ReplyAllToItem          *ReplyAllToItemType          `xml:"ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty" yaml:"ReplyAllToItem,omitempty"`
	CancelCalendarItem      *CancelCalendarItemType      `xml:"CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty" yaml:"CancelCalendarItem,omitempty"`
	RemoveItem              *RemoveItemType              `xml:"RemoveItem,omitempty" json:"RemoveItem,omitempty" yaml:"RemoveItem,omitempty"`
	SuppressReadReceipt     *SuppressReadReceiptType     `xml:"SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty" yaml:"SuppressReadReceipt,omitempty"`
	PostReplyItem           *PostReplyItemType           `xml:"PostReplyItem,omitempty" json:"PostReplyItem,omitempty" yaml:"PostReplyItem,omitempty"`
	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty" yaml:"AcceptSharingInvitation,omitempty"`
	AddItemToMyCalendar     *AddItemToMyCalendarType     `xml:"AddItemToMyCalendar,omitempty" json:"AddItemToMyCalendar,omitempty" yaml:"AddItemToMyCalendar,omitempty"`
	ProposeNewTime          *ProposeNewTimeType          `xml:"ProposeNewTime,omitempty" json:"ProposeNewTime,omitempty" yaml:"ProposeNewTime,omitempty"`
}

// NonEmptyArrayOfRestrictedGroupIdentifiersType was auto-generated
// from WSDL.
type NonEmptyArrayOfRestrictedGroupIdentifiersType struct {
	RestrictedGroupIdentifier []*SidAndAttributesType `xml:"RestrictedGroupIdentifier,omitempty" json:"RestrictedGroupIdentifier,omitempty" yaml:"RestrictedGroupIdentifier,omitempty"`
}

// NonEmptyArrayOfRoleType was auto-generated from WSDL.
type NonEmptyArrayOfRoleType struct {
	Role []*string `xml:"Role,omitempty" json:"Role,omitempty" yaml:"Role,omitempty"`
}

// NonEmptyArrayOfSubscriptionIdsType was auto-generated from WSDL.
type NonEmptyArrayOfSubscriptionIdsType struct {
	SubscriptionId []SubscriptionIdType `xml:"SubscriptionId" json:"SubscriptionId" yaml:"SubscriptionId"`
}

// NonEmptyArrayOfTimeZoneIdType was auto-generated from WSDL.
type NonEmptyArrayOfTimeZoneIdType struct {
	Id []*string `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
}

// NonEmptyArrayOfUploadItemsType was auto-generated from WSDL.
type NonEmptyArrayOfUploadItemsType struct {
	Item []*UploadItemType `xml:"Item" json:"Item" yaml:"Item"`
}

// NonEmptyStateDefinitionType was auto-generated from WSDL.
type NonEmptyStateDefinitionType struct {
	DeletedOccurrenceStateDefinition *DeletedOccurrenceStateDefinitionType `xml:"DeletedOccurrenceStateDefinition,omitempty" json:"DeletedOccurrenceStateDefinition,omitempty" yaml:"DeletedOccurrenceStateDefinition,omitempty"`
	DeleteFromFolderStateDefinition  *DeleteFromFolderStateDefinitionType  `xml:"DeleteFromFolderStateDefinition,omitempty" json:"DeleteFromFolderStateDefinition,omitempty" yaml:"DeleteFromFolderStateDefinition,omitempty"`
	LocationBasedStateDefinition     *LocationBasedStateDefinitionType     `xml:"LocationBasedStateDefinition,omitempty" json:"LocationBasedStateDefinition,omitempty" yaml:"LocationBasedStateDefinition,omitempty"`
}

// Non indexable item details result.
type NonIndexableItemDetailResultType struct {
	Items           *ArrayOfNonIndexableItemDetailsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	FailedMailboxes *ArrayOfFailedSearchMailboxesType   `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty" yaml:"FailedMailboxes,omitempty"`
}

// Non indexable item detail.
type NonIndexableItemDetailType struct {
	ItemId             *ItemIdType        `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	ErrorCode          ItemIndexErrorType `xml:"ErrorCode" json:"ErrorCode" yaml:"ErrorCode"`
	ErrorDescription   string             `xml:"ErrorDescription" json:"ErrorDescription" yaml:"ErrorDescription"`
	IsPartiallyIndexed bool               `xml:"IsPartiallyIndexed" json:"IsPartiallyIndexed" yaml:"IsPartiallyIndexed"`
	IsPermanentFailure bool               `xml:"IsPermanentFailure" json:"IsPermanentFailure" yaml:"IsPermanentFailure"`
	SortValue          string             `xml:"SortValue" json:"SortValue" yaml:"SortValue"`
	AttemptCount       int                `xml:"AttemptCount" json:"AttemptCount" yaml:"AttemptCount"`
	LastAttemptTime    *DateTime          `xml:"LastAttemptTime,omitempty" json:"LastAttemptTime,omitempty" yaml:"LastAttemptTime,omitempty"`
	AdditionalInfo     *string            `xml:"AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty" yaml:"AdditionalInfo,omitempty"`
}

// Non indexable item statistic.
type NonIndexableItemStatisticType struct {
	Mailbox      string  `xml:"Mailbox" json:"Mailbox" yaml:"Mailbox"`
	ItemCount    int64   `xml:"ItemCount" json:"ItemCount" yaml:"ItemCount"`
	ErrorMessage *string `xml:"ErrorMessage,omitempty" json:"ErrorMessage,omitempty" yaml:"ErrorMessage,omitempty"`
}

// NormalizedBodyType was auto-generated from WSDL.
type NormalizedBodyType struct {
	Content            *string      `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	NormalizedBodyType BodyTypeType `xml:"NormalizedBodyType,attr,omitempty" json:"NormalizedBodyType,attr,omitempty" yaml:"NormalizedBodyType,attr,omitempty"`
	IsTruncated        bool         `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,attr,omitempty" yaml:"IsTruncated,attr,omitempty"`
}

// NotType was auto-generated from WSDL.
type NotType struct {
	SearchExpression *SearchExpressionType `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty" yaml:"SearchExpression,omitempty"`
	TypeAttrXSI      string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NotType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NotType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// NotificationType was auto-generated from WSDL.
type NotificationType struct {
	SubscriptionId       *SubscriptionIdType         `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty" yaml:"SubscriptionId,omitempty"`
	PreviousWatermark    *WatermarkType              `xml:"PreviousWatermark,omitempty" json:"PreviousWatermark,omitempty" yaml:"PreviousWatermark,omitempty"`
	MoreEvents           *bool                       `xml:"MoreEvents,omitempty" json:"MoreEvents,omitempty" yaml:"MoreEvents,omitempty"`
	CopiedEvent          *MovedCopiedEventType       `xml:"CopiedEvent,omitempty" json:"CopiedEvent,omitempty" yaml:"CopiedEvent,omitempty"`
	CreatedEvent         *BaseObjectChangedEventType `xml:"CreatedEvent,omitempty" json:"CreatedEvent,omitempty" yaml:"CreatedEvent,omitempty"`
	DeletedEvent         *BaseObjectChangedEventType `xml:"DeletedEvent,omitempty" json:"DeletedEvent,omitempty" yaml:"DeletedEvent,omitempty"`
	ModifiedEvent        *ModifiedEventType          `xml:"ModifiedEvent,omitempty" json:"ModifiedEvent,omitempty" yaml:"ModifiedEvent,omitempty"`
	MovedEvent           *MovedCopiedEventType       `xml:"MovedEvent,omitempty" json:"MovedEvent,omitempty" yaml:"MovedEvent,omitempty"`
	NewMailEvent         *BaseObjectChangedEventType `xml:"NewMailEvent,omitempty" json:"NewMailEvent,omitempty" yaml:"NewMailEvent,omitempty"`
	StatusEvent          *BaseNotificationEventType  `xml:"StatusEvent,omitempty" json:"StatusEvent,omitempty" yaml:"StatusEvent,omitempty"`
	FreeBusyChangedEvent *BaseObjectChangedEventType `xml:"FreeBusyChangedEvent,omitempty" json:"FreeBusyChangedEvent,omitempty" yaml:"FreeBusyChangedEvent,omitempty"`
}

// NumberedRecurrenceRangeType was auto-generated from WSDL.
type NumberedRecurrenceRangeType struct {
	StartDate           *Date  `xml:"StartDate,omitempty" json:"StartDate,omitempty" yaml:"StartDate,omitempty"`
	NumberOfOccurrences *int   `xml:"NumberOfOccurrences,omitempty" json:"NumberOfOccurrences,omitempty" yaml:"NumberOfOccurrences,omitempty"`
	TypeAttrXSI         string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NumberedRecurrenceRangeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NumberedRecurrenceRangeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OMEConfigurationResponseType was auto-generated from WSDL.
type OMEConfigurationResponseType struct {
	MessageText        *string             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Xml                *string             `xml:"Xml,omitempty" json:"Xml,omitempty" yaml:"Xml,omitempty"`
	ConfigList         *ArrayOfStringsType `xml:"ConfigList,omitempty" json:"ConfigList,omitempty" yaml:"ConfigList,omitempty"`
	TypeAttrXSI        string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OMEConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OMEConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// OccurrenceInfoType was auto-generated from WSDL.
type OccurrenceInfoType struct {
	ItemId        *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	Start         *DateTime   `xml:"Start,omitempty" json:"Start,omitempty" yaml:"Start,omitempty"`
	End           *DateTime   `xml:"End,omitempty" json:"End,omitempty" yaml:"End,omitempty"`
	OriginalStart *DateTime   `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty" yaml:"OriginalStart,omitempty"`
}

// OccurrenceItemIdType was auto-generated from WSDL.
type OccurrenceItemIdType struct {
	RecurringMasterId DerivedItemIdType `xml:"RecurringMasterId,attr,omitempty" json:"RecurringMasterId,attr,omitempty" yaml:"RecurringMasterId,attr,omitempty"`
	ChangeKey         string            `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	InstanceIndex     int               `xml:"InstanceIndex,attr,omitempty" json:"InstanceIndex,attr,omitempty" yaml:"InstanceIndex,attr,omitempty"`
	TypeAttrXSI       string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OccurrenceItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OccurrenceItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OccurrencesRangeType was auto-generated from WSDL.
type OccurrencesRangeType struct {
	Start                    DateTime `xml:"Start,attr,omitempty" json:"Start,attr,omitempty" yaml:"Start,attr,omitempty"`
	End                      DateTime `xml:"End,attr,omitempty" json:"End,attr,omitempty" yaml:"End,attr,omitempty"`
	Count                    int      `xml:"Count,attr,omitempty" json:"Count,attr,omitempty" yaml:"Count,attr,omitempty"`
	CompareOriginalStartTime bool     `xml:"CompareOriginalStartTime,attr,omitempty" json:"CompareOriginalStartTime,attr,omitempty" yaml:"CompareOriginalStartTime,attr,omitempty"`
}

// OfficeClientType was auto-generated from WSDL.
type OfficeClientType struct {
	Code    OfficeClientCodeType `xml:"Code,attr,omitempty" json:"Code,attr,omitempty" yaml:"Code,attr,omitempty"`
	Version VersionType          `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
}

// OfficeIntegrationConfiguration was auto-generated from WSDL.
type OfficeIntegrationConfiguration struct {
	OfficeSidebarURL string `xml:"OfficeSidebarURL" json:"OfficeSidebarURL" yaml:"OfficeSidebarURL"`
	TypeAttrXSI      string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OfficeIntegrationConfiguration) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OfficeIntegrationConfiguration"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OneDriveItemType was auto-generated from WSDL.
type OneDriveItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	ResourceId                   string                                    `xml:"ResourceId" json:"ResourceId" yaml:"ResourceId"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OneDriveItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OneDriveItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OneDriveSearchScopeType was auto-generated from WSDL.
type OneDriveSearchScopeType struct {
	OneDriveView OneDriveViewType `xml:"OneDriveView" json:"OneDriveView" yaml:"OneDriveView"`
}

// OnlineMeetingSettingsType was auto-generated from WSDL.
type OnlineMeetingSettingsType struct {
	LobbyBypass *LobbyBypassType              `xml:"LobbyBypass,omitempty" json:"LobbyBypass,omitempty" yaml:"LobbyBypass,omitempty"`
	AccessLevel *OnlineMeetingAccessLevelType `xml:"AccessLevel,omitempty" json:"AccessLevel,omitempty" yaml:"AccessLevel,omitempty"`
	Presenters  *PresentersType               `xml:"Presenters,omitempty" json:"Presenters,omitempty" yaml:"Presenters,omitempty"`
}

// OpenAsAdminOrSystemServiceType was auto-generated from WSDL.
type OpenAsAdminOrSystemServiceType struct {
	ConnectingSID *ConnectingSIDType   `xml:"ConnectingSID,omitempty" json:"ConnectingSID,omitempty" yaml:"ConnectingSID,omitempty"`
	LogonType     SpecialLogonTypeType `xml:"LogonType,attr,omitempty" json:"LogonType,attr,omitempty" yaml:"LogonType,attr,omitempty"`
	BudgetType    int                  `xml:"BudgetType,attr,omitempty" json:"BudgetType,attr,omitempty" yaml:"BudgetType,attr,omitempty"`
}

// OrType was auto-generated from WSDL.
type OrType struct {
	SearchExpression *SearchExpressionType `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty" yaml:"SearchExpression,omitempty"`
	TypeAttrXSI      string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OutOfOfficeInsightValue was auto-generated from WSDL.
type OutOfOfficeInsightValue struct {
	InsightSource   *string   `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64    `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	StartTime       *DateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty" yaml:"StartTime,omitempty"`
	EndTime         *DateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty" yaml:"EndTime,omitempty"`
	Message         *string   `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	Culture         *string   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	TypeAttrXSI     string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OutOfOfficeInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OutOfOfficeInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// OutOfOfficeMailTip was auto-generated from WSDL.
type OutOfOfficeMailTip struct {
	ReplyBody *ReplyBody `xml:"ReplyBody" json:"ReplyBody" yaml:"ReplyBody"`
	Duration  *Duration  `xml:"Duration,omitempty" json:"Duration,omitempty" yaml:"Duration,omitempty"`
}

// ParcelDeliveryEntityType was auto-generated from WSDL.
type ParcelDeliveryEntityType struct {
	Carrier              *string `xml:"Carrier,omitempty" json:"Carrier,omitempty" yaml:"Carrier,omitempty"`
	TrackingNumber       *string `xml:"TrackingNumber,omitempty" json:"TrackingNumber,omitempty" yaml:"TrackingNumber,omitempty"`
	TrackingUrl          *string `xml:"TrackingUrl,omitempty" json:"TrackingUrl,omitempty" yaml:"TrackingUrl,omitempty"`
	ExpectedArrivalFrom  *string `xml:"ExpectedArrivalFrom,omitempty" json:"ExpectedArrivalFrom,omitempty" yaml:"ExpectedArrivalFrom,omitempty"`
	ExpectedArrivalUntil *string `xml:"ExpectedArrivalUntil,omitempty" json:"ExpectedArrivalUntil,omitempty" yaml:"ExpectedArrivalUntil,omitempty"`
	Product              *string `xml:"Product,omitempty" json:"Product,omitempty" yaml:"Product,omitempty"`
	ProductUrl           *string `xml:"ProductUrl,omitempty" json:"ProductUrl,omitempty" yaml:"ProductUrl,omitempty"`
	ProductImage         *string `xml:"ProductImage,omitempty" json:"ProductImage,omitempty" yaml:"ProductImage,omitempty"`
	ProductSku           *string `xml:"ProductSku,omitempty" json:"ProductSku,omitempty" yaml:"ProductSku,omitempty"`
	ProductDescription   *string `xml:"ProductDescription,omitempty" json:"ProductDescription,omitempty" yaml:"ProductDescription,omitempty"`
	ProductBrand         *string `xml:"ProductBrand,omitempty" json:"ProductBrand,omitempty" yaml:"ProductBrand,omitempty"`
	ProductColor         *string `xml:"ProductColor,omitempty" json:"ProductColor,omitempty" yaml:"ProductColor,omitempty"`
	OrderNumber          *string `xml:"OrderNumber,omitempty" json:"OrderNumber,omitempty" yaml:"OrderNumber,omitempty"`
	Seller               *string `xml:"Seller,omitempty" json:"Seller,omitempty" yaml:"Seller,omitempty"`
	OrderStatus          *string `xml:"OrderStatus,omitempty" json:"OrderStatus,omitempty" yaml:"OrderStatus,omitempty"`
	AddressName          *string `xml:"AddressName,omitempty" json:"AddressName,omitempty" yaml:"AddressName,omitempty"`
	StreetAddress        *string `xml:"StreetAddress,omitempty" json:"StreetAddress,omitempty" yaml:"StreetAddress,omitempty"`
	AddressLocality      *string `xml:"AddressLocality,omitempty" json:"AddressLocality,omitempty" yaml:"AddressLocality,omitempty"`
	AddressRegion        *string `xml:"AddressRegion,omitempty" json:"AddressRegion,omitempty" yaml:"AddressRegion,omitempty"`
	AddressCountry       *string `xml:"AddressCountry,omitempty" json:"AddressCountry,omitempty" yaml:"AddressCountry,omitempty"`
	PostalCode           *string `xml:"PostalCode,omitempty" json:"PostalCode,omitempty" yaml:"PostalCode,omitempty"`
}

// ParticipantActivity was auto-generated from WSDL.
type ParticipantActivity struct {
	Id            GuidType                     `xml:"Id" json:"Id" yaml:"Id"`
	CreatedBy     string                       `xml:"CreatedBy" json:"CreatedBy" yaml:"CreatedBy"`
	StartTime     string                       `xml:"StartTime" json:"StartTime" yaml:"StartTime"`
	EndTime       string                       `xml:"EndTime" json:"EndTime" yaml:"EndTime"`
	ClientVersion string                       `xml:"ClientVersion" json:"ClientVersion" yaml:"ClientVersion"`
	Role          ParticipantActivityRole      `xml:"Role" json:"Role" yaml:"Role"`
	MediaType     ParticipantActivityMediaType `xml:"MediaType" json:"MediaType" yaml:"MediaType"`
	MediaDetails  *string                      `xml:"MediaDetails,omitempty" json:"MediaDetails,omitempty" yaml:"MediaDetails,omitempty"`
}

// PathToExceptionFieldType was auto-generated from WSDL.
type PathToExceptionFieldType struct {
	FieldURI      ExceptionPropertyURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,attr,omitempty" yaml:"FieldURI,attr,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PathToExceptionFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PathToExceptionFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Represents an extended property. Note that there are only a
// couple of valid attribute                 combinations. Note
// that all occurances require the PropertyType attribute.
//  1. (DistinguishedPropertySetId || PropertySetId)
//
// + (PropertyName || Property Id)                 2. PropertyTag
type PathToExtendedFieldType struct {
	DistinguishedPropertySetId DistinguishedPropertySetType `xml:"DistinguishedPropertySetId,attr,omitempty" json:"DistinguishedPropertySetId,attr,omitempty" yaml:"DistinguishedPropertySetId,attr,omitempty"`
	PropertySetId              GuidType                     `xml:"PropertySetId,attr,omitempty" json:"PropertySetId,attr,omitempty" yaml:"PropertySetId,attr,omitempty"`
	PropertyTag                PropertyTagType              `xml:"PropertyTag,attr,omitempty" json:"PropertyTag,attr,omitempty" yaml:"PropertyTag,attr,omitempty"`
	PropertyName               string                       `xml:"PropertyName,attr,omitempty" json:"PropertyName,attr,omitempty" yaml:"PropertyName,attr,omitempty"`
	PropertyId                 int                          `xml:"PropertyId,attr,omitempty" json:"PropertyId,attr,omitempty" yaml:"PropertyId,attr,omitempty"`
	PropertyType               MapiPropertyTypeType         `xml:"PropertyType,attr,omitempty" json:"PropertyType,attr,omitempty" yaml:"PropertyType,attr,omitempty"`
	TypeAttrXSI                string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PathToExtendedFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PathToExtendedFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PathToIndexedFieldType was auto-generated from WSDL.
type PathToIndexedFieldType struct {
	FieldURI      DictionaryURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,attr,omitempty" yaml:"FieldURI,attr,omitempty"`
	FieldIndex    string            `xml:"FieldIndex,attr,omitempty" json:"FieldIndex,attr,omitempty" yaml:"FieldIndex,attr,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PathToIndexedFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PathToIndexedFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PathToUnindexedFieldType was auto-generated from WSDL.
type PathToUnindexedFieldType struct {
	FieldURI      UnindexedFieldURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,attr,omitempty" yaml:"FieldURI,attr,omitempty"`
	TypeAttrXSI   string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PathToUnindexedFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PathToUnindexedFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PeopleRefinerType was auto-generated from WSDL.
type PeopleRefinerType struct {
	RefinerType   RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner       *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount   *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
	DisplayName   *string                  `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	SmtpAddress   *SmtpAddressType         `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty" yaml:"SmtpAddress,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PeopleRefinerType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PeopleRefinerType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PeopleSuggestionType was auto-generated from WSDL.
type PeopleSuggestionType struct {
	SuggestedQuery     string             `xml:"SuggestedQuery" json:"SuggestedQuery" yaml:"SuggestedQuery"`
	DisplayText        string             `xml:"DisplayText" json:"DisplayText" yaml:"DisplayText"`
	SuggestionType     SuggestionKindType `xml:"SuggestionType" json:"SuggestionType" yaml:"SuggestionType"`
	Trigger            *string            `xml:"Trigger,omitempty" json:"Trigger,omitempty" yaml:"Trigger,omitempty"`
	TDSuggestionId     *int               `xml:"TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty" yaml:"TDSuggestionId,omitempty"`
	IsDeletable        *bool              `xml:"IsDeletable,omitempty" json:"IsDeletable,omitempty" yaml:"IsDeletable,omitempty"`
	PrimarySmtpAddress string             `xml:"PrimarySmtpAddress" json:"PrimarySmtpAddress" yaml:"PrimarySmtpAddress"`
	PersonType         *string            `xml:"PersonType,omitempty" json:"PersonType,omitempty" yaml:"PersonType,omitempty"`
	TypeAttrXSI        string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PeopleSuggestionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PeopleSuggestionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PeopleTokenType was auto-generated from WSDL.
type PeopleTokenType struct {
	TokenSource        TokenSourceType `xml:"TokenSource" json:"TokenSource" yaml:"TokenSource"`
	ExpirationDateTime *DateTime       `xml:"ExpirationDateTime,omitempty" json:"ExpirationDateTime,omitempty" yaml:"ExpirationDateTime,omitempty"`
	TokenValue         *string         `xml:"TokenValue,omitempty" json:"TokenValue,omitempty" yaml:"TokenValue,omitempty"`
}

// PerformInstantSearchRequest was auto-generated from WSDL.
type PerformInstantSearchRequest struct {
	SearchSessionId          string                            `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	ItemType                 InstantSearchItemType             `xml:"ItemType" json:"ItemType" yaml:"ItemType"`
	QueryOptions             QueryOptionsType                  `xml:"QueryOptions" json:"QueryOptions" yaml:"QueryOptions"`
	SearchRequestId          int64                             `xml:"SearchRequestId" json:"SearchRequestId" yaml:"SearchRequestId"`
	KqlQuery                 string                            `xml:"KqlQuery" json:"KqlQuery" yaml:"KqlQuery"`
	FolderScope              *ArrayOfFolderIdType              `xml:"FolderScope" json:"FolderScope" yaml:"FolderScope"`
	DistinguishedFolderScope *ArrayOfDistinguishedFolderIdType `xml:"DistinguishedFolderScope,omitempty" json:"DistinguishedFolderScope,omitempty" yaml:"DistinguishedFolderScope,omitempty"`
	IsDeepTraversal          *bool                             `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty" yaml:"IsDeepTraversal,omitempty"`
	WaitOnSearchResults      *bool                             `xml:"WaitOnSearchResults,omitempty" json:"WaitOnSearchResults,omitempty" yaml:"WaitOnSearchResults,omitempty"`
	TypeAttrXSI              string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PerformInstantSearchRequest) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PerformInstantSearchRequest"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PerformInstantSearchResponse was auto-generated from WSDL.
type PerformInstantSearchResponse struct {
	MessageText        *string                   `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType         `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                      `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}            `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType         `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Payload            *InstantSearchPayloadType `xml:"Payload,omitempty" json:"Payload,omitempty" yaml:"Payload,omitempty"`
	TypeAttrXSI        string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PerformInstantSearchResponse) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PerformInstantSearchResponse"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PerformReminderActionResponseMessageType was auto-generated
// from WSDL.
type PerformReminderActionResponseMessageType struct {
	MessageText        *string                     `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType           `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                        `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}              `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType           `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	UpdatedItemIds     *NonEmptyArrayOfItemIdsType `xml:"UpdatedItemIds" json:"UpdatedItemIds" yaml:"UpdatedItemIds"`
	TypeAttrXSI        string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PerformReminderActionResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PerformReminderActionResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PerformReminderActionType was auto-generated from WSDL.
type PerformReminderActionType struct {
	ReminderItemActions *NonEmptyArrayOfReminderItemActionType `xml:"ReminderItemActions" json:"ReminderItemActions" yaml:"ReminderItemActions"`
	TypeAttrXSI         string                                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PerformReminderActionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PerformReminderActionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PeriodType was auto-generated from WSDL.
type PeriodType struct {
	Bias Duration `xml:"Bias,attr,omitempty" json:"Bias,attr,omitempty" yaml:"Bias,attr,omitempty"`
	Name string   `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
	Id   string   `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
}

// The set of permissions on a folder
type PermissionSetType struct {
	Permissions    *ArrayOfPermissionsType    `xml:"Permissions,omitempty" json:"Permissions,omitempty" yaml:"Permissions,omitempty"`
	UnknownEntries *ArrayOfUnknownEntriesType `xml:"UnknownEntries,omitempty" json:"UnknownEntries,omitempty" yaml:"UnknownEntries,omitempty"`
}

// A permission on a folder
type PermissionType struct {
	UserId              *UserIdType               `xml:"UserId" json:"UserId" yaml:"UserId"`
	CanCreateItems      *bool                     `xml:"CanCreateItems,omitempty" json:"CanCreateItems,omitempty" yaml:"CanCreateItems,omitempty"`
	CanCreateSubFolders *bool                     `xml:"CanCreateSubFolders,omitempty" json:"CanCreateSubFolders,omitempty" yaml:"CanCreateSubFolders,omitempty"`
	IsFolderOwner       *bool                     `xml:"IsFolderOwner,omitempty" json:"IsFolderOwner,omitempty" yaml:"IsFolderOwner,omitempty"`
	IsFolderVisible     *bool                     `xml:"IsFolderVisible,omitempty" json:"IsFolderVisible,omitempty" yaml:"IsFolderVisible,omitempty"`
	IsFolderContact     *bool                     `xml:"IsFolderContact,omitempty" json:"IsFolderContact,omitempty" yaml:"IsFolderContact,omitempty"`
	EditItems           *PermissionActionType     `xml:"EditItems,omitempty" json:"EditItems,omitempty" yaml:"EditItems,omitempty"`
	DeleteItems         *PermissionActionType     `xml:"DeleteItems,omitempty" json:"DeleteItems,omitempty" yaml:"DeleteItems,omitempty"`
	ReadItems           *PermissionReadAccessType `xml:"ReadItems,omitempty" json:"ReadItems,omitempty" yaml:"ReadItems,omitempty"`
	PermissionLevel     PermissionLevelType       `xml:"PermissionLevel" json:"PermissionLevel" yaml:"PermissionLevel"`
	TypeAttrXSI         string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PermissionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PermissionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PersonResponseShapeType was auto-generated from WSDL.
type PersonResponseShapeType struct {
	BaseShape            *DefaultShapeNamesType             `xml:"BaseShape,omitempty" json:"BaseShape,omitempty" yaml:"BaseShape,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// PersonType was auto-generated from WSDL.
type PersonType struct {
	FullName              *string                     `xml:"FullName,omitempty" json:"FullName,omitempty" yaml:"FullName,omitempty"`
	GivenName             *string                     `xml:"GivenName,omitempty" json:"GivenName,omitempty" yaml:"GivenName,omitempty"`
	Surname               *string                     `xml:"Surname,omitempty" json:"Surname,omitempty" yaml:"Surname,omitempty"`
	PhoneNumber           *string                     `xml:"PhoneNumber,omitempty" json:"PhoneNumber,omitempty" yaml:"PhoneNumber,omitempty"`
	SMSNumber             *string                     `xml:"SMSNumber,omitempty" json:"SMSNumber,omitempty" yaml:"SMSNumber,omitempty"`
	EmailAddress          *string                     `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	Alias                 *string                     `xml:"Alias,omitempty" json:"Alias,omitempty" yaml:"Alias,omitempty"`
	Department            *string                     `xml:"Department,omitempty" json:"Department,omitempty" yaml:"Department,omitempty"`
	LinkedInProfileLink   *string                     `xml:"LinkedInProfileLink,omitempty" json:"LinkedInProfileLink,omitempty" yaml:"LinkedInProfileLink,omitempty"`
	Skills                *ArrayOfSkillInsightValue   `xml:"Skills,omitempty" json:"Skills,omitempty" yaml:"Skills,omitempty"`
	ProfessionalBiography *string                     `xml:"ProfessionalBiography,omitempty" json:"ProfessionalBiography,omitempty" yaml:"ProfessionalBiography,omitempty"`
	ManagementChain       *ArrayOfProfileInsightValue `xml:"ManagementChain,omitempty" json:"ManagementChain,omitempty" yaml:"ManagementChain,omitempty"`
	DirectReports         *ArrayOfProfileInsightValue `xml:"DirectReports,omitempty" json:"DirectReports,omitempty" yaml:"DirectReports,omitempty"`
	Peers                 *ArrayOfProfileInsightValue `xml:"Peers,omitempty" json:"Peers,omitempty" yaml:"Peers,omitempty"`
	TeamSize              *string                     `xml:"TeamSize,omitempty" json:"TeamSize,omitempty" yaml:"TeamSize,omitempty"`
	CurrentJob            *ArrayOfJobInsightValue     `xml:"CurrentJob,omitempty" json:"CurrentJob,omitempty" yaml:"CurrentJob,omitempty"`
	Birthday              *string                     `xml:"Birthday,omitempty" json:"Birthday,omitempty" yaml:"Birthday,omitempty"`
	Hometown              *string                     `xml:"Hometown,omitempty" json:"Hometown,omitempty" yaml:"Hometown,omitempty"`
	CurrentLocation       *string                     `xml:"CurrentLocation,omitempty" json:"CurrentLocation,omitempty" yaml:"CurrentLocation,omitempty"`
	CompanyProfile        *ArrayOfCompanyInsightValue `xml:"CompanyProfile,omitempty" json:"CompanyProfile,omitempty" yaml:"CompanyProfile,omitempty"`
	Office                *string                     `xml:"Office,omitempty" json:"Office,omitempty" yaml:"Office,omitempty"`
	Headline              *string                     `xml:"Headline,omitempty" json:"Headline,omitempty" yaml:"Headline,omitempty"`
	MutualConnections     *ArrayOfProfileInsightValue `xml:"MutualConnections,omitempty" json:"MutualConnections,omitempty" yaml:"MutualConnections,omitempty"`
	Title                 *string                     `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	MutualManager         *ProfileInsightValue        `xml:"MutualManager,omitempty" json:"MutualManager,omitempty" yaml:"MutualManager,omitempty"`
	Insights              *ArrayOfInsight             `xml:"Insights,omitempty" json:"Insights,omitempty" yaml:"Insights,omitempty"`
	UserProfilePicture    *UserProfilePicture         `xml:"UserProfilePicture,omitempty" json:"UserProfilePicture,omitempty" yaml:"UserProfilePicture,omitempty"`
}

// PersonaAttributionType was auto-generated from WSDL.
type PersonaAttributionType struct {
	Id             string        `xml:"Id" json:"Id" yaml:"Id"`
	SourceId       *ItemIdType   `xml:"SourceId" json:"SourceId" yaml:"SourceId"`
	DisplayName    string        `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	IsWritable     *bool         `xml:"IsWritable,omitempty" json:"IsWritable,omitempty" yaml:"IsWritable,omitempty"`
	IsQuickContact *bool         `xml:"IsQuickContact,omitempty" json:"IsQuickContact,omitempty" yaml:"IsQuickContact,omitempty"`
	IsHidden       *bool         `xml:"IsHidden,omitempty" json:"IsHidden,omitempty" yaml:"IsHidden,omitempty"`
	FolderId       *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
}

// PersonaPhoneNumberType was auto-generated from WSDL.
type PersonaPhoneNumberType struct {
	Number string `xml:"Number" json:"Number" yaml:"Number"`
	Type   string `xml:"Type" json:"Type" yaml:"Type"`
}

// PersonaPostalAddressType was auto-generated from WSDL.
type PersonaPostalAddressType struct {
	Street           *string             `xml:"Street,omitempty" json:"Street,omitempty" yaml:"Street,omitempty"`
	City             *string             `xml:"City,omitempty" json:"City,omitempty" yaml:"City,omitempty"`
	State            *string             `xml:"State,omitempty" json:"State,omitempty" yaml:"State,omitempty"`
	Country          *string             `xml:"Country,omitempty" json:"Country,omitempty" yaml:"Country,omitempty"`
	PostalCode       *string             `xml:"PostalCode,omitempty" json:"PostalCode,omitempty" yaml:"PostalCode,omitempty"`
	PostOfficeBox    *string             `xml:"PostOfficeBox,omitempty" json:"PostOfficeBox,omitempty" yaml:"PostOfficeBox,omitempty"`
	Type             *string             `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	Latitude         *float64            `xml:"Latitude,omitempty" json:"Latitude,omitempty" yaml:"Latitude,omitempty"`
	Longitude        *float64            `xml:"Longitude,omitempty" json:"Longitude,omitempty" yaml:"Longitude,omitempty"`
	Accuracy         *float64            `xml:"Accuracy,omitempty" json:"Accuracy,omitempty" yaml:"Accuracy,omitempty"`
	Altitude         *float64            `xml:"Altitude,omitempty" json:"Altitude,omitempty" yaml:"Altitude,omitempty"`
	AltitudeAccuracy *float64            `xml:"AltitudeAccuracy,omitempty" json:"AltitudeAccuracy,omitempty" yaml:"AltitudeAccuracy,omitempty"`
	FormattedAddress *string             `xml:"FormattedAddress,omitempty" json:"FormattedAddress,omitempty" yaml:"FormattedAddress,omitempty"`
	LocationUri      *string             `xml:"LocationUri,omitempty" json:"LocationUri,omitempty" yaml:"LocationUri,omitempty"`
	LocationSource   *LocationSourceType `xml:"LocationSource,omitempty" json:"LocationSource,omitempty" yaml:"LocationSource,omitempty"`
}

// PersonaResponseShapeType was auto-generated from WSDL.
type PersonaResponseShapeType struct {
	BaseShape            *DefaultShapeNamesType             `xml:"BaseShape,omitempty" json:"BaseShape,omitempty" yaml:"BaseShape,omitempty"`
	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// PersonaType was auto-generated from WSDL.
type PersonaType struct {
	PersonaId                    *ItemIdType                                 `xml:"PersonaId" json:"PersonaId" yaml:"PersonaId"`
	PersonaType                  *string                                     `xml:"PersonaType,omitempty" json:"PersonaType,omitempty" yaml:"PersonaType,omitempty"`
	PersonaObjectStatus          *string                                     `xml:"PersonaObjectStatus,omitempty" json:"PersonaObjectStatus,omitempty" yaml:"PersonaObjectStatus,omitempty"`
	CreationTime                 *DateTime                                   `xml:"CreationTime,omitempty" json:"CreationTime,omitempty" yaml:"CreationTime,omitempty"`
	Bodies                       *ArrayOfBodyContentAttributedValuesType     `xml:"Bodies,omitempty" json:"Bodies,omitempty" yaml:"Bodies,omitempty"`
	DisplayNameFirstLastSortKey  *string                                     `xml:"DisplayNameFirstLastSortKey,omitempty" json:"DisplayNameFirstLastSortKey,omitempty" yaml:"DisplayNameFirstLastSortKey,omitempty"`
	DisplayNameLastFirstSortKey  *string                                     `xml:"DisplayNameLastFirstSortKey,omitempty" json:"DisplayNameLastFirstSortKey,omitempty" yaml:"DisplayNameLastFirstSortKey,omitempty"`
	CompanyNameSortKey           *string                                     `xml:"CompanyNameSortKey,omitempty" json:"CompanyNameSortKey,omitempty" yaml:"CompanyNameSortKey,omitempty"`
	HomeCitySortKey              *string                                     `xml:"HomeCitySortKey,omitempty" json:"HomeCitySortKey,omitempty" yaml:"HomeCitySortKey,omitempty"`
	WorkCitySortKey              *string                                     `xml:"WorkCitySortKey,omitempty" json:"WorkCitySortKey,omitempty" yaml:"WorkCitySortKey,omitempty"`
	DisplayNameFirstLastHeader   *string                                     `xml:"DisplayNameFirstLastHeader,omitempty" json:"DisplayNameFirstLastHeader,omitempty" yaml:"DisplayNameFirstLastHeader,omitempty"`
	DisplayNameLastFirstHeader   *string                                     `xml:"DisplayNameLastFirstHeader,omitempty" json:"DisplayNameLastFirstHeader,omitempty" yaml:"DisplayNameLastFirstHeader,omitempty"`
	DisplayName                  *string                                     `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	DisplayNameFirstLast         *string                                     `xml:"DisplayNameFirstLast,omitempty" json:"DisplayNameFirstLast,omitempty" yaml:"DisplayNameFirstLast,omitempty"`
	DisplayNameLastFirst         *string                                     `xml:"DisplayNameLastFirst,omitempty" json:"DisplayNameLastFirst,omitempty" yaml:"DisplayNameLastFirst,omitempty"`
	FileAs                       *string                                     `xml:"FileAs,omitempty" json:"FileAs,omitempty" yaml:"FileAs,omitempty"`
	FileAsId                     *string                                     `xml:"FileAsId,omitempty" json:"FileAsId,omitempty" yaml:"FileAsId,omitempty"`
	DisplayNamePrefix            *string                                     `xml:"DisplayNamePrefix,omitempty" json:"DisplayNamePrefix,omitempty" yaml:"DisplayNamePrefix,omitempty"`
	GivenName                    *string                                     `xml:"GivenName,omitempty" json:"GivenName,omitempty" yaml:"GivenName,omitempty"`
	MiddleName                   *string                                     `xml:"MiddleName,omitempty" json:"MiddleName,omitempty" yaml:"MiddleName,omitempty"`
	Surname                      *string                                     `xml:"Surname,omitempty" json:"Surname,omitempty" yaml:"Surname,omitempty"`
	Generation                   *string                                     `xml:"Generation,omitempty" json:"Generation,omitempty" yaml:"Generation,omitempty"`
	Nickname                     *string                                     `xml:"Nickname,omitempty" json:"Nickname,omitempty" yaml:"Nickname,omitempty"`
	YomiCompanyName              *string                                     `xml:"YomiCompanyName,omitempty" json:"YomiCompanyName,omitempty" yaml:"YomiCompanyName,omitempty"`
	YomiFirstName                *string                                     `xml:"YomiFirstName,omitempty" json:"YomiFirstName,omitempty" yaml:"YomiFirstName,omitempty"`
	YomiLastName                 *string                                     `xml:"YomiLastName,omitempty" json:"YomiLastName,omitempty" yaml:"YomiLastName,omitempty"`
	Title                        *string                                     `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	Department                   *string                                     `xml:"Department,omitempty" json:"Department,omitempty" yaml:"Department,omitempty"`
	CompanyName                  *string                                     `xml:"CompanyName,omitempty" json:"CompanyName,omitempty" yaml:"CompanyName,omitempty"`
	Location                     *string                                     `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	EmailAddress                 *EmailAddressType                           `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	EmailAddresses               *ArrayOfEmailAddressesType                  `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty" yaml:"EmailAddresses,omitempty"`
	PhoneNumber                  *PersonaPhoneNumberType                     `xml:"PhoneNumber,omitempty" json:"PhoneNumber,omitempty" yaml:"PhoneNumber,omitempty"`
	ImAddress                    *string                                     `xml:"ImAddress,omitempty" json:"ImAddress,omitempty" yaml:"ImAddress,omitempty"`
	HomeCity                     *string                                     `xml:"HomeCity,omitempty" json:"HomeCity,omitempty" yaml:"HomeCity,omitempty"`
	WorkCity                     *string                                     `xml:"WorkCity,omitempty" json:"WorkCity,omitempty" yaml:"WorkCity,omitempty"`
	RelevanceScore               *int                                        `xml:"RelevanceScore,omitempty" json:"RelevanceScore,omitempty" yaml:"RelevanceScore,omitempty"`
	FolderIds                    *ArrayOfFolderIdType                        `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	Attributions                 *ArrayOfPersonaAttributionsType             `xml:"Attributions,omitempty" json:"Attributions,omitempty" yaml:"Attributions,omitempty"`
	DisplayNames                 *ArrayOfStringAttributedValuesType          `xml:"DisplayNames,omitempty" json:"DisplayNames,omitempty" yaml:"DisplayNames,omitempty"`
	FileAses                     *ArrayOfStringAttributedValuesType          `xml:"FileAses,omitempty" json:"FileAses,omitempty" yaml:"FileAses,omitempty"`
	FileAsIds                    *ArrayOfStringAttributedValuesType          `xml:"FileAsIds,omitempty" json:"FileAsIds,omitempty" yaml:"FileAsIds,omitempty"`
	DisplayNamePrefixes          *ArrayOfStringAttributedValuesType          `xml:"DisplayNamePrefixes,omitempty" json:"DisplayNamePrefixes,omitempty" yaml:"DisplayNamePrefixes,omitempty"`
	GivenNames                   *ArrayOfStringAttributedValuesType          `xml:"GivenNames,omitempty" json:"GivenNames,omitempty" yaml:"GivenNames,omitempty"`
	MiddleNames                  *ArrayOfStringAttributedValuesType          `xml:"MiddleNames,omitempty" json:"MiddleNames,omitempty" yaml:"MiddleNames,omitempty"`
	Surnames                     *ArrayOfStringAttributedValuesType          `xml:"Surnames,omitempty" json:"Surnames,omitempty" yaml:"Surnames,omitempty"`
	Generations                  *ArrayOfStringAttributedValuesType          `xml:"Generations,omitempty" json:"Generations,omitempty" yaml:"Generations,omitempty"`
	Nicknames                    *ArrayOfStringAttributedValuesType          `xml:"Nicknames,omitempty" json:"Nicknames,omitempty" yaml:"Nicknames,omitempty"`
	Initials                     *ArrayOfStringAttributedValuesType          `xml:"Initials,omitempty" json:"Initials,omitempty" yaml:"Initials,omitempty"`
	YomiCompanyNames             *ArrayOfStringAttributedValuesType          `xml:"YomiCompanyNames,omitempty" json:"YomiCompanyNames,omitempty" yaml:"YomiCompanyNames,omitempty"`
	YomiFirstNames               *ArrayOfStringAttributedValuesType          `xml:"YomiFirstNames,omitempty" json:"YomiFirstNames,omitempty" yaml:"YomiFirstNames,omitempty"`
	YomiLastNames                *ArrayOfStringAttributedValuesType          `xml:"YomiLastNames,omitempty" json:"YomiLastNames,omitempty" yaml:"YomiLastNames,omitempty"`
	BusinessPhoneNumbers         *ArrayOfPhoneNumberAttributedValuesType     `xml:"BusinessPhoneNumbers,omitempty" json:"BusinessPhoneNumbers,omitempty" yaml:"BusinessPhoneNumbers,omitempty"`
	BusinessPhoneNumbers2        *ArrayOfPhoneNumberAttributedValuesType     `xml:"BusinessPhoneNumbers2,omitempty" json:"BusinessPhoneNumbers2,omitempty" yaml:"BusinessPhoneNumbers2,omitempty"`
	HomePhones                   *ArrayOfPhoneNumberAttributedValuesType     `xml:"HomePhones,omitempty" json:"HomePhones,omitempty" yaml:"HomePhones,omitempty"`
	HomePhones2                  *ArrayOfPhoneNumberAttributedValuesType     `xml:"HomePhones2,omitempty" json:"HomePhones2,omitempty" yaml:"HomePhones2,omitempty"`
	MobilePhones                 *ArrayOfPhoneNumberAttributedValuesType     `xml:"MobilePhones,omitempty" json:"MobilePhones,omitempty" yaml:"MobilePhones,omitempty"`
	MobilePhones2                *ArrayOfPhoneNumberAttributedValuesType     `xml:"MobilePhones2,omitempty" json:"MobilePhones2,omitempty" yaml:"MobilePhones2,omitempty"`
	AssistantPhoneNumbers        *ArrayOfPhoneNumberAttributedValuesType     `xml:"AssistantPhoneNumbers,omitempty" json:"AssistantPhoneNumbers,omitempty" yaml:"AssistantPhoneNumbers,omitempty"`
	CallbackPhones               *ArrayOfPhoneNumberAttributedValuesType     `xml:"CallbackPhones,omitempty" json:"CallbackPhones,omitempty" yaml:"CallbackPhones,omitempty"`
	CarPhones                    *ArrayOfPhoneNumberAttributedValuesType     `xml:"CarPhones,omitempty" json:"CarPhones,omitempty" yaml:"CarPhones,omitempty"`
	HomeFaxes                    *ArrayOfPhoneNumberAttributedValuesType     `xml:"HomeFaxes,omitempty" json:"HomeFaxes,omitempty" yaml:"HomeFaxes,omitempty"`
	OrganizationMainPhones       *ArrayOfPhoneNumberAttributedValuesType     `xml:"OrganizationMainPhones,omitempty" json:"OrganizationMainPhones,omitempty" yaml:"OrganizationMainPhones,omitempty"`
	OtherFaxes                   *ArrayOfPhoneNumberAttributedValuesType     `xml:"OtherFaxes,omitempty" json:"OtherFaxes,omitempty" yaml:"OtherFaxes,omitempty"`
	OtherTelephones              *ArrayOfPhoneNumberAttributedValuesType     `xml:"OtherTelephones,omitempty" json:"OtherTelephones,omitempty" yaml:"OtherTelephones,omitempty"`
	OtherPhones2                 *ArrayOfPhoneNumberAttributedValuesType     `xml:"OtherPhones2,omitempty" json:"OtherPhones2,omitempty" yaml:"OtherPhones2,omitempty"`
	Pagers                       *ArrayOfPhoneNumberAttributedValuesType     `xml:"Pagers,omitempty" json:"Pagers,omitempty" yaml:"Pagers,omitempty"`
	RadioPhones                  *ArrayOfPhoneNumberAttributedValuesType     `xml:"RadioPhones,omitempty" json:"RadioPhones,omitempty" yaml:"RadioPhones,omitempty"`
	TelexNumbers                 *ArrayOfPhoneNumberAttributedValuesType     `xml:"TelexNumbers,omitempty" json:"TelexNumbers,omitempty" yaml:"TelexNumbers,omitempty"`
	TTYTDDPhoneNumbers           *ArrayOfPhoneNumberAttributedValuesType     `xml:"TTYTDDPhoneNumbers,omitempty" json:"TTYTDDPhoneNumbers,omitempty" yaml:"TTYTDDPhoneNumbers,omitempty"`
	WorkFaxes                    *ArrayOfPhoneNumberAttributedValuesType     `xml:"WorkFaxes,omitempty" json:"WorkFaxes,omitempty" yaml:"WorkFaxes,omitempty"`
	Emails1                      *ArrayOfEmailAddressAttributedValuesType    `xml:"Emails1,omitempty" json:"Emails1,omitempty" yaml:"Emails1,omitempty"`
	Emails2                      *ArrayOfEmailAddressAttributedValuesType    `xml:"Emails2,omitempty" json:"Emails2,omitempty" yaml:"Emails2,omitempty"`
	Emails3                      *ArrayOfEmailAddressAttributedValuesType    `xml:"Emails3,omitempty" json:"Emails3,omitempty" yaml:"Emails3,omitempty"`
	BusinessHomePages            *ArrayOfStringAttributedValuesType          `xml:"BusinessHomePages,omitempty" json:"BusinessHomePages,omitempty" yaml:"BusinessHomePages,omitempty"`
	PersonalHomePages            *ArrayOfStringAttributedValuesType          `xml:"PersonalHomePages,omitempty" json:"PersonalHomePages,omitempty" yaml:"PersonalHomePages,omitempty"`
	OfficeLocations              *ArrayOfStringAttributedValuesType          `xml:"OfficeLocations,omitempty" json:"OfficeLocations,omitempty" yaml:"OfficeLocations,omitempty"`
	ImAddresses                  *ArrayOfStringAttributedValuesType          `xml:"ImAddresses,omitempty" json:"ImAddresses,omitempty" yaml:"ImAddresses,omitempty"`
	ImAddresses2                 *ArrayOfStringAttributedValuesType          `xml:"ImAddresses2,omitempty" json:"ImAddresses2,omitempty" yaml:"ImAddresses2,omitempty"`
	ImAddresses3                 *ArrayOfStringAttributedValuesType          `xml:"ImAddresses3,omitempty" json:"ImAddresses3,omitempty" yaml:"ImAddresses3,omitempty"`
	BusinessAddresses            *ArrayOfPostalAddressAttributedValuesType   `xml:"BusinessAddresses,omitempty" json:"BusinessAddresses,omitempty" yaml:"BusinessAddresses,omitempty"`
	HomeAddresses                *ArrayOfPostalAddressAttributedValuesType   `xml:"HomeAddresses,omitempty" json:"HomeAddresses,omitempty" yaml:"HomeAddresses,omitempty"`
	OtherAddresses               *ArrayOfPostalAddressAttributedValuesType   `xml:"OtherAddresses,omitempty" json:"OtherAddresses,omitempty" yaml:"OtherAddresses,omitempty"`
	Titles                       *ArrayOfStringAttributedValuesType          `xml:"Titles,omitempty" json:"Titles,omitempty" yaml:"Titles,omitempty"`
	Departments                  *ArrayOfStringAttributedValuesType          `xml:"Departments,omitempty" json:"Departments,omitempty" yaml:"Departments,omitempty"`
	CompanyNames                 *ArrayOfStringAttributedValuesType          `xml:"CompanyNames,omitempty" json:"CompanyNames,omitempty" yaml:"CompanyNames,omitempty"`
	Managers                     *ArrayOfStringAttributedValuesType          `xml:"Managers,omitempty" json:"Managers,omitempty" yaml:"Managers,omitempty"`
	AssistantNames               *ArrayOfStringAttributedValuesType          `xml:"AssistantNames,omitempty" json:"AssistantNames,omitempty" yaml:"AssistantNames,omitempty"`
	Professions                  *ArrayOfStringAttributedValuesType          `xml:"Professions,omitempty" json:"Professions,omitempty" yaml:"Professions,omitempty"`
	SpouseNames                  *ArrayOfStringAttributedValuesType          `xml:"SpouseNames,omitempty" json:"SpouseNames,omitempty" yaml:"SpouseNames,omitempty"`
	Children                     *ArrayOfStringArrayAttributedValuesType     `xml:"Children,omitempty" json:"Children,omitempty" yaml:"Children,omitempty"`
	Schools                      *ArrayOfStringAttributedValuesType          `xml:"Schools,omitempty" json:"Schools,omitempty" yaml:"Schools,omitempty"`
	Hobbies                      *ArrayOfStringAttributedValuesType          `xml:"Hobbies,omitempty" json:"Hobbies,omitempty" yaml:"Hobbies,omitempty"`
	WeddingAnniversaries         *ArrayOfStringAttributedValuesType          `xml:"WeddingAnniversaries,omitempty" json:"WeddingAnniversaries,omitempty" yaml:"WeddingAnniversaries,omitempty"`
	Birthdays                    *ArrayOfStringAttributedValuesType          `xml:"Birthdays,omitempty" json:"Birthdays,omitempty" yaml:"Birthdays,omitempty"`
	Locations                    *ArrayOfStringAttributedValuesType          `xml:"Locations,omitempty" json:"Locations,omitempty" yaml:"Locations,omitempty"`
	InlineLinks                  *ArrayOfStringAttributedValuesType          `xml:"InlineLinks,omitempty" json:"InlineLinks,omitempty" yaml:"InlineLinks,omitempty"`
	ItemLinkIds                  *ArrayOfStringArrayAttributedValuesType     `xml:"ItemLinkIds,omitempty" json:"ItemLinkIds,omitempty" yaml:"ItemLinkIds,omitempty"`
	HasActiveDeals               *string                                     `xml:"HasActiveDeals,omitempty" json:"HasActiveDeals,omitempty" yaml:"HasActiveDeals,omitempty"`
	IsBusinessContact            *string                                     `xml:"IsBusinessContact,omitempty" json:"IsBusinessContact,omitempty" yaml:"IsBusinessContact,omitempty"`
	AttributedHasActiveDeals     *ArrayOfStringAttributedValuesType          `xml:"AttributedHasActiveDeals,omitempty" json:"AttributedHasActiveDeals,omitempty" yaml:"AttributedHasActiveDeals,omitempty"`
	AttributedIsBusinessContact  *ArrayOfStringAttributedValuesType          `xml:"AttributedIsBusinessContact,omitempty" json:"AttributedIsBusinessContact,omitempty" yaml:"AttributedIsBusinessContact,omitempty"`
	SourceMailboxGuids           *ArrayOfStringAttributedValuesType          `xml:"SourceMailboxGuids,omitempty" json:"SourceMailboxGuids,omitempty" yaml:"SourceMailboxGuids,omitempty"`
	LastContactedDate            *DateTime                                   `xml:"LastContactedDate,omitempty" json:"LastContactedDate,omitempty" yaml:"LastContactedDate,omitempty"`
	ExtendedProperties           *ArrayOfExtendedPropertyAttributedValueType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty" yaml:"ExtendedProperties,omitempty"`
	ExternalDirectoryObjectId    *string                                     `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty" yaml:"ExternalDirectoryObjectId,omitempty"`
	MapiEntryId                  *string                                     `xml:"MapiEntryId,omitempty" json:"MapiEntryId,omitempty" yaml:"MapiEntryId,omitempty"`
	MapiEmailAddress             *string                                     `xml:"MapiEmailAddress,omitempty" json:"MapiEmailAddress,omitempty" yaml:"MapiEmailAddress,omitempty"`
	MapiAddressType              *string                                     `xml:"MapiAddressType,omitempty" json:"MapiAddressType,omitempty" yaml:"MapiAddressType,omitempty"`
	MapiSearchKey                *string                                     `xml:"MapiSearchKey,omitempty" json:"MapiSearchKey,omitempty" yaml:"MapiSearchKey,omitempty"`
	MapiTransmittableDisplayName *string                                     `xml:"MapiTransmittableDisplayName,omitempty" json:"MapiTransmittableDisplayName,omitempty" yaml:"MapiTransmittableDisplayName,omitempty"`
	MapiSendRichInfo             *bool                                       `xml:"MapiSendRichInfo,omitempty" json:"MapiSendRichInfo,omitempty" yaml:"MapiSendRichInfo,omitempty"`
}

// PhoneCallIdType was auto-generated from WSDL.
type PhoneCallIdType struct {
	Id string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
}

// PhoneCallInformationType was auto-generated from WSDL.
type PhoneCallInformationType struct {
	PhoneCallState         PhoneCallStateType         `xml:"PhoneCallState" json:"PhoneCallState" yaml:"PhoneCallState"`
	ConnectionFailureCause ConnectionFailureCauseType `xml:"ConnectionFailureCause" json:"ConnectionFailureCause" yaml:"ConnectionFailureCause"`
	SIPResponseText        *string                    `xml:"SIPResponseText,omitempty" json:"SIPResponseText,omitempty" yaml:"SIPResponseText,omitempty"`
	SIPResponseCode        *int                       `xml:"SIPResponseCode,omitempty" json:"SIPResponseCode,omitempty" yaml:"SIPResponseCode,omitempty"`
}

// PhoneEntityType was auto-generated from WSDL.
type PhoneEntityType struct {
	Position            []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	OriginalPhoneString *string              `xml:"OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty" yaml:"OriginalPhoneString,omitempty"`
	PhoneString         *string              `xml:"PhoneString,omitempty" json:"PhoneString,omitempty" yaml:"PhoneString,omitempty"`
	Type                *string              `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	TypeAttrXSI         string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PhoneEntityType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PhoneEntityType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PhoneNumberAttributedValueType was auto-generated from WSDL.
type PhoneNumberAttributedValueType struct {
	Value        *PersonaPhoneNumberType       `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// PhoneNumberDictionaryEntryType was auto-generated from WSDL.
type PhoneNumberDictionaryEntryType struct {
	Content *string            `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Key     PhoneNumberKeyType `xml:"Key,attr,omitempty" json:"Key,attr,omitempty" yaml:"Key,attr,omitempty"`
}

// PhoneNumberDictionaryType was auto-generated from WSDL.
type PhoneNumberDictionaryType struct {
	Entry []*PhoneNumberDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty" yaml:"Entry,omitempty"`
}

// PhoneType was auto-generated from WSDL.
type PhoneType struct {
	OriginalPhoneString *string `xml:"OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty" yaml:"OriginalPhoneString,omitempty"`
	PhoneString         *string `xml:"PhoneString,omitempty" json:"PhoneString,omitempty" yaml:"PhoneString,omitempty"`
	Type                *string `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
}

// PhysicalAddressDictionaryEntryType was auto-generated from WSDL.
type PhysicalAddressDictionaryEntryType struct {
	Street          *string                `xml:"Street,omitempty" json:"Street,omitempty" yaml:"Street,omitempty"`
	City            *string                `xml:"City,omitempty" json:"City,omitempty" yaml:"City,omitempty"`
	State           *string                `xml:"State,omitempty" json:"State,omitempty" yaml:"State,omitempty"`
	CountryOrRegion *string                `xml:"CountryOrRegion,omitempty" json:"CountryOrRegion,omitempty" yaml:"CountryOrRegion,omitempty"`
	PostalCode      *string                `xml:"PostalCode,omitempty" json:"PostalCode,omitempty" yaml:"PostalCode,omitempty"`
	Key             PhysicalAddressKeyType `xml:"Key,attr,omitempty" json:"Key,attr,omitempty" yaml:"Key,attr,omitempty"`
}

// PhysicalAddressDictionaryType was auto-generated from WSDL.
type PhysicalAddressDictionaryType struct {
	Entry []*PhysicalAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty" yaml:"Entry,omitempty"`
}

// PlayOnPhoneResponseMessageType was auto-generated from WSDL.
type PlayOnPhoneResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	PhoneCallId        *PhoneCallIdType  `xml:"PhoneCallId,omitempty" json:"PhoneCallId,omitempty" yaml:"PhoneCallId,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PlayOnPhoneResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PlayOnPhoneResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PlayOnPhoneType was auto-generated from WSDL.
type PlayOnPhoneType struct {
	ItemId        *ItemIdType `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	DialString    string      `xml:"DialString" json:"DialString" yaml:"DialString"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PlayOnPhoneType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PlayOnPhoneType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// PolicyNudgeRulesServiceConfiguration was auto-generated from
// WSDL.
type PolicyNudgeRulesServiceConfiguration []interface{}

// PostItemType was auto-generated from WSDL.
type PostItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	PostedTime                   *DateTime                                 `xml:"PostedTime,omitempty" json:"PostedTime,omitempty" yaml:"PostedTime,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PostItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PostItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PostReplyItemBaseType was auto-generated from WSDL.
type PostReplyItemBaseType struct {
}

// PostReplyItemType was auto-generated from WSDL.
type PostReplyItemType struct {
	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PostReplyItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PostReplyItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PostalAddressAttributedValueType was auto-generated from WSDL.
type PostalAddressAttributedValueType struct {
	Value        *PersonaPostalAddressType     `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// Mailbox information for each preview item.
type PreviewItemMailboxType struct {
	MailboxId          string `xml:"MailboxId" json:"MailboxId" yaml:"MailboxId"`
	PrimarySmtpAddress string `xml:"PrimarySmtpAddress" json:"PrimarySmtpAddress" yaml:"PrimarySmtpAddress"`
}

// PreviewItemResponseShapeType was auto-generated from WSDL.
type PreviewItemResponseShapeType struct {
	BaseShape            PreviewItemBaseShapeType              `xml:"BaseShape" json:"BaseShape" yaml:"BaseShape"`
	AdditionalProperties *NonEmptyArrayOfExtendedFieldURIsType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty" yaml:"AdditionalProperties,omitempty"`
}

// PrimaryMailboxSearchScopeType was auto-generated from WSDL.
type PrimaryMailboxSearchScopeType struct {
	FolderScope     *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty" yaml:"FolderScope,omitempty"`
	IsDeepTraversal *bool                  `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty" yaml:"IsDeepTraversal,omitempty"`
}

// PrimarySmtpAddressType was auto-generated from WSDL.
type PrimarySmtpAddressType struct {
	Content *NonEmptyStringType `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// PrincipalNameType was auto-generated from WSDL.
type PrincipalNameType struct {
	Content *NonEmptyStringType `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// PrivateCatalogAddInStoreInfoType was auto-generated from WSDL.
type PrivateCatalogAddInStoreInfoType struct {
	AssetId       string `xml:"AssetId,attr,omitempty" json:"AssetId,attr,omitempty" yaml:"AssetId,attr,omitempty"`
	ContentMarket string `xml:"ContentMarket,attr,omitempty" json:"ContentMarket,attr,omitempty" yaml:"ContentMarket,attr,omitempty"`
}

// PrivateCatalogAddInsType was auto-generated from WSDL.
type PrivateCatalogAddInsType struct {
	StoreInfo            *PrivateCatalogAddInStoreInfoType `xml:"StoreInfo,omitempty" json:"StoreInfo,omitempty" yaml:"StoreInfo,omitempty"`
	ProductId            string                            `xml:"ProductId,attr,omitempty" json:"ProductId,attr,omitempty" yaml:"ProductId,attr,omitempty"`
	State                AddInStateType                    `xml:"State,attr,omitempty" json:"State,attr,omitempty" yaml:"State,attr,omitempty"`
	Version              VersionType                       `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
	DefaultEnabledStatus AADOfficeExtensionStatusType      `xml:"DefaultEnabledStatus,attr,omitempty" json:"DefaultEnabledStatus,attr,omitempty" yaml:"DefaultEnabledStatus,attr,omitempty"`
	InstallTimeInTicks   int64                             `xml:"InstallTimeInTicks,attr,omitempty" json:"InstallTimeInTicks,attr,omitempty" yaml:"InstallTimeInTicks,attr,omitempty"`
}

// ProfileInsightValue was auto-generated from WSDL.
type ProfileInsightValue struct {
	InsightSource   *string             `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64              `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	FullName        *string             `xml:"FullName,omitempty" json:"FullName,omitempty" yaml:"FullName,omitempty"`
	FirstName       *string             `xml:"FirstName,omitempty" json:"FirstName,omitempty" yaml:"FirstName,omitempty"`
	LastName        *string             `xml:"LastName,omitempty" json:"LastName,omitempty" yaml:"LastName,omitempty"`
	EmailAddress    *string             `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	Avatar          *string             `xml:"Avatar,omitempty" json:"Avatar,omitempty" yaml:"Avatar,omitempty"`
	JoinedUtcTicks  *int64              `xml:"JoinedUtcTicks,omitempty" json:"JoinedUtcTicks,omitempty" yaml:"JoinedUtcTicks,omitempty"`
	ProfilePicture  *UserProfilePicture `xml:"ProfilePicture,omitempty" json:"ProfilePicture,omitempty" yaml:"ProfilePicture,omitempty"`
	Title           *string             `xml:"Title,omitempty" json:"Title,omitempty" yaml:"Title,omitempty"`
	TypeAttrXSI     string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ProfileInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ProfileInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ProposeNewTimeType was auto-generated from WSDL.
type ProposeNewTimeType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	ReferenceItemId              *ItemIdType                               `xml:"ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty" yaml:"ReferenceItemId,omitempty"`
	ObjectName                   string                                    `xml:"ObjectName,attr,omitempty" json:"ObjectName,attr,omitempty" yaml:"ObjectName,attr,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ProposeNewTimeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ProposeNewTimeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ProtectionRuleActionType was auto-generated from WSDL.
type ProtectionRuleActionType struct {
	Argument []*ProtectionRuleArgumentType `xml:"Argument,omitempty" json:"Argument,omitempty" yaml:"Argument,omitempty"`
	Name     ProtectionRuleActionKindType  `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
}

// ProtectionRuleAndType was auto-generated from WSDL.
type ProtectionRuleAndType struct {
	AllInternal       *ProtectionRuleAllInternalType       `xml:"AllInternal,omitempty" json:"AllInternal,omitempty" yaml:"AllInternal,omitempty"`
	And               *ProtectionRuleAndType               `xml:"And,omitempty" json:"And,omitempty" yaml:"And,omitempty"`
	RecipientIs       *ProtectionRuleRecipientIsType       `xml:"RecipientIs,omitempty" json:"RecipientIs,omitempty" yaml:"RecipientIs,omitempty"`
	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"SenderDepartments,omitempty" json:"SenderDepartments,omitempty" yaml:"SenderDepartments,omitempty"`
	True              *ProtectionRuleTrueType              `xml:"True,omitempty" json:"True,omitempty" yaml:"True,omitempty"`
}

// ProtectionRuleArgumentType was auto-generated from WSDL.
type ProtectionRuleArgumentType struct {
	Value string `xml:"Value,attr,omitempty" json:"Value,attr,omitempty" yaml:"Value,attr,omitempty"`
}

// ProtectionRuleConditionType was auto-generated from WSDL.
type ProtectionRuleConditionType struct {
	AllInternal       *ProtectionRuleAllInternalType       `xml:"AllInternal,omitempty" json:"AllInternal,omitempty" yaml:"AllInternal,omitempty"`
	And               *ProtectionRuleAndType               `xml:"And,omitempty" json:"And,omitempty" yaml:"And,omitempty"`
	RecipientIs       *ProtectionRuleRecipientIsType       `xml:"RecipientIs,omitempty" json:"RecipientIs,omitempty" yaml:"RecipientIs,omitempty"`
	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"SenderDepartments,omitempty" json:"SenderDepartments,omitempty" yaml:"SenderDepartments,omitempty"`
	True              *ProtectionRuleTrueType              `xml:"True,omitempty" json:"True,omitempty" yaml:"True,omitempty"`
}

// ProtectionRuleRecipientIsType was auto-generated from WSDL.
type ProtectionRuleRecipientIsType struct {
	Value []ProtectionRuleValueType `xml:"Value" json:"Value" yaml:"Value"`
}

// ProtectionRuleSenderDepartmentsType was auto-generated from
// WSDL.
type ProtectionRuleSenderDepartmentsType struct {
	Value []ProtectionRuleValueType `xml:"Value" json:"Value" yaml:"Value"`
}

// ProtectionRuleType was auto-generated from WSDL.
type ProtectionRuleType struct {
	Condition       *ProtectionRuleConditionType `xml:"Condition" json:"Condition" yaml:"Condition"`
	Action          *ProtectionRuleActionType    `xml:"Action" json:"Action" yaml:"Action"`
	Name            string                       `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
	UserOverridable bool                         `xml:"UserOverridable,attr,omitempty" json:"UserOverridable,attr,omitempty" yaml:"UserOverridable,attr,omitempty"`
	Priority        string                       `xml:"Priority,attr,omitempty" json:"Priority,attr,omitempty" yaml:"Priority,attr,omitempty"`
}

// ProtectionRulesServiceConfiguration was auto-generated from
// WSDL.
type ProtectionRulesServiceConfiguration struct {
	RefreshInterval string                      `xml:"RefreshInterval,attr,omitempty" json:"RefreshInterval,attr,omitempty" yaml:"RefreshInterval,attr,omitempty"`
	Rules           *ArrayOfProtectionRulesType `xml:"Rules" json:"Rules" yaml:"Rules"`
	InternalDomains *SmtpDomainList             `xml:"InternalDomains" json:"InternalDomains" yaml:"InternalDomains"`
	TypeAttrXSI     string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ProtectionRulesServiceConfiguration) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ProtectionRulesServiceConfiguration"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ProxySecurityContextType was auto-generated from WSDL.
type ProxySecurityContextType struct {
	Content *[]byte `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// PullSubscriptionRequestType was auto-generated from WSDL.
type PullSubscriptionRequestType struct {
	FolderIds             *NonEmptyArrayOfBaseFolderIdsType          `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	EventTypes            *NonEmptyArrayOfNotificationEventTypesType `xml:"EventTypes,omitempty" json:"EventTypes,omitempty" yaml:"EventTypes,omitempty"`
	Watermark             *WatermarkType                             `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	SubscribeToAllFolders bool                                       `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,attr,omitempty" yaml:"SubscribeToAllFolders,attr,omitempty"`
	Timeout               *SubscriptionTimeoutType                   `xml:"Timeout,omitempty" json:"Timeout,omitempty" yaml:"Timeout,omitempty"`
	TypeAttrXSI           string                                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PullSubscriptionRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PullSubscriptionRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// PushSubscriptionRequestType was auto-generated from WSDL.
type PushSubscriptionRequestType struct {
	FolderIds             *NonEmptyArrayOfBaseFolderIdsType          `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	EventTypes            *NonEmptyArrayOfNotificationEventTypesType `xml:"EventTypes,omitempty" json:"EventTypes,omitempty" yaml:"EventTypes,omitempty"`
	Watermark             *WatermarkType                             `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	SubscribeToAllFolders bool                                       `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,attr,omitempty" yaml:"SubscribeToAllFolders,attr,omitempty"`
	StatusFrequency       *SubscriptionStatusFrequencyType           `xml:"StatusFrequency,omitempty" json:"StatusFrequency,omitempty" yaml:"StatusFrequency,omitempty"`
	URL                   *string                                    `xml:"URL,omitempty" json:"URL,omitempty" yaml:"URL,omitempty"`
	CallerData            *string                                    `xml:"CallerData,omitempty" json:"CallerData,omitempty" yaml:"CallerData,omitempty"`
	TypeAttrXSI           string                                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PushSubscriptionRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PushSubscriptionRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// QueryStringType was auto-generated from WSDL.
type QueryStringType struct {
	Content              *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	ResetCache           bool    `xml:"ResetCache,attr,omitempty" json:"ResetCache,attr,omitempty" yaml:"ResetCache,attr,omitempty"`
	ReturnHighlightTerms bool    `xml:"ReturnHighlightTerms,attr,omitempty" json:"ReturnHighlightTerms,attr,omitempty" yaml:"ReturnHighlightTerms,attr,omitempty"`
	ReturnDeletedItems   bool    `xml:"ReturnDeletedItems,attr,omitempty" json:"ReturnDeletedItems,attr,omitempty" yaml:"ReturnDeletedItems,attr,omitempty"`
}

// RecipientSuggestionType was auto-generated from WSDL.
type RecipientSuggestionType struct {
	DisplayName  string `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	EmailAddress string `xml:"EmailAddress" json:"EmailAddress" yaml:"EmailAddress"`
}

// RecipientTrackingEventType was auto-generated from WSDL.
type RecipientTrackingEventType struct {
	Date             *DateTime                      `xml:"Date,omitempty" json:"Date,omitempty" yaml:"Date,omitempty"`
	Recipient        *EmailAddressType              `xml:"Recipient,omitempty" json:"Recipient,omitempty" yaml:"Recipient,omitempty"`
	DeliveryStatus   *string                        `xml:"DeliveryStatus,omitempty" json:"DeliveryStatus,omitempty" yaml:"DeliveryStatus,omitempty"`
	EventDescription *string                        `xml:"EventDescription,omitempty" json:"EventDescription,omitempty" yaml:"EventDescription,omitempty"`
	EventData        *ArrayOfStringsType            `xml:"EventData,omitempty" json:"EventData,omitempty" yaml:"EventData,omitempty"`
	Server           *NonEmptyStringType            `xml:"Server,omitempty" json:"Server,omitempty" yaml:"Server,omitempty"`
	InternalId       *uint                          `xml:"InternalId,omitempty" json:"InternalId,omitempty" yaml:"InternalId,omitempty"`
	BccRecipient     *bool                          `xml:"BccRecipient,omitempty" json:"BccRecipient,omitempty" yaml:"BccRecipient,omitempty"`
	HiddenRecipient  *bool                          `xml:"HiddenRecipient,omitempty" json:"HiddenRecipient,omitempty" yaml:"HiddenRecipient,omitempty"`
	UniquePathId     *NonEmptyStringType            `xml:"UniquePathId,omitempty" json:"UniquePathId,omitempty" yaml:"UniquePathId,omitempty"`
	RootAddress      *NonEmptyStringType            `xml:"RootAddress,omitempty" json:"RootAddress,omitempty" yaml:"RootAddress,omitempty"`
	Properties       *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty" yaml:"Properties,omitempty"`
}

// RecurrencePatternBaseType was auto-generated from WSDL.
type RecurrencePatternBaseType interface{}

// RecurrenceRangeBaseType was auto-generated from WSDL.
type RecurrenceRangeBaseType interface{}

// RecurrenceType was auto-generated from WSDL.
type RecurrenceType struct {
}

// RecurringDateTransitionType was auto-generated from WSDL.
type RecurringDateTransitionType struct {
	To            *TransitionTargetType `xml:"To,omitempty" json:"To,omitempty" yaml:"To,omitempty"`
	TimeOffset    *Duration             `xml:"TimeOffset,omitempty" json:"TimeOffset,omitempty" yaml:"TimeOffset,omitempty"`
	Month         *int                  `xml:"Month,omitempty" json:"Month,omitempty" yaml:"Month,omitempty"`
	Day           *int                  `xml:"Day,omitempty" json:"Day,omitempty" yaml:"Day,omitempty"`
	TypeAttrXSI   string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RecurringDateTransitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RecurringDateTransitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RecurringDayTransitionType was auto-generated from WSDL.
type RecurringDayTransitionType struct {
	To            *TransitionTargetType `xml:"To,omitempty" json:"To,omitempty" yaml:"To,omitempty"`
	TimeOffset    *Duration             `xml:"TimeOffset,omitempty" json:"TimeOffset,omitempty" yaml:"TimeOffset,omitempty"`
	Month         *int                  `xml:"Month,omitempty" json:"Month,omitempty" yaml:"Month,omitempty"`
	DayOfWeek     *DayOfWeekType        `xml:"DayOfWeek,omitempty" json:"DayOfWeek,omitempty" yaml:"DayOfWeek,omitempty"`
	Occurrence    *int                  `xml:"Occurrence,omitempty" json:"Occurrence,omitempty" yaml:"Occurrence,omitempty"`
	TypeAttrXSI   string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RecurringDayTransitionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RecurringDayTransitionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RecurringMasterItemIdRangesType was auto-generated from WSDL.
type RecurringMasterItemIdRangesType struct {
	Id            string                       `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey     string                       `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	Ranges        *ArrayOfOccurrenceRangesType `xml:"Ranges,omitempty" json:"Ranges,omitempty" yaml:"Ranges,omitempty"`
	TypeAttrXSI   string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RecurringMasterItemIdRangesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RecurringMasterItemIdRangesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RecurringMasterItemIdType was auto-generated from WSDL.
type RecurringMasterItemIdType struct {
	OccurrenceId  DerivedItemIdType `xml:"OccurrenceId,attr,omitempty" json:"OccurrenceId,attr,omitempty" yaml:"OccurrenceId,attr,omitempty"`
	ChangeKey     string            `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RecurringMasterItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RecurringMasterItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RecurringTimeTransitionType was auto-generated from WSDL.
type RecurringTimeTransitionType interface{}

// ReferenceAttachmentType was auto-generated from WSDL.
type ReferenceAttachmentType struct {
	AttachmentId           *AttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty" yaml:"AttachmentId,omitempty"`
	Name                   *string           `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	ContentType            *string           `xml:"ContentType,omitempty" json:"ContentType,omitempty" yaml:"ContentType,omitempty"`
	ContentId              *string           `xml:"ContentId,omitempty" json:"ContentId,omitempty" yaml:"ContentId,omitempty"`
	ContentLocation        *string           `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty" yaml:"ContentLocation,omitempty"`
	AttachmentOriginalUrl  *string           `xml:"AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty" yaml:"AttachmentOriginalUrl,omitempty"`
	Size                   *int              `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	LastModifiedTime       *DateTime         `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsInline               *bool             `xml:"IsInline,omitempty" json:"IsInline,omitempty" yaml:"IsInline,omitempty"`
	AttachLongPathName     *string           `xml:"AttachLongPathName,omitempty" json:"AttachLongPathName,omitempty" yaml:"AttachLongPathName,omitempty"`
	ProviderType           *string           `xml:"ProviderType,omitempty" json:"ProviderType,omitempty" yaml:"ProviderType,omitempty"`
	ProviderEndpointUrl    *string           `xml:"ProviderEndpointUrl,omitempty" json:"ProviderEndpointUrl,omitempty" yaml:"ProviderEndpointUrl,omitempty"`
	AttachmentThumbnailUrl *string           `xml:"AttachmentThumbnailUrl,omitempty" json:"AttachmentThumbnailUrl,omitempty" yaml:"AttachmentThumbnailUrl,omitempty"`
	AttachmentPreviewUrl   *string           `xml:"AttachmentPreviewUrl,omitempty" json:"AttachmentPreviewUrl,omitempty" yaml:"AttachmentPreviewUrl,omitempty"`
	PermissionType         *int              `xml:"PermissionType,omitempty" json:"PermissionType,omitempty" yaml:"PermissionType,omitempty"`
	OriginalPermissionType *int              `xml:"OriginalPermissionType,omitempty" json:"OriginalPermissionType,omitempty" yaml:"OriginalPermissionType,omitempty"`
	AttachmentIsFolder     *bool             `xml:"AttachmentIsFolder,omitempty" json:"AttachmentIsFolder,omitempty" yaml:"AttachmentIsFolder,omitempty"`
	TypeAttrXSI            string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReferenceAttachmentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReferenceAttachmentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ReferenceItemResponseType was auto-generated from WSDL.
type ReferenceItemResponseType struct {
}

// RefreshSharingFolderResponseMessageType was auto-generated from
// WSDL.
type RefreshSharingFolderResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RefreshSharingFolderResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RefreshSharingFolderResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RefreshSharingFolderType was auto-generated from WSDL.
type RefreshSharingFolderType struct {
	SharingFolderId *FolderIdType `xml:"SharingFolderId,omitempty" json:"SharingFolderId,omitempty" yaml:"SharingFolderId,omitempty"`
	TypeAttrXSI     string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RefreshSharingFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RefreshSharingFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RegeneratingPatternBaseType was auto-generated from WSDL.
type RegeneratingPatternBaseType interface{}

// RegisterConsentResponseMessageType was auto-generated from WSDL.
type RegisterConsentResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RegisterConsentResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RegisterConsentResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RegisterConsentType was auto-generated from WSDL.
type RegisterConsentType struct {
	Id            string           `xml:"Id" json:"Id" yaml:"Id"`
	ConsentState  ConsentStateType `xml:"ConsentState" json:"ConsentState" yaml:"ConsentState"`
	TypeAttrXSI   string           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RegisterConsentType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RegisterConsentType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RelativeMonthlyRecurrencePatternType was auto-generated from
// WSDL.
type RelativeMonthlyRecurrencePatternType struct {
	Interval       *int                `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	DaysOfWeek     *DayOfWeekType      `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty" yaml:"DaysOfWeek,omitempty"`
	DayOfWeekIndex *DayOfWeekIndexType `xml:"DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty" yaml:"DayOfWeekIndex,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RelativeMonthlyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RelativeMonthlyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RelativeYearlyRecurrencePatternType was auto-generated from
// WSDL.
type RelativeYearlyRecurrencePatternType struct {
	DaysOfWeek     *DayOfWeekType      `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty" yaml:"DaysOfWeek,omitempty"`
	DayOfWeekIndex *DayOfWeekIndexType `xml:"DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty" yaml:"DayOfWeekIndex,omitempty"`
	Month          *MonthNamesType     `xml:"Month,omitempty" json:"Month,omitempty" yaml:"Month,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RelativeYearlyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RelativeYearlyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ReminderItemActionType was auto-generated from WSDL.
type ReminderItemActionType struct {
	ActionType      ReminderActionType `xml:"ActionType" json:"ActionType" yaml:"ActionType"`
	ItemId          *ItemIdType        `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	NewReminderTime *string            `xml:"NewReminderTime,omitempty" json:"NewReminderTime,omitempty" yaml:"NewReminderTime,omitempty"`
}

// ReminderMessageDataType was auto-generated from WSDL.
type ReminderMessageDataType struct {
	ReminderText             *string     `xml:"ReminderText,omitempty" json:"ReminderText,omitempty" yaml:"ReminderText,omitempty"`
	Location                 *string     `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	StartTime                *DateTime   `xml:"StartTime,omitempty" json:"StartTime,omitempty" yaml:"StartTime,omitempty"`
	EndTime                  *DateTime   `xml:"EndTime,omitempty" json:"EndTime,omitempty" yaml:"EndTime,omitempty"`
	AssociatedCalendarItemId *ItemIdType `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty" yaml:"AssociatedCalendarItemId,omitempty"`
}

// ReminderType was auto-generated from WSDL.
type ReminderType struct {
	Subject               string             `xml:"Subject" json:"Subject" yaml:"Subject"`
	Location              *string            `xml:"SchemaLocation,omitempty" json:"SchemaLocation,omitempty" yaml:"SchemaLocation,omitempty"`
	ReminderTime          DateTime           `xml:"ReminderTime" json:"ReminderTime" yaml:"ReminderTime"`
	StartDate             DateTime           `xml:"StartDate" json:"StartDate" yaml:"StartDate"`
	EndDate               DateTime           `xml:"EndDate" json:"EndDate" yaml:"EndDate"`
	ItemId                *ItemIdType        `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	RecurringMasterItemId *ItemIdType        `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty" yaml:"RecurringMasterItemId,omitempty"`
	ReminderGroup         *ReminderGroupType `xml:"ReminderGroup,omitempty" json:"ReminderGroup,omitempty" yaml:"ReminderGroup,omitempty"`
	UID                   string             `xml:"UID" json:"UID" yaml:"UID"`
}

// RemoveContactFromImListResponseMessageType was auto-generated
// from WSDL.
type RemoveContactFromImListResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveContactFromImListResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveContactFromImListResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveContactFromImListType was auto-generated from WSDL.
type RemoveContactFromImListType struct {
	ContactId     *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty" yaml:"ContactId,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveContactFromImListType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveContactFromImListType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveDelegateResponseMessageType was auto-generated from WSDL.
type RemoveDelegateResponseMessageType struct {
	MessageText        *string                                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages   *ArrayOfDelegateUserResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI        string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveDelegateResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveDelegateResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveDelegateType was auto-generated from WSDL.
type RemoveDelegateType struct {
	Mailbox       *EmailAddressType  `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	UserIds       *ArrayOfUserIdType `xml:"UserIds,omitempty" json:"UserIds,omitempty" yaml:"UserIds,omitempty"`
	TypeAttrXSI   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveDelegateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveDelegateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveDistributionGroupFromImListResponseMessageType was auto-generated
// from WSDL.
type RemoveDistributionGroupFromImListResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveDistributionGroupFromImListResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveDistributionGroupFromImListResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveDistributionGroupFromImListType was auto-generated from
// WSDL.
type RemoveDistributionGroupFromImListType struct {
	GroupId       *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveDistributionGroupFromImListType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveDistributionGroupFromImListType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveImContactFromGroupResponseMessageType was auto-generated
// from WSDL.
type RemoveImContactFromGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveImContactFromGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveImContactFromGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveImContactFromGroupType was auto-generated from WSDL.
type RemoveImContactFromGroupType struct {
	ContactId     *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty" yaml:"ContactId,omitempty"`
	GroupId       *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveImContactFromGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveImContactFromGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveImGroupResponseMessageType was auto-generated from WSDL.
type RemoveImGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveImGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveImGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveImGroupType was auto-generated from WSDL.
type RemoveImGroupType struct {
	GroupId       *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveImGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveImGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RemoveItemType was auto-generated from WSDL.
type RemoveItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	ReferenceItemId              *ItemIdType                               `xml:"ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty" yaml:"ReferenceItemId,omitempty"`
	ObjectName                   string                                    `xml:"ObjectName,attr,omitempty" json:"ObjectName,attr,omitempty" yaml:"ObjectName,attr,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RemoveItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RemoveItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ReplyAllToItemType was auto-generated from WSDL.
type ReplyAllToItemType struct {
	NewBodyContent         *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	IsSpecificMessageReply *bool     `xml:"IsSpecificMessageReply,omitempty" json:"IsSpecificMessageReply,omitempty" yaml:"IsSpecificMessageReply,omitempty"`
	TypeAttrXSI            string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReplyAllToItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReplyAllToItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ReplyBody was auto-generated from WSDL.
type ReplyBody struct {
	Message *string `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	Lang    string  `xml:"lang,attr,omitempty" json:"lang,attr,omitempty" yaml:"lang,attr,omitempty"`
}

// ReplyToItemType was auto-generated from WSDL.
type ReplyToItemType struct {
	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReplyToItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReplyToItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// ReportMessageResponseMessageType was auto-generated from WSDL.
type ReportMessageResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReportMessageResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReportMessageResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ReportMessageResponseType was auto-generated from WSDL.
type ReportMessageResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReportMessageResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReportMessageResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ReportMessageType was auto-generated from WSDL.
type ReportMessageType struct {
	ReportAction              ReportMessageActionType    `xml:"ReportAction,attr,omitempty" json:"ReportAction,attr,omitempty" yaml:"ReportAction,attr,omitempty"`
	ItemIds                   *ArrayOfBaseItemIdsType    `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	BlockReportingToMicrosoft *bool                      `xml:"BlockReportingToMicrosoft,omitempty" json:"BlockReportingToMicrosoft,omitempty" yaml:"BlockReportingToMicrosoft,omitempty"`
	Platform                  *ReportMessagePlatformType `xml:"Platform,omitempty" json:"Platform,omitempty" yaml:"Platform,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReportMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ReportMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// RequestAttachmentIdType was auto-generated from WSDL.
type RequestAttachmentIdType struct {
	Id            string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RequestAttachmentIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RequestAttachmentIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RequestServerVersion was auto-generated from WSDL.
type RequestServerVersion struct {
	Version ExchangeVersionType `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
}

// RequestTypeHeader was auto-generated from WSDL.
type RequestTypeHeader struct {
	RequestType AvailabilityProxyRequestType `xml:"RequestType" json:"RequestType" yaml:"RequestType"`
}

// ResolutionType was auto-generated from WSDL.
type ResolutionType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	Contact *ContactItemType  `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
}

// ResolveNamesResponseMessageType was auto-generated from WSDL.
type ResolveNamesResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResolutionSet      *ArrayOfResolutionType `xml:"ResolutionSet,omitempty" json:"ResolutionSet,omitempty" yaml:"ResolutionSet,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ResolveNamesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ResolveNamesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ResolveNamesResponseType was auto-generated from WSDL.
type ResolveNamesResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ResolveNamesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ResolveNamesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ResolveNamesType was auto-generated from WSDL.
type ResolveNamesType struct {
	ReturnFullContactData bool                              `xml:"ReturnFullContactData,attr,omitempty" json:"ReturnFullContactData,attr,omitempty" yaml:"ReturnFullContactData,attr,omitempty"`
	SearchScope           ResolveNamesSearchScopeType       `xml:"SearchScope,attr,omitempty" json:"SearchScope,attr,omitempty" yaml:"SearchScope,attr,omitempty"`
	ContactDataShape      DefaultShapeNamesType             `xml:"ContactDataShape,attr,omitempty" json:"ContactDataShape,attr,omitempty" yaml:"ContactDataShape,attr,omitempty"`
	ParentFolderIds       *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty" yaml:"ParentFolderIds,omitempty"`
	UnresolvedEntry       *NonEmptyStringType               `xml:"UnresolvedEntry,omitempty" json:"UnresolvedEntry,omitempty" yaml:"UnresolvedEntry,omitempty"`
	TypeAttrXSI           string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ResolveNamesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ResolveNamesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// ResponseMessageInfoType was auto-generated from WSDL.
type ResponseMessageInfoType struct {
	MessageText   *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode  *string           `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	ResponseClass ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
}

// ResponseMessageType was auto-generated from WSDL.
type ResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
}

// Internal abstract base type for reply objects.
//
//	Should not appear in client code
type ResponseObjectCoreType interface{}

// Abstract base type for reply objects
type ResponseObjectType interface{}

// RestrictionType was auto-generated from WSDL.
type RestrictionType struct {
	SearchExpression *SearchExpressionType `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty" yaml:"SearchExpression,omitempty"`
}

// Retention policy tag.
type RetentionPolicyTagType struct {
	DisplayName         string              `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	RetentionId         GuidType            `xml:"RetentionId" json:"RetentionId" yaml:"RetentionId"`
	RetentionPeriod     int                 `xml:"RetentionPeriod" json:"RetentionPeriod" yaml:"RetentionPeriod"`
	Type                ElcFolderType       `xml:"Type" json:"Type" yaml:"Type"`
	RetentionAction     RetentionActionType `xml:"RetentionAction" json:"RetentionAction" yaml:"RetentionAction"`
	Description         *string             `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	IsVisible           bool                `xml:"IsVisible" json:"IsVisible" yaml:"IsVisible"`
	OptedInto           bool                `xml:"OptedInto" json:"OptedInto" yaml:"OptedInto"`
	IsArchive           bool                `xml:"IsArchive" json:"IsArchive" yaml:"IsArchive"`
	ParentLabelIdentity *string             `xml:"ParentLabelIdentity,omitempty" json:"ParentLabelIdentity,omitempty" yaml:"ParentLabelIdentity,omitempty"`
	Priority            *int                `xml:"Priority,omitempty" json:"Priority,omitempty" yaml:"Priority,omitempty"`
}

// RetentionTagType was auto-generated from WSDL.
type RetentionTagType struct {
	Content    *GuidType `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	IsExplicit bool      `xml:"IsExplicit,attr,omitempty" json:"IsExplicit,attr,omitempty" yaml:"IsExplicit,attr,omitempty"`
}

// RightsManagementLicenseDataType was auto-generated from WSDL.
type RightsManagementLicenseDataType struct {
	RightsManagedMessageDecryptionStatus *int    `xml:"RightsManagedMessageDecryptionStatus,omitempty" json:"RightsManagedMessageDecryptionStatus,omitempty" yaml:"RightsManagedMessageDecryptionStatus,omitempty"`
	RmsTemplateId                        *string `xml:"RmsTemplateId,omitempty" json:"RmsTemplateId,omitempty" yaml:"RmsTemplateId,omitempty"`
	TemplateName                         *string `xml:"TemplateName,omitempty" json:"TemplateName,omitempty" yaml:"TemplateName,omitempty"`
	TemplateDescription                  *string `xml:"TemplateDescription,omitempty" json:"TemplateDescription,omitempty" yaml:"TemplateDescription,omitempty"`
	EditAllowed                          *bool   `xml:"EditAllowed,omitempty" json:"EditAllowed,omitempty" yaml:"EditAllowed,omitempty"`
	ReplyAllowed                         *bool   `xml:"ReplyAllowed,omitempty" json:"ReplyAllowed,omitempty" yaml:"ReplyAllowed,omitempty"`
	ReplyAllAllowed                      *bool   `xml:"ReplyAllAllowed,omitempty" json:"ReplyAllAllowed,omitempty" yaml:"ReplyAllAllowed,omitempty"`
	ForwardAllowed                       *bool   `xml:"ForwardAllowed,omitempty" json:"ForwardAllowed,omitempty" yaml:"ForwardAllowed,omitempty"`
	ModifyRecipientsAllowed              *bool   `xml:"ModifyRecipientsAllowed,omitempty" json:"ModifyRecipientsAllowed,omitempty" yaml:"ModifyRecipientsAllowed,omitempty"`
	ExtractAllowed                       *bool   `xml:"ExtractAllowed,omitempty" json:"ExtractAllowed,omitempty" yaml:"ExtractAllowed,omitempty"`
	PrintAllowed                         *bool   `xml:"PrintAllowed,omitempty" json:"PrintAllowed,omitempty" yaml:"PrintAllowed,omitempty"`
	ExportAllowed                        *bool   `xml:"ExportAllowed,omitempty" json:"ExportAllowed,omitempty" yaml:"ExportAllowed,omitempty"`
	ProgrammaticAccessAllowed            *bool   `xml:"ProgrammaticAccessAllowed,omitempty" json:"ProgrammaticAccessAllowed,omitempty" yaml:"ProgrammaticAccessAllowed,omitempty"`
	IsOwner                              *bool   `xml:"IsOwner,omitempty" json:"IsOwner,omitempty" yaml:"IsOwner,omitempty"`
	ContentOwner                         *string `xml:"ContentOwner,omitempty" json:"ContentOwner,omitempty" yaml:"ContentOwner,omitempty"`
	ContentExpiryDate                    *string `xml:"ContentExpiryDate,omitempty" json:"ContentExpiryDate,omitempty" yaml:"ContentExpiryDate,omitempty"`
}

// RoleMemberItemType was auto-generated from WSDL.
type RoleMemberItemType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	DisplayName                  *string                                   `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	Type                         *RoleMemberTypeType                       `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	MemberId                     *string                                   `xml:"MemberId,omitempty" json:"MemberId,omitempty" yaml:"MemberId,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RoleMemberItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RoleMemberItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RoomType was auto-generated from WSDL.
type RoomType struct {
	Id            *EmailAddressType `xml:"Id,omitempty" json:"Id,omitempty" yaml:"Id,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RoomType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RoomType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// RootItemIdType was auto-generated from WSDL.
type RootItemIdType struct {
	RootItemId        string `xml:"RootItemId,attr,omitempty" json:"RootItemId,attr,omitempty" yaml:"RootItemId,attr,omitempty"`
	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,attr,omitempty" yaml:"RootItemChangeKey,attr,omitempty"`
	TypeAttrXSI       string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RootItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RootItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Rule actions
type RuleActionsType struct {
	AssignCategories                *ArrayOfStringsType        `xml:"AssignCategories,omitempty" json:"AssignCategories,omitempty" yaml:"AssignCategories,omitempty"`
	CopyToFolder                    *TargetFolderIdType        `xml:"CopyToFolder,omitempty" json:"CopyToFolder,omitempty" yaml:"CopyToFolder,omitempty"`
	Delete                          *bool                      `xml:"Delete,omitempty" json:"Delete,omitempty" yaml:"Delete,omitempty"`
	ForwardAsAttachmentToRecipients *ArrayOfEmailAddressesType `xml:"ForwardAsAttachmentToRecipients,omitempty" json:"ForwardAsAttachmentToRecipients,omitempty" yaml:"ForwardAsAttachmentToRecipients,omitempty"`
	ForwardToRecipients             *ArrayOfEmailAddressesType `xml:"ForwardToRecipients,omitempty" json:"ForwardToRecipients,omitempty" yaml:"ForwardToRecipients,omitempty"`
	MarkImportance                  *ImportanceChoicesType     `xml:"MarkImportance,omitempty" json:"MarkImportance,omitempty" yaml:"MarkImportance,omitempty"`
	MarkAsRead                      *bool                      `xml:"MarkAsRead,omitempty" json:"MarkAsRead,omitempty" yaml:"MarkAsRead,omitempty"`
	MoveToFolder                    *TargetFolderIdType        `xml:"MoveToFolder,omitempty" json:"MoveToFolder,omitempty" yaml:"MoveToFolder,omitempty"`
	PermanentDelete                 *bool                      `xml:"PermanentDelete,omitempty" json:"PermanentDelete,omitempty" yaml:"PermanentDelete,omitempty"`
	RedirectToRecipients            *ArrayOfEmailAddressesType `xml:"RedirectToRecipients,omitempty" json:"RedirectToRecipients,omitempty" yaml:"RedirectToRecipients,omitempty"`
	SendSMSAlertToRecipients        *ArrayOfEmailAddressesType `xml:"SendSMSAlertToRecipients,omitempty" json:"SendSMSAlertToRecipients,omitempty" yaml:"SendSMSAlertToRecipients,omitempty"`
	ServerReplyWithMessage          *ItemIdType                `xml:"ServerReplyWithMessage,omitempty" json:"ServerReplyWithMessage,omitempty" yaml:"ServerReplyWithMessage,omitempty"`
	StopProcessingRules             *bool                      `xml:"StopProcessingRules,omitempty" json:"StopProcessingRules,omitempty" yaml:"StopProcessingRules,omitempty"`
}

// RuleOperationErrorType was auto-generated from WSDL.
type RuleOperationErrorType struct {
	OperationIndex   int                              `xml:"OperationIndex" json:"OperationIndex" yaml:"OperationIndex"`
	ValidationErrors *ArrayOfRuleValidationErrorsType `xml:"ValidationErrors" json:"ValidationErrors" yaml:"ValidationErrors"`
}

// Represents a rule operation to be performed
type RuleOperationType interface{}

// Date range type used for the WithinDateRange rule predicate.
type RulePredicateDateRangeType struct {
	StartDateTime *DateTime `xml:"StartDateTime,omitempty" json:"StartDateTime,omitempty" yaml:"StartDateTime,omitempty"`
	EndDateTime   *DateTime `xml:"EndDateTime,omitempty" json:"EndDateTime,omitempty" yaml:"EndDateTime,omitempty"`
}

// Size range type used for the WithinSizeRange rule predicate.
type RulePredicateSizeRangeType struct {
	MinimumSize *int `xml:"MinimumSize,omitempty" json:"MinimumSize,omitempty" yaml:"MinimumSize,omitempty"`
	MaximumSize *int `xml:"MaximumSize,omitempty" json:"MaximumSize,omitempty" yaml:"MaximumSize,omitempty"`
}

// Rule predicates, used as rule conditions or exceptions
type RulePredicatesType struct {
	Categories                   *ArrayOfStringsType         `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	ContainsBodyStrings          *ArrayOfStringsType         `xml:"ContainsBodyStrings,omitempty" json:"ContainsBodyStrings,omitempty" yaml:"ContainsBodyStrings,omitempty"`
	ContainsHeaderStrings        *ArrayOfStringsType         `xml:"ContainsHeaderStrings,omitempty" json:"ContainsHeaderStrings,omitempty" yaml:"ContainsHeaderStrings,omitempty"`
	ContainsRecipientStrings     *ArrayOfStringsType         `xml:"ContainsRecipientStrings,omitempty" json:"ContainsRecipientStrings,omitempty" yaml:"ContainsRecipientStrings,omitempty"`
	ContainsSenderStrings        *ArrayOfStringsType         `xml:"ContainsSenderStrings,omitempty" json:"ContainsSenderStrings,omitempty" yaml:"ContainsSenderStrings,omitempty"`
	ContainsSubjectOrBodyStrings *ArrayOfStringsType         `xml:"ContainsSubjectOrBodyStrings,omitempty" json:"ContainsSubjectOrBodyStrings,omitempty" yaml:"ContainsSubjectOrBodyStrings,omitempty"`
	ContainsSubjectStrings       *ArrayOfStringsType         `xml:"ContainsSubjectStrings,omitempty" json:"ContainsSubjectStrings,omitempty" yaml:"ContainsSubjectStrings,omitempty"`
	FlaggedForAction             *FlaggedForActionType       `xml:"FlaggedForAction,omitempty" json:"FlaggedForAction,omitempty" yaml:"FlaggedForAction,omitempty"`
	FromAddresses                *ArrayOfEmailAddressesType  `xml:"FromAddresses,omitempty" json:"FromAddresses,omitempty" yaml:"FromAddresses,omitempty"`
	FromConnectedAccounts        *ArrayOfStringsType         `xml:"FromConnectedAccounts,omitempty" json:"FromConnectedAccounts,omitempty" yaml:"FromConnectedAccounts,omitempty"`
	HasAttachments               *bool                       `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	Importance                   *ImportanceChoicesType      `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	IsApprovalRequest            *bool                       `xml:"IsApprovalRequest,omitempty" json:"IsApprovalRequest,omitempty" yaml:"IsApprovalRequest,omitempty"`
	IsAutomaticForward           *bool                       `xml:"IsAutomaticForward,omitempty" json:"IsAutomaticForward,omitempty" yaml:"IsAutomaticForward,omitempty"`
	IsAutomaticReply             *bool                       `xml:"IsAutomaticReply,omitempty" json:"IsAutomaticReply,omitempty" yaml:"IsAutomaticReply,omitempty"`
	IsEncrypted                  *bool                       `xml:"IsEncrypted,omitempty" json:"IsEncrypted,omitempty" yaml:"IsEncrypted,omitempty"`
	IsMeetingRequest             *bool                       `xml:"IsMeetingRequest,omitempty" json:"IsMeetingRequest,omitempty" yaml:"IsMeetingRequest,omitempty"`
	IsMeetingResponse            *bool                       `xml:"IsMeetingResponse,omitempty" json:"IsMeetingResponse,omitempty" yaml:"IsMeetingResponse,omitempty"`
	IsNDR                        *bool                       `xml:"IsNDR,omitempty" json:"IsNDR,omitempty" yaml:"IsNDR,omitempty"`
	IsPermissionControlled       *bool                       `xml:"IsPermissionControlled,omitempty" json:"IsPermissionControlled,omitempty" yaml:"IsPermissionControlled,omitempty"`
	IsReadReceipt                *bool                       `xml:"IsReadReceipt,omitempty" json:"IsReadReceipt,omitempty" yaml:"IsReadReceipt,omitempty"`
	IsSigned                     *bool                       `xml:"IsSigned,omitempty" json:"IsSigned,omitempty" yaml:"IsSigned,omitempty"`
	IsVoicemail                  *bool                       `xml:"IsVoicemail,omitempty" json:"IsVoicemail,omitempty" yaml:"IsVoicemail,omitempty"`
	ItemClasses                  *ArrayOfStringsType         `xml:"ItemClasses,omitempty" json:"ItemClasses,omitempty" yaml:"ItemClasses,omitempty"`
	MessageClassifications       *ArrayOfStringsType         `xml:"MessageClassifications,omitempty" json:"MessageClassifications,omitempty" yaml:"MessageClassifications,omitempty"`
	NotSentToMe                  *bool                       `xml:"NotSentToMe,omitempty" json:"NotSentToMe,omitempty" yaml:"NotSentToMe,omitempty"`
	SentCcMe                     *bool                       `xml:"SentCcMe,omitempty" json:"SentCcMe,omitempty" yaml:"SentCcMe,omitempty"`
	SentOnlyToMe                 *bool                       `xml:"SentOnlyToMe,omitempty" json:"SentOnlyToMe,omitempty" yaml:"SentOnlyToMe,omitempty"`
	SentToAddresses              *ArrayOfEmailAddressesType  `xml:"SentToAddresses,omitempty" json:"SentToAddresses,omitempty" yaml:"SentToAddresses,omitempty"`
	SentToMe                     *bool                       `xml:"SentToMe,omitempty" json:"SentToMe,omitempty" yaml:"SentToMe,omitempty"`
	SentToOrCcMe                 *bool                       `xml:"SentToOrCcMe,omitempty" json:"SentToOrCcMe,omitempty" yaml:"SentToOrCcMe,omitempty"`
	Sensitivity                  *SensitivityChoicesType     `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	WithinDateRange              *RulePredicateDateRangeType `xml:"WithinDateRange,omitempty" json:"WithinDateRange,omitempty" yaml:"WithinDateRange,omitempty"`
	WithinSizeRange              *RulePredicateSizeRangeType `xml:"WithinSizeRange,omitempty" json:"WithinSizeRange,omitempty" yaml:"WithinSizeRange,omitempty"`
}

// Rule type
type RuleType struct {
	RuleId         *string             `xml:"RuleId,omitempty" json:"RuleId,omitempty" yaml:"RuleId,omitempty"`
	DisplayName    string              `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	Priority       int                 `xml:"Priority" json:"Priority" yaml:"Priority"`
	IsEnabled      bool                `xml:"IsEnabled" json:"IsEnabled" yaml:"IsEnabled"`
	IsNotSupported *bool               `xml:"IsNotSupported,omitempty" json:"IsNotSupported,omitempty" yaml:"IsNotSupported,omitempty"`
	IsInError      *bool               `xml:"IsInError,omitempty" json:"IsInError,omitempty" yaml:"IsInError,omitempty"`
	Conditions     *RulePredicatesType `xml:"Conditions,omitempty" json:"Conditions,omitempty" yaml:"Conditions,omitempty"`
	Exceptions     *RulePredicatesType `xml:"Exceptions,omitempty" json:"Exceptions,omitempty" yaml:"Exceptions,omitempty"`
	Actions        *RuleActionsType    `xml:"Actions,omitempty" json:"Actions,omitempty" yaml:"Actions,omitempty"`
}

// Represents a single validation error on a particular rule property
// value, predicate                 property value or action property
// value
type RuleValidationErrorType struct {
	FieldURI     RuleFieldURIType            `xml:"FieldURI" json:"FieldURI" yaml:"FieldURI"`
	ErrorCode    RuleValidationErrorCodeType `xml:"ErrorCode" json:"ErrorCode" yaml:"ErrorCode"`
	ErrorMessage string                      `xml:"ErrorMessage" json:"ErrorMessage" yaml:"ErrorMessage"`
	FieldValue   string                      `xml:"FieldValue" json:"FieldValue" yaml:"FieldValue"`
}

// SIDType was auto-generated from WSDL.
type SIDType struct {
	Content *NonEmptyStringType `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// SearchDiagnosticsStepType was auto-generated from WSDL.
type SearchDiagnosticsStepType struct {
	StartTime         *string   `xml:"StartTime,omitempty" json:"StartTime,omitempty" yaml:"StartTime,omitempty"`
	StepTime          *int64    `xml:"StepTime,omitempty" json:"StepTime,omitempty" yaml:"StepTime,omitempty"`
	StepType          *string   `xml:"StepType,omitempty" json:"StepType,omitempty" yaml:"StepType,omitempty"`
	AdditionalEntries []*string `xml:"AdditionalEntries>Entry,omitempty" json:"AdditionalEntries>Entry,omitempty" yaml:"AdditionalEntries>Entry,omitempty"`
}

// SearchDiagnosticsType was auto-generated from WSDL.
type SearchDiagnosticsType struct {
}

// SearchExpressionType was auto-generated from WSDL.
type SearchExpressionType interface{}

// SearchFolderScopeType was auto-generated from WSDL.
type SearchFolderScopeType struct {
	FolderId        *FolderIdType              `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	WellKnownFolder *DistinguishedFolderIdType `xml:"WellKnownFolder,omitempty" json:"WellKnownFolder,omitempty" yaml:"WellKnownFolder,omitempty"`
}

// SearchFolderType was auto-generated from WSDL.
type SearchFolderType struct {
	FolderId                 *FolderIdType                  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ParentFolderId           *FolderIdType                  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderClass              *string                        `xml:"FolderClass,omitempty" json:"FolderClass,omitempty" yaml:"FolderClass,omitempty"`
	DisplayName              *string                        `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TotalCount               *int                           `xml:"TotalCount,omitempty" json:"TotalCount,omitempty" yaml:"TotalCount,omitempty"`
	ChildFolderCount         *int                           `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty" yaml:"ChildFolderCount,omitempty"`
	ExtendedProperty         []*ExtendedPropertyType        `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	ManagedFolderInformation *ManagedFolderInformationType  `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty" yaml:"ManagedFolderInformation,omitempty"`
	EffectiveRights          *EffectiveRightsType           `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	DistinguishedFolderId    *DistinguishedFolderIdNameType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	PolicyTag                *RetentionTagType              `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag               *RetentionTagType              `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	ReplicaList              *ArrayOfStringsType            `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty" yaml:"ReplicaList,omitempty"`
	PermissionSet            *PermissionSetType             `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty" yaml:"PermissionSet,omitempty"`
	UnreadCount              *int                           `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	SearchParameters         *SearchParametersType          `xml:"SearchParameters,omitempty" json:"SearchParameters,omitempty" yaml:"SearchParameters,omitempty"`
	TypeAttrXSI              string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Response message type for the SearchMailboxes web method.
type SearchMailboxesResponseMessageType struct {
	MessageText           *string                    `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode          *ResponseCodeType          `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey    *int                       `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml            []*interface{}             `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass         ResponseClassType          `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SearchMailboxesResult *SearchMailboxesResultType `xml:"SearchMailboxesResult,omitempty" json:"SearchMailboxesResult,omitempty" yaml:"SearchMailboxesResult,omitempty"`
	TypeAttrXSI           string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchMailboxesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchMailboxesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Response type for the SearchMailboxes web method.
type SearchMailboxesResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchMailboxesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchMailboxesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Mailboxes search result.
type SearchMailboxesResultType struct {
	SearchQueries   *NonEmptyArrayOfMailboxQueriesType         `xml:"SearchQueries" json:"SearchQueries" yaml:"SearchQueries"`
	ResultType      SearchResultType                           `xml:"ResultType" json:"ResultType" yaml:"ResultType"`
	ItemCount       int64                                      `xml:"ItemCount" json:"ItemCount" yaml:"ItemCount"`
	Size            int64                                      `xml:"Size" json:"Size" yaml:"Size"`
	PageItemCount   int                                        `xml:"PageItemCount" json:"PageItemCount" yaml:"PageItemCount"`
	PageItemSize    int64                                      `xml:"PageItemSize" json:"PageItemSize" yaml:"PageItemSize"`
	KeywordStats    *ArrayOfKeywordStatisticsSearchResultsType `xml:"KeywordStats,omitempty" json:"KeywordStats,omitempty" yaml:"KeywordStats,omitempty"`
	Items           *ArrayOfSearchPreviewItemsType             `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	FailedMailboxes *ArrayOfFailedSearchMailboxesType          `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty" yaml:"FailedMailboxes,omitempty"`
	Refiners        *ArrayOfSearchRefinerItemsType             `xml:"Refiners,omitempty" json:"Refiners,omitempty" yaml:"Refiners,omitempty"`
	MailboxStats    *ArrayOfMailboxStatisticsItemsType         `xml:"MailboxStats,omitempty" json:"MailboxStats,omitempty" yaml:"MailboxStats,omitempty"`
}

// Request type for the SearchMailboxes web method.
type SearchMailboxesType struct {
	SearchQueries            *NonEmptyArrayOfMailboxQueriesType `xml:"SearchQueries" json:"SearchQueries" yaml:"SearchQueries"`
	ResultType               SearchResultType                   `xml:"ResultType" json:"ResultType" yaml:"ResultType"`
	PreviewItemResponseShape *PreviewItemResponseShapeType      `xml:"PreviewItemResponseShape,omitempty" json:"PreviewItemResponseShape,omitempty" yaml:"PreviewItemResponseShape,omitempty"`
	SortBy                   *FieldOrderType                    `xml:"SortBy,omitempty" json:"SortBy,omitempty" yaml:"SortBy,omitempty"`
	Language                 *string                            `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	Deduplication            *bool                              `xml:"Deduplication,omitempty" json:"Deduplication,omitempty" yaml:"Deduplication,omitempty"`
	PageSize                 *int                               `xml:"PageSize,omitempty" json:"PageSize,omitempty" yaml:"PageSize,omitempty"`
	PageItemReference        *string                            `xml:"PageItemReference,omitempty" json:"PageItemReference,omitempty" yaml:"PageItemReference,omitempty"`
	PageDirection            *SearchPageDirectionType           `xml:"PageDirection,omitempty" json:"PageDirection,omitempty" yaml:"PageDirection,omitempty"`
	TypeAttrXSI              string                             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchMailboxesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchMailboxesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SearchParametersType was auto-generated from WSDL.
type SearchParametersType struct {
	Restriction   *RestrictionType                  `xml:"Restriction,omitempty" json:"Restriction,omitempty" yaml:"Restriction,omitempty"`
	BaseFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"BaseFolderIds,omitempty" json:"BaseFolderIds,omitempty" yaml:"BaseFolderIds,omitempty"`
	Traversal     SearchFolderTraversalType         `xml:"Traversal,attr,omitempty" json:"Traversal,attr,omitempty" yaml:"Traversal,attr,omitempty"`
}

// Mailbox search preview item.
type SearchPreviewItemType struct {
	Id                 *ItemIdType                          `xml:"Id" json:"Id" yaml:"Id"`
	Mailbox            *PreviewItemMailboxType              `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	ParentId           *ItemIdType                          `xml:"ParentId,omitempty" json:"ParentId,omitempty" yaml:"ParentId,omitempty"`
	ItemClass          *ItemClassType                       `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	UniqueHash         *string                              `xml:"UniqueHash,omitempty" json:"UniqueHash,omitempty" yaml:"UniqueHash,omitempty"`
	SortValue          *string                              `xml:"SortValue,omitempty" json:"SortValue,omitempty" yaml:"SortValue,omitempty"`
	OwaLink            *string                              `xml:"OwaLink,omitempty" json:"OwaLink,omitempty" yaml:"OwaLink,omitempty"`
	Sender             *string                              `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients       *ArrayOfSmtpAddressType              `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients       *ArrayOfSmtpAddressType              `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients      *ArrayOfSmtpAddressType              `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	CreatedTime        *DateTime                            `xml:"CreatedTime,omitempty" json:"CreatedTime,omitempty" yaml:"CreatedTime,omitempty"`
	ReceivedTime       *DateTime                            `xml:"ReceivedTime,omitempty" json:"ReceivedTime,omitempty" yaml:"ReceivedTime,omitempty"`
	SentTime           *DateTime                            `xml:"SentTime,omitempty" json:"SentTime,omitempty" yaml:"SentTime,omitempty"`
	Subject            *string                              `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Size               *int64                               `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Preview            *string                              `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	Importance         *ImportanceChoicesType               `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	Read               *bool                                `xml:"Read,omitempty" json:"Read,omitempty" yaml:"Read,omitempty"`
	HasAttachment      *bool                                `xml:"HasAttachment,omitempty" json:"HasAttachment,omitempty" yaml:"HasAttachment,omitempty"`
	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty" yaml:"ExtendedProperties,omitempty"`
}

// Search refiner item.
type SearchRefinerItemType struct {
	Name  string `xml:"Name" json:"Name" yaml:"Name"`
	Value string `xml:"Value" json:"Value" yaml:"Value"`
	Count int64  `xml:"Count" json:"Count" yaml:"Count"`
	Token string `xml:"Token" json:"Token" yaml:"Token"`
}

// SearchRefinerType was auto-generated from WSDL.
type SearchRefinerType struct {
	RefinerType RefinerTypeType          `xml:"RefinerType" json:"RefinerType" yaml:"RefinerType"`
	Refiner     *DynamicRefinerQueryType `xml:"Refiner" json:"Refiner" yaml:"Refiner"`
	ResultCount *int64                   `xml:"ResultCount,omitempty" json:"ResultCount,omitempty" yaml:"ResultCount,omitempty"`
}

// Identifier for a conversation item in search results
type SearchResultConversationIdType struct {
	Id                    string  `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey             string  `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	OutlookConversationId *[]byte `xml:"OutlookConversationId,omitempty" json:"OutlookConversationId,omitempty" yaml:"OutlookConversationId,omitempty"`
	TypeAttrXSI           string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchResultConversationIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchResultConversationIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Identifier for an item in search results
type SearchResultItemIdType struct {
	Id            string  `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	ChangeKey     string  `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,attr,omitempty" yaml:"ChangeKey,attr,omitempty"`
	EntryId       *[]byte `xml:"EntryId,omitempty" json:"EntryId,omitempty" yaml:"EntryId,omitempty"`
	OutlookItemId *[]byte `xml:"OutlookItemId,omitempty" json:"OutlookItemId,omitempty" yaml:"OutlookItemId,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SearchResultItemIdType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SearchResultItemIdType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SearchResultsType was auto-generated from WSDL.
type SearchResultsType struct {
	Items                   []*ItemType               `xml:"Items>Item,omitempty" json:"Items>Item,omitempty" yaml:"Items>Item,omitempty"`
	Conversations           []*ConversationType       `xml:"Conversations>Conversation,omitempty" json:"Conversations>Conversation,omitempty" yaml:"Conversations>Conversation,omitempty"`
	People                  []*PersonaType            `xml:"People>Persona,omitempty" json:"People>Persona,omitempty" yaml:"People>Persona,omitempty"`
	MoreResultsAvailable    bool                      `xml:"MoreResultsAvailable" json:"MoreResultsAvailable" yaml:"MoreResultsAvailable"`
	RefinerTelemetryBatchId int                       `xml:"RefinerTelemetryBatchId" json:"RefinerTelemetryBatchId" yaml:"RefinerTelemetryBatchId"`
	SearchRefiners          []*SearchRefinerType      `xml:"SearchRefiners>SearchRefiner" json:"SearchRefiners>SearchRefiner" yaml:"SearchRefiners>SearchRefiner"`
	DiagnosticsData         *SearchDiagnosticsType    `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty" yaml:"DiagnosticsData,omitempty"`
	SearchResultsCount      *int                      `xml:"SearchResultsCount,omitempty" json:"SearchResultsCount,omitempty" yaml:"SearchResultsCount,omitempty"`
	TotalResultsCount       *int                      `xml:"TotalResultsCount,omitempty" json:"TotalResultsCount,omitempty" yaml:"TotalResultsCount,omitempty"`
	SearchTerms             *ArrayOfStringsType       `xml:"SearchTerms,omitempty" json:"SearchTerms,omitempty" yaml:"SearchTerms,omitempty"`
	QueryId                 *ExecuteSearchQueryIdType `xml:"QueryId,omitempty" json:"QueryId,omitempty" yaml:"QueryId,omitempty"`
	MailboxesInformation    []*MailboxInformationType `xml:"MailboxesInformation>MailboxInformation,omitempty" json:"MailboxesInformation>MailboxInformation,omitempty" yaml:"MailboxesInformation>MailboxInformation,omitempty"`
}

// SearchSuggestionsType was auto-generated from WSDL.
type SearchSuggestionsType struct {
	TDSuggestionsBatchId    int64                  `xml:"TDSuggestionsBatchId" json:"TDSuggestionsBatchId" yaml:"TDSuggestionsBatchId"`
	TDSuggestionsInstanceId GuidType               `xml:"TDSuggestionsInstanceId" json:"TDSuggestionsInstanceId" yaml:"TDSuggestionsInstanceId"`
	Suggestions             []*SuggestionType      `xml:"Suggestions>Suggestion,omitempty" json:"Suggestions>Suggestion,omitempty" yaml:"Suggestions>Suggestion,omitempty"`
	DiagnosticsData         *SearchDiagnosticsType `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty" yaml:"DiagnosticsData,omitempty"`
}

// Searchable mailbox.
type SearchableMailboxType struct {
	Guid                 GuidType `xml:"Guid" json:"Guid" yaml:"Guid"`
	PrimarySmtpAddress   string   `xml:"PrimarySmtpAddress" json:"PrimarySmtpAddress" yaml:"PrimarySmtpAddress"`
	IsExternalMailbox    bool     `xml:"IsExternalMailbox" json:"IsExternalMailbox" yaml:"IsExternalMailbox"`
	ExternalEmailAddress string   `xml:"ExternalEmailAddress" json:"ExternalEmailAddress" yaml:"ExternalEmailAddress"`
	DisplayName          string   `xml:"DisplayName" json:"DisplayName" yaml:"DisplayName"`
	IsMembershipGroup    bool     `xml:"IsMembershipGroup" json:"IsMembershipGroup" yaml:"IsMembershipGroup"`
	ReferenceId          string   `xml:"ReferenceId" json:"ReferenceId" yaml:"ReferenceId"`
}

// SeekToConditionPageViewType was auto-generated from WSDL.
type SeekToConditionPageViewType struct {
	MaxEntriesReturned int                `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,attr,omitempty" yaml:"MaxEntriesReturned,attr,omitempty"`
	BasePoint          IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,attr,omitempty" yaml:"BasePoint,attr,omitempty"`
	Condition          *RestrictionType   `xml:"Condition" json:"Condition" yaml:"Condition"`
	TypeAttrXSI        string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SeekToConditionPageViewType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SeekToConditionPageViewType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SendItemResponseType was auto-generated from WSDL.
type SendItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SendItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SendItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SendItemType was auto-generated from WSDL.
type SendItemType struct {
	SaveItemToFolder  bool                            `xml:"SaveItemToFolder,attr,omitempty" json:"SaveItemToFolder,attr,omitempty" yaml:"SaveItemToFolder,attr,omitempty"`
	ItemIds           *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty" yaml:"ItemIds,omitempty"`
	SavedItemFolderId *TargetFolderIdType             `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty" yaml:"SavedItemFolderId,omitempty"`
	TypeAttrXSI       string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SendItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SendItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SendNotificationResponseMessageType was auto-generated from
// WSDL.
type SendNotificationResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Notification       *NotificationType `xml:"Notification" json:"Notification" yaml:"Notification"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SendNotificationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SendNotificationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SendNotificationResponseType was auto-generated from WSDL.
type SendNotificationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SendNotificationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SendNotificationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SendNotificationResultType was auto-generated from WSDL.
type SendNotificationResultType struct {
	SubscriptionStatus *SubscriptionStatusType `xml:"SubscriptionStatus,omitempty" json:"SubscriptionStatus,omitempty" yaml:"SubscriptionStatus,omitempty"`
}

// SenderAddInEntityType was auto-generated from WSDL.
type SenderAddInEntityType struct {
	ExtensionId *string `xml:"ExtensionId,omitempty" json:"ExtensionId,omitempty" yaml:"ExtensionId,omitempty"`
}

// SerializableTimeZone was auto-generated from WSDL.
type SerializableTimeZone struct {
	Bias         int                       `xml:"Bias" json:"Bias" yaml:"Bias"`
	StandardTime *SerializableTimeZoneTime `xml:"StandardTime" json:"StandardTime" yaml:"StandardTime"`
	DaylightTime *SerializableTimeZoneTime `xml:"DaylightTime" json:"DaylightTime" yaml:"DaylightTime"`
}

// SerializableTimeZoneTime was auto-generated from WSDL.
type SerializableTimeZoneTime struct {
	Bias      int           `xml:"Bias" json:"Bias" yaml:"Bias"`
	Time      string        `xml:"Time" json:"Time" yaml:"Time"`
	DayOrder  *Short        `xml:"DayOrder" json:"DayOrder" yaml:"DayOrder"`
	Month     *Short        `xml:"Month" json:"Month" yaml:"Month"`
	DayOfWeek DayOfWeekType `xml:"DayOfWeek" json:"DayOfWeek" yaml:"DayOfWeek"`
	Year      *string       `xml:"Year,omitempty" json:"Year,omitempty" yaml:"Year,omitempty"`
}

// SerializedSecurityContextType was auto-generated from WSDL.
type SerializedSecurityContextType struct {
	UserSid             *string                                        `xml:"UserSid,omitempty" json:"UserSid,omitempty" yaml:"UserSid,omitempty"`
	GroupSids           *NonEmptyArrayOfGroupIdentifiersType           `xml:"GroupSids,omitempty" json:"GroupSids,omitempty" yaml:"GroupSids,omitempty"`
	RestrictedGroupSids *NonEmptyArrayOfRestrictedGroupIdentifiersType `xml:"RestrictedGroupSids,omitempty" json:"RestrictedGroupSids,omitempty" yaml:"RestrictedGroupSids,omitempty"`
	PrimarySmtpAddress  *string                                        `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty" yaml:"PrimarySmtpAddress,omitempty"`
}

// ServerVersionInfo was auto-generated from WSDL.
type ServerVersionInfo struct {
	MajorVersion     int    `xml:"MajorVersion,attr,omitempty" json:"MajorVersion,attr,omitempty" yaml:"MajorVersion,attr,omitempty"`
	MinorVersion     int    `xml:"MinorVersion,attr,omitempty" json:"MinorVersion,attr,omitempty" yaml:"MinorVersion,attr,omitempty"`
	MajorBuildNumber int    `xml:"MajorBuildNumber,attr,omitempty" json:"MajorBuildNumber,attr,omitempty" yaml:"MajorBuildNumber,attr,omitempty"`
	MinorBuildNumber int    `xml:"MinorBuildNumber,attr,omitempty" json:"MinorBuildNumber,attr,omitempty" yaml:"MinorBuildNumber,attr,omitempty"`
	Version          string `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
}

// ServiceConfiguration was auto-generated from WSDL.
type ServiceConfiguration struct {
}

// ServiceConfigurationResponseMessageType was auto-generated from
// WSDL.
type ServiceConfigurationResponseMessageType struct {
	MessageText                   *string                               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode                  *ResponseCodeType                     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey            *int                                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                    []*interface{}                        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass                 ResponseClassType                     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MailTipsConfiguration         *MailTipsServiceConfiguration         `xml:"MailTipsConfiguration,omitempty" json:"MailTipsConfiguration,omitempty" yaml:"MailTipsConfiguration,omitempty"`
	UnifiedMessagingConfiguration *UnifiedMessageServiceConfiguration   `xml:"UnifiedMessagingConfiguration,omitempty" json:"UnifiedMessagingConfiguration,omitempty" yaml:"UnifiedMessagingConfiguration,omitempty"`
	ProtectionRulesConfiguration  *ProtectionRulesServiceConfiguration  `xml:"ProtectionRulesConfiguration,omitempty" json:"ProtectionRulesConfiguration,omitempty" yaml:"ProtectionRulesConfiguration,omitempty"`
	PolicyNudgeRulesConfiguration *PolicyNudgeRulesServiceConfiguration `xml:"PolicyNudgeRulesConfiguration,omitempty" json:"PolicyNudgeRulesConfiguration,omitempty" yaml:"PolicyNudgeRulesConfiguration,omitempty"`
	SharePointURLsConfiguration   *SharePointURLsServiceConfiguration   `xml:"SharePointURLsConfiguration,omitempty" json:"SharePointURLsConfiguration,omitempty" yaml:"SharePointURLsConfiguration,omitempty"`
	TypeAttrXSI                   string                                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string                                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ServiceConfigurationResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ServiceConfigurationResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetFolderFieldType was auto-generated from WSDL.
type SetFolderFieldType struct {
	Path           *BasePathToElementType `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Folder         *FolderType            `xml:"Folder,omitempty" json:"Folder,omitempty" yaml:"Folder,omitempty"`
	CalendarFolder *CalendarFolderType    `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty" yaml:"CalendarFolder,omitempty"`
	ContactsFolder *ContactsFolderType    `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty" yaml:"ContactsFolder,omitempty"`
	SearchFolder   *SearchFolderType      `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty" yaml:"SearchFolder,omitempty"`
	TasksFolder    *TasksFolderType       `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty" yaml:"TasksFolder,omitempty"`
	TypeAttrXSI    string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetFolderFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetFolderFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Response message type for the SetHoldOnMailboxes web method.
type SetHoldOnMailboxesResponseMessageType struct {
	MessageText        *string                `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType      `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                   `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}         `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType      `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MailboxHoldResult  *MailboxHoldResultType `xml:"MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty" yaml:"MailboxHoldResult,omitempty"`
	TypeAttrXSI        string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetHoldOnMailboxesResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetHoldOnMailboxesResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Request type for the SetHoldOnMailboxes web method.
type SetHoldOnMailboxesType struct {
	ActionType               HoldActionType      `xml:"ActionType" json:"ActionType" yaml:"ActionType"`
	HoldId                   string              `xml:"HoldId" json:"HoldId" yaml:"HoldId"`
	Query                    string              `xml:"Query" json:"Query" yaml:"Query"`
	Mailboxes                *ArrayOfStringsType `xml:"Mailboxes,omitempty" json:"Mailboxes,omitempty" yaml:"Mailboxes,omitempty"`
	Language                 *string             `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	IncludeNonIndexableItems *bool               `xml:"IncludeNonIndexableItems,omitempty" json:"IncludeNonIndexableItems,omitempty" yaml:"IncludeNonIndexableItems,omitempty"`
	Deduplication            *bool               `xml:"Deduplication,omitempty" json:"Deduplication,omitempty" yaml:"Deduplication,omitempty"`
	InPlaceHoldIdentity      *string             `xml:"InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty" yaml:"InPlaceHoldIdentity,omitempty"`
	ItemHoldPeriod           *string             `xml:"ItemHoldPeriod,omitempty" json:"ItemHoldPeriod,omitempty" yaml:"ItemHoldPeriod,omitempty"`
	TypeAttrXSI              string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetHoldOnMailboxesType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetHoldOnMailboxesType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetImGroupResponseMessageType was auto-generated from WSDL.
type SetImGroupResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetImGroupResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetImGroupResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetImGroupType was auto-generated from WSDL.
type SetImGroupType struct {
	GroupId        *ItemIdType         `xml:"GroupId,omitempty" json:"GroupId,omitempty" yaml:"GroupId,omitempty"`
	NewDisplayName *NonEmptyStringType `xml:"NewDisplayName,omitempty" json:"NewDisplayName,omitempty" yaml:"NewDisplayName,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetImGroupType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetImGroupType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetImListMigrationCompletedResponseMessageType was auto-generated
// from WSDL.
type SetImListMigrationCompletedResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetImListMigrationCompletedResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetImListMigrationCompletedResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetImListMigrationCompletedType was auto-generated from WSDL.
type SetImListMigrationCompletedType struct {
	ImListMigrationCompleted *bool  `xml:"ImListMigrationCompleted,omitempty" json:"ImListMigrationCompleted,omitempty" yaml:"ImListMigrationCompleted,omitempty"`
	TypeAttrXSI              string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetImListMigrationCompletedType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetImListMigrationCompletedType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetItemFieldType was auto-generated from WSDL.
type SetItemFieldType struct {
	Path                *BasePathToElementType          `xml:"Path,omitempty" json:"Path,omitempty" yaml:"Path,omitempty"`
	Item                *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message             *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage      *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem        *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact             *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	DistributionList    *DistributionListType           `xml:"DistributionList,omitempty" json:"DistributionList,omitempty" yaml:"DistributionList,omitempty"`
	MeetingMessage      *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest      *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse     *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem            *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	RoleMember          *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network             *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person              *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
	TypeAttrXSI         string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetItemFieldType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetItemFieldType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SetOMEConfigurationResponseType was auto-generated from WSDL.
type SetOMEConfigurationResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetOMEConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetOMEConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetOMEConfigurationType was auto-generated from WSDL.
type SetOMEConfigurationType struct {
	Xml           *string `xml:"Xml,omitempty" json:"Xml,omitempty" yaml:"Xml,omitempty"`
	TemplateName  *string `xml:"TemplateName,omitempty" json:"TemplateName,omitempty" yaml:"TemplateName,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetOMEConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetOMEConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetOMEMessageStatusResponseType was auto-generated from WSDL.
type SetOMEMessageStatusResponseType struct {
	MessageText        *string                     `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType           `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                        `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}              `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType           `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Subject            *string                     `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	MessageId          *string                     `xml:"MessageId,omitempty" json:"MessageId,omitempty" yaml:"MessageId,omitempty"`
	CorrelationId      *string                     `xml:"CorrelationId,omitempty" json:"CorrelationId,omitempty" yaml:"CorrelationId,omitempty"`
	RevokeStatus       *OMEMessageRevocationStatus `xml:"RevokeStatus,omitempty" json:"RevokeStatus,omitempty" yaml:"RevokeStatus,omitempty"`
	IsRevoked          *bool                       `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty" yaml:"IsRevoked,omitempty"`
	TypeAttrXSI        string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetOMEMessageStatusResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetOMEMessageStatusResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetOMEMessageStatusType was auto-generated from WSDL.
type SetOMEMessageStatusType struct {
	MessageId     *string `xml:"MessageId,omitempty" json:"MessageId,omitempty" yaml:"MessageId,omitempty"`
	IsRevoked     *bool   `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty" yaml:"IsRevoked,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetOMEMessageStatusType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetOMEMessageStatusType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetRuleOperationType was auto-generated from WSDL.
type SetRuleOperationType struct {
	Rule          *RuleType `xml:"Rule" json:"Rule" yaml:"Rule"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetRuleOperationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetRuleOperationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SetTeamMailboxRequestType was auto-generated from WSDL.
type SetTeamMailboxRequestType struct {
	EmailAddress      *EmailAddressType              `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	SharePointSiteUrl *string                        `xml:"SharePointSiteUrl,omitempty" json:"SharePointSiteUrl,omitempty" yaml:"SharePointSiteUrl,omitempty"`
	State             *TeamMailboxLifecycleStateType `xml:"State,omitempty" json:"State,omitempty" yaml:"State,omitempty"`
	TypeAttrXSI       string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetTeamMailboxRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetTeamMailboxRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetTeamMailboxResponseMessageType was auto-generated from WSDL.
type SetTeamMailboxResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetTeamMailboxResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetTeamMailboxResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetUserOofSettingsRequest was auto-generated from WSDL.
type SetUserOofSettingsRequest struct {
	Mailbox         *EmailAddress    `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	UserOofSettings *UserOofSettings `xml:"UserOofSettings,omitempty" json:"UserOofSettings,omitempty" yaml:"UserOofSettings,omitempty"`
	TypeAttrXSI     string           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetUserOofSettingsRequest) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetUserOofSettingsRequest"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetUserOofSettingsResponse was auto-generated from WSDL.
type SetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty" yaml:"ResponseMessage,omitempty"`
}

// SetUserPhotoResponseMessageType was auto-generated from WSDL.
type SetUserPhotoResponseMessageType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetUserPhotoResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetUserPhotoResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SetUserPhotoType was auto-generated from WSDL.
type SetUserPhotoType struct {
	Email         NonEmptyStringType `xml:"Email" json:"Email" yaml:"Email"`
	Content       string             `xml:"Content" json:"Content" yaml:"Content"`
	TypeRequested *UserPhotoTypeType `xml:"TypeRequested,omitempty" json:"TypeRequested,omitempty" yaml:"TypeRequested,omitempty"`
	TypeAttrXSI   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetUserPhotoType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetUserPhotoType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SharePointURLsServiceConfiguration was auto-generated from WSDL.
type SharePointURLsServiceConfiguration struct {
	InternalSPMySiteHostURL string `xml:"InternalSPMySiteHostURL" json:"InternalSPMySiteHostURL" yaml:"InternalSPMySiteHostURL"`
	ExternalSPMySiteHostURL string `xml:"ExternalSPMySiteHostURL" json:"ExternalSPMySiteHostURL" yaml:"ExternalSPMySiteHostURL"`
	TypeAttrXSI             string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace           string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SharePointURLsServiceConfiguration) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SharePointURLsServiceConfiguration"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SharingMessageActionType was auto-generated from WSDL.
type SharingMessageActionType struct {
	Importance *SharingActionImportance `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	ActionType *SharingActionType       `xml:"ActionType,omitempty" json:"ActionType,omitempty" yaml:"ActionType,omitempty"`
	Action     *SharingAction           `xml:"Action,omitempty" json:"Action,omitempty" yaml:"Action,omitempty"`
}

// SharingMessageType was auto-generated from WSDL.
type SharingMessageType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	Sender                       *SingleRecipientType                      `xml:"Sender,omitempty" json:"Sender,omitempty" yaml:"Sender,omitempty"`
	ToRecipients                 *ArrayOfRecipientsType                    `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty" yaml:"ToRecipients,omitempty"`
	CcRecipients                 *ArrayOfRecipientsType                    `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty" yaml:"CcRecipients,omitempty"`
	BccRecipients                *ArrayOfRecipientsType                    `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty" yaml:"BccRecipients,omitempty"`
	IsReadReceiptRequested       *bool                                     `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty" yaml:"IsReadReceiptRequested,omitempty"`
	IsDeliveryReceiptRequested   *bool                                     `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty" yaml:"IsDeliveryReceiptRequested,omitempty"`
	ConversationIndex            *[]byte                                   `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty" yaml:"ConversationIndex,omitempty"`
	ConversationTopic            *string                                   `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty" yaml:"ConversationTopic,omitempty"`
	From                         *SingleRecipientType                      `xml:"From,omitempty" json:"From,omitempty" yaml:"From,omitempty"`
	InternetMessageId            *string                                   `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty" yaml:"InternetMessageId,omitempty"`
	IsRead                       *bool                                     `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
	IsResponseRequested          *bool                                     `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty" yaml:"IsResponseRequested,omitempty"`
	References                   *string                                   `xml:"References,omitempty" json:"References,omitempty" yaml:"References,omitempty"`
	ReplyTo                      *ArrayOfRecipientsType                    `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty" yaml:"ReplyTo,omitempty"`
	ReceivedBy                   *SingleRecipientType                      `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty" yaml:"ReceivedBy,omitempty"`
	ReceivedRepresenting         *SingleRecipientType                      `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty" yaml:"ReceivedRepresenting,omitempty"`
	ApprovalRequestData          *ApprovalRequestDataType                  `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty" yaml:"ApprovalRequestData,omitempty"`
	VotingInformation            *VotingInformationType                    `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty" yaml:"VotingInformation,omitempty"`
	ReminderMessageData          *ReminderMessageDataType                  `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty" yaml:"ReminderMessageData,omitempty"`
	MessageSafety                *MessageSafetyType                        `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty" yaml:"MessageSafety,omitempty"`
	SenderSMTPAddress            *SmtpAddressType                          `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty" yaml:"SenderSMTPAddress,omitempty"`
	MailboxGuids                 []*GuidType                               `xml:"MailboxGuids>MailboxGuid,omitempty" json:"MailboxGuids>MailboxGuid,omitempty" yaml:"MailboxGuids>MailboxGuid,omitempty"`
	PublishedCalendarItemIcs     *string                                   `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty" yaml:"PublishedCalendarItemIcs,omitempty"`
	PublishedCalendarItemName    *string                                   `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty" yaml:"PublishedCalendarItemName,omitempty"`
	SharingMessageAction         *SharingMessageActionType                 `xml:"SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty" yaml:"SharingMessageAction,omitempty"`
	SharingMessageActions        *ArrayOfSharingMessageActionType          `xml:"SharingMessageActions,omitempty" json:"SharingMessageActions,omitempty" yaml:"SharingMessageActions,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SharingMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SharingMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SidAndAttributesType was auto-generated from WSDL.
type SidAndAttributesType struct {
	SecurityIdentifier *string `xml:"SecurityIdentifier,omitempty" json:"SecurityIdentifier,omitempty" yaml:"SecurityIdentifier,omitempty"`
	Attributes         uint    `xml:"Attribute,attr,omitempty" json:"Attribute,attr,omitempty" yaml:"Attribute,attr,omitempty"`
}

// SingleLargeArchiveSearchScopeType was auto-generated from WSDL.
type SingleLargeArchiveSearchScopeType struct {
	MailboxGuid     *GuidType              `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty" yaml:"MailboxGuid,omitempty"`
	FolderScope     *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty" yaml:"FolderScope,omitempty"`
	IsDeepTraversal *bool                  `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty" yaml:"IsDeepTraversal,omitempty"`
}

// SingleRecipientType was auto-generated from WSDL.
type SingleRecipientType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
}

// SingleValueInsightContent was auto-generated from WSDL.
type SingleValueInsightContent struct {
	Item          *InsightValue `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	TypeAttrXSI   string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SingleValueInsightContent) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SingleValueInsightContent"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SkillInsightValue was auto-generated from WSDL.
type SkillInsightValue struct {
	InsightSource   *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Name            *string `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Strength        *int    `xml:"Strength,omitempty" json:"Strength,omitempty" yaml:"Strength,omitempty"`
	TypeAttrXSI     string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SkillInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SkillInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SmartResponseBaseType was auto-generated from WSDL.
type SmartResponseBaseType struct {
}

// SmartResponseType was auto-generated from WSDL.
type SmartResponseType struct {
	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty" yaml:"NewBodyContent,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SmartResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SmartResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SmtpAddressType was auto-generated from WSDL.
type SmtpAddressType struct {
	Content *NonEmptyStringType `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// SmtpDomain was auto-generated from WSDL.
type SmtpDomain struct {
	Name              string `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
	IncludeSubdomains bool   `xml:"IncludeSubdomains,attr,omitempty" json:"IncludeSubdomains,attr,omitempty" yaml:"IncludeSubdomains,attr,omitempty"`
}

// SmtpDomainList was auto-generated from WSDL.
type SmtpDomainList struct {
	Domain []*SmtpDomain `xml:"Domain,omitempty" json:"Domain,omitempty" yaml:"Domain,omitempty"`
}

// StartSearchSession was auto-generated from WSDL.
type StartSearchSession struct {
	SearchSessionId GuidType                `xml:"SearchSessionId" json:"SearchSessionId" yaml:"SearchSessionId"`
	WarmupOptions   WarmupOptionsType       `xml:"WarmupOptions" json:"WarmupOptions" yaml:"WarmupOptions"`
	SuggestionTypes SuggestionKindType      `xml:"SuggestionTypes" json:"SuggestionTypes" yaml:"SuggestionTypes"`
	SearchScope     *ArrayOfSearchScopeType `xml:"SearchScope" json:"SearchScope" yaml:"SearchScope"`
	IdFormat        *IdFormatType           `xml:"IdFormat,omitempty" json:"IdFormat,omitempty" yaml:"IdFormat,omitempty"`
	ApplicationId   *string                 `xml:"ApplicationId,omitempty" json:"ApplicationId,omitempty" yaml:"ApplicationId,omitempty"`
	Scenario        *string                 `xml:"Scenario,omitempty" json:"Scenario,omitempty" yaml:"Scenario,omitempty"`
	TypeAttrXSI     string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StartSearchSession) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StartSearchSession"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// StartSearchSessionResponseMessage was auto-generated from WSDL.
type StartSearchSessionResponseMessage struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StartSearchSessionResponseMessage) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StartSearchSessionResponseMessage"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// StreamingSubscriptionRequestType was auto-generated from WSDL.
type StreamingSubscriptionRequestType struct {
	FolderIds             *NonEmptyArrayOfBaseFolderIdsType          `xml:"FolderIds,omitempty" json:"FolderIds,omitempty" yaml:"FolderIds,omitempty"`
	EventTypes            *NonEmptyArrayOfNotificationEventTypesType `xml:"EventTypes,omitempty" json:"EventTypes,omitempty" yaml:"EventTypes,omitempty"`
	SubscribeToAllFolders bool                                       `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,attr,omitempty" yaml:"SubscribeToAllFolders,attr,omitempty"`
}

// StringArrayAttributedValueType was auto-generated from WSDL.
type StringArrayAttributedValueType struct {
	Values       *ArrayOfStringValueType       `xml:"Values" json:"Values" yaml:"Values"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// StringAttributedValueType was auto-generated from WSDL.
type StringAttributedValueType struct {
	Value        string                        `xml:"Value" json:"Value" yaml:"Value"`
	Attributions *ArrayOfValueAttributionsType `xml:"Attributions" json:"Attributions" yaml:"Attributions"`
}

// StringInsightValue was auto-generated from WSDL.
type StringInsightValue struct {
	InsightSource   *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Data            *string `xml:"Data,omitempty" json:"Data,omitempty" yaml:"Data,omitempty"`
	TypeAttrXSI     string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StringInsightValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StringInsightValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SubscribeResponseMessageType was auto-generated from WSDL.
type SubscribeResponseMessageType struct {
	MessageText        *string             `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType   `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}      `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType   `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SubscriptionId     *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty" yaml:"SubscriptionId,omitempty"`
	Watermark          *WatermarkType      `xml:"Watermark,omitempty" json:"Watermark,omitempty" yaml:"Watermark,omitempty"`
	TypeAttrXSI        string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SubscribeResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SubscribeResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SubscribeResponseType was auto-generated from WSDL.
type SubscribeResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SubscribeResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SubscribeResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SubscribeType was auto-generated from WSDL.
type SubscribeType struct {
	PullSubscriptionRequest      *PullSubscriptionRequestType      `xml:"PullSubscriptionRequest,omitempty" json:"PullSubscriptionRequest,omitempty" yaml:"PullSubscriptionRequest,omitempty"`
	PushSubscriptionRequest      *PushSubscriptionRequestType      `xml:"PushSubscriptionRequest,omitempty" json:"PushSubscriptionRequest,omitempty" yaml:"PushSubscriptionRequest,omitempty"`
	StreamingSubscriptionRequest *StreamingSubscriptionRequestType `xml:"StreamingSubscriptionRequest,omitempty" json:"StreamingSubscriptionRequest,omitempty" yaml:"StreamingSubscriptionRequest,omitempty"`
	TypeAttrXSI                  string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SubscribeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SubscribeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// Suggestion was auto-generated from WSDL.
type Suggestion struct {
	MeetingTime               DateTime                     `xml:"MeetingTime" json:"MeetingTime" yaml:"MeetingTime"`
	IsWorkTime                bool                         `xml:"IsWorkTime" json:"IsWorkTime" yaml:"IsWorkTime"`
	SuggestionQuality         SuggestionQuality            `xml:"SuggestionQuality" json:"SuggestionQuality" yaml:"SuggestionQuality"`
	AttendeeConflictDataArray *ArrayOfAttendeeConflictData `xml:"AttendeeConflictDataArray,omitempty" json:"AttendeeConflictDataArray,omitempty" yaml:"AttendeeConflictDataArray,omitempty"`
}

// SuggestionDayResult was auto-generated from WSDL.
type SuggestionDayResult struct {
	Date            DateTime           `xml:"Date" json:"Date" yaml:"Date"`
	DayQuality      SuggestionQuality  `xml:"DayQuality" json:"DayQuality" yaml:"DayQuality"`
	SuggestionArray *ArrayOfSuggestion `xml:"SuggestionArray,omitempty" json:"SuggestionArray,omitempty" yaml:"SuggestionArray,omitempty"`
}

// SuggestionType was auto-generated from WSDL.
type SuggestionType struct {
	SuggestedQuery string             `xml:"SuggestedQuery" json:"SuggestedQuery" yaml:"SuggestedQuery"`
	DisplayText    string             `xml:"DisplayText" json:"DisplayText" yaml:"DisplayText"`
	SuggestionType SuggestionKindType `xml:"SuggestionType" json:"SuggestionType" yaml:"SuggestionType"`
	Trigger        *string            `xml:"Trigger,omitempty" json:"Trigger,omitempty" yaml:"Trigger,omitempty"`
	TDSuggestionId *int               `xml:"TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty" yaml:"TDSuggestionId,omitempty"`
	IsDeletable    *bool              `xml:"IsDeletable,omitempty" json:"IsDeletable,omitempty" yaml:"IsDeletable,omitempty"`
}

// SuggestionsResponseType was auto-generated from WSDL.
type SuggestionsResponseType struct {
	ResponseMessage          *ResponseMessageType        `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty" yaml:"ResponseMessage,omitempty"`
	SuggestionDayResultArray *ArrayOfSuggestionDayResult `xml:"SuggestionDayResultArray,omitempty" json:"SuggestionDayResultArray,omitempty" yaml:"SuggestionDayResultArray,omitempty"`
}

// SuggestionsViewOptionsType was auto-generated from WSDL.
type SuggestionsViewOptionsType struct {
	GoodThreshold                  *int               `xml:"GoodThreshold,omitempty" json:"GoodThreshold,omitempty" yaml:"GoodThreshold,omitempty"`
	MaximumResultsByDay            *int               `xml:"MaximumResultsByDay,omitempty" json:"MaximumResultsByDay,omitempty" yaml:"MaximumResultsByDay,omitempty"`
	MaximumNonWorkHourResultsByDay *int               `xml:"MaximumNonWorkHourResultsByDay,omitempty" json:"MaximumNonWorkHourResultsByDay,omitempty" yaml:"MaximumNonWorkHourResultsByDay,omitempty"`
	MeetingDurationInMinutes       *int               `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty" yaml:"MeetingDurationInMinutes,omitempty"`
	MinimumSuggestionQuality       *SuggestionQuality `xml:"MinimumSuggestionQuality,omitempty" json:"MinimumSuggestionQuality,omitempty" yaml:"MinimumSuggestionQuality,omitempty"`
	DetailedSuggestionsWindow      Duration           `xml:"DetailedSuggestionsWindow" json:"DetailedSuggestionsWindow" yaml:"DetailedSuggestionsWindow"`
	CurrentMeetingTime             *DateTime          `xml:"CurrentMeetingTime,omitempty" json:"CurrentMeetingTime,omitempty" yaml:"CurrentMeetingTime,omitempty"`
	GlobalObjectId                 *string            `xml:"GlobalObjectId,omitempty" json:"GlobalObjectId,omitempty" yaml:"GlobalObjectId,omitempty"`
}

// SuppressReadReceiptType was auto-generated from WSDL.
type SuppressReadReceiptType struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SuppressReadReceiptType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SuppressReadReceiptType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// SyncFolderHierarchyChangesType was auto-generated from WSDL.
type SyncFolderHierarchyChangesType struct {
	Create *SyncFolderHierarchyCreateOrUpdateType `xml:"Create,omitempty" json:"Create,omitempty" yaml:"Create,omitempty"`
	Update *SyncFolderHierarchyCreateOrUpdateType `xml:"Update,omitempty" json:"Update,omitempty" yaml:"Update,omitempty"`
	Delete *SyncFolderHierarchyDeleteType         `xml:"Delete,omitempty" json:"Delete,omitempty" yaml:"Delete,omitempty"`
}

// SyncFolderHierarchyCreateOrUpdateType was auto-generated from
// WSDL.
type SyncFolderHierarchyCreateOrUpdateType struct {
	Folder         *FolderType         `xml:"Folder,omitempty" json:"Folder,omitempty" yaml:"Folder,omitempty"`
	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty" yaml:"CalendarFolder,omitempty"`
	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty" yaml:"ContactsFolder,omitempty"`
	SearchFolder   *SearchFolderType   `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty" yaml:"SearchFolder,omitempty"`
	TasksFolder    *TasksFolderType    `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty" yaml:"TasksFolder,omitempty"`
}

// SyncFolderHierarchyDeleteType was auto-generated from WSDL.
type SyncFolderHierarchyDeleteType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
}

// SyncFolderHierarchyResponseMessageType was auto-generated from
// WSDL.
type SyncFolderHierarchyResponseMessageType struct {
	MessageText               *string                         `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode              *ResponseCodeType               `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey        *int                            `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml                []*interface{}                  `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass             ResponseClassType               `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SyncState                 *string                         `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
	IncludesLastFolderInRange *bool                           `xml:"IncludesLastFolderInRange,omitempty" json:"IncludesLastFolderInRange,omitempty" yaml:"IncludesLastFolderInRange,omitempty"`
	Changes                   *SyncFolderHierarchyChangesType `xml:"Changes,omitempty" json:"Changes,omitempty" yaml:"Changes,omitempty"`
	TypeAttrXSI               string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderHierarchyResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderHierarchyResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SyncFolderHierarchyResponseType was auto-generated from WSDL.
type SyncFolderHierarchyResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderHierarchyResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderHierarchyResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SyncFolderHierarchyType was auto-generated from WSDL.
type SyncFolderHierarchyType struct {
	FolderShape   *FolderResponseShapeType `xml:"FolderShape" json:"FolderShape" yaml:"FolderShape"`
	SyncFolderId  *TargetFolderIdType      `xml:"SyncFolderId,omitempty" json:"SyncFolderId,omitempty" yaml:"SyncFolderId,omitempty"`
	SyncState     *string                  `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
	TypeAttrXSI   string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderHierarchyType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderHierarchyType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SyncFolderItemsChangesType was auto-generated from WSDL.
type SyncFolderItemsChangesType struct {
	Create         *SyncFolderItemsCreateOrUpdateType `xml:"Create,omitempty" json:"Create,omitempty" yaml:"Create,omitempty"`
	Update         *SyncFolderItemsCreateOrUpdateType `xml:"Update,omitempty" json:"Update,omitempty" yaml:"Update,omitempty"`
	Delete         *SyncFolderItemsDeleteType         `xml:"Delete,omitempty" json:"Delete,omitempty" yaml:"Delete,omitempty"`
	ReadFlagChange *SyncFolderItemsReadFlagType       `xml:"ReadFlagChange,omitempty" json:"ReadFlagChange,omitempty" yaml:"ReadFlagChange,omitempty"`
}

// SyncFolderItemsCreateOrUpdateType was auto-generated from WSDL.
type SyncFolderItemsCreateOrUpdateType struct {
	Item                *ItemType                       `xml:"Item,omitempty" json:"Item,omitempty" yaml:"Item,omitempty"`
	Message             *MessageType                    `xml:"Message,omitempty" json:"Message,omitempty" yaml:"Message,omitempty"`
	SharingMessage      *SharingMessageType             `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty" yaml:"SharingMessage,omitempty"`
	CalendarItem        *CalendarItemType               `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty" yaml:"CalendarItem,omitempty"`
	Contact             *ContactItemType                `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
	DistributionList    *DistributionListType           `xml:"DistributionList,omitempty" json:"DistributionList,omitempty" yaml:"DistributionList,omitempty"`
	MeetingMessage      *MeetingMessageType             `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty" yaml:"MeetingMessage,omitempty"`
	MeetingRequest      *MeetingRequestMessageType      `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty" yaml:"MeetingRequest,omitempty"`
	MeetingResponse     *MeetingResponseMessageType     `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty" yaml:"MeetingResponse,omitempty"`
	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty" yaml:"MeetingCancellation,omitempty"`
	Task                *TaskType                       `xml:"Task,omitempty" json:"Task,omitempty" yaml:"Task,omitempty"`
	PostItem            *PostItemType                   `xml:"PostItem,omitempty" json:"PostItem,omitempty" yaml:"PostItem,omitempty"`
	RoleMember          *RoleMemberItemType             `xml:"RoleMember,omitempty" json:"RoleMember,omitempty" yaml:"RoleMember,omitempty"`
	Network             *NetworkItemType                `xml:"Network,omitempty" json:"Network,omitempty" yaml:"Network,omitempty"`
	Person              *AbchPersonItemType             `xml:"Person,omitempty" json:"Person,omitempty" yaml:"Person,omitempty"`
}

// SyncFolderItemsDeleteType was auto-generated from WSDL.
type SyncFolderItemsDeleteType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
}

// SyncFolderItemsReadFlagType was auto-generated from WSDL.
type SyncFolderItemsReadFlagType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	IsRead *bool       `xml:"IsRead,omitempty" json:"IsRead,omitempty" yaml:"IsRead,omitempty"`
}

// SyncFolderItemsResponseMessageType was auto-generated from WSDL.
type SyncFolderItemsResponseMessageType struct {
	MessageText             *string                     `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode            *ResponseCodeType           `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey      *int                        `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml              []*interface{}              `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass           ResponseClassType           `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	SyncState               *string                     `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
	IncludesLastItemInRange *bool                       `xml:"IncludesLastItemInRange,omitempty" json:"IncludesLastItemInRange,omitempty" yaml:"IncludesLastItemInRange,omitempty"`
	Changes                 *SyncFolderItemsChangesType `xml:"Changes,omitempty" json:"Changes,omitempty" yaml:"Changes,omitempty"`
	TypeAttrXSI             string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace           string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SyncFolderItemsResponseType was auto-generated from WSDL.
type SyncFolderItemsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderItemsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderItemsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// SyncFolderItemsType was auto-generated from WSDL.
type SyncFolderItemsType struct {
	ItemShape          *ItemResponseShapeType     `xml:"ItemShape" json:"ItemShape" yaml:"ItemShape"`
	SyncFolderId       *TargetFolderIdType        `xml:"SyncFolderId" json:"SyncFolderId" yaml:"SyncFolderId"`
	SyncState          *string                    `xml:"SyncState,omitempty" json:"SyncState,omitempty" yaml:"SyncState,omitempty"`
	Ignore             *ArrayOfBaseItemIdsType    `xml:"Ignore,omitempty" json:"Ignore,omitempty" yaml:"Ignore,omitempty"`
	MaxChangesReturned MaxSyncChangesReturnedType `xml:"MaxChangesReturned" json:"MaxChangesReturned" yaml:"MaxChangesReturned"`
	SyncScope          *SyncFolderItemsScopeType  `xml:"SyncScope,omitempty" json:"SyncScope,omitempty" yaml:"SyncScope,omitempty"`
	TypeAttrXSI        string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SyncFolderItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SyncFolderItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// TargetFolderIdType was auto-generated from WSDL.
type TargetFolderIdType struct {
	FolderId              *FolderIdType              `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	AddressListId         *AddressListIdType         `xml:"AddressListId,omitempty" json:"AddressListId,omitempty" yaml:"AddressListId,omitempty"`
}

// TaskRecurrenceType was auto-generated from WSDL.
type TaskRecurrenceType struct {
}

// TaskSuggestionType was auto-generated from WSDL.
type TaskSuggestionType struct {
	Position      []*EmailPositionType   `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	TaskString    *string                `xml:"TaskString,omitempty" json:"TaskString,omitempty" yaml:"TaskString,omitempty"`
	Assignees     *ArrayOfEmailUsersType `xml:"Assignees,omitempty" json:"Assignees,omitempty" yaml:"Assignees,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TaskSuggestionType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TaskSuggestionType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// TaskType was auto-generated from WSDL.
type TaskType struct {
	MimeContent                  *MimeContentType                          `xml:"MimeContent,omitempty" json:"MimeContent,omitempty" yaml:"MimeContent,omitempty"`
	ItemId                       *ItemIdType                               `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	ParentFolderId               *FolderIdType                             `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	ItemClass                    *ItemClassType                            `xml:"ItemClass,omitempty" json:"ItemClass,omitempty" yaml:"ItemClass,omitempty"`
	Subject                      *string                                   `xml:"Subject,omitempty" json:"Subject,omitempty" yaml:"Subject,omitempty"`
	Sensitivity                  *SensitivityChoicesType                   `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty" yaml:"Sensitivity,omitempty"`
	Body                         *BodyType                                 `xml:"Body,omitempty" json:"Body,omitempty" yaml:"Body,omitempty"`
	Attachments                  *NonEmptyArrayOfAttachmentsType           `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	DateTimeReceived             *DateTime                                 `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty" yaml:"DateTimeReceived,omitempty"`
	Size                         *int                                      `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Categories                   *ArrayOfStringsType                       `xml:"Categories,omitempty" json:"Categories,omitempty" yaml:"Categories,omitempty"`
	Importance                   *ImportanceChoicesType                    `xml:"Importance,omitempty" json:"Importance,omitempty" yaml:"Importance,omitempty"`
	InReplyTo                    *string                                   `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty" yaml:"InReplyTo,omitempty"`
	IsSubmitted                  *bool                                     `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty" yaml:"IsSubmitted,omitempty"`
	IsDraft                      *bool                                     `xml:"IsDraft,omitempty" json:"IsDraft,omitempty" yaml:"IsDraft,omitempty"`
	IsFromMe                     *bool                                     `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty" yaml:"IsFromMe,omitempty"`
	IsResend                     *bool                                     `xml:"IsResend,omitempty" json:"IsResend,omitempty" yaml:"IsResend,omitempty"`
	IsUnmodified                 *bool                                     `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty" yaml:"IsUnmodified,omitempty"`
	InternetMessageHeaders       *NonEmptyArrayOfInternetHeadersType       `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty" yaml:"InternetMessageHeaders,omitempty"`
	DateTimeSent                 *DateTime                                 `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty" yaml:"DateTimeSent,omitempty"`
	DateTimeCreated              *DateTime                                 `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty" yaml:"DateTimeCreated,omitempty"`
	ResponseObjects              *NonEmptyArrayOfResponseObjectsType       `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty" yaml:"ResponseObjects,omitempty"`
	ReminderDueBy                *DateTime                                 `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty" yaml:"ReminderDueBy,omitempty"`
	ReminderIsSet                *bool                                     `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty" yaml:"ReminderIsSet,omitempty"`
	ReminderNextTime             *DateTime                                 `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty" yaml:"ReminderNextTime,omitempty"`
	ReminderMinutesBeforeStart   *ReminderMinutesBeforeStartType           `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty" yaml:"ReminderMinutesBeforeStart,omitempty"`
	DisplayCc                    *string                                   `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty" yaml:"DisplayCc,omitempty"`
	DisplayTo                    *string                                   `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty" yaml:"DisplayTo,omitempty"`
	DisplayBcc                   *string                                   `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty" yaml:"DisplayBcc,omitempty"`
	HasAttachments               *bool                                     `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty" yaml:"HasAttachments,omitempty"`
	ExtendedProperty             []*ExtendedPropertyType                   `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	Culture                      *string                                   `xml:"Culture,omitempty" json:"Culture,omitempty" yaml:"Culture,omitempty"`
	EffectiveRights              *EffectiveRightsType                      `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	LastModifiedName             *string                                   `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty" yaml:"LastModifiedName,omitempty"`
	LastModifiedTime             *DateTime                                 `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty" yaml:"LastModifiedTime,omitempty"`
	IsAssociated                 *bool                                     `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty" yaml:"IsAssociated,omitempty"`
	WebClientReadFormQueryString *string                                   `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty" yaml:"WebClientReadFormQueryString,omitempty"`
	WebClientEditFormQueryString *string                                   `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty" yaml:"WebClientEditFormQueryString,omitempty"`
	ConversationId               *ItemIdType                               `xml:"ConversationId,omitempty" json:"ConversationId,omitempty" yaml:"ConversationId,omitempty"`
	UniqueBody                   *BodyType                                 `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty" yaml:"UniqueBody,omitempty"`
	Flag                         *FlagType                                 `xml:"Flag,omitempty" json:"Flag,omitempty" yaml:"Flag,omitempty"`
	StoreEntryId                 *[]byte                                   `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty" yaml:"StoreEntryId,omitempty"`
	InstanceKey                  *[]byte                                   `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty" yaml:"InstanceKey,omitempty"`
	NormalizedBody               *BodyType                                 `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty" yaml:"NormalizedBody,omitempty"`
	EntityExtractionResult       *EntityExtractionResultType               `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty" yaml:"EntityExtractionResult,omitempty"`
	PolicyTag                    *RetentionTagType                         `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag                   *RetentionTagType                         `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	RetentionDate                *DateTime                                 `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty" yaml:"RetentionDate,omitempty"`
	Preview                      *string                                   `xml:"Preview,omitempty" json:"Preview,omitempty" yaml:"Preview,omitempty"`
	RightsManagementLicenseData  *RightsManagementLicenseDataType          `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty" yaml:"RightsManagementLicenseData,omitempty"`
	PredictedActionReasons       *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty" yaml:"PredictedActionReasons,omitempty"`
	IsClutter                    *bool                                     `xml:"IsClutter,omitempty" json:"IsClutter,omitempty" yaml:"IsClutter,omitempty"`
	BlockStatus                  *bool                                     `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty" yaml:"BlockStatus,omitempty"`
	HasBlockedImages             *bool                                     `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty" yaml:"HasBlockedImages,omitempty"`
	TextBody                     *BodyType                                 `xml:"TextBody,omitempty" json:"TextBody,omitempty" yaml:"TextBody,omitempty"`
	IconIndex                    *IconIndexType                            `xml:"IconIndex,omitempty" json:"IconIndex,omitempty" yaml:"IconIndex,omitempty"`
	SearchKey                    *[]byte                                   `xml:"SearchKey,omitempty" json:"SearchKey,omitempty" yaml:"SearchKey,omitempty"`
	SortKey                      *int64                                    `xml:"SortKey,omitempty" json:"SortKey,omitempty" yaml:"SortKey,omitempty"`
	Hashtags                     *ArrayOfStringsType                       `xml:"Hashtags,omitempty" json:"Hashtags,omitempty" yaml:"Hashtags,omitempty"`
	Mentions                     *ArrayOfRecipientsType                    `xml:"Mentions,omitempty" json:"Mentions,omitempty" yaml:"Mentions,omitempty"`
	MentionedMe                  *bool                                     `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty" yaml:"MentionedMe,omitempty"`
	MentionsPreview              *MentionsPreviewType                      `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty" yaml:"MentionsPreview,omitempty"`
	MentionsEx                   *NonEmptyArrayOfMentionActionsType        `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty" yaml:"MentionsEx,omitempty"`
	AppliedHashtags              *NonEmptyArrayOfAppliedHashtagType        `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty" yaml:"AppliedHashtags,omitempty"`
	AppliedHashtagsPreview       *AppliedHashtagsPreviewType               `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty" yaml:"AppliedHashtagsPreview,omitempty"`
	Likes                        *NonEmptyArrayOfLikeType                  `xml:"Likes,omitempty" json:"Likes,omitempty" yaml:"Likes,omitempty"`
	LikesPreview                 *LikesPreviewType                         `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty" yaml:"LikesPreview,omitempty"`
	PendingSocialActivityTagIds  *ArrayOfStringsType                       `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty" yaml:"PendingSocialActivityTagIds,omitempty"`
	AtAllMention                 *bool                                     `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty" yaml:"AtAllMention,omitempty"`
	CanDelete                    *bool                                     `xml:"CanDelete,omitempty" json:"CanDelete,omitempty" yaml:"CanDelete,omitempty"`
	InferenceClassification      *InferenceClassificationType              `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty" yaml:"InferenceClassification,omitempty"`
	ActualWork                   *int                                      `xml:"ActualWork,omitempty" json:"ActualWork,omitempty" yaml:"ActualWork,omitempty"`
	AssignedTime                 *DateTime                                 `xml:"AssignedTime,omitempty" json:"AssignedTime,omitempty" yaml:"AssignedTime,omitempty"`
	BillingInformation           *string                                   `xml:"BillingInformation,omitempty" json:"BillingInformation,omitempty" yaml:"BillingInformation,omitempty"`
	ChangeCount                  *int                                      `xml:"ChangeCount,omitempty" json:"ChangeCount,omitempty" yaml:"ChangeCount,omitempty"`
	Companies                    *ArrayOfStringsType                       `xml:"Companies,omitempty" json:"Companies,omitempty" yaml:"Companies,omitempty"`
	CompleteDate                 *DateTime                                 `xml:"CompleteDate,omitempty" json:"CompleteDate,omitempty" yaml:"CompleteDate,omitempty"`
	Contacts                     *ArrayOfStringsType                       `xml:"Contacts,omitempty" json:"Contacts,omitempty" yaml:"Contacts,omitempty"`
	DelegationState              *TaskDelegateStateType                    `xml:"DelegationState,omitempty" json:"DelegationState,omitempty" yaml:"DelegationState,omitempty"`
	Delegator                    *string                                   `xml:"Delegator,omitempty" json:"Delegator,omitempty" yaml:"Delegator,omitempty"`
	DueDate                      *DateTime                                 `xml:"DueDate,omitempty" json:"DueDate,omitempty" yaml:"DueDate,omitempty"`
	IsAssignmentEditable         *int                                      `xml:"IsAssignmentEditable,omitempty" json:"IsAssignmentEditable,omitempty" yaml:"IsAssignmentEditable,omitempty"`
	IsComplete                   *bool                                     `xml:"IsComplete,omitempty" json:"IsComplete,omitempty" yaml:"IsComplete,omitempty"`
	IsRecurring                  *bool                                     `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty" yaml:"IsRecurring,omitempty"`
	IsTeamTask                   *bool                                     `xml:"IsTeamTask,omitempty" json:"IsTeamTask,omitempty" yaml:"IsTeamTask,omitempty"`
	Mileage                      *string                                   `xml:"Mileage,omitempty" json:"Mileage,omitempty" yaml:"Mileage,omitempty"`
	Owner                        *string                                   `xml:"Owner,omitempty" json:"Owner,omitempty" yaml:"Owner,omitempty"`
	PercentComplete              *float64                                  `xml:"PercentComplete,omitempty" json:"PercentComplete,omitempty" yaml:"PercentComplete,omitempty"`
	Recurrence                   *TaskRecurrenceType                       `xml:"Recurrence,omitempty" json:"Recurrence,omitempty" yaml:"Recurrence,omitempty"`
	StartDate                    *DateTime                                 `xml:"StartDate,omitempty" json:"StartDate,omitempty" yaml:"StartDate,omitempty"`
	Status                       *TaskStatusType                           `xml:"Status,omitempty" json:"Status,omitempty" yaml:"Status,omitempty"`
	StatusDescription            *string                                   `xml:"StatusDescription,omitempty" json:"StatusDescription,omitempty" yaml:"StatusDescription,omitempty"`
	TotalWork                    *int                                      `xml:"TotalWork,omitempty" json:"TotalWork,omitempty" yaml:"TotalWork,omitempty"`
	TypeAttrXSI                  string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TaskType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TaskType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// TasksFolderType was auto-generated from WSDL.
type TasksFolderType struct {
	FolderId                 *FolderIdType                  `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	ParentFolderId           *FolderIdType                  `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty" yaml:"ParentFolderId,omitempty"`
	FolderClass              *string                        `xml:"FolderClass,omitempty" json:"FolderClass,omitempty" yaml:"FolderClass,omitempty"`
	DisplayName              *string                        `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	TotalCount               *int                           `xml:"TotalCount,omitempty" json:"TotalCount,omitempty" yaml:"TotalCount,omitempty"`
	ChildFolderCount         *int                           `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty" yaml:"ChildFolderCount,omitempty"`
	ExtendedProperty         []*ExtendedPropertyType        `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty" yaml:"ExtendedProperty,omitempty"`
	ManagedFolderInformation *ManagedFolderInformationType  `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty" yaml:"ManagedFolderInformation,omitempty"`
	EffectiveRights          *EffectiveRightsType           `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty" yaml:"EffectiveRights,omitempty"`
	DistinguishedFolderId    *DistinguishedFolderIdNameType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	PolicyTag                *RetentionTagType              `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty" yaml:"PolicyTag,omitempty"`
	ArchiveTag               *RetentionTagType              `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty" yaml:"ArchiveTag,omitempty"`
	ReplicaList              *ArrayOfStringsType            `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty" yaml:"ReplicaList,omitempty"`
	PermissionSet            *PermissionSetType             `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty" yaml:"PermissionSet,omitempty"`
	UnreadCount              *int                           `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty" yaml:"UnreadCount,omitempty"`
	TypeAttrXSI              string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TasksFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TasksFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// TentativelyAcceptItemType was auto-generated from WSDL.
type TentativelyAcceptItemType struct {
	ProposedStart *DateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty" yaml:"ProposedStart,omitempty"`
	ProposedEnd   *DateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty" yaml:"ProposedEnd,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TentativelyAcceptItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TentativelyAcceptItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// TimeChangeType was auto-generated from WSDL.
type TimeChangeType struct {
	Offset       *Duration `xml:"Offset,omitempty" json:"Offset,omitempty" yaml:"Offset,omitempty"`
	Time         *Time     `xml:"Time,omitempty" json:"Time,omitempty" yaml:"Time,omitempty"`
	TimeZoneName string    `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,attr,omitempty" yaml:"TimeZoneName,attr,omitempty"`
}

// TimeSlot was auto-generated from WSDL.
type TimeSlot struct {
	StartTime         *DateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty" yaml:"StartTime,omitempty"`
	DurationInMinutes *float64  `xml:"DurationInMinutes,omitempty" json:"DurationInMinutes,omitempty" yaml:"DurationInMinutes,omitempty"`
}

// TimeZoneContextType was auto-generated from WSDL.
type TimeZoneContextType struct {
	TimeZoneDefinition *TimeZoneDefinitionType `xml:"TimeZoneDefinition" json:"TimeZoneDefinition" yaml:"TimeZoneDefinition"`
}

// TimeZoneDefinitionType was auto-generated from WSDL.
type TimeZoneDefinitionType struct {
	Periods           *NonEmptyArrayOfPeriodsType   `xml:"Periods,omitempty" json:"Periods,omitempty" yaml:"Periods,omitempty"`
	TransitionsGroups *ArrayOfTransitionsGroupsType `xml:"TransitionsGroups,omitempty" json:"TransitionsGroups,omitempty" yaml:"TransitionsGroups,omitempty"`
	Transitions       *ArrayOfTransitionsType       `xml:"Transitions,omitempty" json:"Transitions,omitempty" yaml:"Transitions,omitempty"`
	Id                string                        `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	Name              string                        `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
}

// TimeZoneType was auto-generated from WSDL.
type TimeZoneType struct {
	BaseOffset   *Duration `xml:"BaseOffset,omitempty" json:"BaseOffset,omitempty" yaml:"BaseOffset,omitempty"`
	TimeZoneName string    `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,attr,omitempty" yaml:"TimeZoneName,attr,omitempty"`
}

// TooBigGroupAttendeeConflictData was auto-generated from WSDL.
type TooBigGroupAttendeeConflictData struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TooBigGroupAttendeeConflictData) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TooBigGroupAttendeeConflictData"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// TrackingPropertyType was auto-generated from WSDL.
type TrackingPropertyType struct {
	Name  string  `xml:"Name" json:"Name" yaml:"Name"`
	Value *string `xml:"Value,omitempty" json:"Value,omitempty" yaml:"Value,omitempty"`
}

// TransitionTargetType was auto-generated from WSDL.
type TransitionTargetType struct {
	Content *string                  `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Kind    TransitionTargetKindType `xml:"Kind,attr,omitempty" json:"Kind,attr,omitempty" yaml:"Kind,attr,omitempty"`
}

// TransitionType was auto-generated from WSDL.
type TransitionType struct {
	To *TransitionTargetType `xml:"To,omitempty" json:"To,omitempty" yaml:"To,omitempty"`
}

// TwoOperandExpressionType was auto-generated from WSDL.
type TwoOperandExpressionType interface{}

// UnifiedMessageServiceConfiguration was auto-generated from WSDL.
type UnifiedMessageServiceConfiguration struct {
	UmEnabled             bool   `xml:"UmEnabled" json:"UmEnabled" yaml:"UmEnabled"`
	PlayOnPhoneDialString string `xml:"PlayOnPhoneDialString" json:"PlayOnPhoneDialString" yaml:"PlayOnPhoneDialString"`
	PlayOnPhoneEnabled    bool   `xml:"PlayOnPhoneEnabled" json:"PlayOnPhoneEnabled" yaml:"PlayOnPhoneEnabled"`
	TypeAttrXSI           string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnifiedMessageServiceConfiguration) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnifiedMessageServiceConfiguration"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// UninstallAppResponseType was auto-generated from WSDL.
type UninstallAppResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UninstallAppResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UninstallAppResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UninstallAppType was auto-generated from WSDL.
type UninstallAppType struct {
	ID            string `xml:"ID" json:"ID" yaml:"ID"`
	IsMetaOSApp   *bool  `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty" yaml:"IsMetaOSApp,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UninstallAppType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UninstallAppType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UniqueBodyType was auto-generated from WSDL.
type UniqueBodyType struct {
	Content        *string      `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	UniqueBodyType BodyTypeType `xml:"UniqueBodyType,attr,omitempty" json:"UniqueBodyType,attr,omitempty" yaml:"UniqueBodyType,attr,omitempty"`
	IsTruncated    bool         `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,attr,omitempty" yaml:"IsTruncated,attr,omitempty"`
}

// UnknownAttendeeConflictData was auto-generated from WSDL.
type UnknownAttendeeConflictData struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnknownAttendeeConflictData) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnknownAttendeeConflictData"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// UnpinTeamMailboxRequestType was auto-generated from WSDL.
type UnpinTeamMailboxRequestType struct {
	EmailAddress  *EmailAddressType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnpinTeamMailboxRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnpinTeamMailboxRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UnpinTeamMailboxResponseMessageType was auto-generated from
// WSDL.
type UnpinTeamMailboxResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnpinTeamMailboxResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnpinTeamMailboxResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UnsubscribeResponseType was auto-generated from WSDL.
type UnsubscribeResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnsubscribeResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnsubscribeResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UnsubscribeType was auto-generated from WSDL.
type UnsubscribeType struct {
	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty" yaml:"SubscriptionId,omitempty"`
	TypeAttrXSI    string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnsubscribeType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnsubscribeType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateDelegateResponseMessageType was auto-generated from WSDL.
type UpdateDelegateResponseMessageType struct {
	MessageText        *string                                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType                       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}                          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType                       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ResponseMessages   *ArrayOfDelegateUserResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI        string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateDelegateResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateDelegateResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateDelegateType was auto-generated from WSDL.
type UpdateDelegateType struct {
	Mailbox                *EmailAddressType           `xml:"Mailbox,omitempty" json:"Mailbox,omitempty" yaml:"Mailbox,omitempty"`
	DelegateUsers          *ArrayOfDelegateUserType    `xml:"DelegateUsers,omitempty" json:"DelegateUsers,omitempty" yaml:"DelegateUsers,omitempty"`
	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty" yaml:"DeliverMeetingRequests,omitempty"`
	TypeAttrXSI            string                      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateDelegateType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateDelegateType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateExtensionUsageResponseType was auto-generated from WSDL.
type UpdateExtensionUsageResponseType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateExtensionUsageResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateExtensionUsageResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateExtensionUsageType was auto-generated from WSDL.
type UpdateExtensionUsageType struct {
	Client        *string                              `xml:"Client,omitempty" json:"Client,omitempty" yaml:"Client,omitempty"`
	Extensions    *ArrayOfUpdateExtensionUsageItemType `xml:"Extensions,omitempty" json:"Extensions,omitempty" yaml:"Extensions,omitempty"`
	TypeAttrXSI   string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateExtensionUsageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateExtensionUsageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateFolderResponseType was auto-generated from WSDL.
type UpdateFolderResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateFolderResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateFolderResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateFolderType was auto-generated from WSDL.
type UpdateFolderType struct {
	FolderChanges *NonEmptyArrayOfFolderChangesType `xml:"FolderChanges,omitempty" json:"FolderChanges,omitempty" yaml:"FolderChanges,omitempty"`
	TypeAttrXSI   string                            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateFolderType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateFolderType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateInboxRulesRequestType was auto-generated from WSDL.
type UpdateInboxRulesRequestType struct {
	MailboxSmtpAddress    *string                    `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty" yaml:"MailboxSmtpAddress,omitempty"`
	RemoveOutlookRuleBlob *bool                      `xml:"RemoveOutlookRuleBlob,omitempty" json:"RemoveOutlookRuleBlob,omitempty" yaml:"RemoveOutlookRuleBlob,omitempty"`
	Operations            *ArrayOfRuleOperationsType `xml:"Operations" json:"Operations" yaml:"Operations"`
	TypeAttrXSI           string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateInboxRulesRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateInboxRulesRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateInboxRulesResponseType was auto-generated from WSDL.
type UpdateInboxRulesResponseType struct {
	MessageText         *string                         `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode        *ResponseCodeType               `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey  *int                            `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml          []*interface{}                  `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass       ResponseClassType               `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	RuleOperationErrors *ArrayOfRuleOperationErrorsType `xml:"RuleOperationErrors,omitempty" json:"RuleOperationErrors,omitempty" yaml:"RuleOperationErrors,omitempty"`
	TypeAttrXSI         string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateInboxRulesResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateInboxRulesResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemInRecoverableItemsResponseMessageType was auto-generated
// from WSDL.
type UpdateItemInRecoverableItemsResponseMessageType struct {
	MessageText        *string                 `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType       `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                    `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}          `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType       `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Items              *ArrayOfRealItemsType   `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	Attachments        *ArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	ConflictResults    *ConflictResultsType    `xml:"ConflictResults,omitempty" json:"ConflictResults,omitempty" yaml:"ConflictResults,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemInRecoverableItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemInRecoverableItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemInRecoverableItemsResponseType was auto-generated
// from WSDL.
type UpdateItemInRecoverableItemsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemInRecoverableItemsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemInRecoverableItemsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemInRecoverableItemsType was auto-generated from WSDL.
type UpdateItemInRecoverableItemsType struct {
	ItemId            *ItemIdType                                `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	Updates           *NonEmptyArrayOfItemChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty" yaml:"Updates,omitempty"`
	Attachments       *NonEmptyArrayOfAttachmentsType            `xml:"Attachments,omitempty" json:"Attachments,omitempty" yaml:"Attachments,omitempty"`
	MakeItemImmutable *bool                                      `xml:"MakeItemImmutable,omitempty" json:"MakeItemImmutable,omitempty" yaml:"MakeItemImmutable,omitempty"`
	TypeAttrXSI       string                                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemInRecoverableItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemInRecoverableItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemResponseMessageType was auto-generated from WSDL.
type UpdateItemResponseMessageType struct {
	MessageText        *string               `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType     `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                  `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}        `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType     `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	Items              *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	ConflictResults    *ConflictResultsType  `xml:"ConflictResults,omitempty" json:"ConflictResults,omitempty" yaml:"ConflictResults,omitempty"`
	TypeAttrXSI        string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemResponseType was auto-generated from WSDL.
type UpdateItemResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateItemType was auto-generated from WSDL.
type UpdateItemType struct {
	ConflictResolution                    ConflictResolutionType          `xml:"ConflictResolution,attr,omitempty" json:"ConflictResolution,attr,omitempty" yaml:"ConflictResolution,attr,omitempty"`
	MessageDisposition                    MessageDispositionType          `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,attr,omitempty" yaml:"MessageDisposition,attr,omitempty"`
	SendMeetingInvitationsOrCancellations CalendarItemUpdateOperationType `xml:"SendMeetingInvitationsOrCancellations,attr,omitempty" json:"SendMeetingInvitationsOrCancellations,attr,omitempty" yaml:"SendMeetingInvitationsOrCancellations,attr,omitempty"`
	SuppressReadReceipts                  bool                            `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,attr,omitempty" yaml:"SuppressReadReceipts,attr,omitempty"`
	SavedItemFolderId                     *TargetFolderIdType             `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty" yaml:"SavedItemFolderId,omitempty"`
	ItemChanges                           *NonEmptyArrayOfItemChangesType `xml:"ItemChanges,omitempty" json:"ItemChanges,omitempty" yaml:"ItemChanges,omitempty"`
	TypeAttrXSI                           string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                         string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateItemType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateItemType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateMeetingInstanceRequestType was auto-generated from WSDL.
type UpdateMeetingInstanceRequestType struct {
	ItemId                     *ItemIdType                           `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	MeetingInstance            *MeetingInstanceType                  `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty" yaml:"MeetingInstance,omitempty"`
	ContentActivitiesToAdd     *NonEmptyArrayOfContentActivities     `xml:"ContentActivitiesToAdd,omitempty" json:"ContentActivitiesToAdd,omitempty" yaml:"ContentActivitiesToAdd,omitempty"`
	ParticipantActivitiesToAdd *NonEmptyArrayOfParticipantActivities `xml:"ParticipantActivitiesToAdd,omitempty" json:"ParticipantActivitiesToAdd,omitempty" yaml:"ParticipantActivitiesToAdd,omitempty"`
	TypeAttrXSI                string                                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string                                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateMeetingInstanceRequestType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateMeetingInstanceRequestType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateMeetingInstanceResponseMessageType was auto-generated
// from WSDL.
type UpdateMeetingInstanceResponseMessageType struct {
	MessageText        *string              `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType    `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int                 `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}       `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType    `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingInstance    *MeetingInstanceType `xml:"MeetingInstance" json:"MeetingInstance" yaml:"MeetingInstance"`
	TypeAttrXSI        string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateMeetingInstanceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateMeetingInstanceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateMeetingSpaceResponseMessageType was auto-generated from
// WSDL.
type UpdateMeetingSpaceResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	MeetingSpace       *MeetingSpaceType `xml:"MeetingSpace" json:"MeetingSpace" yaml:"MeetingSpace"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateMeetingSpaceResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateMeetingSpaceResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateMeetingSpaceType was auto-generated from WSDL.
type UpdateMeetingSpaceType struct {
	ItemId        *ItemIdType       `xml:"ItemId" json:"ItemId" yaml:"ItemId"`
	MeetingSpace  *MeetingSpaceType `xml:"MeetingSpace" json:"MeetingSpace" yaml:"MeetingSpace"`
	TypeAttrXSI   string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateMeetingSpaceType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateMeetingSpaceType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateUserConfigurationResponseType was auto-generated from
// WSDL.
type UpdateUserConfigurationResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateUserConfigurationResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateUserConfigurationResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UpdateUserConfigurationType was auto-generated from WSDL.
type UpdateUserConfigurationType struct {
	UserConfiguration *UserConfigurationType `xml:"UserConfiguration" json:"UserConfiguration" yaml:"UserConfiguration"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UpdateUserConfigurationType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UpdateUserConfigurationType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UploadItemType was auto-generated from WSDL.
type UploadItemType struct {
	ParentFolderId *FolderIdType    `xml:"ParentFolderId" json:"ParentFolderId" yaml:"ParentFolderId"`
	ItemId         *ItemIdType      `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	Data           []byte           `xml:"Data" json:"Data" yaml:"Data"`
	CreateAction   CreateActionType `xml:"CreateAction,attr,omitempty" json:"CreateAction,attr,omitempty" yaml:"CreateAction,attr,omitempty"`
	IsAssociated   bool             `xml:"IsAssociated,attr,omitempty" json:"IsAssociated,attr,omitempty" yaml:"IsAssociated,attr,omitempty"`
}

// UploadItemsResponseMessageType was auto-generated from WSDL.
type UploadItemsResponseMessageType struct {
	MessageText        *string           `xml:"MessageText,omitempty" json:"MessageText,omitempty" yaml:"MessageText,omitempty"`
	ResponseCode       *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty" yaml:"ResponseCode,omitempty"`
	DescriptiveLinkKey *int              `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty" yaml:"DescriptiveLinkKey,omitempty"`
	MessageXml         []*interface{}    `xml:"MessageXml>MessageXml,omitempty" json:"MessageXml>MessageXml,omitempty" yaml:"MessageXml>MessageXml,omitempty"`
	ResponseClass      ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,attr,omitempty" yaml:"ResponseClass,attr,omitempty"`
	ItemId             *ItemIdType       `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	TypeAttrXSI        string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UploadItemsResponseMessageType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UploadItemsResponseMessageType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UploadItemsResponseType was auto-generated from WSDL.
type UploadItemsResponseType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty" yaml:"ResponseMessages,omitempty"`
	TypeAttrXSI      string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UploadItemsResponseType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UploadItemsResponseType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UploadItemsType was auto-generated from WSDL.
type UploadItemsType struct {
	Items         *NonEmptyArrayOfUploadItemsType `xml:"Items,omitempty" json:"Items,omitempty" yaml:"Items,omitempty"`
	TypeAttrXSI   string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UploadItemsType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UploadItemsType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/messages"
	}
}

// UrlEntityType was auto-generated from WSDL.
type UrlEntityType struct {
	Position      []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty" yaml:"Position,omitempty"`
	Url           *string              `xml:"Url,omitempty" json:"Url,omitempty" yaml:"Url,omitempty"`
	TypeAttrXSI   string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UrlEntityType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UrlEntityType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// UserConfigurationDictionaryEntryType was auto-generated from
// WSDL.
type UserConfigurationDictionaryEntryType struct {
	DictionaryKey   *UserConfigurationDictionaryObjectType `xml:"DictionaryKey" json:"DictionaryKey" yaml:"DictionaryKey"`
	DictionaryValue *UserConfigurationDictionaryObjectType `xml:"DictionaryValue,omitempty" json:"DictionaryValue,omitempty" yaml:"DictionaryValue,omitempty"`
}

// UserConfigurationDictionaryObjectType was auto-generated from
// WSDL.
type UserConfigurationDictionaryObjectType struct {
	Type  UserConfigurationDictionaryObjectTypesType `xml:"Type" json:"Type" yaml:"Type"`
	Value []string                                   `xml:"Value" json:"Value" yaml:"Value"`
}

// UserConfigurationDictionaryType was auto-generated from WSDL.
type UserConfigurationDictionaryType struct {
	DictionaryEntry []*UserConfigurationDictionaryEntryType `xml:"DictionaryEntry,omitempty" json:"DictionaryEntry,omitempty" yaml:"DictionaryEntry,omitempty"`
}

// UserConfigurationNameType was auto-generated from WSDL.
type UserConfigurationNameType struct {
	FolderId              *FolderIdType              `xml:"FolderId,omitempty" json:"FolderId,omitempty" yaml:"FolderId,omitempty"`
	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty" yaml:"DistinguishedFolderId,omitempty"`
	AddressListId         *AddressListIdType         `xml:"AddressListId,omitempty" json:"AddressListId,omitempty" yaml:"AddressListId,omitempty"`
	Name                  NonEmptyStringType         `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
	TypeAttrXSI           string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UserConfigurationNameType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UserConfigurationNameType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// UserConfigurationType was auto-generated from WSDL.
type UserConfigurationType struct {
	UserConfigurationName *UserConfigurationNameType       `xml:"UserConfigurationName" json:"UserConfigurationName" yaml:"UserConfigurationName"`
	ItemId                *ItemIdType                      `xml:"ItemId,omitempty" json:"ItemId,omitempty" yaml:"ItemId,omitempty"`
	Dictionary            *UserConfigurationDictionaryType `xml:"Dictionary,omitempty" json:"Dictionary,omitempty" yaml:"Dictionary,omitempty"`
	XmlData               *[]byte                          `xml:"XmlData,omitempty" json:"XmlData,omitempty" yaml:"XmlData,omitempty"`
	BinaryData            *[]byte                          `xml:"BinaryData,omitempty" json:"BinaryData,omitempty" yaml:"BinaryData,omitempty"`
}

// UserIdType was auto-generated from WSDL.
type UserIdType struct {
	SID                  *string                `xml:"SID,omitempty" json:"SID,omitempty" yaml:"SID,omitempty"`
	PrimarySmtpAddress   *string                `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty" yaml:"PrimarySmtpAddress,omitempty"`
	DisplayName          *string                `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	DistinguishedUser    *DistinguishedUserType `xml:"DistinguishedUser,omitempty" json:"DistinguishedUser,omitempty" yaml:"DistinguishedUser,omitempty"`
	ExternalUserIdentity *string                `xml:"ExternalUserIdentity,omitempty" json:"ExternalUserIdentity,omitempty" yaml:"ExternalUserIdentity,omitempty"`
}

// UserLocatorType was auto-generated from WSDL.
type UserLocatorType struct {
	ExternalDirectoryObjectId *string `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty" yaml:"ExternalDirectoryObjectId,omitempty"`
	LegacyDn                  *string `xml:"LegacyDn,omitempty" json:"LegacyDn,omitempty" yaml:"LegacyDn,omitempty"`
	EmailAddress              *string `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	DisplayName               *string `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	OrganizationId            *string `xml:"OrganizationId,omitempty" json:"OrganizationId,omitempty" yaml:"OrganizationId,omitempty"`
	TypeAttrXSI               string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UserLocatorType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UserLocatorType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// User Mailbox.
type UserMailboxType struct {
	Id        string `xml:"Id,attr,omitempty" json:"Id,attr,omitempty" yaml:"Id,attr,omitempty"`
	IsArchive bool   `xml:"IsArchive,attr,omitempty" json:"IsArchive,attr,omitempty" yaml:"IsArchive,attr,omitempty"`
}

// UserOofSettings was auto-generated from WSDL.
type UserOofSettings struct {
	OofState                         OofState            `xml:"OofState" json:"OofState" yaml:"OofState"`
	ExternalAudience                 ExternalAudience    `xml:"ExternalAudience" json:"ExternalAudience" yaml:"ExternalAudience"`
	Duration                         *Duration           `xml:"Duration,omitempty" json:"Duration,omitempty" yaml:"Duration,omitempty"`
	InternalReply                    *ReplyBody          `xml:"InternalReply,omitempty" json:"InternalReply,omitempty" yaml:"InternalReply,omitempty"`
	ExternalReply                    *ReplyBody          `xml:"ExternalReply,omitempty" json:"ExternalReply,omitempty" yaml:"ExternalReply,omitempty"`
	DeclineMeetingReply              *ReplyBody          `xml:"DeclineMeetingReply,omitempty" json:"DeclineMeetingReply,omitempty" yaml:"DeclineMeetingReply,omitempty"`
	DeclineEventsForScheduledOOF     *bool               `xml:"DeclineEventsForScheduledOOF,omitempty" json:"DeclineEventsForScheduledOOF,omitempty" yaml:"DeclineEventsForScheduledOOF,omitempty"`
	DeclineAllEventsForScheduledOOF  *bool               `xml:"DeclineAllEventsForScheduledOOF,omitempty" json:"DeclineAllEventsForScheduledOOF,omitempty" yaml:"DeclineAllEventsForScheduledOOF,omitempty"`
	CreateOOFEvent                   *bool               `xml:"CreateOOFEvent,omitempty" json:"CreateOOFEvent,omitempty" yaml:"CreateOOFEvent,omitempty"`
	OOFEventSubject                  *string             `xml:"OOFEventSubject,omitempty" json:"OOFEventSubject,omitempty" yaml:"OOFEventSubject,omitempty"`
	AutoDeclineFutureRequestsWhenOOF *bool               `xml:"AutoDeclineFutureRequestsWhenOOF,omitempty" json:"AutoDeclineFutureRequestsWhenOOF,omitempty" yaml:"AutoDeclineFutureRequestsWhenOOF,omitempty"`
	OOFEventID                       *string             `xml:"OOFEventID,omitempty" json:"OOFEventID,omitempty" yaml:"OOFEventID,omitempty"`
	EventsToDeleteIDs                *ArrayOfEventIDType `xml:"EventsToDeleteIDs,omitempty" json:"EventsToDeleteIDs,omitempty" yaml:"EventsToDeleteIDs,omitempty"`
}

// UserProfilePicture was auto-generated from WSDL.
type UserProfilePicture struct {
	InsightSource   *string `xml:"InsightSource,omitempty" json:"InsightSource,omitempty" yaml:"InsightSource,omitempty"`
	UpdatedUtcTicks *int64  `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty" yaml:"UpdatedUtcTicks,omitempty"`
	Blob            *string `xml:"Blob,omitempty" json:"Blob,omitempty" yaml:"Blob,omitempty"`
	PhotoSize       *string `xml:"PhotoSize,omitempty" json:"PhotoSize,omitempty" yaml:"PhotoSize,omitempty"`
	Url             *string `xml:"Url,omitempty" json:"Url,omitempty" yaml:"Url,omitempty"`
	ImageType       *string `xml:"ImageType,omitempty" json:"ImageType,omitempty" yaml:"ImageType,omitempty"`
	TypeAttrXSI     string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace   string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UserProfilePicture) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UserProfilePicture"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Value was auto-generated from WSDL.
type Value struct {
	Content *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Name    string  `xml:"Name,attr,omitempty" json:"Name,attr,omitempty" yaml:"Name,attr,omitempty"`
}

// VotingInformationType was auto-generated from WSDL.
type VotingInformationType struct {
	UserOptions    *ArrayOfVotingOptionDataType `xml:"UserOptions,omitempty" json:"UserOptions,omitempty" yaml:"UserOptions,omitempty"`
	VotingResponse *string                      `xml:"VotingResponse,omitempty" json:"VotingResponse,omitempty" yaml:"VotingResponse,omitempty"`
}

// VotingOptionDataType was auto-generated from WSDL.
type VotingOptionDataType struct {
	DisplayName *string         `xml:"DisplayName,omitempty" json:"DisplayName,omitempty" yaml:"DisplayName,omitempty"`
	SendPrompt  *SendPromptType `xml:"SendPrompt,omitempty" json:"SendPrompt,omitempty" yaml:"SendPrompt,omitempty"`
}

// WeeklyRecurrencePatternType was auto-generated from WSDL.
type WeeklyRecurrencePatternType struct {
	Interval       *int            `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	DaysOfWeek     *DaysOfWeekType `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty" yaml:"DaysOfWeek,omitempty"`
	FirstDayOfWeek *DayOfWeekType  `xml:"FirstDayOfWeek,omitempty" json:"FirstDayOfWeek,omitempty" yaml:"FirstDayOfWeek,omitempty"`
	TypeAttrXSI    string          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *WeeklyRecurrencePatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:WeeklyRecurrencePatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// WeeklyRegeneratingPatternType was auto-generated from WSDL.
type WeeklyRegeneratingPatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *WeeklyRegeneratingPatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:WeeklyRegeneratingPatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// WellKnownResponseObjectType was auto-generated from WSDL.
type WellKnownResponseObjectType struct {
}

// WorkHoursType was auto-generated from WSDL.
type WorkHoursType struct {
	WorkDay   *SystemDayOfWeek     `xml:"WorkDay,omitempty" json:"WorkDay,omitempty" yaml:"WorkDay,omitempty"`
	TimeSlots *ArrayOfWorkTimeSlot `xml:"TimeSlots,omitempty" json:"TimeSlots,omitempty" yaml:"TimeSlots,omitempty"`
}

// WorkTimeSlot was auto-generated from WSDL.
type WorkTimeSlot struct {
	StartTimeInMinutes int `xml:"StartTimeInMinutes" json:"StartTimeInMinutes" yaml:"StartTimeInMinutes"`
	EndTimeInMinutes   int `xml:"EndTimeInMinutes" json:"EndTimeInMinutes" yaml:"EndTimeInMinutes"`
}

// WorkingHours was auto-generated from WSDL.
type WorkingHours struct {
	TimeZone           *SerializableTimeZone `xml:"TimeZone" json:"TimeZone" yaml:"TimeZone"`
	WorkingPeriodArray *ArrayOfWorkingPeriod `xml:"WorkingPeriodArray" json:"WorkingPeriodArray" yaml:"WorkingPeriodArray"`
}

// WorkingPeriod was auto-generated from WSDL.
type WorkingPeriod struct {
	DayOfWeek          DaysOfWeekType `xml:"DayOfWeek" json:"DayOfWeek" yaml:"DayOfWeek"`
	StartTimeInMinutes int            `xml:"StartTimeInMinutes" json:"StartTimeInMinutes" yaml:"StartTimeInMinutes"`
	EndTimeInMinutes   int            `xml:"EndTimeInMinutes" json:"EndTimeInMinutes" yaml:"EndTimeInMinutes"`
}

// YearlyRegeneratingPatternType was auto-generated from WSDL.
type YearlyRegeneratingPatternType struct {
	Interval      *int   `xml:"Interval,omitempty" json:"Interval,omitempty" yaml:"Interval,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *YearlyRegeneratingPatternType) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:YearlyRegeneratingPatternType"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://schemas.microsoft.com/exchange/services/2006/types"
	}
}

// Operation wrapper for AddDelegate.
// OperationAddDelegateSoapIn was auto-generated from WSDL.
type OperationAddDelegateSoapIn struct {
	AddDelegate           *AddDelegate           `xml:"AddDelegate,omitempty" json:"AddDelegate,omitempty" yaml:"AddDelegate,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddDelegate.
// OperationAddDelegateSoapOut was auto-generated from WSDL.
type OperationAddDelegateSoapOut struct {
	AddDelegateResponse *AddDelegateResponse `xml:"AddDelegateResponse,omitempty" json:"AddDelegateResponse,omitempty" yaml:"AddDelegateResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddDistributionGroupToImList.
// OperationAddDistributionGroupToImListSoapIn was auto-generated
// from WSDL.
type OperationAddDistributionGroupToImListSoapIn struct {
	AddDistributionGroupToImList *AddDistributionGroupToImList `xml:"AddDistributionGroupToImList,omitempty" json:"AddDistributionGroupToImList,omitempty" yaml:"AddDistributionGroupToImList,omitempty"`
	ExchangeImpersonation        *ExchangeImpersonation        `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture               *MailboxCulture               `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddDistributionGroupToImList.
// OperationAddDistributionGroupToImListSoapOut was auto-generated
// from WSDL.
type OperationAddDistributionGroupToImListSoapOut struct {
	AddDistributionGroupToImListResponse *AddDistributionGroupToImListResponse `xml:"AddDistributionGroupToImListResponse,omitempty" json:"AddDistributionGroupToImListResponse,omitempty" yaml:"AddDistributionGroupToImListResponse,omitempty"`
	ServerVersionInfo                    *ServerVersionInfo                    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddImContactToGroup.
// OperationAddImContactToGroupSoapIn was auto-generated from WSDL.
type OperationAddImContactToGroupSoapIn struct {
	AddImContactToGroup   *AddImContactToGroup   `xml:"AddImContactToGroup,omitempty" json:"AddImContactToGroup,omitempty" yaml:"AddImContactToGroup,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddImContactToGroup.
// OperationAddImContactToGroupSoapOut was auto-generated from
// WSDL.
type OperationAddImContactToGroupSoapOut struct {
	AddImContactToGroupResponse *AddImContactToGroupResponse `xml:"AddImContactToGroupResponse,omitempty" json:"AddImContactToGroupResponse,omitempty" yaml:"AddImContactToGroupResponse,omitempty"`
	ServerVersionInfo           *ServerVersionInfo           `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddImGroup.
// OperationAddImGroupSoapIn was auto-generated from WSDL.
type OperationAddImGroupSoapIn struct {
	AddImGroup            *AddImGroup            `xml:"AddImGroup,omitempty" json:"AddImGroup,omitempty" yaml:"AddImGroup,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddImGroup.
// OperationAddImGroupSoapOut was auto-generated from WSDL.
type OperationAddImGroupSoapOut struct {
	AddImGroupResponse *AddImGroupResponse `xml:"AddImGroupResponse,omitempty" json:"AddImGroupResponse,omitempty" yaml:"AddImGroupResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddNewImContactToGroup.
// OperationAddNewImContactToGroupSoapIn was auto-generated from
// WSDL.
type OperationAddNewImContactToGroupSoapIn struct {
	AddNewImContactToGroup *AddNewImContactToGroup `xml:"AddNewImContactToGroup,omitempty" json:"AddNewImContactToGroup,omitempty" yaml:"AddNewImContactToGroup,omitempty"`
	ExchangeImpersonation  *ExchangeImpersonation  `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture         *MailboxCulture         `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion   *RequestServerVersion   `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddNewImContactToGroup.
// OperationAddNewImContactToGroupSoapOut was auto-generated from
// WSDL.
type OperationAddNewImContactToGroupSoapOut struct {
	AddNewImContactToGroupResponse *AddNewImContactToGroupResponse `xml:"AddNewImContactToGroupResponse,omitempty" json:"AddNewImContactToGroupResponse,omitempty" yaml:"AddNewImContactToGroupResponse,omitempty"`
	ServerVersionInfo              *ServerVersionInfo              `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddNewTelUriContactToGroup.
// OperationAddNewTelUriContactToGroupSoapIn was auto-generated
// from WSDL.
type OperationAddNewTelUriContactToGroupSoapIn struct {
	AddNewTelUriContactToGroup *AddNewTelUriContactToGroup `xml:"AddNewTelUriContactToGroup,omitempty" json:"AddNewTelUriContactToGroup,omitempty" yaml:"AddNewTelUriContactToGroup,omitempty"`
	ExchangeImpersonation      *ExchangeImpersonation      `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture             *MailboxCulture             `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion       *RequestServerVersion       `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddNewTelUriContactToGroup.
// OperationAddNewTelUriContactToGroupSoapOut was auto-generated
// from WSDL.
type OperationAddNewTelUriContactToGroupSoapOut struct {
	AddNewTelUriContactToGroupResponse *AddNewTelUriContactToGroupResponse `xml:"AddNewTelUriContactToGroupResponse,omitempty" json:"AddNewTelUriContactToGroupResponse,omitempty" yaml:"AddNewTelUriContactToGroupResponse,omitempty"`
	ServerVersionInfo                  *ServerVersionInfo                  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for AddTag.
// OperationAddTagSoapIn was auto-generated from WSDL.
type OperationAddTagSoapIn struct {
	AddTag                *AddTag                `xml:"AddTag,omitempty" json:"AddTag,omitempty" yaml:"AddTag,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for AddTag.
// OperationAddTagSoapOut was auto-generated from WSDL.
type OperationAddTagSoapOut struct {
	AddTagResponse    *AddTagResponse    `xml:"AddTagResponse,omitempty" json:"AddTagResponse,omitempty" yaml:"AddTagResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ApplyConversationAction.
// OperationApplyConversationActionSoapIn was auto-generated from
// WSDL.
type OperationApplyConversationActionSoapIn struct {
	ApplyConversationAction *ApplyConversationAction `xml:"ApplyConversationAction,omitempty" json:"ApplyConversationAction,omitempty" yaml:"ApplyConversationAction,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ApplyConversationAction.
// OperationApplyConversationActionSoapOut was auto-generated from
// WSDL.
type OperationApplyConversationActionSoapOut struct {
	ApplyConversationActionResponse *ApplyConversationActionResponse `xml:"ApplyConversationActionResponse,omitempty" json:"ApplyConversationActionResponse,omitempty" yaml:"ApplyConversationActionResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ArchiveItem.
// OperationArchiveItemSoapIn was auto-generated from WSDL.
type OperationArchiveItemSoapIn struct {
	ArchiveItem           *ArchiveItem           `xml:"ArchiveItem,omitempty" json:"ArchiveItem,omitempty" yaml:"ArchiveItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ArchiveItem.
// OperationArchiveItemSoapOut was auto-generated from WSDL.
type OperationArchiveItemSoapOut struct {
	ArchiveItemResponse *ArchiveItemResponse `xml:"ArchiveItemResponse,omitempty" json:"ArchiveItemResponse,omitempty" yaml:"ArchiveItemResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ConvertId.
// OperationConvertIdSoapIn was auto-generated from WSDL.
type OperationConvertIdSoapIn struct {
	ConvertId             *ConvertId             `xml:"ConvertId,omitempty" json:"ConvertId,omitempty" yaml:"ConvertId,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ConvertId.
// OperationConvertIdSoapOut was auto-generated from WSDL.
type OperationConvertIdSoapOut struct {
	ConvertIdResponse *ConvertIdResponse `xml:"ConvertIdResponse,omitempty" json:"ConvertIdResponse,omitempty" yaml:"ConvertIdResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CopyFolder.
// OperationCopyFolderSoapIn was auto-generated from WSDL.
type OperationCopyFolderSoapIn struct {
	CopyFolder            *CopyFolder            `xml:"CopyFolder,omitempty" json:"CopyFolder,omitempty" yaml:"CopyFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for CopyFolder.
// OperationCopyFolderSoapOut was auto-generated from WSDL.
type OperationCopyFolderSoapOut struct {
	CopyFolderResponse *CopyFolderResponse `xml:"CopyFolderResponse,omitempty" json:"CopyFolderResponse,omitempty" yaml:"CopyFolderResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CopyItem.
// OperationCopyItemSoapIn was auto-generated from WSDL.
type OperationCopyItemSoapIn struct {
	CopyItem              *CopyItem              `xml:"CopyItem,omitempty" json:"CopyItem,omitempty" yaml:"CopyItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for CopyItem.
// OperationCopyItemSoapOut was auto-generated from WSDL.
type OperationCopyItemSoapOut struct {
	CopyItemResponse  *CopyItemResponse  `xml:"CopyItemResponse,omitempty" json:"CopyItemResponse,omitempty" yaml:"CopyItemResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateAttachment.
// OperationCreateAttachmentSoapIn was auto-generated from WSDL.
type OperationCreateAttachmentSoapIn struct {
	CreateAttachment      *CreateAttachment      `xml:"CreateAttachment,omitempty" json:"CreateAttachment,omitempty" yaml:"CreateAttachment,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for CreateAttachment.
// OperationCreateAttachmentSoapOut was auto-generated from WSDL.
type OperationCreateAttachmentSoapOut struct {
	CreateAttachmentResponse *CreateAttachmentResponse `xml:"CreateAttachmentResponse,omitempty" json:"CreateAttachmentResponse,omitempty" yaml:"CreateAttachmentResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateFolder.
// OperationCreateFolderSoapIn was auto-generated from WSDL.
type OperationCreateFolderSoapIn struct {
	CreateFolder          *CreateFolder          `xml:"CreateFolder,omitempty" json:"CreateFolder,omitempty" yaml:"CreateFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for CreateFolder.
// OperationCreateFolderSoapOut was auto-generated from WSDL.
type OperationCreateFolderSoapOut struct {
	CreateFolderResponse *CreateFolderResponse `xml:"CreateFolderResponse,omitempty" json:"CreateFolderResponse,omitempty" yaml:"CreateFolderResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateFolderPath.
// OperationCreateFolderPathSoapIn was auto-generated from WSDL.
type OperationCreateFolderPathSoapIn struct {
	CreateFolderPath      *CreateFolderPath      `xml:"CreateFolderPath,omitempty" json:"CreateFolderPath,omitempty" yaml:"CreateFolderPath,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for CreateFolderPath.
// OperationCreateFolderPathSoapOut was auto-generated from WSDL.
type OperationCreateFolderPathSoapOut struct {
	CreateFolderPathResponse *CreateFolderPathResponse `xml:"CreateFolderPathResponse,omitempty" json:"CreateFolderPathResponse,omitempty" yaml:"CreateFolderPathResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateItem.
// OperationCreateItemSoapIn was auto-generated from WSDL.
type OperationCreateItemSoapIn struct {
	CreateItem            *CreateItem            `xml:"CreateItem,omitempty" json:"CreateItem,omitempty" yaml:"CreateItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for CreateItem.
// OperationCreateItemSoapOut was auto-generated from WSDL.
type OperationCreateItemSoapOut struct {
	CreateItemResponse *CreateItemResponse `xml:"CreateItemResponse,omitempty" json:"CreateItemResponse,omitempty" yaml:"CreateItemResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateManagedFolder.
// OperationCreateManagedFolderSoapIn was auto-generated from WSDL.
type OperationCreateManagedFolderSoapIn struct {
	CreateManagedFolder   *CreateManagedFolder   `xml:"CreateManagedFolder,omitempty" json:"CreateManagedFolder,omitempty" yaml:"CreateManagedFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for CreateManagedFolder.
// OperationCreateManagedFolderSoapOut was auto-generated from
// WSDL.
type OperationCreateManagedFolderSoapOut struct {
	CreateManagedFolderResponse *CreateManagedFolderResponse `xml:"CreateManagedFolderResponse,omitempty" json:"CreateManagedFolderResponse,omitempty" yaml:"CreateManagedFolderResponse,omitempty"`
	ServerVersionInfo           *ServerVersionInfo           `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateMeetingInstance.
// OperationCreateMeetingInstanceSoapIn was auto-generated from
// WSDL.
type OperationCreateMeetingInstanceSoapIn struct {
	CreateMeetingInstanceRequest *CreateMeetingInstanceRequest `xml:"CreateMeetingInstanceRequest,omitempty" json:"CreateMeetingInstanceRequest,omitempty" yaml:"CreateMeetingInstanceRequest,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole               *ManagementRole               `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for CreateMeetingInstance.
// OperationCreateMeetingInstanceSoapOut was auto-generated from
// WSDL.
type OperationCreateMeetingInstanceSoapOut struct {
	CreateMeetingInstanceResponse *CreateMeetingInstanceResponse `xml:"CreateMeetingInstanceResponse,omitempty" json:"CreateMeetingInstanceResponse,omitempty" yaml:"CreateMeetingInstanceResponse,omitempty"`
	ServerVersionInfo             *ServerVersionInfo             `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateMeetingSpace.
// OperationCreateMeetingSpaceSoapIn was auto-generated from WSDL.
type OperationCreateMeetingSpaceSoapIn struct {
	CreateMeetingSpace   *CreateMeetingSpace   `xml:"CreateMeetingSpace,omitempty" json:"CreateMeetingSpace,omitempty" yaml:"CreateMeetingSpace,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for CreateMeetingSpace.
// OperationCreateMeetingSpaceSoapOut was auto-generated from WSDL.
type OperationCreateMeetingSpaceSoapOut struct {
	CreateMeetingSpaceResponseMessage *CreateMeetingSpaceResponseMessage `xml:"CreateMeetingSpaceResponseMessage,omitempty" json:"CreateMeetingSpaceResponseMessage,omitempty" yaml:"CreateMeetingSpaceResponseMessage,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for CreateUserConfiguration.
// OperationCreateUserConfigurationSoapIn was auto-generated from
// WSDL.
type OperationCreateUserConfigurationSoapIn struct {
	CreateUserConfiguration *CreateUserConfiguration `xml:"CreateUserConfiguration,omitempty" json:"CreateUserConfiguration,omitempty" yaml:"CreateUserConfiguration,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for CreateUserConfiguration.
// OperationCreateUserConfigurationSoapOut was auto-generated from
// WSDL.
type OperationCreateUserConfigurationSoapOut struct {
	CreateUserConfigurationResponse *CreateUserConfigurationResponse `xml:"CreateUserConfigurationResponse,omitempty" json:"CreateUserConfigurationResponse,omitempty" yaml:"CreateUserConfigurationResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteAttachment.
// OperationDeleteAttachmentSoapIn was auto-generated from WSDL.
type OperationDeleteAttachmentSoapIn struct {
	DeleteAttachment      *DeleteAttachment      `xml:"DeleteAttachment,omitempty" json:"DeleteAttachment,omitempty" yaml:"DeleteAttachment,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DeleteAttachment.
// OperationDeleteAttachmentSoapOut was auto-generated from WSDL.
type OperationDeleteAttachmentSoapOut struct {
	DeleteAttachmentResponse *DeleteAttachmentResponse `xml:"DeleteAttachmentResponse,omitempty" json:"DeleteAttachmentResponse,omitempty" yaml:"DeleteAttachmentResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteFolder.
// OperationDeleteFolderSoapIn was auto-generated from WSDL.
type OperationDeleteFolderSoapIn struct {
	DeleteFolder          *DeleteFolder          `xml:"DeleteFolder,omitempty" json:"DeleteFolder,omitempty" yaml:"DeleteFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DeleteFolder.
// OperationDeleteFolderSoapOut was auto-generated from WSDL.
type OperationDeleteFolderSoapOut struct {
	DeleteFolderResponse *DeleteFolderResponse `xml:"DeleteFolderResponse,omitempty" json:"DeleteFolderResponse,omitempty" yaml:"DeleteFolderResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteItem.
// OperationDeleteItemSoapIn was auto-generated from WSDL.
type OperationDeleteItemSoapIn struct {
	DeleteItem            *DeleteItem            `xml:"DeleteItem,omitempty" json:"DeleteItem,omitempty" yaml:"DeleteItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DeleteItem.
// OperationDeleteItemSoapOut was auto-generated from WSDL.
type OperationDeleteItemSoapOut struct {
	DeleteItemResponse *DeleteItemResponse `xml:"DeleteItemResponse,omitempty" json:"DeleteItemResponse,omitempty" yaml:"DeleteItemResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteMeetingInstance.
// OperationDeleteMeetingInstanceSoapIn was auto-generated from
// WSDL.
type OperationDeleteMeetingInstanceSoapIn struct {
	DeleteMeetingInstanceRequest *DeleteMeetingInstanceRequest `xml:"DeleteMeetingInstanceRequest,omitempty" json:"DeleteMeetingInstanceRequest,omitempty" yaml:"DeleteMeetingInstanceRequest,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole               *ManagementRole               `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for DeleteMeetingInstance.
// OperationDeleteMeetingInstanceSoapOut was auto-generated from
// WSDL.
type OperationDeleteMeetingInstanceSoapOut struct {
	DeleteMeetingInstanceResponse *DeleteMeetingInstanceResponse `xml:"DeleteMeetingInstanceResponse,omitempty" json:"DeleteMeetingInstanceResponse,omitempty" yaml:"DeleteMeetingInstanceResponse,omitempty"`
	ServerVersionInfo             *ServerVersionInfo             `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteMeetingSpace.
// OperationDeleteMeetingSpaceSoapIn was auto-generated from WSDL.
type OperationDeleteMeetingSpaceSoapIn struct {
	DeleteMeetingSpace   *DeleteMeetingSpace   `xml:"DeleteMeetingSpace,omitempty" json:"DeleteMeetingSpace,omitempty" yaml:"DeleteMeetingSpace,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for DeleteMeetingSpace.
// OperationDeleteMeetingSpaceSoapOut was auto-generated from WSDL.
type OperationDeleteMeetingSpaceSoapOut struct {
	DeleteMeetingSpaceResponseMessage *DeleteMeetingSpaceResponseMessage `xml:"DeleteMeetingSpaceResponseMessage,omitempty" json:"DeleteMeetingSpaceResponseMessage,omitempty" yaml:"DeleteMeetingSpaceResponseMessage,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteSearchSuggestion.
// OperationDeleteSearchSuggestionSoapIn was auto-generated from
// WSDL.
type OperationDeleteSearchSuggestionSoapIn struct {
	DeleteSearchSuggestion *DeleteSearchSuggestion `xml:"DeleteSearchSuggestion,omitempty" json:"DeleteSearchSuggestion,omitempty" yaml:"DeleteSearchSuggestion,omitempty"`
	MailboxCulture         *MailboxCulture         `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion   *RequestServerVersion   `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DeleteSearchSuggestion.
// OperationDeleteSearchSuggestionSoapOut was auto-generated from
// WSDL.
type OperationDeleteSearchSuggestionSoapOut struct {
	DeleteSearchSuggestionResponse *DeleteSearchSuggestionResponse `xml:"DeleteSearchSuggestionResponse,omitempty" json:"DeleteSearchSuggestionResponse,omitempty" yaml:"DeleteSearchSuggestionResponse,omitempty"`
	ServerVersionInfo              *ServerVersionInfo              `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DeleteUserConfiguration.
// OperationDeleteUserConfigurationSoapIn was auto-generated from
// WSDL.
type OperationDeleteUserConfigurationSoapIn struct {
	DeleteUserConfiguration *DeleteUserConfiguration `xml:"DeleteUserConfiguration,omitempty" json:"DeleteUserConfiguration,omitempty" yaml:"DeleteUserConfiguration,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DeleteUserConfiguration.
// OperationDeleteUserConfigurationSoapOut was auto-generated from
// WSDL.
type OperationDeleteUserConfigurationSoapOut struct {
	DeleteUserConfigurationResponse *DeleteUserConfigurationResponse `xml:"DeleteUserConfigurationResponse,omitempty" json:"DeleteUserConfigurationResponse,omitempty" yaml:"DeleteUserConfigurationResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DisableApp.
// OperationDisableAppSoapIn was auto-generated from WSDL.
type OperationDisableAppSoapIn struct {
	DisableApp            *DisableApp            `xml:"DisableApp,omitempty" json:"DisableApp,omitempty" yaml:"DisableApp,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DisableApp.
// OperationDisableAppSoapOut was auto-generated from WSDL.
type OperationDisableAppSoapOut struct {
	DisableAppResponse *DisableAppResponse `xml:"DisableAppResponse,omitempty" json:"DisableAppResponse,omitempty" yaml:"DisableAppResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for DisconnectPhoneCall.
// OperationDisconnectPhoneCallSoapIn was auto-generated from WSDL.
type OperationDisconnectPhoneCallSoapIn struct {
	DisconnectPhoneCall   *DisconnectPhoneCall   `xml:"DisconnectPhoneCall,omitempty" json:"DisconnectPhoneCall,omitempty" yaml:"DisconnectPhoneCall,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for DisconnectPhoneCall.
// OperationDisconnectPhoneCallSoapOut was auto-generated from
// WSDL.
type OperationDisconnectPhoneCallSoapOut struct {
	DisconnectPhoneCallResponse *DisconnectPhoneCallResponse `xml:"DisconnectPhoneCallResponse,omitempty" json:"DisconnectPhoneCallResponse,omitempty" yaml:"DisconnectPhoneCallResponse,omitempty"`
	ServerVersionInfo           *ServerVersionInfo           `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for EmptyFolder.
// OperationEmptyFolderSoapIn was auto-generated from WSDL.
type OperationEmptyFolderSoapIn struct {
	EmptyFolder           *EmptyFolder           `xml:"EmptyFolder,omitempty" json:"EmptyFolder,omitempty" yaml:"EmptyFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for EmptyFolder.
// OperationEmptyFolderSoapOut was auto-generated from WSDL.
type OperationEmptyFolderSoapOut struct {
	EmptyFolderResponse *EmptyFolderResponse `xml:"EmptyFolderResponse,omitempty" json:"EmptyFolderResponse,omitempty" yaml:"EmptyFolderResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for EndSearchSession.
// OperationEndSearchSessionSoapIn was auto-generated from WSDL.
type OperationEndSearchSessionSoapIn struct {
	EndSearchSession     *EndSearchSession     `xml:"EndSearchSession,omitempty" json:"EndSearchSession,omitempty" yaml:"EndSearchSession,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for EndSearchSession.
// OperationEndSearchSessionSoapOut was auto-generated from WSDL.
type OperationEndSearchSessionSoapOut struct {
	EndSearchSessionResponse *EndSearchSessionResponse `xml:"EndSearchSessionResponse,omitempty" json:"EndSearchSessionResponse,omitempty" yaml:"EndSearchSessionResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ExecuteSearch.
// OperationExecuteSearchSoapIn was auto-generated from WSDL.
type OperationExecuteSearchSoapIn struct {
	ExecuteSearch        *ExecuteSearch        `xml:"ExecuteSearch,omitempty" json:"ExecuteSearch,omitempty" yaml:"ExecuteSearch,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ExecuteSearch.
// OperationExecuteSearchSoapOut was auto-generated from WSDL.
type OperationExecuteSearchSoapOut struct {
	ExecuteSearchResponse *ExecuteSearchResponse `xml:"ExecuteSearchResponse,omitempty" json:"ExecuteSearchResponse,omitempty" yaml:"ExecuteSearchResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ExpandDL.
// OperationExpandDLSoapIn was auto-generated from WSDL.
type OperationExpandDLSoapIn struct {
	ExpandDL              *ExpandDL              `xml:"ExpandDL,omitempty" json:"ExpandDL,omitempty" yaml:"ExpandDL,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ExpandDL.
// OperationExpandDLSoapOut was auto-generated from WSDL.
type OperationExpandDLSoapOut struct {
	ExpandDLResponse  *ExpandDLResponse  `xml:"ExpandDLResponse,omitempty" json:"ExpandDLResponse,omitempty" yaml:"ExpandDLResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ExportItems.
// OperationExportItemsSoapIn was auto-generated from WSDL.
type OperationExportItemsSoapIn struct {
	ExportItems           *ExportItems           `xml:"ExportItems,omitempty" json:"ExportItems,omitempty" yaml:"ExportItems,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole        *ManagementRole        `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for ExportItems.
// OperationExportItemsSoapOut was auto-generated from WSDL.
type OperationExportItemsSoapOut struct {
	ExportItemsResponse *ExportItemsResponse `xml:"ExportItemsResponse,omitempty" json:"ExportItemsResponse,omitempty" yaml:"ExportItemsResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindAvailableMeetingTimes.
// OperationFindAvailableMeetingTimesSoapIn was auto-generated
// from WSDL.
type OperationFindAvailableMeetingTimesSoapIn struct {
	FindAvailableMeetingTimes *FindAvailableMeetingTimes `xml:"FindAvailableMeetingTimes,omitempty" json:"FindAvailableMeetingTimes,omitempty" yaml:"FindAvailableMeetingTimes,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for FindAvailableMeetingTimes.
// OperationFindAvailableMeetingTimesSoapOut was auto-generated
// from WSDL.
type OperationFindAvailableMeetingTimesSoapOut struct {
	FindAvailableMeetingTimesResponse *FindAvailableMeetingTimesResponse `xml:"FindAvailableMeetingTimesResponse,omitempty" json:"FindAvailableMeetingTimesResponse,omitempty" yaml:"FindAvailableMeetingTimesResponse,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindConversation.
// OperationFindConversationSoapIn was auto-generated from WSDL.
type OperationFindConversationSoapIn struct {
	FindConversation      *FindConversation      `xml:"FindConversation,omitempty" json:"FindConversation,omitempty" yaml:"FindConversation,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for FindConversation.
// OperationFindConversationSoapOut was auto-generated from WSDL.
type OperationFindConversationSoapOut struct {
	FindConversationResponse *FindConversationResponse `xml:"FindConversationResponse,omitempty" json:"FindConversationResponse,omitempty" yaml:"FindConversationResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindFolder.
// OperationFindFolderSoapIn was auto-generated from WSDL.
type OperationFindFolderSoapIn struct {
	FindFolder            *FindFolder            `xml:"FindFolder,omitempty" json:"FindFolder,omitempty" yaml:"FindFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	ManagementRole        *ManagementRole        `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for FindFolder.
// OperationFindFolderSoapOut was auto-generated from WSDL.
type OperationFindFolderSoapOut struct {
	FindFolderResponse *FindFolderResponse `xml:"FindFolderResponse,omitempty" json:"FindFolderResponse,omitempty" yaml:"FindFolderResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindItem.
// OperationFindItemSoapIn was auto-generated from WSDL.
type OperationFindItemSoapIn struct {
	FindItem              *FindItem              `xml:"FindItem,omitempty" json:"FindItem,omitempty" yaml:"FindItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	DateTimePrecision     *DateTimePrecision     `xml:"DateTimePrecision,omitempty" json:"DateTimePrecision,omitempty" yaml:"DateTimePrecision,omitempty"`
	ManagementRole        *ManagementRole        `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for FindItem.
// OperationFindItemSoapOut was auto-generated from WSDL.
type OperationFindItemSoapOut struct {
	FindItemResponse  *FindItemResponse  `xml:"FindItemResponse,omitempty" json:"FindItemResponse,omitempty" yaml:"FindItemResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindMeetingSpaceByJoinUrl.
// OperationFindMeetingSpaceByJoinUrlSoapIn was auto-generated
// from WSDL.
type OperationFindMeetingSpaceByJoinUrlSoapIn struct {
	FindMeetingSpaceByJoinUrl *FindMeetingSpaceByJoinUrl `xml:"FindMeetingSpaceByJoinUrl,omitempty" json:"FindMeetingSpaceByJoinUrl,omitempty" yaml:"FindMeetingSpaceByJoinUrl,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole            *ManagementRole            `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for FindMeetingSpaceByJoinUrl.
// OperationFindMeetingSpaceByJoinUrlSoapOut was auto-generated
// from WSDL.
type OperationFindMeetingSpaceByJoinUrlSoapOut struct {
	FindMeetingSpaceByJoinUrlResponseMessage *FindMeetingSpaceByJoinUrlResponseMessage `xml:"FindMeetingSpaceByJoinUrlResponseMessage,omitempty" json:"FindMeetingSpaceByJoinUrlResponseMessage,omitempty" yaml:"FindMeetingSpaceByJoinUrlResponseMessage,omitempty"`
	ServerVersionInfo                        *ServerVersionInfo                        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindMeetingTimeCandidates.
// OperationFindMeetingTimeCandidatesSoapIn was auto-generated
// from WSDL.
type OperationFindMeetingTimeCandidatesSoapIn struct {
	FindMeetingTimeCandidates *FindMeetingTimeCandidates `xml:"FindMeetingTimeCandidates,omitempty" json:"FindMeetingTimeCandidates,omitempty" yaml:"FindMeetingTimeCandidates,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext           *TimeZoneContext           `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for FindMeetingTimeCandidates.
// OperationFindMeetingTimeCandidatesSoapOut was auto-generated
// from WSDL.
type OperationFindMeetingTimeCandidatesSoapOut struct {
	FindMeetingTimeCandidatesResponse *FindMeetingTimeCandidatesResponse `xml:"FindMeetingTimeCandidatesResponse,omitempty" json:"FindMeetingTimeCandidatesResponse,omitempty" yaml:"FindMeetingTimeCandidatesResponse,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindMessageTrackingReport.
// OperationFindMessageTrackingReportSoapIn was auto-generated
// from WSDL.
type OperationFindMessageTrackingReportSoapIn struct {
	FindMessageTrackingReport *FindMessageTrackingReport `xml:"FindMessageTrackingReport,omitempty" json:"FindMessageTrackingReport,omitempty" yaml:"FindMessageTrackingReport,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for FindMessageTrackingReport.
// OperationFindMessageTrackingReportSoapOut was auto-generated
// from WSDL.
type OperationFindMessageTrackingReportSoapOut struct {
	FindMessageTrackingReportResponse *FindMessageTrackingReportResponse `xml:"FindMessageTrackingReportResponse,omitempty" json:"FindMessageTrackingReportResponse,omitempty" yaml:"FindMessageTrackingReportResponse,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindPeople.
// OperationFindPeopleSoapIn was auto-generated from WSDL.
type OperationFindPeopleSoapIn struct {
	FindPeople            *FindPeople            `xml:"FindPeople,omitempty" json:"FindPeople,omitempty" yaml:"FindPeople,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for FindPeople.
// OperationFindPeopleSoapOut was auto-generated from WSDL.
type OperationFindPeopleSoapOut struct {
	FindPeopleResponse *FindPeopleResponse `xml:"FindPeopleResponse,omitempty" json:"FindPeopleResponse,omitempty" yaml:"FindPeopleResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for FindTags.
// OperationFindTagsSoapIn was auto-generated from WSDL.
type OperationFindTagsSoapIn struct {
	FindTags              *FindTags              `xml:"FindTags,omitempty" json:"FindTags,omitempty" yaml:"FindTags,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for FindTags.
// OperationFindTagsSoapOut was auto-generated from WSDL.
type OperationFindTagsSoapOut struct {
	FindTagsResponse  *FindTagsResponse  `xml:"FindTagsResponse,omitempty" json:"FindTagsResponse,omitempty" yaml:"FindTagsResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetAppManifests.
// OperationGetAppManifestsSoapIn was auto-generated from WSDL.
type OperationGetAppManifestsSoapIn struct {
	GetAppManifests      *GetAppManifests      `xml:"GetAppManifests,omitempty" json:"GetAppManifests,omitempty" yaml:"GetAppManifests,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetAppManifests.
// OperationGetAppManifestsSoapOut was auto-generated from WSDL.
type OperationGetAppManifestsSoapOut struct {
	GetAppManifestsResponse *GetAppManifestsResponse `xml:"GetAppManifestsResponse,omitempty" json:"GetAppManifestsResponse,omitempty" yaml:"GetAppManifestsResponse,omitempty"`
	ServerVersionInfo       *ServerVersionInfo       `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetAppMarketplaceUrl.
// OperationGetAppMarketplaceUrlSoapIn was auto-generated from
// WSDL.
type OperationGetAppMarketplaceUrlSoapIn struct {
	GetAppMarketplaceUrl *GetAppMarketplaceUrl `xml:"GetAppMarketplaceUrl,omitempty" json:"GetAppMarketplaceUrl,omitempty" yaml:"GetAppMarketplaceUrl,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetAppMarketplaceUrl.
// OperationGetAppMarketplaceUrlSoapOut was auto-generated from
// WSDL.
type OperationGetAppMarketplaceUrlSoapOut struct {
	GetAppMarketplaceUrlResponse *GetAppMarketplaceUrlResponse `xml:"GetAppMarketplaceUrlResponse,omitempty" json:"GetAppMarketplaceUrlResponse,omitempty" yaml:"GetAppMarketplaceUrlResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetAttachment.
// OperationGetAttachmentSoapIn was auto-generated from WSDL.
type OperationGetAttachmentSoapIn struct {
	GetAttachment         *GetAttachment         `xml:"GetAttachment,omitempty" json:"GetAttachment,omitempty" yaml:"GetAttachment,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for GetAttachment.
// OperationGetAttachmentSoapOut was auto-generated from WSDL.
type OperationGetAttachmentSoapOut struct {
	GetAttachmentResponse *GetAttachmentResponse `xml:"GetAttachmentResponse,omitempty" json:"GetAttachmentResponse,omitempty" yaml:"GetAttachmentResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetClientAccessToken.
// OperationGetClientAccessTokenSoapIn was auto-generated from
// WSDL.
type OperationGetClientAccessTokenSoapIn struct {
	GetClientAccessToken *GetClientAccessToken `xml:"GetClientAccessToken,omitempty" json:"GetClientAccessToken,omitempty" yaml:"GetClientAccessToken,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetClientAccessToken.
// OperationGetClientAccessTokenSoapOut was auto-generated from
// WSDL.
type OperationGetClientAccessTokenSoapOut struct {
	GetClientAccessTokenResponse *GetClientAccessTokenResponse `xml:"GetClientAccessTokenResponse,omitempty" json:"GetClientAccessTokenResponse,omitempty" yaml:"GetClientAccessTokenResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetConversationItems.
// OperationGetConversationItemsSoapIn was auto-generated from
// WSDL.
type OperationGetConversationItemsSoapIn struct {
	GetConversationItems  *GetConversationItems  `xml:"GetConversationItems,omitempty" json:"GetConversationItems,omitempty" yaml:"GetConversationItems,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetConversationItems.
// OperationGetConversationItemsSoapOut was auto-generated from
// WSDL.
type OperationGetConversationItemsSoapOut struct {
	GetConversationItemsResponse *GetConversationItemsResponse `xml:"GetConversationItemsResponse,omitempty" json:"GetConversationItemsResponse,omitempty" yaml:"GetConversationItemsResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetDelegate.
// OperationGetDelegateSoapIn was auto-generated from WSDL.
type OperationGetDelegateSoapIn struct {
	GetDelegate           *GetDelegate           `xml:"GetDelegate,omitempty" json:"GetDelegate,omitempty" yaml:"GetDelegate,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetDelegate.
// OperationGetDelegateSoapOut was auto-generated from WSDL.
type OperationGetDelegateSoapOut struct {
	GetDelegateResponse *GetDelegateResponse `xml:"GetDelegateResponse,omitempty" json:"GetDelegateResponse,omitempty" yaml:"GetDelegateResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetDiscoverySearchConfiguration.
// OperationGetDiscoverySearchConfigurationSoapIn was auto-generated
// from WSDL.
type OperationGetDiscoverySearchConfigurationSoapIn struct {
	GetDiscoverySearchConfiguration *GetDiscoverySearchConfiguration `xml:"GetDiscoverySearchConfiguration,omitempty" json:"GetDiscoverySearchConfiguration,omitempty" yaml:"GetDiscoverySearchConfiguration,omitempty"`
	RequestServerVersion            *RequestServerVersion            `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole                  *ManagementRole                  `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetDiscoverySearchConfiguration.
// OperationGetDiscoverySearchConfigurationSoapOut was auto-generated
// from WSDL.
type OperationGetDiscoverySearchConfigurationSoapOut struct {
	GetDiscoverySearchConfigurationResponse *GetDiscoverySearchConfigurationResponse `xml:"GetDiscoverySearchConfigurationResponse,omitempty" json:"GetDiscoverySearchConfigurationResponse,omitempty" yaml:"GetDiscoverySearchConfigurationResponse,omitempty"`
	ServerVersionInfo                       *ServerVersionInfo                       `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetEvents.
// OperationGetEventsSoapIn was auto-generated from WSDL.
type OperationGetEventsSoapIn struct {
	GetEvents             *GetEvents             `xml:"GetEvents,omitempty" json:"GetEvents,omitempty" yaml:"GetEvents,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetEvents.
// OperationGetEventsSoapOut was auto-generated from WSDL.
type OperationGetEventsSoapOut struct {
	GetEventsResponse *GetEventsResponse `xml:"GetEventsResponse,omitempty" json:"GetEventsResponse,omitempty" yaml:"GetEventsResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetFolder.
// OperationGetFolderSoapIn was auto-generated from WSDL.
type OperationGetFolderSoapIn struct {
	GetFolder             *GetFolder             `xml:"GetFolder,omitempty" json:"GetFolder,omitempty" yaml:"GetFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	ManagementRole        *ManagementRole        `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetFolder.
// OperationGetFolderSoapOut was auto-generated from WSDL.
type OperationGetFolderSoapOut struct {
	GetFolderResponse *GetFolderResponse `xml:"GetFolderResponse,omitempty" json:"GetFolderResponse,omitempty" yaml:"GetFolderResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetHoldOnMailboxes.
// OperationGetHoldOnMailboxesSoapIn was auto-generated from WSDL.
type OperationGetHoldOnMailboxesSoapIn struct {
	GetHoldOnMailboxes   *GetHoldOnMailboxes   `xml:"GetHoldOnMailboxes,omitempty" json:"GetHoldOnMailboxes,omitempty" yaml:"GetHoldOnMailboxes,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetHoldOnMailboxes.
// OperationGetHoldOnMailboxesSoapOut was auto-generated from WSDL.
type OperationGetHoldOnMailboxesSoapOut struct {
	GetHoldOnMailboxesResponse *GetHoldOnMailboxesResponse `xml:"GetHoldOnMailboxesResponse,omitempty" json:"GetHoldOnMailboxesResponse,omitempty" yaml:"GetHoldOnMailboxesResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetImItemList.
// OperationGetImItemListSoapIn was auto-generated from WSDL.
type OperationGetImItemListSoapIn struct {
	GetImItemList         *GetImItemList         `xml:"GetImItemList,omitempty" json:"GetImItemList,omitempty" yaml:"GetImItemList,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetImItemList.
// OperationGetImItemListSoapOut was auto-generated from WSDL.
type OperationGetImItemListSoapOut struct {
	GetImItemListResponse *GetImItemListResponse `xml:"GetImItemListResponse,omitempty" json:"GetImItemListResponse,omitempty" yaml:"GetImItemListResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetImItems.
// OperationGetImItemsSoapIn was auto-generated from WSDL.
type OperationGetImItemsSoapIn struct {
	GetImItems            *GetImItems            `xml:"GetImItems,omitempty" json:"GetImItems,omitempty" yaml:"GetImItems,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetImItems.
// OperationGetImItemsSoapOut was auto-generated from WSDL.
type OperationGetImItemsSoapOut struct {
	GetImItemsResponse *GetImItemsResponse `xml:"GetImItemsResponse,omitempty" json:"GetImItemsResponse,omitempty" yaml:"GetImItemsResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetInboxRules.
// OperationGetInboxRulesSoapIn was auto-generated from WSDL.
type OperationGetInboxRulesSoapIn struct {
	GetInboxRules         *GetInboxRules         `xml:"GetInboxRules,omitempty" json:"GetInboxRules,omitempty" yaml:"GetInboxRules,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for GetInboxRules.
// OperationGetInboxRulesSoapOut was auto-generated from WSDL.
type OperationGetInboxRulesSoapOut struct {
	GetInboxRulesResponse *GetInboxRulesResponse `xml:"GetInboxRulesResponse,omitempty" json:"GetInboxRulesResponse,omitempty" yaml:"GetInboxRulesResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetItem.
// OperationGetItemSoapIn was auto-generated from WSDL.
type OperationGetItemSoapIn struct {
	GetItem               *GetItem               `xml:"GetItem,omitempty" json:"GetItem,omitempty" yaml:"GetItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	DateTimePrecision     *DateTimePrecision     `xml:"DateTimePrecision,omitempty" json:"DateTimePrecision,omitempty" yaml:"DateTimePrecision,omitempty"`
	ManagementRole        *ManagementRole        `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetItem.
// OperationGetItemSoapOut was auto-generated from WSDL.
type OperationGetItemSoapOut struct {
	GetItemResponse   *GetItemResponse   `xml:"GetItemResponse,omitempty" json:"GetItemResponse,omitempty" yaml:"GetItemResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetLastPrivateCatalogUpdate.
// OperationGetLastPrivateCatalogUpdateSoapIn was auto-generated
// from WSDL.
type OperationGetLastPrivateCatalogUpdateSoapIn struct {
	GetLastPrivateCatalogUpdate *GetLastPrivateCatalogUpdate `xml:"GetLastPrivateCatalogUpdate,omitempty" json:"GetLastPrivateCatalogUpdate,omitempty" yaml:"GetLastPrivateCatalogUpdate,omitempty"`
	RequestServerVersion        *RequestServerVersion        `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetLastPrivateCatalogUpdate.
// OperationGetLastPrivateCatalogUpdateSoapOut was auto-generated
// from WSDL.
type OperationGetLastPrivateCatalogUpdateSoapOut struct {
	GetLastPrivateCatalogUpdateResponse *GetLastPrivateCatalogUpdateResponse `xml:"GetLastPrivateCatalogUpdateResponse,omitempty" json:"GetLastPrivateCatalogUpdateResponse,omitempty" yaml:"GetLastPrivateCatalogUpdateResponse,omitempty"`
	ServerVersionInfo                   *ServerVersionInfo                   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetMailTips.
// OperationGetMailTipsSoapIn was auto-generated from WSDL.
type OperationGetMailTipsSoapIn struct {
	GetMailTips          *GetMailTips          `xml:"GetMailTips,omitempty" json:"GetMailTips,omitempty" yaml:"GetMailTips,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
}

// Operation wrapper for GetMailTips.
// OperationGetMailTipsSoapOut was auto-generated from WSDL.
type OperationGetMailTipsSoapOut struct {
	GetMailTipsResponse *GetMailTipsResponse `xml:"GetMailTipsResponse,omitempty" json:"GetMailTipsResponse,omitempty" yaml:"GetMailTipsResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetMeetingInstance.
// OperationGetMeetingInstanceSoapIn was auto-generated from WSDL.
type OperationGetMeetingInstanceSoapIn struct {
	GetMeetingInstanceRequest *GetMeetingInstanceRequest `xml:"GetMeetingInstanceRequest,omitempty" json:"GetMeetingInstanceRequest,omitempty" yaml:"GetMeetingInstanceRequest,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole            *ManagementRole            `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetMeetingInstance.
// OperationGetMeetingInstanceSoapOut was auto-generated from WSDL.
type OperationGetMeetingInstanceSoapOut struct {
	GetMeetingInstanceResponse *GetMeetingInstanceResponse `xml:"GetMeetingInstanceResponse,omitempty" json:"GetMeetingInstanceResponse,omitempty" yaml:"GetMeetingInstanceResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetMeetingSpace.
// OperationGetMeetingSpaceSoapIn was auto-generated from WSDL.
type OperationGetMeetingSpaceSoapIn struct {
	GetMeetingSpace      *GetMeetingSpace      `xml:"GetMeetingSpace,omitempty" json:"GetMeetingSpace,omitempty" yaml:"GetMeetingSpace,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetMeetingSpace.
// OperationGetMeetingSpaceSoapOut was auto-generated from WSDL.
type OperationGetMeetingSpaceSoapOut struct {
	GetMeetingSpaceResponseMessage *GetMeetingSpaceResponseMessage `xml:"GetMeetingSpaceResponseMessage,omitempty" json:"GetMeetingSpaceResponseMessage,omitempty" yaml:"GetMeetingSpaceResponseMessage,omitempty"`
	ServerVersionInfo              *ServerVersionInfo              `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetMessageTrackingReport.
// OperationGetMessageTrackingReportSoapIn was auto-generated from
// WSDL.
type OperationGetMessageTrackingReportSoapIn struct {
	GetMessageTrackingReport *GetMessageTrackingReport `xml:"GetMessageTrackingReport,omitempty" json:"GetMessageTrackingReport,omitempty" yaml:"GetMessageTrackingReport,omitempty"`
	RequestServerVersion     *RequestServerVersion     `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetMessageTrackingReport.
// OperationGetMessageTrackingReportSoapOut was auto-generated
// from WSDL.
type OperationGetMessageTrackingReportSoapOut struct {
	GetMessageTrackingReportResponse *GetMessageTrackingReportResponse `xml:"GetMessageTrackingReportResponse,omitempty" json:"GetMessageTrackingReportResponse,omitempty" yaml:"GetMessageTrackingReportResponse,omitempty"`
	ServerVersionInfo                *ServerVersionInfo                `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetNonIndexableItemDetails.
// OperationGetNonIndexableItemDetailsSoapIn was auto-generated
// from WSDL.
type OperationGetNonIndexableItemDetailsSoapIn struct {
	GetNonIndexableItemDetails *GetNonIndexableItemDetails `xml:"GetNonIndexableItemDetails,omitempty" json:"GetNonIndexableItemDetails,omitempty" yaml:"GetNonIndexableItemDetails,omitempty"`
	RequestServerVersion       *RequestServerVersion       `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole             *ManagementRole             `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetNonIndexableItemDetails.
// OperationGetNonIndexableItemDetailsSoapOut was auto-generated
// from WSDL.
type OperationGetNonIndexableItemDetailsSoapOut struct {
	GetNonIndexableItemDetailsResponse *GetNonIndexableItemDetailsResponse `xml:"GetNonIndexableItemDetailsResponse,omitempty" json:"GetNonIndexableItemDetailsResponse,omitempty" yaml:"GetNonIndexableItemDetailsResponse,omitempty"`
	ServerVersionInfo                  *ServerVersionInfo                  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetNonIndexableItemStatistics.
// OperationGetNonIndexableItemStatisticsSoapIn was auto-generated
// from WSDL.
type OperationGetNonIndexableItemStatisticsSoapIn struct {
	GetNonIndexableItemStatistics *GetNonIndexableItemStatistics `xml:"GetNonIndexableItemStatistics,omitempty" json:"GetNonIndexableItemStatistics,omitempty" yaml:"GetNonIndexableItemStatistics,omitempty"`
	RequestServerVersion          *RequestServerVersion          `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole                *ManagementRole                `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetNonIndexableItemStatistics.
// OperationGetNonIndexableItemStatisticsSoapOut was auto-generated
// from WSDL.
type OperationGetNonIndexableItemStatisticsSoapOut struct {
	GetNonIndexableItemStatisticsResponse *GetNonIndexableItemStatisticsResponse `xml:"GetNonIndexableItemStatisticsResponse,omitempty" json:"GetNonIndexableItemStatisticsResponse,omitempty" yaml:"GetNonIndexableItemStatisticsResponse,omitempty"`
	ServerVersionInfo                     *ServerVersionInfo                     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetPasswordExpirationDate.
// OperationGetPasswordExpirationDateSoapIn was auto-generated
// from WSDL.
type OperationGetPasswordExpirationDateSoapIn struct {
	GetPasswordExpirationDate *GetPasswordExpirationDate `xml:"GetPasswordExpirationDate,omitempty" json:"GetPasswordExpirationDate,omitempty" yaml:"GetPasswordExpirationDate,omitempty"`
	MailboxCulture            *MailboxCulture            `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetPasswordExpirationDate.
// OperationGetPasswordExpirationDateSoapOut was auto-generated
// from WSDL.
type OperationGetPasswordExpirationDateSoapOut struct {
	GetPasswordExpirationDateResponse *GetPasswordExpirationDateResponse `xml:"GetPasswordExpirationDateResponse,omitempty" json:"GetPasswordExpirationDateResponse,omitempty" yaml:"GetPasswordExpirationDateResponse,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetPersona.
// OperationGetPersonaSoapIn was auto-generated from WSDL.
type OperationGetPersonaSoapIn struct {
	GetPersona            *GetPersona            `xml:"GetPersona,omitempty" json:"GetPersona,omitempty" yaml:"GetPersona,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetPersona.
// OperationGetPersonaSoapOut was auto-generated from WSDL.
type OperationGetPersonaSoapOut struct {
	GetPersonaResponseMessage *GetPersonaResponseMessage `xml:"GetPersonaResponseMessage,omitempty" json:"GetPersonaResponseMessage,omitempty" yaml:"GetPersonaResponseMessage,omitempty"`
	ServerVersionInfo         *ServerVersionInfo         `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetPhoneCallInformation.
// OperationGetPhoneCallInformationSoapIn was auto-generated from
// WSDL.
type OperationGetPhoneCallInformationSoapIn struct {
	GetPhoneCallInformation *GetPhoneCallInformation `xml:"GetPhoneCallInformation,omitempty" json:"GetPhoneCallInformation,omitempty" yaml:"GetPhoneCallInformation,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetPhoneCallInformation.
// OperationGetPhoneCallInformationSoapOut was auto-generated from
// WSDL.
type OperationGetPhoneCallInformationSoapOut struct {
	GetPhoneCallInformationResponse *GetPhoneCallInformationResponse `xml:"GetPhoneCallInformationResponse,omitempty" json:"GetPhoneCallInformationResponse,omitempty" yaml:"GetPhoneCallInformationResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetPrivateCatalogAddIns.
// OperationGetPrivateCatalogAddInsSoapIn was auto-generated from
// WSDL.
type OperationGetPrivateCatalogAddInsSoapIn struct {
	GetPrivateCatalogAddIns *GetPrivateCatalogAddIns `xml:"GetPrivateCatalogAddIns,omitempty" json:"GetPrivateCatalogAddIns,omitempty" yaml:"GetPrivateCatalogAddIns,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetPrivateCatalogAddIns.
// OperationGetPrivateCatalogAddInsSoapOut was auto-generated from
// WSDL.
type OperationGetPrivateCatalogAddInsSoapOut struct {
	GetPrivateCatalogAddInsResponse *GetPrivateCatalogAddInsResponse `xml:"GetPrivateCatalogAddInsResponse,omitempty" json:"GetPrivateCatalogAddInsResponse,omitempty" yaml:"GetPrivateCatalogAddInsResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetRoomLists.
// OperationGetRoomListsSoapIn was auto-generated from WSDL.
type OperationGetRoomListsSoapIn struct {
	GetRoomLists          *GetRoomLists          `xml:"GetRoomLists,omitempty" json:"GetRoomLists,omitempty" yaml:"GetRoomLists,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetRoomLists.
// OperationGetRoomListsSoapOut was auto-generated from WSDL.
type OperationGetRoomListsSoapOut struct {
	GetRoomListsResponse *GetRoomListsResponse `xml:"GetRoomListsResponse,omitempty" json:"GetRoomListsResponse,omitempty" yaml:"GetRoomListsResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetRooms.
// OperationGetRoomsSoapIn was auto-generated from WSDL.
type OperationGetRoomsSoapIn struct {
	GetRooms              *GetRooms              `xml:"GetRooms,omitempty" json:"GetRooms,omitempty" yaml:"GetRooms,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetRooms.
// OperationGetRoomsSoapOut was auto-generated from WSDL.
type OperationGetRoomsSoapOut struct {
	GetRoomsResponse  *GetRoomsResponse  `xml:"GetRoomsResponse,omitempty" json:"GetRoomsResponse,omitempty" yaml:"GetRoomsResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetSearchSuggestions.
// OperationGetSearchSuggestionsSoapIn was auto-generated from
// WSDL.
type OperationGetSearchSuggestionsSoapIn struct {
	GetSearchSuggestions *GetSearchSuggestions `xml:"GetSearchSuggestions,omitempty" json:"GetSearchSuggestions,omitempty" yaml:"GetSearchSuggestions,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetSearchSuggestions.
// OperationGetSearchSuggestionsSoapOut was auto-generated from
// WSDL.
type OperationGetSearchSuggestionsSoapOut struct {
	GetSearchSuggestionsResponse *GetSearchSuggestionsResponse `xml:"GetSearchSuggestionsResponse,omitempty" json:"GetSearchSuggestionsResponse,omitempty" yaml:"GetSearchSuggestionsResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetSearchableMailboxes.
// OperationGetSearchableMailboxesSoapIn was auto-generated from
// WSDL.
type OperationGetSearchableMailboxesSoapIn struct {
	GetSearchableMailboxes *GetSearchableMailboxes `xml:"GetSearchableMailboxes,omitempty" json:"GetSearchableMailboxes,omitempty" yaml:"GetSearchableMailboxes,omitempty"`
	RequestServerVersion   *RequestServerVersion   `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole         *ManagementRole         `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for GetSearchableMailboxes.
// OperationGetSearchableMailboxesSoapOut was auto-generated from
// WSDL.
type OperationGetSearchableMailboxesSoapOut struct {
	GetSearchableMailboxesResponse *GetSearchableMailboxesResponse `xml:"GetSearchableMailboxesResponse,omitempty" json:"GetSearchableMailboxesResponse,omitempty" yaml:"GetSearchableMailboxesResponse,omitempty"`
	ServerVersionInfo              *ServerVersionInfo              `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetServerTimeZones.
// OperationGetServerTimeZonesSoapIn was auto-generated from WSDL.
type OperationGetServerTimeZonesSoapIn struct {
	GetServerTimeZones   *GetServerTimeZones   `xml:"GetServerTimeZones,omitempty" json:"GetServerTimeZones,omitempty" yaml:"GetServerTimeZones,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetServerTimeZones.
// OperationGetServerTimeZonesSoapOut was auto-generated from WSDL.
type OperationGetServerTimeZonesSoapOut struct {
	GetServerTimeZonesResponse *GetServerTimeZonesResponse `xml:"GetServerTimeZonesResponse,omitempty" json:"GetServerTimeZonesResponse,omitempty" yaml:"GetServerTimeZonesResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetServiceConfiguration.
// OperationGetServiceConfigurationSoapIn was auto-generated from
// WSDL.
type OperationGetServiceConfigurationSoapIn struct {
	GetServiceConfiguration *GetServiceConfiguration `xml:"GetServiceConfiguration,omitempty" json:"GetServiceConfiguration,omitempty" yaml:"GetServiceConfiguration,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
}

// Operation wrapper for GetServiceConfiguration.
// OperationGetServiceConfigurationSoapOut was auto-generated from
// WSDL.
type OperationGetServiceConfigurationSoapOut struct {
	GetServiceConfigurationResponse *GetServiceConfigurationResponse `xml:"GetServiceConfigurationResponse,omitempty" json:"GetServiceConfigurationResponse,omitempty" yaml:"GetServiceConfigurationResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetSharingFolder.
// OperationGetSharingFolderSoapIn was auto-generated from WSDL.
type OperationGetSharingFolderSoapIn struct {
	GetSharingFolder     *GetSharingFolder     `xml:"GetSharingFolder,omitempty" json:"GetSharingFolder,omitempty" yaml:"GetSharingFolder,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetSharingFolder.
// OperationGetSharingFolderSoapOut was auto-generated from WSDL.
type OperationGetSharingFolderSoapOut struct {
	GetSharingFolderResponse *GetSharingFolderResponse `xml:"GetSharingFolderResponse,omitempty" json:"GetSharingFolderResponse,omitempty" yaml:"GetSharingFolderResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetSharingMetadata.
// OperationGetSharingMetadataSoapIn was auto-generated from WSDL.
type OperationGetSharingMetadataSoapIn struct {
	GetSharingMetadata   *GetSharingMetadata   `xml:"GetSharingMetadata,omitempty" json:"GetSharingMetadata,omitempty" yaml:"GetSharingMetadata,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetSharingMetadata.
// OperationGetSharingMetadataSoapOut was auto-generated from WSDL.
type OperationGetSharingMetadataSoapOut struct {
	GetSharingMetadataResponse *GetSharingMetadataResponse `xml:"GetSharingMetadataResponse,omitempty" json:"GetSharingMetadataResponse,omitempty" yaml:"GetSharingMetadataResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetSpecificUserConfiguration.
// OperationGetSpecificUserConfigurationSoapIn was auto-generated
// from WSDL.
type OperationGetSpecificUserConfigurationSoapIn struct {
	GetSpecificUserConfiguration *GetSpecificUserConfiguration `xml:"GetSpecificUserConfiguration,omitempty" json:"GetSpecificUserConfiguration,omitempty" yaml:"GetSpecificUserConfiguration,omitempty"`
	ExchangeImpersonation        *ExchangeImpersonation        `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture               *MailboxCulture               `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetSpecificUserConfiguration.
// OperationGetSpecificUserConfigurationSoapOut was auto-generated
// from WSDL.
type OperationGetSpecificUserConfigurationSoapOut struct {
	GetSpecificUserConfigurationResponse *GetSpecificUserConfigurationResponse `xml:"GetSpecificUserConfigurationResponse,omitempty" json:"GetSpecificUserConfigurationResponse,omitempty" yaml:"GetSpecificUserConfigurationResponse,omitempty"`
	ServerVersionInfo                    *ServerVersionInfo                    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetStreamingEvents.
// OperationGetStreamingEventsSoapIn was auto-generated from WSDL.
type OperationGetStreamingEventsSoapIn struct {
	GetStreamingEvents    *GetStreamingEvents    `xml:"GetStreamingEvents,omitempty" json:"GetStreamingEvents,omitempty" yaml:"GetStreamingEvents,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetStreamingEvents.
// OperationGetStreamingEventsSoapOut was auto-generated from WSDL.
type OperationGetStreamingEventsSoapOut struct {
	GetStreamingEventsResponse *GetStreamingEventsResponse `xml:"GetStreamingEventsResponse,omitempty" json:"GetStreamingEventsResponse,omitempty" yaml:"GetStreamingEventsResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetUserAvailability.
// OperationGetUserAvailabilitySoapIn was auto-generated from WSDL.
type OperationGetUserAvailabilitySoapIn struct {
	GetUserAvailabilityRequest *GetUserAvailabilityRequest `xml:"GetUserAvailabilityRequest,omitempty" json:"GetUserAvailabilityRequest,omitempty" yaml:"GetUserAvailabilityRequest,omitempty"`
	ExchangeImpersonation      *ExchangeImpersonation      `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	TimeZoneContext            *TimeZoneContext            `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	RequestServerVersion       *RequestServerVersion       `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetUserAvailability.
// OperationGetUserAvailabilitySoapOut was auto-generated from
// WSDL.
type OperationGetUserAvailabilitySoapOut struct {
	GetUserAvailabilityResponse *GetUserAvailabilityResponse `xml:"GetUserAvailabilityResponse,omitempty" json:"GetUserAvailabilityResponse,omitempty" yaml:"GetUserAvailabilityResponse,omitempty"`
	ServerVersionInfo           *ServerVersionInfo           `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetUserConfiguration.
// OperationGetUserConfigurationSoapIn was auto-generated from
// WSDL.
type OperationGetUserConfigurationSoapIn struct {
	GetUserConfiguration  *GetUserConfiguration  `xml:"GetUserConfiguration,omitempty" json:"GetUserConfiguration,omitempty" yaml:"GetUserConfiguration,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetUserConfiguration.
// OperationGetUserConfigurationSoapOut was auto-generated from
// WSDL.
type OperationGetUserConfigurationSoapOut struct {
	GetUserConfigurationResponse *GetUserConfigurationResponse `xml:"GetUserConfigurationResponse,omitempty" json:"GetUserConfigurationResponse,omitempty" yaml:"GetUserConfigurationResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetUserOofSettings.
// OperationGetUserOofSettingsSoapIn was auto-generated from WSDL.
type OperationGetUserOofSettingsSoapIn struct {
	GetUserOofSettingsRequest *GetUserOofSettingsRequest `xml:"GetUserOofSettingsRequest,omitempty" json:"GetUserOofSettingsRequest,omitempty" yaml:"GetUserOofSettingsRequest,omitempty"`
	ExchangeImpersonation     *ExchangeImpersonation     `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetUserOofSettings.
// OperationGetUserOofSettingsSoapOut was auto-generated from WSDL.
type OperationGetUserOofSettingsSoapOut struct {
	GetUserOofSettingsResponse *GetUserOofSettingsResponse `xml:"GetUserOofSettingsResponse,omitempty" json:"GetUserOofSettingsResponse,omitempty" yaml:"GetUserOofSettingsResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetUserPhoto.
// OperationGetUserPhotoSoapIn was auto-generated from WSDL.
type OperationGetUserPhotoSoapIn struct {
	GetUserPhoto         *GetUserPhoto         `xml:"GetUserPhoto,omitempty" json:"GetUserPhoto,omitempty" yaml:"GetUserPhoto,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetUserPhoto.
// OperationGetUserPhotoSoapOut was auto-generated from WSDL.
type OperationGetUserPhotoSoapOut struct {
	GetUserPhotoResponse *GetUserPhotoResponse `xml:"GetUserPhotoResponse,omitempty" json:"GetUserPhotoResponse,omitempty" yaml:"GetUserPhotoResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for GetUserRetentionPolicyTags.
// OperationGetUserRetentionPolicyTagsSoapIn was auto-generated
// from WSDL.
type OperationGetUserRetentionPolicyTagsSoapIn struct {
	GetUserRetentionPolicyTags *GetUserRetentionPolicyTags `xml:"GetUserRetentionPolicyTags,omitempty" json:"GetUserRetentionPolicyTags,omitempty" yaml:"GetUserRetentionPolicyTags,omitempty"`
	RequestServerVersion       *RequestServerVersion       `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for GetUserRetentionPolicyTags.
// OperationGetUserRetentionPolicyTagsSoapOut was auto-generated
// from WSDL.
type OperationGetUserRetentionPolicyTagsSoapOut struct {
	GetUserRetentionPolicyTagsResponse *GetUserRetentionPolicyTagsResponse `xml:"GetUserRetentionPolicyTagsResponse,omitempty" json:"GetUserRetentionPolicyTagsResponse,omitempty" yaml:"GetUserRetentionPolicyTagsResponse,omitempty"`
	ServerVersionInfo                  *ServerVersionInfo                  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for HideTag.
// OperationHideTagSoapIn was auto-generated from WSDL.
type OperationHideTagSoapIn struct {
	HideTag               *HideTag               `xml:"HideTag,omitempty" json:"HideTag,omitempty" yaml:"HideTag,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for HideTag.
// OperationHideTagSoapOut was auto-generated from WSDL.
type OperationHideTagSoapOut struct {
	HideTagResponse   *HideTagResponse   `xml:"HideTagResponse,omitempty" json:"HideTagResponse,omitempty" yaml:"HideTagResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for InstallApp.
// OperationInstallAppSoapIn was auto-generated from WSDL.
type OperationInstallAppSoapIn struct {
	InstallApp            *InstallApp            `xml:"InstallApp,omitempty" json:"InstallApp,omitempty" yaml:"InstallApp,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for InstallApp.
// OperationInstallAppSoapOut was auto-generated from WSDL.
type OperationInstallAppSoapOut struct {
	InstallAppResponse *InstallAppResponse `xml:"InstallAppResponse,omitempty" json:"InstallAppResponse,omitempty" yaml:"InstallAppResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for MarkAllItemsAsRead.
// OperationMarkAllItemsAsReadSoapIn was auto-generated from WSDL.
type OperationMarkAllItemsAsReadSoapIn struct {
	MarkAllItemsAsRead    *MarkAllItemsAsRead    `xml:"MarkAllItemsAsRead,omitempty" json:"MarkAllItemsAsRead,omitempty" yaml:"MarkAllItemsAsRead,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for MarkAllItemsAsRead.
// OperationMarkAllItemsAsReadSoapOut was auto-generated from WSDL.
type OperationMarkAllItemsAsReadSoapOut struct {
	MarkAllItemsAsReadResponse *MarkAllItemsAsReadResponse `xml:"MarkAllItemsAsReadResponse,omitempty" json:"MarkAllItemsAsReadResponse,omitempty" yaml:"MarkAllItemsAsReadResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for MarkAsJunk.
// OperationMarkAsJunkSoapIn was auto-generated from WSDL.
type OperationMarkAsJunkSoapIn struct {
	MarkAsJunk            *MarkAsJunk            `xml:"MarkAsJunk,omitempty" json:"MarkAsJunk,omitempty" yaml:"MarkAsJunk,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for MarkAsJunk.
// OperationMarkAsJunkSoapOut was auto-generated from WSDL.
type OperationMarkAsJunkSoapOut struct {
	MarkAsJunkResponse *MarkAsJunkResponse `xml:"MarkAsJunkResponse,omitempty" json:"MarkAsJunkResponse,omitempty" yaml:"MarkAsJunkResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for MoveFolder.
// OperationMoveFolderSoapIn was auto-generated from WSDL.
type OperationMoveFolderSoapIn struct {
	MoveFolder            *MoveFolder            `xml:"MoveFolder,omitempty" json:"MoveFolder,omitempty" yaml:"MoveFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for MoveFolder.
// OperationMoveFolderSoapOut was auto-generated from WSDL.
type OperationMoveFolderSoapOut struct {
	MoveFolderResponse *MoveFolderResponse `xml:"MoveFolderResponse,omitempty" json:"MoveFolderResponse,omitempty" yaml:"MoveFolderResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for MoveItem.
// OperationMoveItemSoapIn was auto-generated from WSDL.
type OperationMoveItemSoapIn struct {
	MoveItem              *MoveItem              `xml:"MoveItem,omitempty" json:"MoveItem,omitempty" yaml:"MoveItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for MoveItem.
// OperationMoveItemSoapOut was auto-generated from WSDL.
type OperationMoveItemSoapOut struct {
	MoveItemResponse  *MoveItemResponse  `xml:"MoveItemResponse,omitempty" json:"MoveItemResponse,omitempty" yaml:"MoveItemResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for PlayOnPhone.
// OperationPlayOnPhoneSoapIn was auto-generated from WSDL.
type OperationPlayOnPhoneSoapIn struct {
	PlayOnPhone           *PlayOnPhone           `xml:"PlayOnPhone,omitempty" json:"PlayOnPhone,omitempty" yaml:"PlayOnPhone,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for PlayOnPhone.
// OperationPlayOnPhoneSoapOut was auto-generated from WSDL.
type OperationPlayOnPhoneSoapOut struct {
	PlayOnPhoneResponse *PlayOnPhoneResponse `xml:"PlayOnPhoneResponse,omitempty" json:"PlayOnPhoneResponse,omitempty" yaml:"PlayOnPhoneResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RefreshSharingFolder.
// OperationRefreshSharingFolderSoapIn was auto-generated from
// WSDL.
type OperationRefreshSharingFolderSoapIn struct {
	RefreshSharingFolder *RefreshSharingFolder `xml:"RefreshSharingFolder,omitempty" json:"RefreshSharingFolder,omitempty" yaml:"RefreshSharingFolder,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RefreshSharingFolder.
// OperationRefreshSharingFolderSoapOut was auto-generated from
// WSDL.
type OperationRefreshSharingFolderSoapOut struct {
	RefreshSharingFolderResponse *RefreshSharingFolderResponse `xml:"RefreshSharingFolderResponse,omitempty" json:"RefreshSharingFolderResponse,omitempty" yaml:"RefreshSharingFolderResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RemoveContactFromImList.
// OperationRemoveContactFromImListSoapIn was auto-generated from
// WSDL.
type OperationRemoveContactFromImListSoapIn struct {
	RemoveContactFromImList *RemoveContactFromImList `xml:"RemoveContactFromImList,omitempty" json:"RemoveContactFromImList,omitempty" yaml:"RemoveContactFromImList,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RemoveContactFromImList.
// OperationRemoveContactFromImListSoapOut was auto-generated from
// WSDL.
type OperationRemoveContactFromImListSoapOut struct {
	RemoveContactFromImListResponse *RemoveContactFromImListResponse `xml:"RemoveContactFromImListResponse,omitempty" json:"RemoveContactFromImListResponse,omitempty" yaml:"RemoveContactFromImListResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RemoveDelegate.
// OperationRemoveDelegateSoapIn was auto-generated from WSDL.
type OperationRemoveDelegateSoapIn struct {
	RemoveDelegate        *RemoveDelegate        `xml:"RemoveDelegate,omitempty" json:"RemoveDelegate,omitempty" yaml:"RemoveDelegate,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RemoveDelegate.
// OperationRemoveDelegateSoapOut was auto-generated from WSDL.
type OperationRemoveDelegateSoapOut struct {
	RemoveDelegateResponse *RemoveDelegateResponse `xml:"RemoveDelegateResponse,omitempty" json:"RemoveDelegateResponse,omitempty" yaml:"RemoveDelegateResponse,omitempty"`
	ServerVersionInfo      *ServerVersionInfo      `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RemoveDistributionGroupFromImList.
// OperationRemoveDistributionGroupFromImListSoapIn was auto-generated
// from WSDL.
type OperationRemoveDistributionGroupFromImListSoapIn struct {
	RemoveDistributionGroupFromImList *RemoveDistributionGroupFromImList `xml:"RemoveDistributionGroupFromImList,omitempty" json:"RemoveDistributionGroupFromImList,omitempty" yaml:"RemoveDistributionGroupFromImList,omitempty"`
	ExchangeImpersonation             *ExchangeImpersonation             `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture                    *MailboxCulture                    `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion              *RequestServerVersion              `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RemoveDistributionGroupFromImList.
// OperationRemoveDistributionGroupFromImListSoapOut was auto-generated
// from WSDL.
type OperationRemoveDistributionGroupFromImListSoapOut struct {
	RemoveDistributionGroupFromImListResponse *RemoveDistributionGroupFromImListResponse `xml:"RemoveDistributionGroupFromImListResponse,omitempty" json:"RemoveDistributionGroupFromImListResponse,omitempty" yaml:"RemoveDistributionGroupFromImListResponse,omitempty"`
	ServerVersionInfo                         *ServerVersionInfo                         `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RemoveImContactFromGroup.
// OperationRemoveImContactFromGroupSoapIn was auto-generated from
// WSDL.
type OperationRemoveImContactFromGroupSoapIn struct {
	RemoveImContactFromGroup *RemoveImContactFromGroup `xml:"RemoveImContactFromGroup,omitempty" json:"RemoveImContactFromGroup,omitempty" yaml:"RemoveImContactFromGroup,omitempty"`
	ExchangeImpersonation    *ExchangeImpersonation    `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture           *MailboxCulture           `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion     *RequestServerVersion     `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RemoveImContactFromGroup.
// OperationRemoveImContactFromGroupSoapOut was auto-generated
// from WSDL.
type OperationRemoveImContactFromGroupSoapOut struct {
	RemoveImContactFromGroupResponse *RemoveImContactFromGroupResponse `xml:"RemoveImContactFromGroupResponse,omitempty" json:"RemoveImContactFromGroupResponse,omitempty" yaml:"RemoveImContactFromGroupResponse,omitempty"`
	ServerVersionInfo                *ServerVersionInfo                `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for RemoveImGroup.
// OperationRemoveImGroupSoapIn was auto-generated from WSDL.
type OperationRemoveImGroupSoapIn struct {
	RemoveImGroup         *RemoveImGroup         `xml:"RemoveImGroup,omitempty" json:"RemoveImGroup,omitempty" yaml:"RemoveImGroup,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for RemoveImGroup.
// OperationRemoveImGroupSoapOut was auto-generated from WSDL.
type OperationRemoveImGroupSoapOut struct {
	RemoveImGroupResponse *RemoveImGroupResponse `xml:"RemoveImGroupResponse,omitempty" json:"RemoveImGroupResponse,omitempty" yaml:"RemoveImGroupResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ReportMessage.
// OperationReportMessageSoapIn was auto-generated from WSDL.
type OperationReportMessageSoapIn struct {
	ReportMessage         *ReportMessage         `xml:"ReportMessage,omitempty" json:"ReportMessage,omitempty" yaml:"ReportMessage,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ReportMessage.
// OperationReportMessageSoapOut was auto-generated from WSDL.
type OperationReportMessageSoapOut struct {
	ReportMessageResponse *ReportMessageResponse `xml:"ReportMessageResponse,omitempty" json:"ReportMessageResponse,omitempty" yaml:"ReportMessageResponse,omitempty"`
	ServerVersionInfo     *ServerVersionInfo     `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for ResolveNames.
// OperationResolveNamesSoapIn was auto-generated from WSDL.
type OperationResolveNamesSoapIn struct {
	ResolveNames          *ResolveNames          `xml:"ResolveNames,omitempty" json:"ResolveNames,omitempty" yaml:"ResolveNames,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for ResolveNames.
// OperationResolveNamesSoapOut was auto-generated from WSDL.
type OperationResolveNamesSoapOut struct {
	ResolveNamesResponse *ResolveNamesResponse `xml:"ResolveNamesResponse,omitempty" json:"ResolveNamesResponse,omitempty" yaml:"ResolveNamesResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SearchMailboxes.
// OperationSearchMailboxesSoapIn was auto-generated from WSDL.
type OperationSearchMailboxesSoapIn struct {
	SearchMailboxes      *SearchMailboxes      `xml:"SearchMailboxes,omitempty" json:"SearchMailboxes,omitempty" yaml:"SearchMailboxes,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for SearchMailboxes.
// OperationSearchMailboxesSoapOut was auto-generated from WSDL.
type OperationSearchMailboxesSoapOut struct {
	SearchMailboxesResponse *SearchMailboxesResponse `xml:"SearchMailboxesResponse,omitempty" json:"SearchMailboxesResponse,omitempty" yaml:"SearchMailboxesResponse,omitempty"`
	ServerVersionInfo       *ServerVersionInfo       `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SendItem.
// OperationSendItemSoapIn was auto-generated from WSDL.
type OperationSendItemSoapIn struct {
	SendItem              *SendItem              `xml:"SendItem,omitempty" json:"SendItem,omitempty" yaml:"SendItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SendItem.
// OperationSendItemSoapOut was auto-generated from WSDL.
type OperationSendItemSoapOut struct {
	SendItemResponse  *SendItemResponse  `xml:"SendItemResponse,omitempty" json:"SendItemResponse,omitempty" yaml:"SendItemResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetHoldOnMailboxes.
// OperationSetHoldOnMailboxesSoapIn was auto-generated from WSDL.
type OperationSetHoldOnMailboxesSoapIn struct {
	SetHoldOnMailboxes   *SetHoldOnMailboxes   `xml:"SetHoldOnMailboxes,omitempty" json:"SetHoldOnMailboxes,omitempty" yaml:"SetHoldOnMailboxes,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for SetHoldOnMailboxes.
// OperationSetHoldOnMailboxesSoapOut was auto-generated from WSDL.
type OperationSetHoldOnMailboxesSoapOut struct {
	SetHoldOnMailboxesResponse *SetHoldOnMailboxesResponse `xml:"SetHoldOnMailboxesResponse,omitempty" json:"SetHoldOnMailboxesResponse,omitempty" yaml:"SetHoldOnMailboxesResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetImGroup.
// OperationSetImGroupSoapIn was auto-generated from WSDL.
type OperationSetImGroupSoapIn struct {
	SetImGroup            *SetImGroup            `xml:"SetImGroup,omitempty" json:"SetImGroup,omitempty" yaml:"SetImGroup,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SetImGroup.
// OperationSetImGroupSoapOut was auto-generated from WSDL.
type OperationSetImGroupSoapOut struct {
	SetImGroupResponse *SetImGroupResponse `xml:"SetImGroupResponse,omitempty" json:"SetImGroupResponse,omitempty" yaml:"SetImGroupResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetImListMigrationCompleted.
// OperationSetImListMigrationCompletedSoapIn was auto-generated
// from WSDL.
type OperationSetImListMigrationCompletedSoapIn struct {
	SetImListMigrationCompleted *SetImListMigrationCompleted `xml:"SetImListMigrationCompleted,omitempty" json:"SetImListMigrationCompleted,omitempty" yaml:"SetImListMigrationCompleted,omitempty"`
	ExchangeImpersonation       *ExchangeImpersonation       `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture              *MailboxCulture              `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion        *RequestServerVersion        `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SetImListMigrationCompleted.
// OperationSetImListMigrationCompletedSoapOut was auto-generated
// from WSDL.
type OperationSetImListMigrationCompletedSoapOut struct {
	SetImListMigrationCompletedResponse *SetImListMigrationCompletedResponse `xml:"SetImListMigrationCompletedResponse,omitempty" json:"SetImListMigrationCompletedResponse,omitempty" yaml:"SetImListMigrationCompletedResponse,omitempty"`
	ServerVersionInfo                   *ServerVersionInfo                   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetTeamMailbox.
// OperationSetTeamMailboxSoapIn was auto-generated from WSDL.
type OperationSetTeamMailboxSoapIn struct {
	SetTeamMailbox       *SetTeamMailbox       `xml:"SetTeamMailbox,omitempty" json:"SetTeamMailbox,omitempty" yaml:"SetTeamMailbox,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRole       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for SetTeamMailbox.
// OperationSetTeamMailboxSoapOut was auto-generated from WSDL.
type OperationSetTeamMailboxSoapOut struct {
	SetTeamMailboxResponse *SetTeamMailboxResponse `xml:"SetTeamMailboxResponse,omitempty" json:"SetTeamMailboxResponse,omitempty" yaml:"SetTeamMailboxResponse,omitempty"`
	ServerVersionInfo      *ServerVersionInfo      `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetUserOofSettings.
// OperationSetUserOofSettingsSoapIn was auto-generated from WSDL.
type OperationSetUserOofSettingsSoapIn struct {
	SetUserOofSettingsRequest *SetUserOofSettingsRequest `xml:"SetUserOofSettingsRequest,omitempty" json:"SetUserOofSettingsRequest,omitempty" yaml:"SetUserOofSettingsRequest,omitempty"`
	ExchangeImpersonation     *ExchangeImpersonation     `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion      *RequestServerVersion      `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SetUserOofSettings.
// OperationSetUserOofSettingsSoapOut was auto-generated from WSDL.
type OperationSetUserOofSettingsSoapOut struct {
	SetUserOofSettingsResponse *SetUserOofSettingsResponse `xml:"SetUserOofSettingsResponse,omitempty" json:"SetUserOofSettingsResponse,omitempty" yaml:"SetUserOofSettingsResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SetUserPhoto.
// OperationSetUserPhotoSoapIn was auto-generated from WSDL.
type OperationSetUserPhotoSoapIn struct {
	SetUserPhoto         *SetUserPhoto         `xml:"SetUserPhoto,omitempty" json:"SetUserPhoto,omitempty" yaml:"SetUserPhoto,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SetUserPhoto.
// OperationSetUserPhotoSoapOut was auto-generated from WSDL.
type OperationSetUserPhotoSoapOut struct {
	SetUserPhotoResponse *SetUserPhotoResponse `xml:"SetUserPhotoResponse,omitempty" json:"SetUserPhotoResponse,omitempty" yaml:"SetUserPhotoResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for StartSearchSession.
// OperationStartSearchSessionSoapIn was auto-generated from WSDL.
type OperationStartSearchSessionSoapIn struct {
	StartSearchSession   *StartSearchSession   `xml:"StartSearchSession,omitempty" json:"StartSearchSession,omitempty" yaml:"StartSearchSession,omitempty"`
	MailboxCulture       *MailboxCulture       `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for StartSearchSession.
// OperationStartSearchSessionSoapOut was auto-generated from WSDL.
type OperationStartSearchSessionSoapOut struct {
	StartSearchSessionResponse *StartSearchSessionResponse `xml:"StartSearchSessionResponse,omitempty" json:"StartSearchSessionResponse,omitempty" yaml:"StartSearchSessionResponse,omitempty"`
	ServerVersionInfo          *ServerVersionInfo          `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for Subscribe.
// OperationSubscribeSoapIn was auto-generated from WSDL.
type OperationSubscribeSoapIn struct {
	Subscribe             *Subscribe             `xml:"Subscribe,omitempty" json:"Subscribe,omitempty" yaml:"Subscribe,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for Subscribe.
// OperationSubscribeSoapOut was auto-generated from WSDL.
type OperationSubscribeSoapOut struct {
	SubscribeResponse *SubscribeResponse `xml:"SubscribeResponse,omitempty" json:"SubscribeResponse,omitempty" yaml:"SubscribeResponse,omitempty"`
	ServerVersionInfo *ServerVersionInfo `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SyncFolderHierarchy.
// OperationSyncFolderHierarchySoapIn was auto-generated from WSDL.
type OperationSyncFolderHierarchySoapIn struct {
	SyncFolderHierarchy   *SyncFolderHierarchy   `xml:"SyncFolderHierarchy,omitempty" json:"SyncFolderHierarchy,omitempty" yaml:"SyncFolderHierarchy,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SyncFolderHierarchy.
// OperationSyncFolderHierarchySoapOut was auto-generated from
// WSDL.
type OperationSyncFolderHierarchySoapOut struct {
	SyncFolderHierarchyResponse *SyncFolderHierarchyResponse `xml:"SyncFolderHierarchyResponse,omitempty" json:"SyncFolderHierarchyResponse,omitempty" yaml:"SyncFolderHierarchyResponse,omitempty"`
	ServerVersionInfo           *ServerVersionInfo           `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for SyncFolderItems.
// OperationSyncFolderItemsSoapIn was auto-generated from WSDL.
type OperationSyncFolderItemsSoapIn struct {
	SyncFolderItems       *SyncFolderItems       `xml:"SyncFolderItems,omitempty" json:"SyncFolderItems,omitempty" yaml:"SyncFolderItems,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for SyncFolderItems.
// OperationSyncFolderItemsSoapOut was auto-generated from WSDL.
type OperationSyncFolderItemsSoapOut struct {
	SyncFolderItemsResponse *SyncFolderItemsResponse `xml:"SyncFolderItemsResponse,omitempty" json:"SyncFolderItemsResponse,omitempty" yaml:"SyncFolderItemsResponse,omitempty"`
	ServerVersionInfo       *ServerVersionInfo       `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UninstallApp.
// OperationUninstallAppSoapIn was auto-generated from WSDL.
type OperationUninstallAppSoapIn struct {
	UninstallApp          *UninstallApp          `xml:"UninstallApp,omitempty" json:"UninstallApp,omitempty" yaml:"UninstallApp,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UninstallApp.
// OperationUninstallAppSoapOut was auto-generated from WSDL.
type OperationUninstallAppSoapOut struct {
	UninstallAppResponse *UninstallAppResponse `xml:"UninstallAppResponse,omitempty" json:"UninstallAppResponse,omitempty" yaml:"UninstallAppResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UnpinTeamMailbox.
// OperationUnpinTeamMailboxSoapIn was auto-generated from WSDL.
type OperationUnpinTeamMailboxSoapIn struct {
	UnpinTeamMailbox     *UnpinTeamMailbox     `xml:"UnpinTeamMailbox,omitempty" json:"UnpinTeamMailbox,omitempty" yaml:"UnpinTeamMailbox,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UnpinTeamMailbox.
// OperationUnpinTeamMailboxSoapOut was auto-generated from WSDL.
type OperationUnpinTeamMailboxSoapOut struct {
	UnpinTeamMailboxResponse *UnpinTeamMailboxResponse `xml:"UnpinTeamMailboxResponse,omitempty" json:"UnpinTeamMailboxResponse,omitempty" yaml:"UnpinTeamMailboxResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for Unsubscribe.
// OperationUnsubscribeSoapIn was auto-generated from WSDL.
type OperationUnsubscribeSoapIn struct {
	Unsubscribe           *Unsubscribe           `xml:"Unsubscribe,omitempty" json:"Unsubscribe,omitempty" yaml:"Unsubscribe,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for Unsubscribe.
// OperationUnsubscribeSoapOut was auto-generated from WSDL.
type OperationUnsubscribeSoapOut struct {
	UnsubscribeResponse *UnsubscribeResponse `xml:"UnsubscribeResponse,omitempty" json:"UnsubscribeResponse,omitempty" yaml:"UnsubscribeResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateDelegate.
// OperationUpdateDelegateSoapIn was auto-generated from WSDL.
type OperationUpdateDelegateSoapIn struct {
	UpdateDelegate        *UpdateDelegate        `xml:"UpdateDelegate,omitempty" json:"UpdateDelegate,omitempty" yaml:"UpdateDelegate,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UpdateDelegate.
// OperationUpdateDelegateSoapOut was auto-generated from WSDL.
type OperationUpdateDelegateSoapOut struct {
	UpdateDelegateResponse *UpdateDelegateResponse `xml:"UpdateDelegateResponse,omitempty" json:"UpdateDelegateResponse,omitempty" yaml:"UpdateDelegateResponse,omitempty"`
	ServerVersionInfo      *ServerVersionInfo      `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateExtensionUsage.
// OperationUpdateExtensionUsageSoapIn was auto-generated from
// WSDL.
type OperationUpdateExtensionUsageSoapIn struct {
	UpdateExtensionUsage  *UpdateExtensionUsage  `xml:"UpdateExtensionUsage,omitempty" json:"UpdateExtensionUsage,omitempty" yaml:"UpdateExtensionUsage,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UpdateExtensionUsage.
// OperationUpdateExtensionUsageSoapOut was auto-generated from
// WSDL.
type OperationUpdateExtensionUsageSoapOut struct {
	UpdateExtensionUsageResponse *UpdateExtensionUsageResponse `xml:"UpdateExtensionUsageResponse,omitempty" json:"UpdateExtensionUsageResponse,omitempty" yaml:"UpdateExtensionUsageResponse,omitempty"`
	ServerVersionInfo            *ServerVersionInfo            `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateFolder.
// OperationUpdateFolderSoapIn was auto-generated from WSDL.
type OperationUpdateFolderSoapIn struct {
	UpdateFolder          *UpdateFolder          `xml:"UpdateFolder,omitempty" json:"UpdateFolder,omitempty" yaml:"UpdateFolder,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for UpdateFolder.
// OperationUpdateFolderSoapOut was auto-generated from WSDL.
type OperationUpdateFolderSoapOut struct {
	UpdateFolderResponse *UpdateFolderResponse `xml:"UpdateFolderResponse,omitempty" json:"UpdateFolderResponse,omitempty" yaml:"UpdateFolderResponse,omitempty"`
	ServerVersionInfo    *ServerVersionInfo    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateInboxRules.
// OperationUpdateInboxRulesSoapIn was auto-generated from WSDL.
type OperationUpdateInboxRulesSoapIn struct {
	UpdateInboxRules      *UpdateInboxRules      `xml:"UpdateInboxRules,omitempty" json:"UpdateInboxRules,omitempty" yaml:"UpdateInboxRules,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for UpdateInboxRules.
// OperationUpdateInboxRulesSoapOut was auto-generated from WSDL.
type OperationUpdateInboxRulesSoapOut struct {
	UpdateInboxRulesResponse *UpdateInboxRulesResponse `xml:"UpdateInboxRulesResponse,omitempty" json:"UpdateInboxRulesResponse,omitempty" yaml:"UpdateInboxRulesResponse,omitempty"`
	ServerVersionInfo        *ServerVersionInfo        `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateItem.
// OperationUpdateItemSoapIn was auto-generated from WSDL.
type OperationUpdateItemSoapIn struct {
	UpdateItem            *UpdateItem            `xml:"UpdateItem,omitempty" json:"UpdateItem,omitempty" yaml:"UpdateItem,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext       *TimeZoneContext       `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
}

// Operation wrapper for UpdateItem.
// OperationUpdateItemSoapOut was auto-generated from WSDL.
type OperationUpdateItemSoapOut struct {
	UpdateItemResponse *UpdateItemResponse `xml:"UpdateItemResponse,omitempty" json:"UpdateItemResponse,omitempty" yaml:"UpdateItemResponse,omitempty"`
	ServerVersionInfo  *ServerVersionInfo  `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateItemInRecoverableItems.
// OperationUpdateItemInRecoverableItemsSoapIn was auto-generated
// from WSDL.
type OperationUpdateItemInRecoverableItemsSoapIn struct {
	UpdateItemInRecoverableItems *UpdateItemInRecoverableItems `xml:"UpdateItemInRecoverableItems,omitempty" json:"UpdateItemInRecoverableItems,omitempty" yaml:"UpdateItemInRecoverableItems,omitempty"`
	ExchangeImpersonation        *ExchangeImpersonation        `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture               *MailboxCulture               `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	TimeZoneContext              *TimeZoneContext              `xml:"TimeZoneContext,omitempty" json:"TimeZoneContext,omitempty" yaml:"TimeZoneContext,omitempty"`
	ManagementRole               *ManagementRole               `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for UpdateItemInRecoverableItems.
// OperationUpdateItemInRecoverableItemsSoapOut was auto-generated
// from WSDL.
type OperationUpdateItemInRecoverableItemsSoapOut struct {
	UpdateItemInRecoverableItemsResponse *UpdateItemInRecoverableItemsResponse `xml:"UpdateItemInRecoverableItemsResponse,omitempty" json:"UpdateItemInRecoverableItemsResponse,omitempty" yaml:"UpdateItemInRecoverableItemsResponse,omitempty"`
	ServerVersionInfo                    *ServerVersionInfo                    `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateMeetingInstance.
// OperationUpdateMeetingInstanceSoapIn was auto-generated from
// WSDL.
type OperationUpdateMeetingInstanceSoapIn struct {
	UpdateMeetingInstanceRequest *UpdateMeetingInstanceRequest `xml:"UpdateMeetingInstanceRequest,omitempty" json:"UpdateMeetingInstanceRequest,omitempty" yaml:"UpdateMeetingInstanceRequest,omitempty"`
	RequestServerVersion         *RequestServerVersion         `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole               *ManagementRole               `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for UpdateMeetingInstance.
// OperationUpdateMeetingInstanceSoapOut was auto-generated from
// WSDL.
type OperationUpdateMeetingInstanceSoapOut struct {
	UpdateMeetingInstanceResponse *UpdateMeetingInstanceResponseType `xml:"UpdateMeetingInstanceResponse,omitempty" json:"UpdateMeetingInstanceResponse,omitempty" yaml:"UpdateMeetingInstanceResponse,omitempty"`
	ServerVersionInfo             *ServerVersionInfo             `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateMeetingSpace.
// OperationUpdateMeetingSpaceSoapIn was auto-generated from WSDL.
type OperationUpdateMeetingSpaceSoapIn struct {
	UpdateMeetingSpace   *UpdateMeetingSpaceType   `xml:"UpdateMeetingSpace,omitempty" json:"UpdateMeetingSpace,omitempty" yaml:"UpdateMeetingSpace,omitempty"`
	RequestServerVersion *RequestServerVersion `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
	ManagementRole       *ManagementRoleType       `xml:"ManagementRole,omitempty" json:"ManagementRole,omitempty" yaml:"ManagementRole,omitempty"`
}

// Operation wrapper for UpdateMeetingSpace.
// OperationUpdateMeetingSpaceSoapOut was auto-generated from WSDL.
type OperationUpdateMeetingSpaceSoapOut struct {
	UpdateMeetingSpaceResponseMessage *UpdateMeetingSpaceResponseMessage `xml:"UpdateMeetingSpaceResponseMessage,omitempty" json:"UpdateMeetingSpaceResponseMessage,omitempty" yaml:"UpdateMeetingSpaceResponseMessage,omitempty"`
	ServerVersionInfo                 *ServerVersionInfo                 `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UpdateUserConfiguration.
// OperationUpdateUserConfigurationSoapIn was auto-generated from
// WSDL.
type OperationUpdateUserConfigurationSoapIn struct {
	UpdateUserConfiguration *UpdateUserConfiguration `xml:"UpdateUserConfiguration,omitempty" json:"UpdateUserConfiguration,omitempty" yaml:"UpdateUserConfiguration,omitempty"`
	ExchangeImpersonation   *ExchangeImpersonation   `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture          *MailboxCulture          `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion    *RequestServerVersion    `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UpdateUserConfiguration.
// OperationUpdateUserConfigurationSoapOut was auto-generated from
// WSDL.
type OperationUpdateUserConfigurationSoapOut struct {
	UpdateUserConfigurationResponse *UpdateUserConfigurationResponse `xml:"UpdateUserConfigurationResponse,omitempty" json:"UpdateUserConfigurationResponse,omitempty" yaml:"UpdateUserConfigurationResponse,omitempty"`
	ServerVersionInfo               *ServerVersionInfo               `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// Operation wrapper for UploadItems.
// OperationUploadItemsSoapIn was auto-generated from WSDL.
type OperationUploadItemsSoapIn struct {
	UploadItems           *UploadItems           `xml:"UploadItems,omitempty" json:"UploadItems,omitempty" yaml:"UploadItems,omitempty"`
	ExchangeImpersonation *ExchangeImpersonation `xml:"ExchangeImpersonation,omitempty" json:"ExchangeImpersonation,omitempty" yaml:"ExchangeImpersonation,omitempty"`
	MailboxCulture        *MailboxCulture        `xml:"MailboxCulture,omitempty" json:"MailboxCulture,omitempty" yaml:"MailboxCulture,omitempty"`
	RequestServerVersion  *RequestServerVersion  `xml:"RequestServerVersion,omitempty" json:"RequestServerVersion,omitempty" yaml:"RequestServerVersion,omitempty"`
}

// Operation wrapper for UploadItems.
// OperationUploadItemsSoapOut was auto-generated from WSDL.
type OperationUploadItemsSoapOut struct {
	UploadItemsResponse *UploadItemsResponse `xml:"UploadItemsResponse,omitempty" json:"UploadItemsResponse,omitempty" yaml:"UploadItemsResponse,omitempty"`
	ServerVersionInfo   *ServerVersionInfo   `xml:"ServerVersionInfo,omitempty" json:"ServerVersionInfo,omitempty" yaml:"ServerVersionInfo,omitempty"`
}

// exchangeServicePortType implements the ExchangeServicePortType interface.
type exchangeServicePortType struct {
	cli SOAPClient
}

// AddDelegate was auto-generated from WSDL.
func (p *exchangeServicePortType) AddDelegate(AddDelegate *AddDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddDelegateResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddDelegateSoapIn `xml:"tns:AddDelegate"`
	}{
		OperationAddDelegateSoapIn{
			AddDelegate,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddDelegateSoapOut `xml:"AddDelegateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddDelegate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddDelegateResponse, γ.ServerVersionInfo, nil
}

// AddDistributionGroupToImList was auto-generated from WSDL.
func (p *exchangeServicePortType) AddDistributionGroupToImList(AddDistributionGroupToImList *AddDistributionGroupToImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddDistributionGroupToImListResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddDistributionGroupToImListSoapIn `xml:"tns:AddDistributionGroupToImList"`
	}{
		OperationAddDistributionGroupToImListSoapIn{
			AddDistributionGroupToImList,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddDistributionGroupToImListSoapOut `xml:"AddDistributionGroupToImListResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddDistributionGroupToImList", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddDistributionGroupToImListResponse, γ.ServerVersionInfo, nil
}

// AddImContactToGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) AddImContactToGroup(AddImContactToGroup *AddImContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddImContactToGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddImContactToGroupSoapIn `xml:"tns:AddImContactToGroup"`
	}{
		OperationAddImContactToGroupSoapIn{
			AddImContactToGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddImContactToGroupSoapOut `xml:"AddImContactToGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddImContactToGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddImContactToGroupResponse, γ.ServerVersionInfo, nil
}

// AddImGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) AddImGroup(AddImGroup *AddImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddImGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddImGroupSoapIn `xml:"tns:AddImGroup"`
	}{
		OperationAddImGroupSoapIn{
			AddImGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddImGroupSoapOut `xml:"AddImGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddImGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddImGroupResponse, γ.ServerVersionInfo, nil
}

// AddNewImContactToGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) AddNewImContactToGroup(AddNewImContactToGroup *AddNewImContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddNewImContactToGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddNewImContactToGroupSoapIn `xml:"tns:AddNewImContactToGroup"`
	}{
		OperationAddNewImContactToGroupSoapIn{
			AddNewImContactToGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddNewImContactToGroupSoapOut `xml:"AddNewImContactToGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddNewImContactToGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddNewImContactToGroupResponse, γ.ServerVersionInfo, nil
}

// AddNewTelUriContactToGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) AddNewTelUriContactToGroup(AddNewTelUriContactToGroup *AddNewTelUriContactToGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*AddNewTelUriContactToGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddNewTelUriContactToGroupSoapIn `xml:"tns:AddNewTelUriContactToGroup"`
	}{
		OperationAddNewTelUriContactToGroupSoapIn{
			AddNewTelUriContactToGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddNewTelUriContactToGroupSoapOut `xml:"AddNewTelUriContactToGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddNewTelUriContactToGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddNewTelUriContactToGroupResponse, γ.ServerVersionInfo, nil
}

// AddTag was auto-generated from WSDL.
func (p *exchangeServicePortType) AddTag(AddTag *AddTagType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*AddTagResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationAddTagSoapIn `xml:"tns:AddTag"`
	}{
		OperationAddTagSoapIn{
			AddTag,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationAddTagSoapOut `xml:"AddTagResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/AddTag", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.AddTagResponse, γ.ServerVersionInfo, nil
}

// ApplyConversationAction was auto-generated from WSDL.
func (p *exchangeServicePortType) ApplyConversationAction(ApplyConversationAction *ApplyConversationActionType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*ApplyConversationActionResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationApplyConversationActionSoapIn `xml:"tns:ApplyConversationAction"`
	}{
		OperationApplyConversationActionSoapIn{
			ApplyConversationAction,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationApplyConversationActionSoapOut `xml:"ApplyConversationActionResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ApplyConversationAction", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ApplyConversationActionResponse, γ.ServerVersionInfo, nil
}

// ArchiveItem was auto-generated from WSDL.
func (p *exchangeServicePortType) ArchiveItem(ArchiveItem *ArchiveItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ArchiveItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationArchiveItemSoapIn `xml:"tns:ArchiveItem"`
	}{
		OperationArchiveItemSoapIn{
			ArchiveItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationArchiveItemSoapOut `xml:"ArchiveItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ArchiveItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ArchiveItemResponse, γ.ServerVersionInfo, nil
}

// ConvertId was auto-generated from WSDL.
func (p *exchangeServicePortType) ConvertId(ConvertId *ConvertIdType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*ConvertIdResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationConvertIdSoapIn `xml:"tns:ConvertId"`
	}{
		OperationConvertIdSoapIn{
			ConvertId,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationConvertIdSoapOut `xml:"ConvertIdResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ConvertId", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ConvertIdResponse, γ.ServerVersionInfo, nil
}

// CopyFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) CopyFolder(CopyFolder *CopyFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CopyFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCopyFolderSoapIn `xml:"tns:CopyFolder"`
	}{
		OperationCopyFolderSoapIn{
			CopyFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationCopyFolderSoapOut `xml:"CopyFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CopyFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CopyFolderResponse, γ.ServerVersionInfo, nil
}

// CopyItem was auto-generated from WSDL.
func (p *exchangeServicePortType) CopyItem(CopyItem *CopyItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CopyItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCopyItemSoapIn `xml:"tns:CopyItem"`
	}{
		OperationCopyItemSoapIn{
			CopyItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationCopyItemSoapOut `xml:"CopyItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CopyItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CopyItemResponse, γ.ServerVersionInfo, nil
}

// CreateAttachment was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateAttachment(CreateAttachment *CreateAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateAttachmentResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateAttachmentSoapIn `xml:"tns:CreateAttachment"`
	}{
		OperationCreateAttachmentSoapIn{
			CreateAttachment,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationCreateAttachmentSoapOut `xml:"CreateAttachmentResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateAttachment", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateAttachmentResponse, γ.ServerVersionInfo, nil
}

// CreateFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateFolder(CreateFolder *CreateFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateFolderSoapIn `xml:"tns:CreateFolder"`
	}{
		OperationCreateFolderSoapIn{
			CreateFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationCreateFolderSoapOut `xml:"CreateFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateFolderResponse, γ.ServerVersionInfo, nil
}

// CreateFolderPath was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateFolderPath(CreateFolderPath *CreateFolderPathType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateFolderPathResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateFolderPathSoapIn `xml:"tns:CreateFolderPath"`
	}{
		OperationCreateFolderPathSoapIn{
			CreateFolderPath,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationCreateFolderPathSoapOut `xml:"CreateFolderPathResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolderPath", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateFolderPathResponse, γ.ServerVersionInfo, nil
}

// CreateItem was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateItem(CreateItem *CreateItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*CreateItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateItemSoapIn `xml:"tns:CreateItem"`
	}{
		OperationCreateItemSoapIn{
			CreateItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationCreateItemSoapOut `xml:"CreateItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateItemResponse, γ.ServerVersionInfo, nil
}

// CreateManagedFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateManagedFolder(CreateManagedFolder *CreateManagedFolderRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CreateManagedFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateManagedFolderSoapIn `xml:"tns:CreateManagedFolder"`
	}{
		OperationCreateManagedFolderSoapIn{
			CreateManagedFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationCreateManagedFolderSoapOut `xml:"CreateManagedFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateManagedFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateManagedFolderResponse, γ.ServerVersionInfo, nil
}

// CreateMeetingInstance was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateMeetingInstance(CreateMeetingInstanceRequest *CreateMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*CreateMeetingInstanceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateMeetingInstanceSoapIn `xml:"tns:CreateMeetingInstance"`
	}{
		OperationCreateMeetingInstanceSoapIn{
			CreateMeetingInstanceRequest,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationCreateMeetingInstanceSoapOut `xml:"CreateMeetingInstanceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateMeetingInstanceRequest", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateMeetingInstanceResponse, γ.ServerVersionInfo, nil
}

// CreateMeetingSpace was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateMeetingSpace(CreateMeetingSpace *CreateMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*CreateMeetingSpaceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateMeetingSpaceSoapIn `xml:"tns:CreateMeetingSpace"`
	}{
		OperationCreateMeetingSpaceSoapIn{
			CreateMeetingSpace,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationCreateMeetingSpaceSoapOut `xml:"CreateMeetingSpaceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateMeetingSpace", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateMeetingSpaceResponseMessage, γ.ServerVersionInfo, nil
}

// CreateUserConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) CreateUserConfiguration(CreateUserConfiguration *CreateUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*CreateUserConfigurationResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationCreateUserConfigurationSoapIn `xml:"tns:CreateUserConfiguration"`
	}{
		OperationCreateUserConfigurationSoapIn{
			CreateUserConfiguration,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationCreateUserConfigurationSoapOut `xml:"CreateUserConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/CreateUserConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.CreateUserConfigurationResponse, γ.ServerVersionInfo, nil
}

// DeleteAttachment was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteAttachment(DeleteAttachment *DeleteAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteAttachmentResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteAttachmentSoapIn `xml:"tns:DeleteAttachment"`
	}{
		OperationDeleteAttachmentSoapIn{
			DeleteAttachment,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDeleteAttachmentSoapOut `xml:"DeleteAttachmentResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteAttachment", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteAttachmentResponse, γ.ServerVersionInfo, nil
}

// DeleteFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteFolder(DeleteFolder *DeleteFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteFolderSoapIn `xml:"tns:DeleteFolder"`
	}{
		OperationDeleteFolderSoapIn{
			DeleteFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDeleteFolderSoapOut `xml:"DeleteFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteFolderResponse, γ.ServerVersionInfo, nil
}

// DeleteItem was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteItem(DeleteItem *DeleteItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteItemSoapIn `xml:"tns:DeleteItem"`
	}{
		OperationDeleteItemSoapIn{
			DeleteItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDeleteItemSoapOut `xml:"DeleteItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteItemResponse, γ.ServerVersionInfo, nil
}

// DeleteMeetingInstance was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteMeetingInstance(DeleteMeetingInstanceRequest *DeleteMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*DeleteMeetingInstanceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteMeetingInstanceSoapIn `xml:"tns:DeleteMeetingInstance"`
	}{
		OperationDeleteMeetingInstanceSoapIn{
			DeleteMeetingInstanceRequest,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationDeleteMeetingInstanceSoapOut `xml:"DeleteMeetingInstanceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteMeetingInstanceRequest", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteMeetingInstanceResponse, γ.ServerVersionInfo, nil
}

// DeleteMeetingSpace was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteMeetingSpace(DeleteMeetingSpace *DeleteMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*DeleteMeetingSpaceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteMeetingSpaceSoapIn `xml:"tns:DeleteMeetingSpace"`
	}{
		OperationDeleteMeetingSpaceSoapIn{
			DeleteMeetingSpace,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationDeleteMeetingSpaceSoapOut `xml:"DeleteMeetingSpaceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteMeetingSpace", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteMeetingSpaceResponseMessage, γ.ServerVersionInfo, nil
}

// DeleteSearchSuggestion was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteSearchSuggestion(DeleteSearchSuggestion *DeleteSearchSuggestion, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteSearchSuggestionResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteSearchSuggestionSoapIn `xml:"tns:DeleteSearchSuggestion"`
	}{
		OperationDeleteSearchSuggestionSoapIn{
			DeleteSearchSuggestion,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDeleteSearchSuggestionSoapOut `xml:"DeleteSearchSuggestionResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteSearchSuggestion", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteSearchSuggestionResponse, γ.ServerVersionInfo, nil
}

// DeleteUserConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) DeleteUserConfiguration(DeleteUserConfiguration *DeleteUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DeleteUserConfigurationResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationDeleteUserConfigurationSoapIn `xml:"tns:DeleteUserConfiguration"`
	}{
		OperationDeleteUserConfigurationSoapIn{
			DeleteUserConfiguration,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDeleteUserConfigurationSoapOut `xml:"DeleteUserConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteUserConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DeleteUserConfigurationResponse, γ.ServerVersionInfo, nil
}

// DisableApp was auto-generated from WSDL.
func (p *exchangeServicePortType) DisableApp(DisableApp *DisableAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*DisableAppResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationDisableAppSoapIn `xml:"tns:DisableApp"`
	}{
		OperationDisableAppSoapIn{
			DisableApp,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDisableAppSoapOut `xml:"DisableAppResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DisableApp", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DisableAppResponse, γ.ServerVersionInfo, nil
}

// DisconnectPhoneCall was auto-generated from WSDL.
func (p *exchangeServicePortType) DisconnectPhoneCall(DisconnectPhoneCall *DisconnectPhoneCallType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*DisconnectPhoneCallResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationDisconnectPhoneCallSoapIn `xml:"tns:DisconnectPhoneCall"`
	}{
		OperationDisconnectPhoneCallSoapIn{
			DisconnectPhoneCall,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationDisconnectPhoneCallSoapOut `xml:"DisconnectPhoneCallResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/DisconnectPhoneCall", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.DisconnectPhoneCallResponse, γ.ServerVersionInfo, nil
}

// EmptyFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) EmptyFolder(EmptyFolder *EmptyFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*EmptyFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationEmptyFolderSoapIn `xml:"tns:EmptyFolder"`
	}{
		OperationEmptyFolderSoapIn{
			EmptyFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationEmptyFolderSoapOut `xml:"EmptyFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/EmptyFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.EmptyFolderResponse, γ.ServerVersionInfo, nil
}

// EndSearchSession was auto-generated from WSDL.
func (p *exchangeServicePortType) EndSearchSession(EndSearchSession *EndSearchSession, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*EndSearchSessionResponseMessage, *ServerVersionInfo, error) {
	α := struct {
		OperationEndSearchSessionSoapIn `xml:"tns:EndSearchSession"`
	}{
		OperationEndSearchSessionSoapIn{
			EndSearchSession,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationEndSearchSessionSoapOut `xml:"EndSearchSessionResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/EndSearchSession", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.EndSearchSessionResponse, γ.ServerVersionInfo, nil
}

// ExecuteSearch was auto-generated from WSDL.
func (p *exchangeServicePortType) ExecuteSearch(ExecuteSearch *ExecuteSearch, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ExecuteSearchResponseMessage, *ServerVersionInfo, error) {
	α := struct {
		OperationExecuteSearchSoapIn `xml:"tns:ExecuteSearch"`
	}{
		OperationExecuteSearchSoapIn{
			ExecuteSearch,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationExecuteSearchSoapOut `xml:"ExecuteSearchResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ExecuteSearch", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ExecuteSearchResponse, γ.ServerVersionInfo, nil
}

// ExpandDL was auto-generated from WSDL.
func (p *exchangeServicePortType) ExpandDL(ExpandDL *ExpandDLType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ExpandDLResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationExpandDLSoapIn `xml:"tns:ExpandDL"`
	}{
		OperationExpandDLSoapIn{
			ExpandDL,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationExpandDLSoapOut `xml:"ExpandDLResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ExpandDL", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ExpandDLResponse, γ.ServerVersionInfo, nil
}

// ExportItems was auto-generated from WSDL.
func (p *exchangeServicePortType) ExportItems(ExportItems *ExportItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*ExportItemsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationExportItemsSoapIn `xml:"tns:ExportItems"`
	}{
		OperationExportItemsSoapIn{
			ExportItems,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationExportItemsSoapOut `xml:"ExportItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ExportItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ExportItemsResponse, γ.ServerVersionInfo, nil
}

// FindAvailableMeetingTimes was auto-generated from WSDL.
func (p *exchangeServicePortType) FindAvailableMeetingTimes(FindAvailableMeetingTimes *FindAvailableMeetingTimesType, RequestServerVersion *RequestServerVersion) (*FindAvailableMeetingTimesResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindAvailableMeetingTimesSoapIn `xml:"tns:FindAvailableMeetingTimes"`
	}{
		OperationFindAvailableMeetingTimesSoapIn{
			FindAvailableMeetingTimes,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationFindAvailableMeetingTimesSoapOut `xml:"FindAvailableMeetingTimesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindAvailableMeetingTimes", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindAvailableMeetingTimesResponse, γ.ServerVersionInfo, nil
}

// FindConversation was auto-generated from WSDL.
func (p *exchangeServicePortType) FindConversation(FindConversation *FindConversationType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindConversationResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindConversationSoapIn `xml:"tns:FindConversation"`
	}{
		OperationFindConversationSoapIn{
			FindConversation,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationFindConversationSoapOut `xml:"FindConversationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindConversation", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindConversationResponse, γ.ServerVersionInfo, nil
}

// FindFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) FindFolder(FindFolder *FindFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*FindFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindFolderSoapIn `xml:"tns:FindFolder"`
	}{
		OperationFindFolderSoapIn{
			FindFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
			ManagementRole,
		},
	}

	γ := struct {
		OperationFindFolderSoapOut `xml:"FindFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindFolderResponse, γ.ServerVersionInfo, nil
}

// FindItem was auto-generated from WSDL.
func (p *exchangeServicePortType) FindItem(FindItem *FindItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, DateTimePrecision DateTimePrecisionType, ManagementRole *ManagementRoleType) (*FindItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindItemSoapIn `xml:"tns:FindItem"`
	}{
		OperationFindItemSoapIn{
			FindItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
			&DateTimePrecision,
			ManagementRole,
		},
	}

	γ := struct {
		OperationFindItemSoapOut `xml:"FindItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindItemResponse, γ.ServerVersionInfo, nil
}

// FindMeetingSpaceByJoinUrl was auto-generated from WSDL.
func (p *exchangeServicePortType) FindMeetingSpaceByJoinUrl(FindMeetingSpaceByJoinUrl *FindMeetingSpaceByJoinUrlType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*FindMeetingSpaceByJoinUrlResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindMeetingSpaceByJoinUrlSoapIn `xml:"tns:FindMeetingSpaceByJoinUrl"`
	}{
		OperationFindMeetingSpaceByJoinUrlSoapIn{
			FindMeetingSpaceByJoinUrl,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationFindMeetingSpaceByJoinUrlSoapOut `xml:"FindMeetingSpaceByJoinUrlResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindMeetingSpaceByJoinUrl", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindMeetingSpaceByJoinUrlResponseMessage, γ.ServerVersionInfo, nil
}

// FindMeetingTimeCandidates was auto-generated from WSDL.
func (p *exchangeServicePortType) FindMeetingTimeCandidates(FindMeetingTimeCandidates *FindMeetingTimeCandidatesType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*FindMeetingTimeCandidatesResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindMeetingTimeCandidatesSoapIn `xml:"tns:FindMeetingTimeCandidates"`
	}{
		OperationFindMeetingTimeCandidatesSoapIn{
			FindMeetingTimeCandidates,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationFindMeetingTimeCandidatesSoapOut `xml:"FindMeetingTimeCandidatesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindMeetingTimeCandidates", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindMeetingTimeCandidatesResponse, γ.ServerVersionInfo, nil
}

// FindMessageTrackingReport was auto-generated from WSDL.
func (p *exchangeServicePortType) FindMessageTrackingReport(FindMessageTrackingReport *FindMessageTrackingReportRequestType, RequestServerVersion *RequestServerVersion) (*FindMessageTrackingReportResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindMessageTrackingReportSoapIn `xml:"tns:FindMessageTrackingReport"`
	}{
		OperationFindMessageTrackingReportSoapIn{
			FindMessageTrackingReport,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationFindMessageTrackingReportSoapOut `xml:"FindMessageTrackingReportResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindMessageTrackingReport", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindMessageTrackingReportResponse, γ.ServerVersionInfo, nil
}

// FindPeople was auto-generated from WSDL.
func (p *exchangeServicePortType) FindPeople(FindPeople *FindPeopleType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindPeopleResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindPeopleSoapIn `xml:"tns:FindPeople"`
	}{
		OperationFindPeopleSoapIn{
			FindPeople,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationFindPeopleSoapOut `xml:"FindPeopleResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindPeople", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindPeopleResponse, γ.ServerVersionInfo, nil
}

// FindTags was auto-generated from WSDL.
func (p *exchangeServicePortType) FindTags(FindTags *FindTagsType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*FindTagsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationFindTagsSoapIn `xml:"tns:FindTags"`
	}{
		OperationFindTagsSoapIn{
			FindTags,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationFindTagsSoapOut `xml:"FindTagsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/FindTags", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.FindTagsResponse, γ.ServerVersionInfo, nil
}

// GetAppManifests was auto-generated from WSDL.
func (p *exchangeServicePortType) GetAppManifests(GetAppManifests *GetAppManifestsType, RequestServerVersion *RequestServerVersion) (*GetAppManifestsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetAppManifestsSoapIn `xml:"tns:GetAppManifests"`
	}{
		OperationGetAppManifestsSoapIn{
			GetAppManifests,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetAppManifestsSoapOut `xml:"GetAppManifestsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetAppManifests", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetAppManifestsResponse, γ.ServerVersionInfo, nil
}

// GetAppMarketplaceUrl was auto-generated from WSDL.
func (p *exchangeServicePortType) GetAppMarketplaceUrl(GetAppMarketplaceUrl *GetAppMarketplaceUrlType, RequestServerVersion *RequestServerVersion) (*GetAppMarketplaceUrlResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetAppMarketplaceUrlSoapIn `xml:"tns:GetAppMarketplaceUrl"`
	}{
		OperationGetAppMarketplaceUrlSoapIn{
			GetAppMarketplaceUrl,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetAppMarketplaceUrlSoapOut `xml:"GetAppMarketplaceUrlResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetAppMarketplaceUrl", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetAppMarketplaceUrlResponse, γ.ServerVersionInfo, nil
}

// GetAttachment was auto-generated from WSDL.
func (p *exchangeServicePortType) GetAttachment(GetAttachment *GetAttachmentType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*GetAttachmentResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetAttachmentSoapIn `xml:"tns:GetAttachment"`
	}{
		OperationGetAttachmentSoapIn{
			GetAttachment,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationGetAttachmentSoapOut `xml:"GetAttachmentResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetAttachment", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetAttachmentResponse, γ.ServerVersionInfo, nil
}

// GetClientAccessToken was auto-generated from WSDL.
func (p *exchangeServicePortType) GetClientAccessToken(GetClientAccessToken *GetClientAccessTokenType, RequestServerVersion *RequestServerVersion) (*GetClientAccessTokenResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetClientAccessTokenSoapIn `xml:"tns:GetClientAccessToken"`
	}{
		OperationGetClientAccessTokenSoapIn{
			GetClientAccessToken,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetClientAccessTokenSoapOut `xml:"GetClientAccessTokenResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetClientAccessToken", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetClientAccessTokenResponse, γ.ServerVersionInfo, nil
}

// GetConversationItems was auto-generated from WSDL.
func (p *exchangeServicePortType) GetConversationItems(GetConversationItems *GetConversationItemsType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetConversationItemsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetConversationItemsSoapIn `xml:"tns:GetConversationItems"`
	}{
		OperationGetConversationItemsSoapIn{
			GetConversationItems,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetConversationItemsSoapOut `xml:"GetConversationItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetConversationItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetConversationItemsResponse, γ.ServerVersionInfo, nil
}

// GetDelegate was auto-generated from WSDL.
func (p *exchangeServicePortType) GetDelegate(GetDelegate *GetDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetDelegateResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetDelegateSoapIn `xml:"tns:GetDelegate"`
	}{
		OperationGetDelegateSoapIn{
			GetDelegate,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetDelegateSoapOut `xml:"GetDelegateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetDelegate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetDelegateResponse, γ.ServerVersionInfo, nil
}

// GetDiscoverySearchConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) GetDiscoverySearchConfiguration(GetDiscoverySearchConfiguration *GetDiscoverySearchConfigurationType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetDiscoverySearchConfigurationResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetDiscoverySearchConfigurationSoapIn `xml:"tns:GetDiscoverySearchConfiguration"`
	}{
		OperationGetDiscoverySearchConfigurationSoapIn{
			GetDiscoverySearchConfiguration,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetDiscoverySearchConfigurationSoapOut `xml:"GetDiscoverySearchConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetDiscoverySearchConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetDiscoverySearchConfigurationResponse, γ.ServerVersionInfo, nil
}

// GetEvents was auto-generated from WSDL.
func (p *exchangeServicePortType) GetEvents(GetEvents *GetEventsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetEventsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetEventsSoapIn `xml:"tns:GetEvents"`
	}{
		OperationGetEventsSoapIn{
			GetEvents,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetEventsSoapOut `xml:"GetEventsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetEventsResponse, γ.ServerVersionInfo, nil
}

// GetFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) GetFolder(GetFolder *GetFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*GetFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetFolderSoapIn `xml:"tns:GetFolder"`
	}{
		OperationGetFolderSoapIn{
			GetFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetFolderSoapOut `xml:"GetFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetFolderResponse, γ.ServerVersionInfo, nil
}

// GetHoldOnMailboxes was auto-generated from WSDL.
func (p *exchangeServicePortType) GetHoldOnMailboxes(GetHoldOnMailboxes *GetHoldOnMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetHoldOnMailboxesResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetHoldOnMailboxesSoapIn `xml:"tns:GetHoldOnMailboxes"`
	}{
		OperationGetHoldOnMailboxesSoapIn{
			GetHoldOnMailboxes,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetHoldOnMailboxesSoapOut `xml:"GetHoldOnMailboxesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetHoldOnMailboxes", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetHoldOnMailboxesResponse, γ.ServerVersionInfo, nil
}

// GetImItemList was auto-generated from WSDL.
func (p *exchangeServicePortType) GetImItemList(GetImItemList *GetImItemListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetImItemListResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetImItemListSoapIn `xml:"tns:GetImItemList"`
	}{
		OperationGetImItemListSoapIn{
			GetImItemList,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetImItemListSoapOut `xml:"GetImItemListResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetImItemList", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetImItemListResponse, γ.ServerVersionInfo, nil
}

// GetImItems was auto-generated from WSDL.
func (p *exchangeServicePortType) GetImItems(GetImItems *GetImItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetImItemsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetImItemsSoapIn `xml:"tns:GetImItems"`
	}{
		OperationGetImItemsSoapIn{
			GetImItems,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetImItemsSoapOut `xml:"GetImItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetImItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetImItemsResponse, γ.ServerVersionInfo, nil
}

// GetInboxRules was auto-generated from WSDL.
func (p *exchangeServicePortType) GetInboxRules(GetInboxRules *GetInboxRulesRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*GetInboxRulesResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetInboxRulesSoapIn `xml:"tns:GetInboxRules"`
	}{
		OperationGetInboxRulesSoapIn{
			GetInboxRules,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationGetInboxRulesSoapOut `xml:"GetInboxRulesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetInboxRules", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetInboxRulesResponse, γ.ServerVersionInfo, nil
}

// GetItem was auto-generated from WSDL.
func (p *exchangeServicePortType) GetItem(GetItem *GetItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, DateTimePrecision DateTimePrecisionType, ManagementRole *ManagementRoleType) (*GetItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetItemSoapIn `xml:"tns:GetItem"`
	}{
		OperationGetItemSoapIn{
			GetItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
			&DateTimePrecision,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetItemSoapOut `xml:"GetItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetItemResponse, γ.ServerVersionInfo, nil
}

// GetLastPrivateCatalogUpdate was auto-generated from WSDL.
func (p *exchangeServicePortType) GetLastPrivateCatalogUpdate(GetLastPrivateCatalogUpdate *GetLastPrivateCatalogUpdateType, RequestServerVersion *RequestServerVersion) (*GetLastPrivateCatalogUpdateResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetLastPrivateCatalogUpdateSoapIn `xml:"tns:GetLastPrivateCatalogUpdate"`
	}{
		OperationGetLastPrivateCatalogUpdateSoapIn{
			GetLastPrivateCatalogUpdate,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetLastPrivateCatalogUpdateSoapOut `xml:"GetLastPrivateCatalogUpdateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetLastPrivateCatalogUpdate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetLastPrivateCatalogUpdateResponse, γ.ServerVersionInfo, nil
}

// GetMailTips was auto-generated from WSDL.
func (p *exchangeServicePortType) GetMailTips(GetMailTips *GetMailTipsType, RequestServerVersion *RequestServerVersion, MailboxCulture *MailboxCultureType) (*GetMailTipsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetMailTipsSoapIn `xml:"tns:GetMailTips"`
	}{
		OperationGetMailTipsSoapIn{
			GetMailTips,
			RequestServerVersion,
			MailboxCulture,
		},
	}

	γ := struct {
		OperationGetMailTipsSoapOut `xml:"GetMailTipsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetMailTips", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetMailTipsResponse, γ.ServerVersionInfo, nil
}

// GetMeetingInstance was auto-generated from WSDL.
func (p *exchangeServicePortType) GetMeetingInstance(GetMeetingInstanceRequest *GetMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetMeetingInstanceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetMeetingInstanceSoapIn `xml:"tns:GetMeetingInstance"`
	}{
		OperationGetMeetingInstanceSoapIn{
			GetMeetingInstanceRequest,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetMeetingInstanceSoapOut `xml:"GetMeetingInstanceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetMeetingInstanceRequest", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetMeetingInstanceResponse, γ.ServerVersionInfo, nil
}

// GetMeetingSpace was auto-generated from WSDL.
func (p *exchangeServicePortType) GetMeetingSpace(GetMeetingSpace *GetMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetMeetingSpaceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetMeetingSpaceSoapIn `xml:"tns:GetMeetingSpace"`
	}{
		OperationGetMeetingSpaceSoapIn{
			GetMeetingSpace,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetMeetingSpaceSoapOut `xml:"GetMeetingSpaceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetMeetingSpace", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetMeetingSpaceResponseMessage, γ.ServerVersionInfo, nil
}

// GetMessageTrackingReport was auto-generated from WSDL.
func (p *exchangeServicePortType) GetMessageTrackingReport(GetMessageTrackingReport *GetMessageTrackingReportRequestType, RequestServerVersion *RequestServerVersion) (*GetMessageTrackingReportResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetMessageTrackingReportSoapIn `xml:"tns:GetMessageTrackingReport"`
	}{
		OperationGetMessageTrackingReportSoapIn{
			GetMessageTrackingReport,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetMessageTrackingReportSoapOut `xml:"GetMessageTrackingReportResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetMessageTrackingReport", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetMessageTrackingReportResponse, γ.ServerVersionInfo, nil
}

// GetNonIndexableItemDetails was auto-generated from WSDL.
func (p *exchangeServicePortType) GetNonIndexableItemDetails(GetNonIndexableItemDetails *GetNonIndexableItemDetailsType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetNonIndexableItemDetailsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetNonIndexableItemDetailsSoapIn `xml:"tns:GetNonIndexableItemDetails"`
	}{
		OperationGetNonIndexableItemDetailsSoapIn{
			GetNonIndexableItemDetails,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetNonIndexableItemDetailsSoapOut `xml:"GetNonIndexableItemDetailsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemDetails", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetNonIndexableItemDetailsResponse, γ.ServerVersionInfo, nil
}

// GetNonIndexableItemStatistics was auto-generated from WSDL.
func (p *exchangeServicePortType) GetNonIndexableItemStatistics(GetNonIndexableItemStatistics *GetNonIndexableItemStatisticsType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetNonIndexableItemStatisticsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetNonIndexableItemStatisticsSoapIn `xml:"tns:GetNonIndexableItemStatistics"`
	}{
		OperationGetNonIndexableItemStatisticsSoapIn{
			GetNonIndexableItemStatistics,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetNonIndexableItemStatisticsSoapOut `xml:"GetNonIndexableItemStatisticsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemStatistics", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetNonIndexableItemStatisticsResponse, γ.ServerVersionInfo, nil
}

// GetPasswordExpirationDate was auto-generated from WSDL.
func (p *exchangeServicePortType) GetPasswordExpirationDate(GetPasswordExpirationDate *GetPasswordExpirationDateType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetPasswordExpirationDateResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetPasswordExpirationDateSoapIn `xml:"tns:GetPasswordExpirationDate"`
	}{
		OperationGetPasswordExpirationDateSoapIn{
			GetPasswordExpirationDate,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetPasswordExpirationDateSoapOut `xml:"GetPasswordExpirationDateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetPasswordExpirationDate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetPasswordExpirationDateResponse, γ.ServerVersionInfo, nil
}

// GetPersona was auto-generated from WSDL.
func (p *exchangeServicePortType) GetPersona(GetPersona *GetPersonaType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetPersonaResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetPersonaSoapIn `xml:"tns:GetPersona"`
	}{
		OperationGetPersonaSoapIn{
			GetPersona,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetPersonaSoapOut `xml:"GetPersonaResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetPersona", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetPersonaResponseMessage, γ.ServerVersionInfo, nil
}

// GetPhoneCallInformation was auto-generated from WSDL.
func (p *exchangeServicePortType) GetPhoneCallInformation(GetPhoneCallInformation *GetPhoneCallInformationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetPhoneCallInformationResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetPhoneCallInformationSoapIn `xml:"tns:GetPhoneCallInformation"`
	}{
		OperationGetPhoneCallInformationSoapIn{
			GetPhoneCallInformation,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetPhoneCallInformationSoapOut `xml:"GetPhoneCallInformationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetPhoneCallInformation", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetPhoneCallInformationResponse, γ.ServerVersionInfo, nil
}

// GetPrivateCatalogAddIns was auto-generated from WSDL.
func (p *exchangeServicePortType) GetPrivateCatalogAddIns(GetPrivateCatalogAddIns *GetPrivateCatalogAddInsType, RequestServerVersion *RequestServerVersion) (*GetPrivateCatalogAddInsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetPrivateCatalogAddInsSoapIn `xml:"tns:GetPrivateCatalogAddIns"`
	}{
		OperationGetPrivateCatalogAddInsSoapIn{
			GetPrivateCatalogAddIns,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetPrivateCatalogAddInsSoapOut `xml:"GetPrivateCatalogAddInsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetPrivateCatalogAddIns", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetPrivateCatalogAddInsResponse, γ.ServerVersionInfo, nil
}

// GetRoomLists was auto-generated from WSDL.
func (p *exchangeServicePortType) GetRoomLists(GetRoomLists *GetRoomListsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetRoomListsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetRoomListsSoapIn `xml:"tns:GetRoomLists"`
	}{
		OperationGetRoomListsSoapIn{
			GetRoomLists,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetRoomListsSoapOut `xml:"GetRoomListsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetRoomLists", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetRoomListsResponse, γ.ServerVersionInfo, nil
}

// GetRooms was auto-generated from WSDL.
func (p *exchangeServicePortType) GetRooms(GetRooms *GetRoomsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetRoomsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetRoomsSoapIn `xml:"tns:GetRooms"`
	}{
		OperationGetRoomsSoapIn{
			GetRooms,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetRoomsSoapOut `xml:"GetRoomsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetRooms", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetRoomsResponse, γ.ServerVersionInfo, nil
}

// GetSearchSuggestions was auto-generated from WSDL.
func (p *exchangeServicePortType) GetSearchSuggestions(GetSearchSuggestions *GetSearchSuggestions, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetSearchSuggestionsResponseMessage, *ServerVersionInfo, error) {
	α := struct {
		OperationGetSearchSuggestionsSoapIn `xml:"tns:GetSearchSuggestions"`
	}{
		OperationGetSearchSuggestionsSoapIn{
			GetSearchSuggestions,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetSearchSuggestionsSoapOut `xml:"GetSearchSuggestionsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetSearchSuggestions", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetSearchSuggestionsResponse, γ.ServerVersionInfo, nil
}

// GetSearchableMailboxes was auto-generated from WSDL.
func (p *exchangeServicePortType) GetSearchableMailboxes(GetSearchableMailboxes *GetSearchableMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*GetSearchableMailboxesResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetSearchableMailboxesSoapIn `xml:"tns:GetSearchableMailboxes"`
	}{
		OperationGetSearchableMailboxesSoapIn{
			GetSearchableMailboxes,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationGetSearchableMailboxesSoapOut `xml:"GetSearchableMailboxesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetSearchableMailboxes", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetSearchableMailboxesResponse, γ.ServerVersionInfo, nil
}

// GetServerTimeZones was auto-generated from WSDL.
func (p *exchangeServicePortType) GetServerTimeZones(GetServerTimeZones *GetServerTimeZonesType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetServerTimeZonesResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetServerTimeZonesSoapIn `xml:"tns:GetServerTimeZones"`
	}{
		OperationGetServerTimeZonesSoapIn{
			GetServerTimeZones,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetServerTimeZonesSoapOut `xml:"GetServerTimeZonesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetServerTimeZones", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetServerTimeZonesResponse, γ.ServerVersionInfo, nil
}

// GetServiceConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) GetServiceConfiguration(GetServiceConfiguration *GetServiceConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion, MailboxCulture *MailboxCultureType) (*GetServiceConfigurationResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetServiceConfigurationSoapIn `xml:"tns:GetServiceConfiguration"`
	}{
		OperationGetServiceConfigurationSoapIn{
			GetServiceConfiguration,
			ExchangeImpersonation,
			RequestServerVersion,
			MailboxCulture,
		},
	}

	γ := struct {
		OperationGetServiceConfigurationSoapOut `xml:"GetServiceConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetServiceConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetServiceConfigurationResponse, γ.ServerVersionInfo, nil
}

// GetSharingFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) GetSharingFolder(GetSharingFolder *GetSharingFolderType, RequestServerVersion *RequestServerVersion) (*GetSharingFolderResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetSharingFolderSoapIn `xml:"tns:GetSharingFolder"`
	}{
		OperationGetSharingFolderSoapIn{
			GetSharingFolder,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetSharingFolderSoapOut `xml:"GetSharingFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetSharingFolderResponse, γ.ServerVersionInfo, nil
}

// GetSharingMetadata was auto-generated from WSDL.
func (p *exchangeServicePortType) GetSharingMetadata(GetSharingMetadata *GetSharingMetadataType, RequestServerVersion *RequestServerVersion) (*GetSharingMetadataResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetSharingMetadataSoapIn `xml:"tns:GetSharingMetadata"`
	}{
		OperationGetSharingMetadataSoapIn{
			GetSharingMetadata,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetSharingMetadataSoapOut `xml:"GetSharingMetadataResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingMetadata", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetSharingMetadataResponse, γ.ServerVersionInfo, nil
}

// GetSpecificUserConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) GetSpecificUserConfiguration(GetSpecificUserConfiguration *GetSpecificUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetSpecificUserConfigurationResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetSpecificUserConfigurationSoapIn `xml:"tns:GetSpecificUserConfiguration"`
	}{
		OperationGetSpecificUserConfigurationSoapIn{
			GetSpecificUserConfiguration,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetSpecificUserConfigurationSoapOut `xml:"GetSpecificUserConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetSpecificUserConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetSpecificUserConfigurationResponse, γ.ServerVersionInfo, nil
}

// GetStreamingEvents was auto-generated from WSDL.
func (p *exchangeServicePortType) GetStreamingEvents(GetStreamingEvents *GetStreamingEventsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetStreamingEventsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetStreamingEventsSoapIn `xml:"tns:GetStreamingEvents"`
	}{
		OperationGetStreamingEventsSoapIn{
			GetStreamingEvents,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetStreamingEventsSoapOut `xml:"GetStreamingEventsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetStreamingEventsResponse, γ.ServerVersionInfo, nil
}

// GetUserAvailability was auto-generated from WSDL.
func (p *exchangeServicePortType) GetUserAvailability(GetUserAvailabilityRequest *GetUserAvailabilityRequestType, ExchangeImpersonation *ExchangeImpersonationType, TimeZoneContext *TimeZoneContextType, RequestServerVersion *RequestServerVersion) (*GetUserAvailabilityResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetUserAvailabilitySoapIn `xml:"tns:GetUserAvailability"`
	}{
		OperationGetUserAvailabilitySoapIn{
			GetUserAvailabilityRequest,
			ExchangeImpersonation,
			TimeZoneContext,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetUserAvailabilitySoapOut `xml:"GetUserAvailabilityResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserAvailability", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetUserAvailabilityResponse, γ.ServerVersionInfo, nil
}

// GetUserConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) GetUserConfiguration(GetUserConfiguration *GetUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*GetUserConfigurationResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetUserConfigurationSoapIn `xml:"tns:GetUserConfiguration"`
	}{
		OperationGetUserConfigurationSoapIn{
			GetUserConfiguration,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetUserConfigurationSoapOut `xml:"GetUserConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetUserConfigurationResponse, γ.ServerVersionInfo, nil
}

// GetUserOofSettings was auto-generated from WSDL.
func (p *exchangeServicePortType) GetUserOofSettings(GetUserOofSettingsRequest *GetUserOofSettingsRequest, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*GetUserOofSettingsResponse, *ServerVersionInfo, error) {
	α := struct {
		OperationGetUserOofSettingsSoapIn `xml:"tns:GetUserOofSettings"`
	}{
		OperationGetUserOofSettingsSoapIn{
			GetUserOofSettingsRequest,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetUserOofSettingsSoapOut `xml:"GetUserOofSettingsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserOofSettings", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetUserOofSettingsResponse, γ.ServerVersionInfo, nil
}

// GetUserPhoto was auto-generated from WSDL.
func (p *exchangeServicePortType) GetUserPhoto(GetUserPhoto *GetUserPhotoType, RequestServerVersion *RequestServerVersion) (*GetUserPhotoResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetUserPhotoSoapIn `xml:"tns:GetUserPhoto"`
	}{
		OperationGetUserPhotoSoapIn{
			GetUserPhoto,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetUserPhotoSoapOut `xml:"GetUserPhotoResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserPhoto", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetUserPhotoResponse, γ.ServerVersionInfo, nil
}

// GetUserRetentionPolicyTags was auto-generated from WSDL.
func (p *exchangeServicePortType) GetUserRetentionPolicyTags(GetUserRetentionPolicyTags *GetUserRetentionPolicyTagsType, RequestServerVersion *RequestServerVersion) (*GetUserRetentionPolicyTagsResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationGetUserRetentionPolicyTagsSoapIn `xml:"tns:GetUserRetentionPolicyTags"`
	}{
		OperationGetUserRetentionPolicyTagsSoapIn{
			GetUserRetentionPolicyTags,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationGetUserRetentionPolicyTagsSoapOut `xml:"GetUserRetentionPolicyTagsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserRetentionPolicyTags", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.GetUserRetentionPolicyTagsResponse, γ.ServerVersionInfo, nil
}

// HideTag was auto-generated from WSDL.
func (p *exchangeServicePortType) HideTag(HideTag *HideTagType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*HideTagResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationHideTagSoapIn `xml:"tns:HideTag"`
	}{
		OperationHideTagSoapIn{
			HideTag,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationHideTagSoapOut `xml:"HideTagResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/HideTag", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.HideTagResponse, γ.ServerVersionInfo, nil
}

// InstallApp was auto-generated from WSDL.
func (p *exchangeServicePortType) InstallApp(InstallApp *InstallAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*InstallAppResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationInstallAppSoapIn `xml:"tns:InstallApp"`
	}{
		OperationInstallAppSoapIn{
			InstallApp,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationInstallAppSoapOut `xml:"InstallAppResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/InstallApp", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.InstallAppResponse, γ.ServerVersionInfo, nil
}

// MarkAllItemsAsRead was auto-generated from WSDL.
func (p *exchangeServicePortType) MarkAllItemsAsRead(MarkAllItemsAsRead *MarkAllItemsAsReadType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MarkAllItemsAsReadResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationMarkAllItemsAsReadSoapIn `xml:"tns:MarkAllItemsAsRead"`
	}{
		OperationMarkAllItemsAsReadSoapIn{
			MarkAllItemsAsRead,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationMarkAllItemsAsReadSoapOut `xml:"MarkAllItemsAsReadResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/MarkAllItemsAsRead", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.MarkAllItemsAsReadResponse, γ.ServerVersionInfo, nil
}

// MarkAsJunk was auto-generated from WSDL.
func (p *exchangeServicePortType) MarkAsJunk(MarkAsJunk *MarkAsJunkType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MarkAsJunkResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationMarkAsJunkSoapIn `xml:"tns:MarkAsJunk"`
	}{
		OperationMarkAsJunkSoapIn{
			MarkAsJunk,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationMarkAsJunkSoapOut `xml:"MarkAsJunkResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/MarkAsJunk", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.MarkAsJunkResponse, γ.ServerVersionInfo, nil
}

// MoveFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) MoveFolder(MoveFolder *MoveFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MoveFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationMoveFolderSoapIn `xml:"tns:MoveFolder"`
	}{
		OperationMoveFolderSoapIn{
			MoveFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationMoveFolderSoapOut `xml:"MoveFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/MoveFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.MoveFolderResponse, γ.ServerVersionInfo, nil
}

// MoveItem was auto-generated from WSDL.
func (p *exchangeServicePortType) MoveItem(MoveItem *MoveItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*MoveItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationMoveItemSoapIn `xml:"tns:MoveItem"`
	}{
		OperationMoveItemSoapIn{
			MoveItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationMoveItemSoapOut `xml:"MoveItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/MoveItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.MoveItemResponse, γ.ServerVersionInfo, nil
}

// PlayOnPhone was auto-generated from WSDL.
func (p *exchangeServicePortType) PlayOnPhone(PlayOnPhone *PlayOnPhoneType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*PlayOnPhoneResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationPlayOnPhoneSoapIn `xml:"tns:PlayOnPhone"`
	}{
		OperationPlayOnPhoneSoapIn{
			PlayOnPhone,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationPlayOnPhoneSoapOut `xml:"PlayOnPhoneResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/PlayOnPhone", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.PlayOnPhoneResponse, γ.ServerVersionInfo, nil
}

// RefreshSharingFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) RefreshSharingFolder(RefreshSharingFolder *RefreshSharingFolderType, RequestServerVersion *RequestServerVersion) (*RefreshSharingFolderResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRefreshSharingFolderSoapIn `xml:"tns:RefreshSharingFolder"`
	}{
		OperationRefreshSharingFolderSoapIn{
			RefreshSharingFolder,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRefreshSharingFolderSoapOut `xml:"RefreshSharingFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RefreshSharingFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RefreshSharingFolderResponse, γ.ServerVersionInfo, nil
}

// RemoveContactFromImList was auto-generated from WSDL.
func (p *exchangeServicePortType) RemoveContactFromImList(RemoveContactFromImList *RemoveContactFromImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveContactFromImListResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRemoveContactFromImListSoapIn `xml:"tns:RemoveContactFromImList"`
	}{
		OperationRemoveContactFromImListSoapIn{
			RemoveContactFromImList,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRemoveContactFromImListSoapOut `xml:"RemoveContactFromImListResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveContactFromImList", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RemoveContactFromImListResponse, γ.ServerVersionInfo, nil
}

// RemoveDelegate was auto-generated from WSDL.
func (p *exchangeServicePortType) RemoveDelegate(RemoveDelegate *RemoveDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveDelegateResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRemoveDelegateSoapIn `xml:"tns:RemoveDelegate"`
	}{
		OperationRemoveDelegateSoapIn{
			RemoveDelegate,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRemoveDelegateSoapOut `xml:"RemoveDelegateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDelegate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RemoveDelegateResponse, γ.ServerVersionInfo, nil
}

// RemoveDistributionGroupFromImList was auto-generated from WSDL.
func (p *exchangeServicePortType) RemoveDistributionGroupFromImList(RemoveDistributionGroupFromImList *RemoveDistributionGroupFromImListType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveDistributionGroupFromImListResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRemoveDistributionGroupFromImListSoapIn `xml:"tns:RemoveDistributionGroupFromImList"`
	}{
		OperationRemoveDistributionGroupFromImListSoapIn{
			RemoveDistributionGroupFromImList,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRemoveDistributionGroupFromImListSoapOut `xml:"RemoveDistributionGroupFromImListResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDistributionGroupFromImList", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RemoveDistributionGroupFromImListResponse, γ.ServerVersionInfo, nil
}

// RemoveImContactFromGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) RemoveImContactFromGroup(RemoveImContactFromGroup *RemoveImContactFromGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveImContactFromGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRemoveImContactFromGroupSoapIn `xml:"tns:RemoveImContactFromGroup"`
	}{
		OperationRemoveImContactFromGroupSoapIn{
			RemoveImContactFromGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRemoveImContactFromGroupSoapOut `xml:"RemoveImContactFromGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImContactFromGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RemoveImContactFromGroupResponse, γ.ServerVersionInfo, nil
}

// RemoveImGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) RemoveImGroup(RemoveImGroup *RemoveImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*RemoveImGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationRemoveImGroupSoapIn `xml:"tns:RemoveImGroup"`
	}{
		OperationRemoveImGroupSoapIn{
			RemoveImGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationRemoveImGroupSoapOut `xml:"RemoveImGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.RemoveImGroupResponse, γ.ServerVersionInfo, nil
}

// ReportMessage was auto-generated from WSDL.
func (p *exchangeServicePortType) ReportMessage(ReportMessage *ReportMessageType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ReportMessageResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationReportMessageSoapIn `xml:"tns:ReportMessage"`
	}{
		OperationReportMessageSoapIn{
			ReportMessage,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationReportMessageSoapOut `xml:"ReportMessageResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ReportMessage", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ReportMessageResponse, γ.ServerVersionInfo, nil
}

// ResolveNames was auto-generated from WSDL.
func (p *exchangeServicePortType) ResolveNames(ResolveNames *ResolveNamesType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*ResolveNamesResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationResolveNamesSoapIn `xml:"tns:ResolveNames"`
	}{
		OperationResolveNamesSoapIn{
			ResolveNames,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationResolveNamesSoapOut `xml:"ResolveNamesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/ResolveNames", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.ResolveNamesResponse, γ.ServerVersionInfo, nil
}

// SearchMailboxes was auto-generated from WSDL.
func (p *exchangeServicePortType) SearchMailboxes(SearchMailboxes *SearchMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SearchMailboxesResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationSearchMailboxesSoapIn `xml:"tns:SearchMailboxes"`
	}{
		OperationSearchMailboxesSoapIn{
			SearchMailboxes,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationSearchMailboxesSoapOut `xml:"SearchMailboxesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SearchMailboxes", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SearchMailboxesResponse, γ.ServerVersionInfo, nil
}

// SendItem was auto-generated from WSDL.
func (p *exchangeServicePortType) SendItem(SendItem *SendItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SendItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationSendItemSoapIn `xml:"tns:SendItem"`
	}{
		OperationSendItemSoapIn{
			SendItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSendItemSoapOut `xml:"SendItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SendItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SendItemResponse, γ.ServerVersionInfo, nil
}

// SetHoldOnMailboxes was auto-generated from WSDL.
func (p *exchangeServicePortType) SetHoldOnMailboxes(SetHoldOnMailboxes *SetHoldOnMailboxesType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SetHoldOnMailboxesResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationSetHoldOnMailboxesSoapIn `xml:"tns:SetHoldOnMailboxes"`
	}{
		OperationSetHoldOnMailboxesSoapIn{
			SetHoldOnMailboxes,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationSetHoldOnMailboxesSoapOut `xml:"SetHoldOnMailboxesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetHoldOnMailboxes", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetHoldOnMailboxesResponse, γ.ServerVersionInfo, nil
}

// SetImGroup was auto-generated from WSDL.
func (p *exchangeServicePortType) SetImGroup(SetImGroup *SetImGroupType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SetImGroupResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationSetImGroupSoapIn `xml:"tns:SetImGroup"`
	}{
		OperationSetImGroupSoapIn{
			SetImGroup,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSetImGroupSoapOut `xml:"SetImGroupResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetImGroup", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetImGroupResponse, γ.ServerVersionInfo, nil
}

// SetImListMigrationCompleted was auto-generated from WSDL.
func (p *exchangeServicePortType) SetImListMigrationCompleted(SetImListMigrationCompleted *SetImListMigrationCompletedType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SetImListMigrationCompletedResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationSetImListMigrationCompletedSoapIn `xml:"tns:SetImListMigrationCompleted"`
	}{
		OperationSetImListMigrationCompletedSoapIn{
			SetImListMigrationCompleted,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSetImListMigrationCompletedSoapOut `xml:"SetImListMigrationCompletedResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetImListMigrationCompleted", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetImListMigrationCompletedResponse, γ.ServerVersionInfo, nil
}

// SetTeamMailbox was auto-generated from WSDL.
func (p *exchangeServicePortType) SetTeamMailbox(SetTeamMailbox *SetTeamMailboxRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*SetTeamMailboxResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationSetTeamMailboxSoapIn `xml:"tns:SetTeamMailbox"`
	}{
		OperationSetTeamMailboxSoapIn{
			SetTeamMailbox,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationSetTeamMailboxSoapOut `xml:"SetTeamMailboxResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetTeamMailbox", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetTeamMailboxResponse, γ.ServerVersionInfo, nil
}

// SetUserOofSettings was auto-generated from WSDL.
func (p *exchangeServicePortType) SetUserOofSettings(SetUserOofSettingsRequest *SetUserOofSettingsRequest, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*SetUserOofSettingsResponse, *ServerVersionInfo, error) {
	α := struct {
		OperationSetUserOofSettingsSoapIn `xml:"tns:SetUserOofSettings"`
	}{
		OperationSetUserOofSettingsSoapIn{
			SetUserOofSettingsRequest,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSetUserOofSettingsSoapOut `xml:"SetUserOofSettingsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetUserOofSettings", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetUserOofSettingsResponse, γ.ServerVersionInfo, nil
}

// SetUserPhoto was auto-generated from WSDL.
func (p *exchangeServicePortType) SetUserPhoto(SetUserPhoto *SetUserPhotoType, RequestServerVersion *RequestServerVersion) (*SetUserPhotoResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationSetUserPhotoSoapIn `xml:"tns:SetUserPhoto"`
	}{
		OperationSetUserPhotoSoapIn{
			SetUserPhoto,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSetUserPhotoSoapOut `xml:"SetUserPhotoResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SetUserPhoto", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SetUserPhotoResponse, γ.ServerVersionInfo, nil
}

// StartSearchSession was auto-generated from WSDL.
func (p *exchangeServicePortType) StartSearchSession(StartSearchSession *StartSearchSession, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*StartSearchSessionResponseMessage, *ServerVersionInfo, error) {
	α := struct {
		OperationStartSearchSessionSoapIn `xml:"tns:StartSearchSession"`
	}{
		OperationStartSearchSessionSoapIn{
			StartSearchSession,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationStartSearchSessionSoapOut `xml:"StartSearchSessionResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/StartSearchSession", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.StartSearchSessionResponse, γ.ServerVersionInfo, nil
}

// Subscribe was auto-generated from WSDL.
func (p *exchangeServicePortType) Subscribe(Subscribe *SubscribeType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SubscribeResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationSubscribeSoapIn `xml:"tns:Subscribe"`
	}{
		OperationSubscribeSoapIn{
			Subscribe,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSubscribeSoapOut `xml:"SubscribeResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/Subscribe", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SubscribeResponse, γ.ServerVersionInfo, nil
}

// SyncFolderHierarchy was auto-generated from WSDL.
func (p *exchangeServicePortType) SyncFolderHierarchy(SyncFolderHierarchy *SyncFolderHierarchyType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SyncFolderHierarchyResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationSyncFolderHierarchySoapIn `xml:"tns:SyncFolderHierarchy"`
	}{
		OperationSyncFolderHierarchySoapIn{
			SyncFolderHierarchy,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSyncFolderHierarchySoapOut `xml:"SyncFolderHierarchyResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderHierarchy", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SyncFolderHierarchyResponse, γ.ServerVersionInfo, nil
}

// SyncFolderItems was auto-generated from WSDL.
func (p *exchangeServicePortType) SyncFolderItems(SyncFolderItems *SyncFolderItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*SyncFolderItemsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationSyncFolderItemsSoapIn `xml:"tns:SyncFolderItems"`
	}{
		OperationSyncFolderItemsSoapIn{
			SyncFolderItems,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationSyncFolderItemsSoapOut `xml:"SyncFolderItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.SyncFolderItemsResponse, γ.ServerVersionInfo, nil
}

// UninstallApp was auto-generated from WSDL.
func (p *exchangeServicePortType) UninstallApp(UninstallApp *UninstallAppType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*UninstallAppResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUninstallAppSoapIn `xml:"tns:UninstallApp"`
	}{
		OperationUninstallAppSoapIn{
			UninstallApp,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUninstallAppSoapOut `xml:"UninstallAppResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UninstallApp", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UninstallAppResponse, γ.ServerVersionInfo, nil
}

// UnpinTeamMailbox was auto-generated from WSDL.
func (p *exchangeServicePortType) UnpinTeamMailbox(UnpinTeamMailbox *UnpinTeamMailboxRequestType, RequestServerVersion *RequestServerVersion) (*UnpinTeamMailboxResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationUnpinTeamMailboxSoapIn `xml:"tns:UnpinTeamMailbox"`
	}{
		OperationUnpinTeamMailboxSoapIn{
			UnpinTeamMailbox,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUnpinTeamMailboxSoapOut `xml:"UnpinTeamMailboxResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UnpinTeamMailbox", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UnpinTeamMailboxResponse, γ.ServerVersionInfo, nil
}

// Unsubscribe was auto-generated from WSDL.
func (p *exchangeServicePortType) Unsubscribe(Unsubscribe *UnsubscribeType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UnsubscribeResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUnsubscribeSoapIn `xml:"tns:Unsubscribe"`
	}{
		OperationUnsubscribeSoapIn{
			Unsubscribe,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUnsubscribeSoapOut `xml:"UnsubscribeResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/Unsubscribe", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UnsubscribeResponse, γ.ServerVersionInfo, nil
}

// UpdateDelegate was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateDelegate(UpdateDelegate *UpdateDelegateType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UpdateDelegateResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateDelegateSoapIn `xml:"tns:UpdateDelegate"`
	}{
		OperationUpdateDelegateSoapIn{
			UpdateDelegate,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUpdateDelegateSoapOut `xml:"UpdateDelegateResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateDelegate", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateDelegateResponse, γ.ServerVersionInfo, nil
}

// UpdateExtensionUsage was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateExtensionUsage(UpdateExtensionUsage *UpdateExtensionUsageType, ExchangeImpersonation *ExchangeImpersonationType, RequestServerVersion *RequestServerVersion) (*UpdateExtensionUsageResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateExtensionUsageSoapIn `xml:"tns:UpdateExtensionUsage"`
	}{
		OperationUpdateExtensionUsageSoapIn{
			UpdateExtensionUsage,
			ExchangeImpersonation,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUpdateExtensionUsageSoapOut `xml:"UpdateExtensionUsageResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateExtensionUsage", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateExtensionUsageResponse, γ.ServerVersionInfo, nil
}

// UpdateFolder was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateFolder(UpdateFolder *UpdateFolderType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateFolderResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateFolderSoapIn `xml:"tns:UpdateFolder"`
	}{
		OperationUpdateFolderSoapIn{
			UpdateFolder,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationUpdateFolderSoapOut `xml:"UpdateFolderResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateFolder", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateFolderResponse, γ.ServerVersionInfo, nil
}

// UpdateInboxRules was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateInboxRules(UpdateInboxRules *UpdateInboxRulesRequestType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateInboxRulesResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateInboxRulesSoapIn `xml:"tns:UpdateInboxRules"`
	}{
		OperationUpdateInboxRulesSoapIn{
			UpdateInboxRules,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationUpdateInboxRulesSoapOut `xml:"UpdateInboxRulesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateInboxRules", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateInboxRulesResponse, γ.ServerVersionInfo, nil
}

// UpdateItem was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateItem(UpdateItem *UpdateItemType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType) (*UpdateItemResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateItemSoapIn `xml:"tns:UpdateItem"`
	}{
		OperationUpdateItemSoapIn{
			UpdateItem,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
		},
	}

	γ := struct {
		OperationUpdateItemSoapOut `xml:"UpdateItemResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItem", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateItemResponse, γ.ServerVersionInfo, nil
}

// UpdateItemInRecoverableItems was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateItemInRecoverableItems(UpdateItemInRecoverableItems *UpdateItemInRecoverableItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion, TimeZoneContext *TimeZoneContextType, ManagementRole *ManagementRoleType) (*UpdateItemInRecoverableItemsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateItemInRecoverableItemsSoapIn `xml:"tns:UpdateItemInRecoverableItems"`
	}{
		OperationUpdateItemInRecoverableItemsSoapIn{
			UpdateItemInRecoverableItems,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
			TimeZoneContext,
			ManagementRole,
		},
	}

	γ := struct {
		OperationUpdateItemInRecoverableItemsSoapOut `xml:"UpdateItemInRecoverableItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItemInRecoverableItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateItemInRecoverableItemsResponse, γ.ServerVersionInfo, nil
}

// UpdateMeetingInstance was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateMeetingInstance(UpdateMeetingInstanceRequest *UpdateMeetingInstanceRequestType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*UpdateMeetingInstanceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateMeetingInstanceSoapIn `xml:"tns:UpdateMeetingInstance"`
	}{
		OperationUpdateMeetingInstanceSoapIn{
			UpdateMeetingInstanceRequest,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationUpdateMeetingInstanceSoapOut `xml:"UpdateMeetingInstanceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateMeetingInstanceRequest", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateMeetingInstanceResponse, γ.ServerVersionInfo, nil
}

// UpdateMeetingSpace was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateMeetingSpace(UpdateMeetingSpace *UpdateMeetingSpaceType, RequestServerVersion *RequestServerVersion, ManagementRole *ManagementRoleType) (*UpdateMeetingSpaceResponseMessageType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateMeetingSpaceSoapIn `xml:"tns:UpdateMeetingSpace"`
	}{
		OperationUpdateMeetingSpaceSoapIn{
			UpdateMeetingSpace,
			RequestServerVersion,
			ManagementRole,
		},
	}

	γ := struct {
		OperationUpdateMeetingSpaceSoapOut `xml:"UpdateMeetingSpaceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateMeetingSpace", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateMeetingSpaceResponseMessage, γ.ServerVersionInfo, nil
}

// UpdateUserConfiguration was auto-generated from WSDL.
func (p *exchangeServicePortType) UpdateUserConfiguration(UpdateUserConfiguration *UpdateUserConfigurationType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UpdateUserConfigurationResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUpdateUserConfigurationSoapIn `xml:"tns:UpdateUserConfiguration"`
	}{
		OperationUpdateUserConfigurationSoapIn{
			UpdateUserConfiguration,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUpdateUserConfigurationSoapOut `xml:"UpdateUserConfigurationResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateUserConfiguration", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UpdateUserConfigurationResponse, γ.ServerVersionInfo, nil
}

// UploadItems was auto-generated from WSDL.
func (p *exchangeServicePortType) UploadItems(UploadItems *UploadItemsType, ExchangeImpersonation *ExchangeImpersonationType, MailboxCulture *MailboxCultureType, RequestServerVersion *RequestServerVersion) (*UploadItemsResponseType, *ServerVersionInfo, error) {
	α := struct {
		OperationUploadItemsSoapIn `xml:"tns:UploadItems"`
	}{
		OperationUploadItemsSoapIn{
			UploadItems,
			ExchangeImpersonation,
			MailboxCulture,
			RequestServerVersion,
		},
	}

	γ := struct {
		OperationUploadItemsSoapOut `xml:"UploadItemsResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://schemas.microsoft.com/exchange/services/2006/messages/UploadItems", α, &γ); err != nil {
		return nil, nil, err
	}
	return γ.UploadItemsResponse, γ.ServerVersionInfo, nil
}
