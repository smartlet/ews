// Code generated by wsdl2go DO NOT EDIT.

package wsdl

import (
	"context"
	"encoding/xml"
)

// Surfaces the various logon types that are supported for conversion

type SpecialLogonTypeType XsString

const (
	SpecialLogonTypeTypeAdmin SpecialLogonTypeType = "Admin"

	SpecialLogonTypeTypeSystemService SpecialLogonTypeType = "SystemService"
)

type ExchangeVersionType XsString

const (
	ExchangeVersionTypeExchange2007 ExchangeVersionType = "Exchange2007"

	ExchangeVersionTypeExchange2007_SP1 ExchangeVersionType = "Exchange2007_SP1"

	ExchangeVersionTypeExchange2009 ExchangeVersionType = "Exchange2009"

	ExchangeVersionTypeExchange2010 ExchangeVersionType = "Exchange2010"

	ExchangeVersionTypeExchange2010_SP1 ExchangeVersionType = "Exchange2010_SP1"

	ExchangeVersionTypeExchange2010_SP2 ExchangeVersionType = "Exchange2010_SP2"

	ExchangeVersionTypeExchange2012 ExchangeVersionType = "Exchange2012"

	ExchangeVersionTypeExchange2013 ExchangeVersionType = "Exchange2013"

	ExchangeVersionTypeExchange2013_SP1 ExchangeVersionType = "Exchange2013_SP1"

	ExchangeVersionTypeExchange2015 ExchangeVersionType = "Exchange2015"

	ExchangeVersionTypeExchange2016 ExchangeVersionType = "Exchange2016"

	ExchangeVersionTypeV2015_10_05 ExchangeVersionType = "V2015_10_05"

	ExchangeVersionTypeV2016_01_06 ExchangeVersionType = "V2016_01_06"

	ExchangeVersionTypeV2016_04_13 ExchangeVersionType = "V2016_04_13"

	ExchangeVersionTypeV2016_07_13 ExchangeVersionType = "V2016_07_13"

	ExchangeVersionTypeV2016_10_10 ExchangeVersionType = "V2016_10_10"

	ExchangeVersionTypeV2017_01_07 ExchangeVersionType = "V2017_01_07"

	ExchangeVersionTypeV2017_04_14 ExchangeVersionType = "V2017_04_14"

	ExchangeVersionTypeV2017_07_11 ExchangeVersionType = "V2017_07_11"

	ExchangeVersionTypeV2017_10_09 ExchangeVersionType = "V2017_10_09"

	ExchangeVersionTypeV2018_01_08 ExchangeVersionType = "V2018_01_08"
)

// Precision for returned DateTime values

type DateTimePrecisionType XsString

const (
	DateTimePrecisionTypeSeconds DateTimePrecisionType = "Seconds"

	DateTimePrecisionTypeMilliseconds DateTimePrecisionType = "Milliseconds"
)

type NonEmptyStringType XsString

type MailboxTypeType XsString

const (
	MailboxTypeTypeUnknown MailboxTypeType = "Unknown"

	MailboxTypeTypeOneOff MailboxTypeType = "OneOff"

	MailboxTypeTypeMailbox MailboxTypeType = "Mailbox"

	MailboxTypeTypePublicDL MailboxTypeType = "PublicDL"

	MailboxTypeTypePrivateDL MailboxTypeType = "PrivateDL"

	MailboxTypeTypeContact MailboxTypeType = "Contact"

	MailboxTypeTypePublicFolder MailboxTypeType = "PublicFolder"

	MailboxTypeTypeGroupMailbox MailboxTypeType = "GroupMailbox"

	MailboxTypeTypeImplicitContact MailboxTypeType = "ImplicitContact"

	MailboxTypeTypeUser MailboxTypeType = "User"
)

type ActivityDomainType XsString

const (
	ActivityDomainTypeUnknown ActivityDomainType = "Unknown"

	ActivityDomainTypePersonal ActivityDomainType = "Personal"

	ActivityDomainTypeWork ActivityDomainType = "Work"
)

type ReminderGroupType XsString

const (
	ReminderGroupTypeCalendar ReminderGroupType = "Calendar"

	ReminderGroupTypeTask ReminderGroupType = "Task"
)

type UnindexedFieldURIType XsString

const (
	UnindexedFieldURITypeFolderFolderId UnindexedFieldURIType = "folder:FolderId"

	UnindexedFieldURITypeFolderParentFolderId UnindexedFieldURIType = "folder:ParentFolderId"

	UnindexedFieldURITypeFolderDisplayName UnindexedFieldURIType = "folder:DisplayName"

	UnindexedFieldURITypeFolderUnreadCount UnindexedFieldURIType = "folder:UnreadCount"

	UnindexedFieldURITypeFolderTotalCount UnindexedFieldURIType = "folder:TotalCount"

	UnindexedFieldURITypeFolderChildFolderCount UnindexedFieldURIType = "folder:ChildFolderCount"

	UnindexedFieldURITypeFolderFolderClass UnindexedFieldURIType = "folder:FolderClass"

	UnindexedFieldURITypeFolderSearchParameters UnindexedFieldURIType = "folder:SearchParameters"

	UnindexedFieldURITypeFolderManagedFolderInformation UnindexedFieldURIType = "folder:ManagedFolderInformation"

	UnindexedFieldURITypeFolderPermissionSet UnindexedFieldURIType = "folder:PermissionSet"

	UnindexedFieldURITypeFolderEffectiveRights UnindexedFieldURIType = "folder:EffectiveRights"

	UnindexedFieldURITypeFolderSharingEffectiveRights UnindexedFieldURIType = "folder:SharingEffectiveRights"

	UnindexedFieldURITypeFolderDistinguishedFolderId UnindexedFieldURIType = "folder:DistinguishedFolderId"

	UnindexedFieldURITypeFolderPolicyTag UnindexedFieldURIType = "folder:PolicyTag"

	UnindexedFieldURITypeFolderArchiveTag UnindexedFieldURIType = "folder:ArchiveTag"

	UnindexedFieldURITypeFolderReplicaList UnindexedFieldURIType = "folder:ReplicaList"

	UnindexedFieldURITypeItemItemId UnindexedFieldURIType = "item:ItemId"

	UnindexedFieldURITypeItemParentFolderId UnindexedFieldURIType = "item:ParentFolderId"

	UnindexedFieldURITypeItemItemClass UnindexedFieldURIType = "item:ItemClass"

	UnindexedFieldURITypeItemMimeContent UnindexedFieldURIType = "item:MimeContent"

	UnindexedFieldURITypeItemAttachments UnindexedFieldURIType = "item:Attachments"

	UnindexedFieldURITypeItemSubject UnindexedFieldURIType = "item:Subject"

	UnindexedFieldURITypeItemDateTimeReceived UnindexedFieldURIType = "item:DateTimeReceived"

	UnindexedFieldURITypeItemSize UnindexedFieldURIType = "item:Size"

	UnindexedFieldURITypeItemCategories UnindexedFieldURIType = "item:Categories"

	UnindexedFieldURITypeItemHasAttachments UnindexedFieldURIType = "item:HasAttachments"

	UnindexedFieldURITypeItemImportance UnindexedFieldURIType = "item:Importance"

	UnindexedFieldURITypeItemInReplyTo UnindexedFieldURIType = "item:InReplyTo"

	UnindexedFieldURITypeItemInternetMessageHeaders UnindexedFieldURIType = "item:InternetMessageHeaders"

	UnindexedFieldURITypeItemIsAssociated UnindexedFieldURIType = "item:IsAssociated"

	UnindexedFieldURITypeItemIsDraft UnindexedFieldURIType = "item:IsDraft"

	UnindexedFieldURITypeItemIsFromMe UnindexedFieldURIType = "item:IsFromMe"

	UnindexedFieldURITypeItemIsResend UnindexedFieldURIType = "item:IsResend"

	UnindexedFieldURITypeItemIsSubmitted UnindexedFieldURIType = "item:IsSubmitted"

	UnindexedFieldURITypeItemIsUnmodified UnindexedFieldURIType = "item:IsUnmodified"

	UnindexedFieldURITypeItemDateTimeSent UnindexedFieldURIType = "item:DateTimeSent"

	UnindexedFieldURITypeItemDateTimeCreated UnindexedFieldURIType = "item:DateTimeCreated"

	UnindexedFieldURITypeItemBody UnindexedFieldURIType = "item:Body"

	UnindexedFieldURITypeItemResponseObjects UnindexedFieldURIType = "item:ResponseObjects"

	UnindexedFieldURITypeItemSensitivity UnindexedFieldURIType = "item:Sensitivity"

	UnindexedFieldURITypeItemReminderDueBy UnindexedFieldURIType = "item:ReminderDueBy"

	UnindexedFieldURITypeItemReminderIsSet UnindexedFieldURIType = "item:ReminderIsSet"

	UnindexedFieldURITypeItemReminderNextTime UnindexedFieldURIType = "item:ReminderNextTime"

	UnindexedFieldURITypeItemReminderMinutesBeforeStart UnindexedFieldURIType = "item:ReminderMinutesBeforeStart"

	UnindexedFieldURITypeItemDisplayTo UnindexedFieldURIType = "item:DisplayTo"

	UnindexedFieldURITypeItemDisplayCc UnindexedFieldURIType = "item:DisplayCc"

	UnindexedFieldURITypeItemDisplayBcc UnindexedFieldURIType = "item:DisplayBcc"

	UnindexedFieldURITypeItemCulture UnindexedFieldURIType = "item:Culture"

	UnindexedFieldURITypeItemEffectiveRights UnindexedFieldURIType = "item:EffectiveRights"

	UnindexedFieldURITypeItemLastModifiedName UnindexedFieldURIType = "item:LastModifiedName"

	UnindexedFieldURITypeItemLastModifiedTime UnindexedFieldURIType = "item:LastModifiedTime"

	UnindexedFieldURITypeItemConversationId UnindexedFieldURIType = "item:ConversationId"

	UnindexedFieldURITypeItemUniqueBody UnindexedFieldURIType = "item:UniqueBody"

	UnindexedFieldURITypeItemFlag UnindexedFieldURIType = "item:Flag"

	UnindexedFieldURITypeItemStoreEntryId UnindexedFieldURIType = "item:StoreEntryId"

	UnindexedFieldURITypeItemInstanceKey UnindexedFieldURIType = "item:InstanceKey"

	UnindexedFieldURITypeItemNormalizedBody UnindexedFieldURIType = "item:NormalizedBody"

	UnindexedFieldURITypeItemEntityExtractionResult UnindexedFieldURIType = "item:EntityExtractionResult"

	UnindexedFieldURITypeItemPolicyTag UnindexedFieldURIType = "item:PolicyTag"

	UnindexedFieldURITypeItemArchiveTag UnindexedFieldURIType = "item:ArchiveTag"

	UnindexedFieldURITypeItemRetentionDate UnindexedFieldURIType = "item:RetentionDate"

	UnindexedFieldURITypeItemPreview UnindexedFieldURIType = "item:Preview"

	UnindexedFieldURITypeItemPredictedActionReasons UnindexedFieldURIType = "item:PredictedActionReasons"

	UnindexedFieldURITypeItemIsClutter UnindexedFieldURIType = "item:IsClutter"

	UnindexedFieldURITypeItemRightsManagementLicenseData UnindexedFieldURIType = "item:RightsManagementLicenseData"

	UnindexedFieldURITypeItemBlockStatus UnindexedFieldURIType = "item:BlockStatus"

	UnindexedFieldURITypeItemHasBlockedImages UnindexedFieldURIType = "item:HasBlockedImages"

	UnindexedFieldURITypeItemWebClientReadFormQueryString UnindexedFieldURIType = "item:WebClientReadFormQueryString"

	UnindexedFieldURITypeItemWebClientEditFormQueryString UnindexedFieldURIType = "item:WebClientEditFormQueryString"

	UnindexedFieldURITypeItemTextBody UnindexedFieldURIType = "item:TextBody"

	UnindexedFieldURITypeItemIconIndex UnindexedFieldURIType = "item:IconIndex"

	UnindexedFieldURITypeItemMimeContentUTF8 UnindexedFieldURIType = "item:MimeContentUTF8"

	UnindexedFieldURITypeItemMentions UnindexedFieldURIType = "item:Mentions"

	UnindexedFieldURITypeItemMentionedMe UnindexedFieldURIType = "item:MentionedMe"

	UnindexedFieldURITypeItemMentionsPreview UnindexedFieldURIType = "item:MentionsPreview"

	UnindexedFieldURITypeItemMentionsEx UnindexedFieldURIType = "item:MentionsEx"

	UnindexedFieldURITypeItemHashtags UnindexedFieldURIType = "item:Hashtags"

	UnindexedFieldURITypeItemAppliedHashtags UnindexedFieldURIType = "item:AppliedHashtags"

	UnindexedFieldURITypeItemAppliedHashtagsPreview UnindexedFieldURIType = "item:AppliedHashtagsPreview"

	UnindexedFieldURITypeItemLikes UnindexedFieldURIType = "item:Likes"

	UnindexedFieldURITypeItemLikesPreview UnindexedFieldURIType = "item:LikesPreview"

	UnindexedFieldURITypeItemPendingSocialActivityTagIds UnindexedFieldURIType = "item:PendingSocialActivityTagIds"

	UnindexedFieldURITypeItemAtAllMention UnindexedFieldURIType = "item:AtAllMention"

	UnindexedFieldURITypeItemCanDelete UnindexedFieldURIType = "item:CanDelete"

	UnindexedFieldURITypeItemInferenceClassification UnindexedFieldURIType = "item:InferenceClassification"

	UnindexedFieldURITypeItemFirstBody UnindexedFieldURIType = "item:FirstBody"

	UnindexedFieldURITypeMessageConversationIndex UnindexedFieldURIType = "message:ConversationIndex"

	UnindexedFieldURITypeMessageConversationTopic UnindexedFieldURIType = "message:ConversationTopic"

	UnindexedFieldURITypeMessageInternetMessageId UnindexedFieldURIType = "message:InternetMessageId"

	UnindexedFieldURITypeMessageIsRead UnindexedFieldURIType = "message:IsRead"

	UnindexedFieldURITypeMessageIsResponseRequested UnindexedFieldURIType = "message:IsResponseRequested"

	UnindexedFieldURITypeMessageIsReadReceiptRequested UnindexedFieldURIType = "message:IsReadReceiptRequested"

	UnindexedFieldURITypeMessageIsDeliveryReceiptRequested UnindexedFieldURIType = "message:IsDeliveryReceiptRequested"

	UnindexedFieldURITypeMessageReceivedBy UnindexedFieldURIType = "message:ReceivedBy"

	UnindexedFieldURITypeMessageReceivedRepresenting UnindexedFieldURIType = "message:ReceivedRepresenting"

	UnindexedFieldURITypeMessageReferences UnindexedFieldURIType = "message:References"

	UnindexedFieldURITypeMessageReplyTo UnindexedFieldURIType = "message:ReplyTo"

	UnindexedFieldURITypeMessageFrom UnindexedFieldURIType = "message:From"

	UnindexedFieldURITypeMessageSender UnindexedFieldURIType = "message:Sender"

	UnindexedFieldURITypeMessageToRecipients UnindexedFieldURIType = "message:ToRecipients"

	UnindexedFieldURITypeMessageCcRecipients UnindexedFieldURIType = "message:CcRecipients"

	UnindexedFieldURITypeMessageBccRecipients UnindexedFieldURIType = "message:BccRecipients"

	UnindexedFieldURITypeMessageApprovalRequestData UnindexedFieldURIType = "message:ApprovalRequestData"

	UnindexedFieldURITypeMessageVotingInformation UnindexedFieldURIType = "message:VotingInformation"

	UnindexedFieldURITypeMessageReminderMessageData UnindexedFieldURIType = "message:ReminderMessageData"

	UnindexedFieldURITypeMessagePublishedCalendarItemIcs UnindexedFieldURIType = "message:PublishedCalendarItemIcs"

	UnindexedFieldURITypeMessagePublishedCalendarItemName UnindexedFieldURIType = "message:PublishedCalendarItemName"

	UnindexedFieldURITypeMessageMessageSafety UnindexedFieldURIType = "message:MessageSafety"

	UnindexedFieldURITypeSharingMessageSharingMessageAction UnindexedFieldURIType = "sharingMessage:SharingMessageAction"

	UnindexedFieldURITypeMeetingAssociatedCalendarItemId UnindexedFieldURIType = "meeting:AssociatedCalendarItemId"

	UnindexedFieldURITypeMeetingIsDelegated UnindexedFieldURIType = "meeting:IsDelegated"

	UnindexedFieldURITypeMeetingIsOutOfDate UnindexedFieldURIType = "meeting:IsOutOfDate"

	UnindexedFieldURITypeMeetingHasBeenProcessed UnindexedFieldURIType = "meeting:HasBeenProcessed"

	UnindexedFieldURITypeMeetingResponseType UnindexedFieldURIType = "meeting:ResponseType"

	UnindexedFieldURITypeMeetingProposedStart UnindexedFieldURIType = "meeting:ProposedStart"

	UnindexedFieldURITypeMeetingProposedEnd UnindexedFieldURIType = "meeting:ProposedEnd"

	UnindexedFieldURITypeMeetingDoNotForwardMeeting UnindexedFieldURIType = "meeting:DoNotForwardMeeting"

	UnindexedFieldURITypeMeetingRequestMeetingRequestType UnindexedFieldURIType = "meetingRequest:MeetingRequestType"

	UnindexedFieldURITypeMeetingRequestIntendedFreeBusyStatus UnindexedFieldURIType = "meetingRequest:IntendedFreeBusyStatus"

	UnindexedFieldURITypeMeetingRequestChangeHighlights UnindexedFieldURIType = "meetingRequest:ChangeHighlights"

	UnindexedFieldURITypeCalendarStart UnindexedFieldURIType = "calendar:Start"

	UnindexedFieldURITypeCalendarEnd UnindexedFieldURIType = "calendar:End"

	UnindexedFieldURITypeCalendarOriginalStart UnindexedFieldURIType = "calendar:OriginalStart"

	UnindexedFieldURITypeCalendarStartWallClock UnindexedFieldURIType = "calendar:StartWallClock"

	UnindexedFieldURITypeCalendarEndWallClock UnindexedFieldURIType = "calendar:EndWallClock"

	UnindexedFieldURITypeCalendarStartTimeZoneId UnindexedFieldURIType = "calendar:StartTimeZoneId"

	UnindexedFieldURITypeCalendarEndTimeZoneId UnindexedFieldURIType = "calendar:EndTimeZoneId"

	UnindexedFieldURITypeCalendarIsAllDayEvent UnindexedFieldURIType = "calendar:IsAllDayEvent"

	UnindexedFieldURITypeCalendarLegacyFreeBusyStatus UnindexedFieldURIType = "calendar:LegacyFreeBusyStatus"

	UnindexedFieldURITypeCalendarLocation UnindexedFieldURIType = "calendar:Location"

	UnindexedFieldURITypeCalendarEnhancedLocation UnindexedFieldURIType = "calendar:EnhancedLocation"

	UnindexedFieldURITypeCalendarWhen UnindexedFieldURIType = "calendar:When"

	UnindexedFieldURITypeCalendarIsMeeting UnindexedFieldURIType = "calendar:IsMeeting"

	UnindexedFieldURITypeCalendarIsCancelled UnindexedFieldURIType = "calendar:IsCancelled"

	UnindexedFieldURITypeCalendarIsRecurring UnindexedFieldURIType = "calendar:IsRecurring"

	UnindexedFieldURITypeCalendarMeetingRequestWasSent UnindexedFieldURIType = "calendar:MeetingRequestWasSent"

	UnindexedFieldURITypeCalendarIsResponseRequested UnindexedFieldURIType = "calendar:IsResponseRequested"

	UnindexedFieldURITypeCalendarCalendarItemType UnindexedFieldURIType = "calendar:CalendarItemType"

	UnindexedFieldURITypeCalendarMyResponseType UnindexedFieldURIType = "calendar:MyResponseType"

	UnindexedFieldURITypeCalendarOrganizer UnindexedFieldURIType = "calendar:Organizer"

	UnindexedFieldURITypeCalendarRequiredAttendees UnindexedFieldURIType = "calendar:RequiredAttendees"

	UnindexedFieldURITypeCalendarOptionalAttendees UnindexedFieldURIType = "calendar:OptionalAttendees"

	UnindexedFieldURITypeCalendarResources UnindexedFieldURIType = "calendar:Resources"

	UnindexedFieldURITypeCalendarConflictingMeetingCount UnindexedFieldURIType = "calendar:ConflictingMeetingCount"

	UnindexedFieldURITypeCalendarAdjacentMeetingCount UnindexedFieldURIType = "calendar:AdjacentMeetingCount"

	UnindexedFieldURITypeCalendarConflictingMeetings UnindexedFieldURIType = "calendar:ConflictingMeetings"

	UnindexedFieldURITypeCalendarAdjacentMeetings UnindexedFieldURIType = "calendar:AdjacentMeetings"

	UnindexedFieldURITypeCalendarInboxReminders UnindexedFieldURIType = "calendar:InboxReminders"

	UnindexedFieldURITypeCalendarDuration UnindexedFieldURIType = "calendar:Duration"

	UnindexedFieldURITypeCalendarTimeZone UnindexedFieldURIType = "calendar:TimeZone"

	UnindexedFieldURITypeCalendarAppointmentReplyTime UnindexedFieldURIType = "calendar:AppointmentReplyTime"

	UnindexedFieldURITypeCalendarAppointmentSequenceNumber UnindexedFieldURIType = "calendar:AppointmentSequenceNumber"

	UnindexedFieldURITypeCalendarAppointmentState UnindexedFieldURIType = "calendar:AppointmentState"

	UnindexedFieldURITypeCalendarRecurrence UnindexedFieldURIType = "calendar:Recurrence"

	UnindexedFieldURITypeCalendarFirstOccurrence UnindexedFieldURIType = "calendar:FirstOccurrence"

	UnindexedFieldURITypeCalendarLastOccurrence UnindexedFieldURIType = "calendar:LastOccurrence"

	UnindexedFieldURITypeCalendarModifiedOccurrences UnindexedFieldURIType = "calendar:ModifiedOccurrences"

	UnindexedFieldURITypeCalendarDeletedOccurrences UnindexedFieldURIType = "calendar:DeletedOccurrences"

	UnindexedFieldURITypeCalendarMeetingTimeZone UnindexedFieldURIType = "calendar:MeetingTimeZone"

	UnindexedFieldURITypeCalendarConferenceType UnindexedFieldURIType = "calendar:ConferenceType"

	UnindexedFieldURITypeCalendarAllowNewTimeProposal UnindexedFieldURIType = "calendar:AllowNewTimeProposal"

	UnindexedFieldURITypeCalendarIsOnlineMeeting UnindexedFieldURIType = "calendar:IsOnlineMeeting"

	UnindexedFieldURITypeCalendarMeetingWorkspaceUrl UnindexedFieldURIType = "calendar:MeetingWorkspaceUrl"

	UnindexedFieldURITypeCalendarNetShowUrl UnindexedFieldURIType = "calendar:NetShowUrl"

	UnindexedFieldURITypeCalendarUID UnindexedFieldURIType = "calendar:UID"

	UnindexedFieldURITypeCalendarRecurrenceId UnindexedFieldURIType = "calendar:RecurrenceId"

	UnindexedFieldURITypeCalendarDateTimeStamp UnindexedFieldURIType = "calendar:DateTimeStamp"

	UnindexedFieldURITypeCalendarStartTimeZone UnindexedFieldURIType = "calendar:StartTimeZone"

	UnindexedFieldURITypeCalendarEndTimeZone UnindexedFieldURIType = "calendar:EndTimeZone"

	UnindexedFieldURITypeCalendarJoinOnlineMeetingUrl UnindexedFieldURIType = "calendar:JoinOnlineMeetingUrl"

	UnindexedFieldURITypeCalendarOnlineMeetingSettings UnindexedFieldURIType = "calendar:OnlineMeetingSettings"

	UnindexedFieldURITypeCalendarIsOrganizer UnindexedFieldURIType = "calendar:IsOrganizer"

	UnindexedFieldURITypeCalendarCalendarActivityData UnindexedFieldURIType = "calendar:CalendarActivityData"

	UnindexedFieldURITypeCalendarDoNotForwardMeeting UnindexedFieldURIType = "calendar:DoNotForwardMeeting"

	UnindexedFieldURITypeTaskActualWork UnindexedFieldURIType = "task:ActualWork"

	UnindexedFieldURITypeTaskAssignedTime UnindexedFieldURIType = "task:AssignedTime"

	UnindexedFieldURITypeTaskBillingInformation UnindexedFieldURIType = "task:BillingInformation"

	UnindexedFieldURITypeTaskChangeCount UnindexedFieldURIType = "task:ChangeCount"

	UnindexedFieldURITypeTaskCompanies UnindexedFieldURIType = "task:Companies"

	UnindexedFieldURITypeTaskCompleteDate UnindexedFieldURIType = "task:CompleteDate"

	UnindexedFieldURITypeTaskContacts UnindexedFieldURIType = "task:Contacts"

	UnindexedFieldURITypeTaskDelegationState UnindexedFieldURIType = "task:DelegationState"

	UnindexedFieldURITypeTaskDelegator UnindexedFieldURIType = "task:Delegator"

	UnindexedFieldURITypeTaskDueDate UnindexedFieldURIType = "task:DueDate"

	UnindexedFieldURITypeTaskIsAssignmentEditable UnindexedFieldURIType = "task:IsAssignmentEditable"

	UnindexedFieldURITypeTaskIsComplete UnindexedFieldURIType = "task:IsComplete"

	UnindexedFieldURITypeTaskIsRecurring UnindexedFieldURIType = "task:IsRecurring"

	UnindexedFieldURITypeTaskIsTeamTask UnindexedFieldURIType = "task:IsTeamTask"

	UnindexedFieldURITypeTaskMileage UnindexedFieldURIType = "task:Mileage"

	UnindexedFieldURITypeTaskOwner UnindexedFieldURIType = "task:Owner"

	UnindexedFieldURITypeTaskPercentComplete UnindexedFieldURIType = "task:PercentComplete"

	UnindexedFieldURITypeTaskRecurrence UnindexedFieldURIType = "task:Recurrence"

	UnindexedFieldURITypeTaskStartDate UnindexedFieldURIType = "task:StartDate"

	UnindexedFieldURITypeTaskStatus UnindexedFieldURIType = "task:Status"

	UnindexedFieldURITypeTaskStatusDescription UnindexedFieldURIType = "task:StatusDescription"

	UnindexedFieldURITypeTaskTotalWork UnindexedFieldURIType = "task:TotalWork"

	UnindexedFieldURITypeContactsAlias UnindexedFieldURIType = "contacts:Alias"

	UnindexedFieldURITypeContactsAssistantName UnindexedFieldURIType = "contacts:AssistantName"

	UnindexedFieldURITypeContactsBirthday UnindexedFieldURIType = "contacts:Birthday"

	UnindexedFieldURITypeContactsBusinessHomePage UnindexedFieldURIType = "contacts:BusinessHomePage"

	UnindexedFieldURITypeContactsChildren UnindexedFieldURIType = "contacts:Children"

	UnindexedFieldURITypeContactsCompanies UnindexedFieldURIType = "contacts:Companies"

	UnindexedFieldURITypeContactsCompanyName UnindexedFieldURIType = "contacts:CompanyName"

	UnindexedFieldURITypeContactsCompleteName UnindexedFieldURIType = "contacts:CompleteName"

	UnindexedFieldURITypeContactsContactSource UnindexedFieldURIType = "contacts:ContactSource"

	UnindexedFieldURITypeContactsCulture UnindexedFieldURIType = "contacts:Culture"

	UnindexedFieldURITypeContactsDepartment UnindexedFieldURIType = "contacts:Department"

	UnindexedFieldURITypeContactsDisplayName UnindexedFieldURIType = "contacts:DisplayName"

	UnindexedFieldURITypeContactsDirectoryId UnindexedFieldURIType = "contacts:DirectoryId"

	UnindexedFieldURITypeContactsDirectReports UnindexedFieldURIType = "contacts:DirectReports"

	UnindexedFieldURITypeContactsEmailAddresses UnindexedFieldURIType = "contacts:EmailAddresses"

	UnindexedFieldURITypeContactsAbchEmailAddresses UnindexedFieldURIType = "contacts:AbchEmailAddresses"

	UnindexedFieldURITypeContactsFileAs UnindexedFieldURIType = "contacts:FileAs"

	UnindexedFieldURITypeContactsFileAsMapping UnindexedFieldURIType = "contacts:FileAsMapping"

	UnindexedFieldURITypeContactsGeneration UnindexedFieldURIType = "contacts:Generation"

	UnindexedFieldURITypeContactsGivenName UnindexedFieldURIType = "contacts:GivenName"

	UnindexedFieldURITypeContactsImAddresses UnindexedFieldURIType = "contacts:ImAddresses"

	UnindexedFieldURITypeContactsInitials UnindexedFieldURIType = "contacts:Initials"

	UnindexedFieldURITypeContactsJobTitle UnindexedFieldURIType = "contacts:JobTitle"

	UnindexedFieldURITypeContactsManager UnindexedFieldURIType = "contacts:Manager"

	UnindexedFieldURITypeContactsManagerMailbox UnindexedFieldURIType = "contacts:ManagerMailbox"

	UnindexedFieldURITypeContactsMiddleName UnindexedFieldURIType = "contacts:MiddleName"

	UnindexedFieldURITypeContactsMileage UnindexedFieldURIType = "contacts:Mileage"

	UnindexedFieldURITypeContactsMSExchangeCertificate UnindexedFieldURIType = "contacts:MSExchangeCertificate"

	UnindexedFieldURITypeContactsNickname UnindexedFieldURIType = "contacts:Nickname"

	UnindexedFieldURITypeContactsNotes UnindexedFieldURIType = "contacts:Notes"

	UnindexedFieldURITypeContactsOfficeLocation UnindexedFieldURIType = "contacts:OfficeLocation"

	UnindexedFieldURITypeContactsPhoneNumbers UnindexedFieldURIType = "contacts:PhoneNumbers"

	UnindexedFieldURITypeContactsPhoneticFullName UnindexedFieldURIType = "contacts:PhoneticFullName"

	UnindexedFieldURITypeContactsPhoneticFirstName UnindexedFieldURIType = "contacts:PhoneticFirstName"

	UnindexedFieldURITypeContactsPhoneticLastName UnindexedFieldURIType = "contacts:PhoneticLastName"

	UnindexedFieldURITypeContactsPhoto UnindexedFieldURIType = "contacts:Photo"

	UnindexedFieldURITypeContactsPhysicalAddresses UnindexedFieldURIType = "contacts:PhysicalAddresses"

	UnindexedFieldURITypeContactsPostalAddressIndex UnindexedFieldURIType = "contacts:PostalAddressIndex"

	UnindexedFieldURITypeContactsProfession UnindexedFieldURIType = "contacts:Profession"

	UnindexedFieldURITypeContactsSpouseName UnindexedFieldURIType = "contacts:SpouseName"

	UnindexedFieldURITypeContactsSurname UnindexedFieldURIType = "contacts:Surname"

	UnindexedFieldURITypeContactsWeddingAnniversary UnindexedFieldURIType = "contacts:WeddingAnniversary"

	UnindexedFieldURITypeContactsUserSMIMECertificate UnindexedFieldURIType = "contacts:UserSMIMECertificate"

	UnindexedFieldURITypeContactsHasPicture UnindexedFieldURIType = "contacts:HasPicture"

	UnindexedFieldURITypeContactsAccountName UnindexedFieldURIType = "contacts:AccountName"

	UnindexedFieldURITypeContactsIsAutoUpdateDisabled UnindexedFieldURIType = "contacts:IsAutoUpdateDisabled"

	UnindexedFieldURITypeContactsIsMessengerEnabled UnindexedFieldURIType = "contacts:IsMessengerEnabled"

	UnindexedFieldURITypeContactsComment UnindexedFieldURIType = "contacts:Comment"

	UnindexedFieldURITypeContactsContactShortId UnindexedFieldURIType = "contacts:ContactShortId"

	UnindexedFieldURITypeContactsContactType UnindexedFieldURIType = "contacts:ContactType"

	UnindexedFieldURITypeContactsCreatedBy UnindexedFieldURIType = "contacts:CreatedBy"

	UnindexedFieldURITypeContactsGender UnindexedFieldURIType = "contacts:Gender"

	UnindexedFieldURITypeContactsIsHidden UnindexedFieldURIType = "contacts:IsHidden"

	UnindexedFieldURITypeContactsObjectId UnindexedFieldURIType = "contacts:ObjectId"

	UnindexedFieldURITypeContactsPassportId UnindexedFieldURIType = "contacts:PassportId"

	UnindexedFieldURITypeContactsIsPrivate UnindexedFieldURIType = "contacts:IsPrivate"

	UnindexedFieldURITypeContactsSourceId UnindexedFieldURIType = "contacts:SourceId"

	UnindexedFieldURITypeContactsTrustLevel UnindexedFieldURIType = "contacts:TrustLevel"

	UnindexedFieldURITypeContactsUrls UnindexedFieldURIType = "contacts:Urls"

	UnindexedFieldURITypeContactsCid UnindexedFieldURIType = "contacts:Cid"

	UnindexedFieldURITypeContactsSkypeAuthCertificate UnindexedFieldURIType = "contacts:SkypeAuthCertificate"

	UnindexedFieldURITypeContactsSkypeContext UnindexedFieldURIType = "contacts:SkypeContext"

	UnindexedFieldURITypeContactsSkypeId UnindexedFieldURIType = "contacts:SkypeId"

	UnindexedFieldURITypeContactsXboxLiveTag UnindexedFieldURIType = "contacts:XboxLiveTag"

	UnindexedFieldURITypeContactsSkypeRelationship UnindexedFieldURIType = "contacts:SkypeRelationship"

	UnindexedFieldURITypeContactsYomiNickname UnindexedFieldURIType = "contacts:YomiNickname"

	UnindexedFieldURITypeContactsInviteFree UnindexedFieldURIType = "contacts:InviteFree"

	UnindexedFieldURITypeContactsHidePresenceAndProfile UnindexedFieldURIType = "contacts:HidePresenceAndProfile"

	UnindexedFieldURITypeContactsIsPendingOutbound UnindexedFieldURIType = "contacts:IsPendingOutbound"

	UnindexedFieldURITypeContactsSupportGroupFeeds UnindexedFieldURIType = "contacts:SupportGroupFeeds"

	UnindexedFieldURITypeContactsUserTileHash UnindexedFieldURIType = "contacts:UserTileHash"

	UnindexedFieldURITypeContactsUnifiedInbox UnindexedFieldURIType = "contacts:UnifiedInbox"

	UnindexedFieldURITypeContactsMris UnindexedFieldURIType = "contacts:Mris"

	UnindexedFieldURITypeContactsWlid UnindexedFieldURIType = "contacts:Wlid"

	UnindexedFieldURITypeContactsAbchContactId UnindexedFieldURIType = "contacts:AbchContactId"

	UnindexedFieldURITypeContactsNotInBirthdayCalendar UnindexedFieldURIType = "contacts:NotInBirthdayCalendar"

	UnindexedFieldURITypeContactsShellContactType UnindexedFieldURIType = "contacts:ShellContactType"

	UnindexedFieldURITypeContactsImMri UnindexedFieldURIType = "contacts:ImMri"

	UnindexedFieldURITypeContactsPresenceTrustLevel UnindexedFieldURIType = "contacts:PresenceTrustLevel"

	UnindexedFieldURITypeContactsOtherMri UnindexedFieldURIType = "contacts:OtherMri"

	UnindexedFieldURITypeContactsProfileLastChanged UnindexedFieldURIType = "contacts:ProfileLastChanged"

	UnindexedFieldURITypeContactsMobileIMEnabled UnindexedFieldURIType = "contacts:MobileIMEnabled"

	UnindexedFieldURITypeDistributionlistMembers UnindexedFieldURIType = "distributionlist:Members"

	UnindexedFieldURITypeContactsPartnerNetworkProfilePhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkProfilePhotoUrl"

	UnindexedFieldURITypeContactsPartnerNetworkThumbnailPhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkThumbnailPhotoUrl"

	UnindexedFieldURITypeContactsPersonId UnindexedFieldURIType = "contacts:PersonId"

	UnindexedFieldURITypeContactsConversationGuid UnindexedFieldURIType = "contacts:ConversationGuid"

	UnindexedFieldURITypePostitemPostedTime UnindexedFieldURIType = "postitem:PostedTime"

	UnindexedFieldURITypeConversationConversationId UnindexedFieldURIType = "conversation:ConversationId"

	UnindexedFieldURITypeConversationConversationTopic UnindexedFieldURIType = "conversation:ConversationTopic"

	UnindexedFieldURITypeConversationUniqueRecipients UnindexedFieldURIType = "conversation:UniqueRecipients"

	UnindexedFieldURITypeConversationGlobalUniqueRecipients UnindexedFieldURIType = "conversation:GlobalUniqueRecipients"

	UnindexedFieldURITypeConversationUniqueUnreadSenders UnindexedFieldURIType = "conversation:UniqueUnreadSenders"

	UnindexedFieldURITypeConversationGlobalUniqueUnreadSenders UnindexedFieldURIType = "conversation:GlobalUniqueUnreadSenders"

	UnindexedFieldURITypeConversationUniqueSenders UnindexedFieldURIType = "conversation:UniqueSenders"

	UnindexedFieldURITypeConversationGlobalUniqueSenders UnindexedFieldURIType = "conversation:GlobalUniqueSenders"

	UnindexedFieldURITypeConversationLastDeliveryTime UnindexedFieldURIType = "conversation:LastDeliveryTime"

	UnindexedFieldURITypeConversationGlobalLastDeliveryTime UnindexedFieldURIType = "conversation:GlobalLastDeliveryTime"

	UnindexedFieldURITypeConversationCategories UnindexedFieldURIType = "conversation:Categories"

	UnindexedFieldURITypeConversationGlobalCategories UnindexedFieldURIType = "conversation:GlobalCategories"

	UnindexedFieldURITypeConversationFlagStatus UnindexedFieldURIType = "conversation:FlagStatus"

	UnindexedFieldURITypeConversationGlobalFlagStatus UnindexedFieldURIType = "conversation:GlobalFlagStatus"

	UnindexedFieldURITypeConversationHasAttachments UnindexedFieldURIType = "conversation:HasAttachments"

	UnindexedFieldURITypeConversationGlobalHasAttachments UnindexedFieldURIType = "conversation:GlobalHasAttachments"

	UnindexedFieldURITypeConversationHasIrm UnindexedFieldURIType = "conversation:HasIrm"

	UnindexedFieldURITypeConversationGlobalHasIrm UnindexedFieldURIType = "conversation:GlobalHasIrm"

	UnindexedFieldURITypeConversationMessageCount UnindexedFieldURIType = "conversation:MessageCount"

	UnindexedFieldURITypeConversationGlobalMessageCount UnindexedFieldURIType = "conversation:GlobalMessageCount"

	UnindexedFieldURITypeConversationUnreadCount UnindexedFieldURIType = "conversation:UnreadCount"

	UnindexedFieldURITypeConversationGlobalUnreadCount UnindexedFieldURIType = "conversation:GlobalUnreadCount"

	UnindexedFieldURITypeConversationSize UnindexedFieldURIType = "conversation:Size"

	UnindexedFieldURITypeConversationGlobalSize UnindexedFieldURIType = "conversation:GlobalSize"

	UnindexedFieldURITypeConversationItemClasses UnindexedFieldURIType = "conversation:ItemClasses"

	UnindexedFieldURITypeConversationGlobalItemClasses UnindexedFieldURIType = "conversation:GlobalItemClasses"

	UnindexedFieldURITypeConversationImportance UnindexedFieldURIType = "conversation:Importance"

	UnindexedFieldURITypeConversationGlobalImportance UnindexedFieldURIType = "conversation:GlobalImportance"

	UnindexedFieldURITypeConversationItemIds UnindexedFieldURIType = "conversation:ItemIds"

	UnindexedFieldURITypeConversationGlobalItemIds UnindexedFieldURIType = "conversation:GlobalItemIds"

	UnindexedFieldURITypeConversationLastModifiedTime UnindexedFieldURIType = "conversation:LastModifiedTime"

	UnindexedFieldURITypeConversationInstanceKey UnindexedFieldURIType = "conversation:InstanceKey"

	UnindexedFieldURITypeConversationPreview UnindexedFieldURIType = "conversation:Preview"

	UnindexedFieldURITypeConversationIconIndex UnindexedFieldURIType = "conversation:IconIndex"

	UnindexedFieldURITypeConversationGlobalIconIndex UnindexedFieldURIType = "conversation:GlobalIconIndex"

	UnindexedFieldURITypeConversationDraftItemIds UnindexedFieldURIType = "conversation:DraftItemIds"

	UnindexedFieldURITypeConversationHasClutter UnindexedFieldURIType = "conversation:HasClutter"

	UnindexedFieldURITypeConversationMentionedMe UnindexedFieldURIType = "conversation:MentionedMe"

	UnindexedFieldURITypeConversationGlobalMentionedMe UnindexedFieldURIType = "conversation:GlobalMentionedMe"

	UnindexedFieldURITypeConversationAtAllMention UnindexedFieldURIType = "conversation:AtAllMention"

	UnindexedFieldURITypeConversationGlobalAtAllMention UnindexedFieldURIType = "conversation:GlobalAtAllMention"

	UnindexedFieldURITypePersonFullName UnindexedFieldURIType = "person:FullName"

	UnindexedFieldURITypePersonGivenName UnindexedFieldURIType = "person:GivenName"

	UnindexedFieldURITypePersonSurname UnindexedFieldURIType = "person:Surname"

	UnindexedFieldURITypePersonPhoneNumber UnindexedFieldURIType = "person:PhoneNumber"

	UnindexedFieldURITypePersonSMSNumber UnindexedFieldURIType = "person:SMSNumber"

	UnindexedFieldURITypePersonEmailAddress UnindexedFieldURIType = "person:EmailAddress"

	UnindexedFieldURITypePersonAlias UnindexedFieldURIType = "person:Alias"

	UnindexedFieldURITypePersonDepartment UnindexedFieldURIType = "person:Department"

	UnindexedFieldURITypePersonLinkedInProfileLink UnindexedFieldURIType = "person:LinkedInProfileLink"

	UnindexedFieldURITypePersonSkills UnindexedFieldURIType = "person:Skills"

	UnindexedFieldURITypePersonProfessionalBiography UnindexedFieldURIType = "person:ProfessionalBiography"

	UnindexedFieldURITypePersonManagementChain UnindexedFieldURIType = "person:ManagementChain"

	UnindexedFieldURITypePersonDirectReports UnindexedFieldURIType = "person:DirectReports"

	UnindexedFieldURITypePersonPeers UnindexedFieldURIType = "person:Peers"

	UnindexedFieldURITypePersonTeamSize UnindexedFieldURIType = "person:TeamSize"

	UnindexedFieldURITypePersonCurrentJob UnindexedFieldURIType = "person:CurrentJob"

	UnindexedFieldURITypePersonBirthday UnindexedFieldURIType = "person:Birthday"

	UnindexedFieldURITypePersonHometown UnindexedFieldURIType = "person:Hometown"

	UnindexedFieldURITypePersonCurrentLocation UnindexedFieldURIType = "person:CurrentLocation"

	UnindexedFieldURITypePersonCompanyProfile UnindexedFieldURIType = "person:CompanyProfile"

	UnindexedFieldURITypePersonOffice UnindexedFieldURIType = "person:Office"

	UnindexedFieldURITypePersonHeadline UnindexedFieldURIType = "person:Headline"

	UnindexedFieldURITypePersonMutualConnections UnindexedFieldURIType = "person:MutualConnections"

	UnindexedFieldURITypePersonTitle UnindexedFieldURIType = "person:Title"

	UnindexedFieldURITypePersonMutualManager UnindexedFieldURIType = "person:MutualManager"

	UnindexedFieldURITypePersonInsights UnindexedFieldURIType = "person:Insights"

	UnindexedFieldURITypePersonUserProfilePicture UnindexedFieldURIType = "person:UserProfilePicture"

	UnindexedFieldURITypePersonaPersonaId UnindexedFieldURIType = "persona:PersonaId"

	UnindexedFieldURITypePersonaPersonaType UnindexedFieldURIType = "persona:PersonaType"

	UnindexedFieldURITypePersonaGivenName UnindexedFieldURIType = "persona:GivenName"

	UnindexedFieldURITypePersonaCompanyName UnindexedFieldURIType = "persona:CompanyName"

	UnindexedFieldURITypePersonaSurname UnindexedFieldURIType = "persona:Surname"

	UnindexedFieldURITypePersonaDisplayName UnindexedFieldURIType = "persona:DisplayName"

	UnindexedFieldURITypePersonaEmailAddress UnindexedFieldURIType = "persona:EmailAddress"

	UnindexedFieldURITypePersonaFileAs UnindexedFieldURIType = "persona:FileAs"

	UnindexedFieldURITypePersonaHomeCity UnindexedFieldURIType = "persona:HomeCity"

	UnindexedFieldURITypePersonaCreationTime UnindexedFieldURIType = "persona:CreationTime"

	UnindexedFieldURITypePersonaRelevanceScore UnindexedFieldURIType = "persona:RelevanceScore"

	UnindexedFieldURITypePersonaRankingWeight UnindexedFieldURIType = "persona:RankingWeight"

	UnindexedFieldURITypePersonaWorkCity UnindexedFieldURIType = "persona:WorkCity"

	UnindexedFieldURITypePersonaPersonaObjectStatus UnindexedFieldURIType = "persona:PersonaObjectStatus"

	UnindexedFieldURITypePersonaFileAsId UnindexedFieldURIType = "persona:FileAsId"

	UnindexedFieldURITypePersonaDisplayNamePrefix UnindexedFieldURIType = "persona:DisplayNamePrefix"

	UnindexedFieldURITypePersonaYomiCompanyName UnindexedFieldURIType = "persona:YomiCompanyName"

	UnindexedFieldURITypePersonaYomiFirstName UnindexedFieldURIType = "persona:YomiFirstName"

	UnindexedFieldURITypePersonaYomiLastName UnindexedFieldURIType = "persona:YomiLastName"

	UnindexedFieldURITypePersonaTitle UnindexedFieldURIType = "persona:Title"

	UnindexedFieldURITypePersonaEmailAddresses UnindexedFieldURIType = "persona:EmailAddresses"

	UnindexedFieldURITypePersonaPhoneNumber UnindexedFieldURIType = "persona:PhoneNumber"

	UnindexedFieldURITypePersonaImAddress UnindexedFieldURIType = "persona:ImAddress"

	UnindexedFieldURITypePersonaImAddresses UnindexedFieldURIType = "persona:ImAddresses"

	UnindexedFieldURITypePersonaImAddresses2 UnindexedFieldURIType = "persona:ImAddresses2"

	UnindexedFieldURITypePersonaImAddresses3 UnindexedFieldURIType = "persona:ImAddresses3"

	UnindexedFieldURITypePersonaFolderIds UnindexedFieldURIType = "persona:FolderIds"

	UnindexedFieldURITypePersonaAttributions UnindexedFieldURIType = "persona:Attributions"

	UnindexedFieldURITypePersonaDisplayNames UnindexedFieldURIType = "persona:DisplayNames"

	UnindexedFieldURITypePersonaInitials UnindexedFieldURIType = "persona:Initials"

	UnindexedFieldURITypePersonaFileAses UnindexedFieldURIType = "persona:FileAses"

	UnindexedFieldURITypePersonaFileAsIds UnindexedFieldURIType = "persona:FileAsIds"

	UnindexedFieldURITypePersonaDisplayNamePrefixes UnindexedFieldURIType = "persona:DisplayNamePrefixes"

	UnindexedFieldURITypePersonaGivenNames UnindexedFieldURIType = "persona:GivenNames"

	UnindexedFieldURITypePersonaMiddleNames UnindexedFieldURIType = "persona:MiddleNames"

	UnindexedFieldURITypePersonaSurnames UnindexedFieldURIType = "persona:Surnames"

	UnindexedFieldURITypePersonaGenerations UnindexedFieldURIType = "persona:Generations"

	UnindexedFieldURITypePersonaNicknames UnindexedFieldURIType = "persona:Nicknames"

	UnindexedFieldURITypePersonaYomiCompanyNames UnindexedFieldURIType = "persona:YomiCompanyNames"

	UnindexedFieldURITypePersonaYomiFirstNames UnindexedFieldURIType = "persona:YomiFirstNames"

	UnindexedFieldURITypePersonaYomiLastNames UnindexedFieldURIType = "persona:YomiLastNames"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers UnindexedFieldURIType = "persona:BusinessPhoneNumbers"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers2 UnindexedFieldURIType = "persona:BusinessPhoneNumbers2"

	UnindexedFieldURITypePersonaHomePhones UnindexedFieldURIType = "persona:HomePhones"

	UnindexedFieldURITypePersonaHomePhones2 UnindexedFieldURIType = "persona:HomePhones2"

	UnindexedFieldURITypePersonaMobilePhones UnindexedFieldURIType = "persona:MobilePhones"

	UnindexedFieldURITypePersonaMobilePhones2 UnindexedFieldURIType = "persona:MobilePhones2"

	UnindexedFieldURITypePersonaAssistantPhoneNumbers UnindexedFieldURIType = "persona:AssistantPhoneNumbers"

	UnindexedFieldURITypePersonaCallbackPhones UnindexedFieldURIType = "persona:CallbackPhones"

	UnindexedFieldURITypePersonaCarPhones UnindexedFieldURIType = "persona:CarPhones"

	UnindexedFieldURITypePersonaHomeFaxes UnindexedFieldURIType = "persona:HomeFaxes"

	UnindexedFieldURITypePersonaOrganizationMainPhones UnindexedFieldURIType = "persona:OrganizationMainPhones"

	UnindexedFieldURITypePersonaOtherFaxes UnindexedFieldURIType = "persona:OtherFaxes"

	UnindexedFieldURITypePersonaOtherTelephones UnindexedFieldURIType = "persona:OtherTelephones"

	UnindexedFieldURITypePersonaOtherPhones2 UnindexedFieldURIType = "persona:OtherPhones2"

	UnindexedFieldURITypePersonaPagers UnindexedFieldURIType = "persona:Pagers"

	UnindexedFieldURITypePersonaRadioPhones UnindexedFieldURIType = "persona:RadioPhones"

	UnindexedFieldURITypePersonaTelexNumbers UnindexedFieldURIType = "persona:TelexNumbers"

	UnindexedFieldURITypePersonaWorkFaxes UnindexedFieldURIType = "persona:WorkFaxes"

	UnindexedFieldURITypePersonaEmails1 UnindexedFieldURIType = "persona:Emails1"

	UnindexedFieldURITypePersonaEmails2 UnindexedFieldURIType = "persona:Emails2"

	UnindexedFieldURITypePersonaEmails3 UnindexedFieldURIType = "persona:Emails3"

	UnindexedFieldURITypePersonaBusinessHomePages UnindexedFieldURIType = "persona:BusinessHomePages"

	UnindexedFieldURITypePersonaSchool UnindexedFieldURIType = "persona:School"

	UnindexedFieldURITypePersonaPersonalHomePages UnindexedFieldURIType = "persona:PersonalHomePages"

	UnindexedFieldURITypePersonaOfficeLocations UnindexedFieldURIType = "persona:OfficeLocations"

	UnindexedFieldURITypePersonaBusinessAddresses UnindexedFieldURIType = "persona:BusinessAddresses"

	UnindexedFieldURITypePersonaHomeAddresses UnindexedFieldURIType = "persona:HomeAddresses"

	UnindexedFieldURITypePersonaOtherAddresses UnindexedFieldURIType = "persona:OtherAddresses"

	UnindexedFieldURITypePersonaTitles UnindexedFieldURIType = "persona:Titles"

	UnindexedFieldURITypePersonaDepartments UnindexedFieldURIType = "persona:Departments"

	UnindexedFieldURITypePersonaCompanyNames UnindexedFieldURIType = "persona:CompanyNames"

	UnindexedFieldURITypePersonaManagers UnindexedFieldURIType = "persona:Managers"

	UnindexedFieldURITypePersonaAssistantNames UnindexedFieldURIType = "persona:AssistantNames"

	UnindexedFieldURITypePersonaProfessions UnindexedFieldURIType = "persona:Professions"

	UnindexedFieldURITypePersonaSpouseNames UnindexedFieldURIType = "persona:SpouseNames"

	UnindexedFieldURITypePersonaHobbies UnindexedFieldURIType = "persona:Hobbies"

	UnindexedFieldURITypePersonaWeddingAnniversaries UnindexedFieldURIType = "persona:WeddingAnniversaries"

	UnindexedFieldURITypePersonaBirthdays UnindexedFieldURIType = "persona:Birthdays"

	UnindexedFieldURITypePersonaChildren UnindexedFieldURIType = "persona:Children"

	UnindexedFieldURITypePersonaLocations UnindexedFieldURIType = "persona:Locations"

	UnindexedFieldURITypePersonaExtendedProperties UnindexedFieldURIType = "persona:ExtendedProperties"

	UnindexedFieldURITypePersonaPostalAddress UnindexedFieldURIType = "persona:PostalAddress"

	UnindexedFieldURITypePersonaBodies UnindexedFieldURIType = "persona:Bodies"

	UnindexedFieldURITypePersonaIsFavorite UnindexedFieldURIType = "persona:IsFavorite"

	UnindexedFieldURITypePersonaInlineLinks UnindexedFieldURIType = "persona:InlineLinks"

	UnindexedFieldURITypePersonaItemLinkIds UnindexedFieldURIType = "persona:ItemLinkIds"

	UnindexedFieldURITypePersonaHasActiveDeals UnindexedFieldURIType = "persona:HasActiveDeals"

	UnindexedFieldURITypePersonaIsBusinessContact UnindexedFieldURIType = "persona:IsBusinessContact"

	UnindexedFieldURITypePersonaAttributedHasActiveDeals UnindexedFieldURIType = "persona:AttributedHasActiveDeals"

	UnindexedFieldURITypePersonaAttributedIsBusinessContact UnindexedFieldURIType = "persona:AttributedIsBusinessContact"

	UnindexedFieldURITypePersonaSourceMailboxGuids UnindexedFieldURIType = "persona:SourceMailboxGuids"

	UnindexedFieldURITypePersonaLastContactedDate UnindexedFieldURIType = "persona:LastContactedDate"

	UnindexedFieldURITypePersonaExternalDirectoryObjectId UnindexedFieldURIType = "persona:ExternalDirectoryObjectId"

	UnindexedFieldURITypePersonaMapiEntryId UnindexedFieldURIType = "persona:MapiEntryId"

	UnindexedFieldURITypePersonaMapiEmailAddress UnindexedFieldURIType = "persona:MapiEmailAddress"

	UnindexedFieldURITypePersonaMapiAddressType UnindexedFieldURIType = "persona:MapiAddressType"

	UnindexedFieldURITypePersonaMapiSearchKey UnindexedFieldURIType = "persona:MapiSearchKey"

	UnindexedFieldURITypePersonaMapiTransmittableDisplayName UnindexedFieldURIType = "persona:MapiTransmittableDisplayName"

	UnindexedFieldURITypePersonaMapiSendRichInfo UnindexedFieldURIType = "persona:MapiSendRichInfo"

	UnindexedFieldURITypeRolememberMemberType UnindexedFieldURIType = "rolemember:MemberType"

	UnindexedFieldURITypeRolememberMemberId UnindexedFieldURIType = "rolemember:MemberId"

	UnindexedFieldURITypeRolememberDisplayName UnindexedFieldURIType = "rolemember:DisplayName"

	UnindexedFieldURITypeNetworkTokenRefreshLastCompleted UnindexedFieldURIType = "network:TokenRefreshLastCompleted"

	UnindexedFieldURITypeNetworkTokenRefreshLastAttempted UnindexedFieldURIType = "network:TokenRefreshLastAttempted"

	UnindexedFieldURITypeNetworkSyncEnabled UnindexedFieldURIType = "network:SyncEnabled"

	UnindexedFieldURITypeNetworkRejectedOffers UnindexedFieldURIType = "network:RejectedOffers"

	UnindexedFieldURITypeNetworkSessionHandle UnindexedFieldURIType = "network:SessionHandle"

	UnindexedFieldURITypeNetworkRefreshTokenExpiry2 UnindexedFieldURIType = "network:RefreshTokenExpiry2"

	UnindexedFieldURITypeNetworkRefreshToken2 UnindexedFieldURIType = "network:RefreshToken2"

	UnindexedFieldURITypeNetworkPsaLastChanged UnindexedFieldURIType = "network:PsaLastChanged"

	UnindexedFieldURITypeNetworkOffers UnindexedFieldURIType = "network:Offers"

	UnindexedFieldURITypeNetworkLastWelcomeContact UnindexedFieldURIType = "network:LastWelcomeContact"

	UnindexedFieldURITypeNetworkLastVersionSaved UnindexedFieldURIType = "network:LastVersionSaved"

	UnindexedFieldURITypeNetworkDomainTag UnindexedFieldURIType = "network:DomainTag"

	UnindexedFieldURITypeNetworkFirstAuthErrorDates UnindexedFieldURIType = "network:FirstAuthErrorDates"

	UnindexedFieldURITypeNetworkErrorOffers UnindexedFieldURIType = "network:ErrorOffers"

	UnindexedFieldURITypeNetworkContactSyncSuccess UnindexedFieldURIType = "network:ContactSyncSuccess"

	UnindexedFieldURITypeNetworkContactSyncError UnindexedFieldURIType = "network:ContactSyncError"

	UnindexedFieldURITypeNetworkClientToken2 UnindexedFieldURIType = "network:ClientToken2"

	UnindexedFieldURITypeNetworkClientToken UnindexedFieldURIType = "network:ClientToken"

	UnindexedFieldURITypeNetworkClientPublishSecret UnindexedFieldURIType = "network:ClientPublishSecret"

	UnindexedFieldURITypeNetworkUserEmail UnindexedFieldURIType = "network:UserEmail"

	UnindexedFieldURITypeNetworkAutoLinkSuccess UnindexedFieldURIType = "network:AutoLinkSuccess"

	UnindexedFieldURITypeNetworkAutoLinkError UnindexedFieldURIType = "network:AutoLinkError"

	UnindexedFieldURITypeNetworkIsDefault UnindexedFieldURIType = "network:IsDefault"

	UnindexedFieldURITypeNetworkSettings UnindexedFieldURIType = "network:Settings"

	UnindexedFieldURITypeNetworkProfileUrl UnindexedFieldURIType = "network:ProfileUrl"

	UnindexedFieldURITypeNetworkUserTileUrl UnindexedFieldURIType = "network:UserTileUrl"

	UnindexedFieldURITypeNetworkDomainId UnindexedFieldURIType = "network:DomainId"

	UnindexedFieldURITypeNetworkDisplayName UnindexedFieldURIType = "network:DisplayName"

	UnindexedFieldURITypeNetworkAccountName UnindexedFieldURIType = "network:AccountName"

	UnindexedFieldURITypeNetworkSourceEntryID UnindexedFieldURIType = "network:SourceEntryID"

	UnindexedFieldURITypeAbchpersonFavoriteOrder UnindexedFieldURIType = "abchperson:FavoriteOrder"

	UnindexedFieldURITypeAbchpersonPersonId UnindexedFieldURIType = "abchperson:PersonId"

	UnindexedFieldURITypeAbchpersonExchangePersonIdGuid UnindexedFieldURIType = "abchperson:ExchangePersonIdGuid"

	UnindexedFieldURITypeAbchpersonAntiLinkInfo UnindexedFieldURIType = "abchperson:AntiLinkInfo"

	UnindexedFieldURITypeAbchpersonRelevanceOrder1 UnindexedFieldURIType = "abchperson:RelevanceOrder1"

	UnindexedFieldURITypeAbchpersonRelevanceOrder2 UnindexedFieldURIType = "abchperson:RelevanceOrder2"

	UnindexedFieldURITypeAbchpersonContactHandles UnindexedFieldURIType = "abchperson:ContactHandles"

	UnindexedFieldURITypeAbchpersonCategories UnindexedFieldURIType = "abchperson:Categories"

	UnindexedFieldURITypeBookingServiceIds UnindexedFieldURIType = "booking:ServiceIds"

	UnindexedFieldURITypeBookingStaffIds UnindexedFieldURIType = "booking:StaffIds"

	UnindexedFieldURITypeBookingStaffInitials UnindexedFieldURIType = "booking:StaffInitials"

	UnindexedFieldURITypeBookingCustomerName UnindexedFieldURIType = "booking:CustomerName"

	UnindexedFieldURITypeBookingCustomerEmail UnindexedFieldURIType = "booking:CustomerEmail"

	UnindexedFieldURITypeBookingCustomerPhone UnindexedFieldURIType = "booking:CustomerPhone"

	UnindexedFieldURITypeBookingCustomerId UnindexedFieldURIType = "booking:CustomerId"

	UnindexedFieldURITypeInsightInsightId UnindexedFieldURIType = "insight:InsightId"

	UnindexedFieldURITypeInsightType UnindexedFieldURIType = "insight:Type"

	UnindexedFieldURITypeInsightStartTimeUtc UnindexedFieldURIType = "insight:StartTimeUtc"

	UnindexedFieldURITypeInsightEndTimeUtc UnindexedFieldURIType = "insight:EndTimeUtc"

	UnindexedFieldURITypeInsightStatus UnindexedFieldURIType = "insight:Status"

	UnindexedFieldURITypeInsightVersion UnindexedFieldURIType = "insight:Version"

	UnindexedFieldURITypeInsightApplicationsIds UnindexedFieldURIType = "insight:ApplicationsIds"

	UnindexedFieldURITypeInsightText UnindexedFieldURIType = "insight:Text"

	UnindexedFieldURITypeInsightSuggestedActions UnindexedFieldURIType = "insight:SuggestedActions"

	UnindexedFieldURITypeInsightAppContexts UnindexedFieldURIType = "insight:AppContexts"
)

type DictionaryURIType XsString

const (
	DictionaryURITypeItemInternetMessageHeader DictionaryURIType = "item:InternetMessageHeader"

	DictionaryURITypeContactsImAddress DictionaryURIType = "contacts:ImAddress"

	DictionaryURITypeContactsPhysicalAddressStreet DictionaryURIType = "contacts:PhysicalAddress:Street"

	DictionaryURITypeContactsPhysicalAddressCity DictionaryURIType = "contacts:PhysicalAddress:City"

	DictionaryURITypeContactsPhysicalAddressState DictionaryURIType = "contacts:PhysicalAddress:State"

	DictionaryURITypeContactsPhysicalAddressCountryOrRegion DictionaryURIType = "contacts:PhysicalAddress:CountryOrRegion"

	DictionaryURITypeContactsPhysicalAddressPostalCode DictionaryURIType = "contacts:PhysicalAddress:PostalCode"

	DictionaryURITypeContactsPhoneNumber DictionaryURIType = "contacts:PhoneNumber"

	DictionaryURITypeContactsEmailAddress DictionaryURIType = "contacts:EmailAddress"

	DictionaryURITypeDistributionlistMembersMember DictionaryURIType = "distributionlist:Members:Member"
)

type ExceptionPropertyURIType XsString

const (
	ExceptionPropertyURITypeAttachmentName ExceptionPropertyURIType = "attachment:Name"

	ExceptionPropertyURITypeAttachmentContentType ExceptionPropertyURIType = "attachment:ContentType"

	ExceptionPropertyURITypeAttachmentContent ExceptionPropertyURIType = "attachment:Content"

	ExceptionPropertyURITypeRecurrenceMonth ExceptionPropertyURIType = "recurrence:Month"

	ExceptionPropertyURITypeRecurrenceDayOfWeekIndex ExceptionPropertyURIType = "recurrence:DayOfWeekIndex"

	ExceptionPropertyURITypeRecurrenceDaysOfWeek ExceptionPropertyURIType = "recurrence:DaysOfWeek"

	ExceptionPropertyURITypeRecurrenceDayOfMonth ExceptionPropertyURIType = "recurrence:DayOfMonth"

	ExceptionPropertyURITypeRecurrenceInterval ExceptionPropertyURIType = "recurrence:Interval"

	ExceptionPropertyURITypeRecurrenceNumberOfOccurrences ExceptionPropertyURIType = "recurrence:NumberOfOccurrences"

	ExceptionPropertyURITypeTimezoneOffset ExceptionPropertyURIType = "timezone:Offset"
)

//
// The regular expression captures the standard representation of a GUID
//

type GuidType XsString

//
// Defines the well known property set ids for extended properties.
//

type DistinguishedPropertySetType XsString

const (
	DistinguishedPropertySetTypeMeeting DistinguishedPropertySetType = "Meeting"

	DistinguishedPropertySetTypeAppointment DistinguishedPropertySetType = "Appointment"

	DistinguishedPropertySetTypeCommon DistinguishedPropertySetType = "Common"

	DistinguishedPropertySetTypePublicStrings DistinguishedPropertySetType = "PublicStrings"

	DistinguishedPropertySetTypeAddress DistinguishedPropertySetType = "Address"

	DistinguishedPropertySetTypeInternetHeaders DistinguishedPropertySetType = "InternetHeaders"

	DistinguishedPropertySetTypeCalendarAssistant DistinguishedPropertySetType = "CalendarAssistant"

	DistinguishedPropertySetTypeUnifiedMessaging DistinguishedPropertySetType = "UnifiedMessaging"

	DistinguishedPropertySetTypeTask DistinguishedPropertySetType = "Task"

	DistinguishedPropertySetTypeSharing DistinguishedPropertySetType = "Sharing"
)

//
// Includes all of the extended property types that we support.  Note that Error, Null,
// Object and Object array can not be used in restrictions, or for setting/getting values.
// They are only there for error reporting purposes.
//

type MapiPropertyTypeType XsString

const (
	MapiPropertyTypeTypeApplicationTime MapiPropertyTypeType = "ApplicationTime"

	MapiPropertyTypeTypeApplicationTimeArray MapiPropertyTypeType = "ApplicationTimeArray"

	MapiPropertyTypeTypeBinary MapiPropertyTypeType = "Binary"

	MapiPropertyTypeTypeBinaryArray MapiPropertyTypeType = "BinaryArray"

	MapiPropertyTypeTypeBoolean MapiPropertyTypeType = "Boolean"

	MapiPropertyTypeTypeCLSID MapiPropertyTypeType = "CLSID"

	MapiPropertyTypeTypeCLSIDArray MapiPropertyTypeType = "CLSIDArray"

	MapiPropertyTypeTypeCurrency MapiPropertyTypeType = "Currency"

	MapiPropertyTypeTypeCurrencyArray MapiPropertyTypeType = "CurrencyArray"

	MapiPropertyTypeTypeDouble MapiPropertyTypeType = "Double"

	MapiPropertyTypeTypeDoubleArray MapiPropertyTypeType = "DoubleArray"

	MapiPropertyTypeTypeError MapiPropertyTypeType = "Error"

	MapiPropertyTypeTypeFloat MapiPropertyTypeType = "Float"

	MapiPropertyTypeTypeFloatArray MapiPropertyTypeType = "FloatArray"

	MapiPropertyTypeTypeInteger MapiPropertyTypeType = "Integer"

	MapiPropertyTypeTypeIntegerArray MapiPropertyTypeType = "IntegerArray"

	MapiPropertyTypeTypeLong MapiPropertyTypeType = "Long"

	MapiPropertyTypeTypeLongArray MapiPropertyTypeType = "LongArray"

	MapiPropertyTypeTypeNull MapiPropertyTypeType = "Null"

	MapiPropertyTypeTypeObject MapiPropertyTypeType = "Object"

	MapiPropertyTypeTypeObjectArray MapiPropertyTypeType = "ObjectArray"

	MapiPropertyTypeTypeShort MapiPropertyTypeType = "Short"

	MapiPropertyTypeTypeShortArray MapiPropertyTypeType = "ShortArray"

	MapiPropertyTypeTypeSystemTime MapiPropertyTypeType = "SystemTime"

	MapiPropertyTypeTypeSystemTimeArray MapiPropertyTypeType = "SystemTimeArray"

	MapiPropertyTypeTypeString MapiPropertyTypeType = "String"

	MapiPropertyTypeTypeStringArray MapiPropertyTypeType = "StringArray"
)

//
// This type represents the property tag (MINUS the type part).  There are two options
// for representation:
// 1.  Hex ==> 0x3fa4
// 2.  Decimal ==> 0-65535
//

type PropertyTagType string

// Types of sub-tree traversal for deletion and enumeration

type FolderQueryTraversalType XsString

const (
	FolderQueryTraversalTypeShallow FolderQueryTraversalType = "Shallow"

	FolderQueryTraversalTypeDeep FolderQueryTraversalType = "Deep"

	FolderQueryTraversalTypeSoftDeleted FolderQueryTraversalType = "SoftDeleted"
)

// Types of sub-tree traversal for deletion and enumeration

type SearchFolderTraversalType XsString

const (
	SearchFolderTraversalTypeShallow SearchFolderTraversalType = "Shallow"

	SearchFolderTraversalTypeDeep SearchFolderTraversalType = "Deep"
)

// Types of sub-tree traversal for deletion and enumeration

type ItemQueryTraversalType XsString

const (
	ItemQueryTraversalTypeShallow ItemQueryTraversalType = "Shallow"

	ItemQueryTraversalTypeSoftDeleted ItemQueryTraversalType = "SoftDeleted"

	ItemQueryTraversalTypeAssociated ItemQueryTraversalType = "Associated"
)

// Types of sub-tree traversal for conversations

type ConversationQueryTraversalType XsString

const (
	ConversationQueryTraversalTypeShallow ConversationQueryTraversalType = "Shallow"

	ConversationQueryTraversalTypeDeep ConversationQueryTraversalType = "Deep"
)

type DefaultShapeNamesType XsString

const (
	DefaultShapeNamesTypeIdOnly DefaultShapeNamesType = "IdOnly"

	DefaultShapeNamesTypeDefault DefaultShapeNamesType = "Default"

	DefaultShapeNamesTypeAllProperties DefaultShapeNamesType = "AllProperties"

	DefaultShapeNamesTypePcxPeopleSearch DefaultShapeNamesType = "PcxPeopleSearch"
)

type BodyTypeResponseType XsString

const (
	BodyTypeResponseTypeBest BodyTypeResponseType = "Best"

	BodyTypeResponseTypeHTML BodyTypeResponseType = "HTML"

	BodyTypeResponseTypeText BodyTypeResponseType = "Text"
)

type DisposalType XsString

const (
	DisposalTypeHardDelete DisposalType = "HardDelete"

	DisposalTypeSoftDelete DisposalType = "SoftDelete"

	DisposalTypeMoveToDeletedItems DisposalType = "MoveToDeletedItems"
)

// Type of conflict resolution to attempt during update

type ConflictResolutionType XsString

const (
	ConflictResolutionTypeNeverOverwrite ConflictResolutionType = "NeverOverwrite"

	ConflictResolutionTypeAutoResolve ConflictResolutionType = "AutoResolve"

	ConflictResolutionTypeAlwaysOverwrite ConflictResolutionType = "AlwaysOverwrite"
)

type ClientAccessTokenTypeType XsString

const (
	ClientAccessTokenTypeTypeCallerIdentity ClientAccessTokenTypeType = "CallerIdentity"

	ClientAccessTokenTypeTypeExtensionCallback ClientAccessTokenTypeType = "ExtensionCallback"

	ClientAccessTokenTypeTypeScopedToken ClientAccessTokenTypeType = "ScopedToken"

	ClientAccessTokenTypeTypeExtensionRestApiCallback ClientAccessTokenTypeType = "ExtensionRestApiCallback"

	ClientAccessTokenTypeTypeConnectors ClientAccessTokenTypeType = "Connectors"

	ClientAccessTokenTypeTypeLoki ClientAccessTokenTypeType = "Loki"

	ClientAccessTokenTypeTypeDesktopOutlook ClientAccessTokenTypeType = "DesktopOutlook"
)

type ResponseClassType XsString

const (
	ResponseClassTypeSuccess ResponseClassType = "Success"

	ResponseClassTypeWarning ResponseClassType = "Warning"

	ResponseClassTypeError ResponseClassType = "Error"
)

type SensitivityChoicesType XsString

const (
	SensitivityChoicesTypeNormal SensitivityChoicesType = "Normal"

	SensitivityChoicesTypePersonal SensitivityChoicesType = "Personal"

	SensitivityChoicesTypePrivate SensitivityChoicesType = "Private"

	SensitivityChoicesTypeConfidential SensitivityChoicesType = "Confidential"
)

type ImportanceChoicesType XsString

const (
	ImportanceChoicesTypeLow ImportanceChoicesType = "Low"

	ImportanceChoicesTypeNormal ImportanceChoicesType = "Normal"

	ImportanceChoicesTypeHigh ImportanceChoicesType = "High"
)

type BodyTypeType XsString

const (
	BodyTypeTypeHTML BodyTypeType = "HTML"

	BodyTypeTypeText BodyTypeType = "Text"
)

type FolderClassType XsString

// URIs for the distinguished folders accessible from a mailbox

type DistinguishedFolderIdNameType XsString

const (
	DistinguishedFolderIdNameTypeCalendar DistinguishedFolderIdNameType = "calendar"

	DistinguishedFolderIdNameTypeContacts DistinguishedFolderIdNameType = "contacts"

	DistinguishedFolderIdNameTypeDeleteditems DistinguishedFolderIdNameType = "deleteditems"

	DistinguishedFolderIdNameTypeDrafts DistinguishedFolderIdNameType = "drafts"

	DistinguishedFolderIdNameTypeInbox DistinguishedFolderIdNameType = "inbox"

	DistinguishedFolderIdNameTypeJournal DistinguishedFolderIdNameType = "journal"

	DistinguishedFolderIdNameTypeNotes DistinguishedFolderIdNameType = "notes"

	DistinguishedFolderIdNameTypeOutbox DistinguishedFolderIdNameType = "outbox"

	DistinguishedFolderIdNameTypeSentitems DistinguishedFolderIdNameType = "sentitems"

	DistinguishedFolderIdNameTypeTasks DistinguishedFolderIdNameType = "tasks"

	DistinguishedFolderIdNameTypeMsgfolderroot DistinguishedFolderIdNameType = "msgfolderroot"

	DistinguishedFolderIdNameTypePublicfoldersroot DistinguishedFolderIdNameType = "publicfoldersroot"

	DistinguishedFolderIdNameTypeRoot DistinguishedFolderIdNameType = "root"

	DistinguishedFolderIdNameTypeJunkemail DistinguishedFolderIdNameType = "junkemail"

	DistinguishedFolderIdNameTypeSearchfolders DistinguishedFolderIdNameType = "searchfolders"

	DistinguishedFolderIdNameTypeVoicemail DistinguishedFolderIdNameType = "voicemail"

	DistinguishedFolderIdNameTypeRecoverableitemsroot DistinguishedFolderIdNameType = "recoverableitemsroot"

	DistinguishedFolderIdNameTypeRecoverableitemsdeletions DistinguishedFolderIdNameType = "recoverableitemsdeletions"

	DistinguishedFolderIdNameTypeRecoverableitemsversions DistinguishedFolderIdNameType = "recoverableitemsversions"

	DistinguishedFolderIdNameTypeRecoverableitemspurges DistinguishedFolderIdNameType = "recoverableitemspurges"

	DistinguishedFolderIdNameTypeRecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "recoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeArchiveroot DistinguishedFolderIdNameType = "archiveroot"

	DistinguishedFolderIdNameTypeArchivemsgfolderroot DistinguishedFolderIdNameType = "archivemsgfolderroot"

	DistinguishedFolderIdNameTypeArchivedeleteditems DistinguishedFolderIdNameType = "archivedeleteditems"

	DistinguishedFolderIdNameTypeArchiveinbox DistinguishedFolderIdNameType = "archiveinbox"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsroot DistinguishedFolderIdNameType = "archiverecoverableitemsroot"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdeletions DistinguishedFolderIdNameType = "archiverecoverableitemsdeletions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsversions DistinguishedFolderIdNameType = "archiverecoverableitemsversions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemspurges DistinguishedFolderIdNameType = "archiverecoverableitemspurges"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "archiverecoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeSyncissues DistinguishedFolderIdNameType = "syncissues"

	DistinguishedFolderIdNameTypeConflicts DistinguishedFolderIdNameType = "conflicts"

	DistinguishedFolderIdNameTypeLocalfailures DistinguishedFolderIdNameType = "localfailures"

	DistinguishedFolderIdNameTypeServerfailures DistinguishedFolderIdNameType = "serverfailures"

	DistinguishedFolderIdNameTypeRecipientcache DistinguishedFolderIdNameType = "recipientcache"

	DistinguishedFolderIdNameTypeQuickcontacts DistinguishedFolderIdNameType = "quickcontacts"

	DistinguishedFolderIdNameTypeConversationhistory DistinguishedFolderIdNameType = "conversationhistory"

	DistinguishedFolderIdNameTypeAdminauditlogs DistinguishedFolderIdNameType = "adminauditlogs"

	DistinguishedFolderIdNameTypeTodosearch DistinguishedFolderIdNameType = "todosearch"

	DistinguishedFolderIdNameTypeMycontacts DistinguishedFolderIdNameType = "mycontacts"

	DistinguishedFolderIdNameTypeDirectory DistinguishedFolderIdNameType = "directory"

	DistinguishedFolderIdNameTypeImcontactlist DistinguishedFolderIdNameType = "imcontactlist"

	DistinguishedFolderIdNameTypePeopleconnect DistinguishedFolderIdNameType = "peopleconnect"

	DistinguishedFolderIdNameTypeFavorites DistinguishedFolderIdNameType = "favorites"

	DistinguishedFolderIdNameTypeMecontact DistinguishedFolderIdNameType = "mecontact"

	DistinguishedFolderIdNameTypePersonmetadata DistinguishedFolderIdNameType = "personmetadata"

	DistinguishedFolderIdNameTypeTeamspaceactivity DistinguishedFolderIdNameType = "teamspaceactivity"

	DistinguishedFolderIdNameTypeTeamspacemessaging DistinguishedFolderIdNameType = "teamspacemessaging"

	DistinguishedFolderIdNameTypeTeamspaceworkitems DistinguishedFolderIdNameType = "teamspaceworkitems"

	DistinguishedFolderIdNameTypeScheduled DistinguishedFolderIdNameType = "scheduled"

	DistinguishedFolderIdNameTypeOrionnotes DistinguishedFolderIdNameType = "orionnotes"

	DistinguishedFolderIdNameTypeTagitems DistinguishedFolderIdNameType = "tagitems"

	DistinguishedFolderIdNameTypeAlltaggeditems DistinguishedFolderIdNameType = "alltaggeditems"

	DistinguishedFolderIdNameTypeAllcategorizeditems DistinguishedFolderIdNameType = "allcategorizeditems"

	DistinguishedFolderIdNameTypeExternalcontacts DistinguishedFolderIdNameType = "externalcontacts"

	DistinguishedFolderIdNameTypeTeamchat DistinguishedFolderIdNameType = "teamchat"

	DistinguishedFolderIdNameTypeTeamchathistory DistinguishedFolderIdNameType = "teamchathistory"

	DistinguishedFolderIdNameTypeYammerdata DistinguishedFolderIdNameType = "yammerdata"

	DistinguishedFolderIdNameTypeYammerroot DistinguishedFolderIdNameType = "yammerroot"

	DistinguishedFolderIdNameTypeYammerinbound DistinguishedFolderIdNameType = "yammerinbound"

	DistinguishedFolderIdNameTypeYammeroutbound DistinguishedFolderIdNameType = "yammeroutbound"

	DistinguishedFolderIdNameTypeYammerfeeds DistinguishedFolderIdNameType = "yammerfeeds"

	DistinguishedFolderIdNameTypeKaizaladata DistinguishedFolderIdNameType = "kaizaladata"

	DistinguishedFolderIdNameTypeMessageingestion DistinguishedFolderIdNameType = "messageingestion"

	DistinguishedFolderIdNameTypeOnedriveroot DistinguishedFolderIdNameType = "onedriveroot"

	DistinguishedFolderIdNameTypeOnedriverecylebin DistinguishedFolderIdNameType = "onedriverecylebin"

	DistinguishedFolderIdNameTypeOnedrivesystem DistinguishedFolderIdNameType = "onedrivesystem"

	DistinguishedFolderIdNameTypeOnedrivevolume DistinguishedFolderIdNameType = "onedrivevolume"

	DistinguishedFolderIdNameTypeImportant DistinguishedFolderIdNameType = "important"

	DistinguishedFolderIdNameTypeStarred DistinguishedFolderIdNameType = "starred"

	DistinguishedFolderIdNameTypeArchive DistinguishedFolderIdNameType = "archive"
)

type CreateActionType XsString

const (
	CreateActionTypeCreateNew CreateActionType = "CreateNew"

	CreateActionTypeUpdate CreateActionType = "Update"

	CreateActionTypeUpdateOrCreate CreateActionType = "UpdateOrCreate"
)

type CompleteActionType XsString

const (
	CompleteActionTypeCommit CompleteActionType = "Commit"

	CompleteActionTypeAbandon CompleteActionType = "Abandon"
)

// Types of view filters for finding items/conversations

type ViewFilterType XsString

const (
	ViewFilterTypeAll ViewFilterType = "All"

	ViewFilterTypeFlagged ViewFilterType = "Flagged"

	ViewFilterTypeHasAttachment ViewFilterType = "HasAttachment"

	ViewFilterTypeToOrCcMe ViewFilterType = "ToOrCcMe"

	ViewFilterTypeUnread ViewFilterType = "Unread"

	ViewFilterTypeTaskActive ViewFilterType = "TaskActive"

	ViewFilterTypeTaskOverdue ViewFilterType = "TaskOverdue"

	ViewFilterTypeTaskCompleted ViewFilterType = "TaskCompleted"

	ViewFilterTypeNoClutter ViewFilterType = "NoClutter"

	ViewFilterTypeClutter ViewFilterType = "Clutter"
)

type ReminderActionType XsString

const (
	ReminderActionTypeDismiss ReminderActionType = "Dismiss"

	ReminderActionTypeSnooze ReminderActionType = "Snooze"
)

type DerivedItemIdType XsString

type ItemClassType XsString

type FlagStatusType XsString

const (
	FlagStatusTypeNotFlagged FlagStatusType = "NotFlagged"

	FlagStatusTypeFlagged FlagStatusType = "Flagged"

	FlagStatusTypeComplete FlagStatusType = "Complete"
)

type PredictedActionReasonType XsString

const (
	PredictedActionReasonTypeNone PredictedActionReasonType = "None"

	PredictedActionReasonTypeConversationStarterIsYou PredictedActionReasonType = "ConversationStarterIsYou"

	PredictedActionReasonTypeOnlyRecipient PredictedActionReasonType = "OnlyRecipient"

	PredictedActionReasonTypeConversationContributions PredictedActionReasonType = "ConversationContributions"

	PredictedActionReasonTypeMarkedImportantBySender PredictedActionReasonType = "MarkedImportantBySender"

	PredictedActionReasonTypeSenderIsManager PredictedActionReasonType = "SenderIsManager"

	PredictedActionReasonTypeSenderIsInManagementChain PredictedActionReasonType = "SenderIsInManagementChain"

	PredictedActionReasonTypeSenderIsDirectReport PredictedActionReasonType = "SenderIsDirectReport"

	PredictedActionReasonTypeActionBasedOnSender PredictedActionReasonType = "ActionBasedOnSender"

	PredictedActionReasonTypeNameOnToLine PredictedActionReasonType = "NameOnToLine"

	PredictedActionReasonTypeNameOnCcLine PredictedActionReasonType = "NameOnCcLine"

	PredictedActionReasonTypeManagerPosition PredictedActionReasonType = "ManagerPosition"

	PredictedActionReasonTypeReplyToAMessageFromMe PredictedActionReasonType = "ReplyToAMessageFromMe"

	PredictedActionReasonTypePreviouslyFlagged PredictedActionReasonType = "PreviouslyFlagged"

	PredictedActionReasonTypeActionBasedOnRecipients PredictedActionReasonType = "ActionBasedOnRecipients"

	PredictedActionReasonTypeActionBasedOnSubjectWords PredictedActionReasonType = "ActionBasedOnSubjectWords"

	PredictedActionReasonTypeActionBasedOnBasedOnBodyWords PredictedActionReasonType = "ActionBasedOnBasedOnBodyWords"
)

type EmailPositionType XsString

const (
	EmailPositionTypeLatestReply EmailPositionType = "LatestReply"

	EmailPositionTypeOther EmailPositionType = "Other"

	EmailPositionTypeSubject EmailPositionType = "Subject"

	EmailPositionTypeSignature EmailPositionType = "Signature"
)

type InferenceClassificationType XsString

const (
	InferenceClassificationTypeFocused InferenceClassificationType = "Focused"

	InferenceClassificationTypeOther InferenceClassificationType = "Other"
)

type ConversationActionTypeType XsString

const (
	ConversationActionTypeTypeAlwaysCategorize ConversationActionTypeType = "AlwaysCategorize"

	ConversationActionTypeTypeAlwaysDelete ConversationActionTypeType = "AlwaysDelete"

	ConversationActionTypeTypeAlwaysMove ConversationActionTypeType = "AlwaysMove"

	ConversationActionTypeTypeDelete ConversationActionTypeType = "Delete"

	ConversationActionTypeTypeMove ConversationActionTypeType = "Move"

	ConversationActionTypeTypeCopy ConversationActionTypeType = "Copy"

	ConversationActionTypeTypeSetReadState ConversationActionTypeType = "SetReadState"

	ConversationActionTypeTypeSetRetentionPolicy ConversationActionTypeType = "SetRetentionPolicy"

	ConversationActionTypeTypeFlag ConversationActionTypeType = "Flag"
)

type ConversationNodeSortOrder XsString

const (
	ConversationNodeSortOrderTreeOrderAscending ConversationNodeSortOrder = "TreeOrderAscending"

	ConversationNodeSortOrderTreeOrderDescending ConversationNodeSortOrder = "TreeOrderDescending"

	ConversationNodeSortOrderDateOrderAscending ConversationNodeSortOrder = "DateOrderAscending"

	ConversationNodeSortOrderDateOrderDescending ConversationNodeSortOrder = "DateOrderDescending"
)

type TokenSourceType XsString

const (
	TokenSourceTypeNone TokenSourceType = "None"

	TokenSourceTypeLinkedIn TokenSourceType = "LinkedIn"
)

type GroupMailboxConfigurationActionType interface{}

type InstantSearchItemType interface{}

type InstantSearchResultType interface{}

type QueryOptionsType interface{}

type OneDriveViewType interface{}

type DelveViewType interface{}

type GroupMemberIdentifierType XsString

const (
	GroupMemberIdentifierTypeExternalDirectoryObjectId GroupMemberIdentifierType = "ExternalDirectoryObjectId"

	GroupMemberIdentifierTypeLegacyExchangeDN GroupMemberIdentifierType = "LegacyExchangeDN"

	GroupMemberIdentifierTypeSmtpAddress GroupMemberIdentifierType = "SmtpAddress"
)

type ModernGroupTypeType XsString

const (
	ModernGroupTypeTypeNone ModernGroupTypeType = "None"

	ModernGroupTypeTypePrivate ModernGroupTypeType = "Private"

	ModernGroupTypeTypeSecret ModernGroupTypeType = "Secret"

	ModernGroupTypeTypePublic ModernGroupTypeType = "Public"
)

type MessageDispositionType XsString

const (
	MessageDispositionTypeSaveOnly MessageDispositionType = "SaveOnly"

	MessageDispositionTypeSendOnly MessageDispositionType = "SendOnly"

	MessageDispositionTypeSendAndSaveCopy MessageDispositionType = "SendAndSaveCopy"
)

type CalendarItemCreateOrDeleteOperationType XsString

const (
	CalendarItemCreateOrDeleteOperationTypeSendToNone CalendarItemCreateOrDeleteOperationType = "SendToNone"

	CalendarItemCreateOrDeleteOperationTypeSendOnlyToAll CalendarItemCreateOrDeleteOperationType = "SendOnlyToAll"

	CalendarItemCreateOrDeleteOperationTypeSendToAllAndSaveCopy CalendarItemCreateOrDeleteOperationType = "SendToAllAndSaveCopy"
)

type CalendarItemUpdateOperationType XsString

const (
	CalendarItemUpdateOperationTypeSendToNone CalendarItemUpdateOperationType = "SendToNone"

	CalendarItemUpdateOperationTypeSendOnlyToAll CalendarItemUpdateOperationType = "SendOnlyToAll"

	CalendarItemUpdateOperationTypeSendOnlyToChanged CalendarItemUpdateOperationType = "SendOnlyToChanged"

	CalendarItemUpdateOperationTypeSendToAllAndSaveCopy CalendarItemUpdateOperationType = "SendToAllAndSaveCopy"

	CalendarItemUpdateOperationTypeSendToChangedAndSaveCopy CalendarItemUpdateOperationType = "SendToChangedAndSaveCopy"
)

type AffectedTaskOccurrencesType XsString

const (
	AffectedTaskOccurrencesTypeAllOccurrences AffectedTaskOccurrencesType = "AllOccurrences"

	AffectedTaskOccurrencesTypeSpecifiedOccurrenceOnly AffectedTaskOccurrencesType = "SpecifiedOccurrenceOnly"
)

type TaskStatusType XsString

const (
	TaskStatusTypeNotStarted TaskStatusType = "NotStarted"

	TaskStatusTypeInProgress TaskStatusType = "InProgress"

	TaskStatusTypeCompleted TaskStatusType = "Completed"

	TaskStatusTypeWaitingOnOthers TaskStatusType = "WaitingOnOthers"

	TaskStatusTypeDeferred TaskStatusType = "Deferred"
)

type TaskDelegateStateType XsString

const (
	TaskDelegateStateTypeNoMatch TaskDelegateStateType = "NoMatch"

	TaskDelegateStateTypeOwnNew TaskDelegateStateType = "OwnNew"

	TaskDelegateStateTypeOwned TaskDelegateStateType = "Owned"

	TaskDelegateStateTypeAccepted TaskDelegateStateType = "Accepted"

	TaskDelegateStateTypeDeclined TaskDelegateStateType = "Declined"

	TaskDelegateStateTypeMax TaskDelegateStateType = "Max"
)

type SharingActionImportance XsString

const (
	SharingActionImportancePrimary SharingActionImportance = "Primary"

	SharingActionImportanceSecondary SharingActionImportance = "Secondary"
)

type SharingAction XsString

const (
	SharingActionAcceptAndViewCalendar SharingAction = "AcceptAndViewCalendar"

	SharingActionViewCalendar SharingAction = "ViewCalendar"

	SharingActionAddThisCalendar SharingAction = "AddThisCalendar"

	SharingActionAccept SharingAction = "Accept"
)

type SharingActionType XsString

const (
	SharingActionTypeAccept SharingActionType = "Accept"
)

type IndexBasePointType XsString

const (
	IndexBasePointTypeBeginning IndexBasePointType = "Beginning"

	IndexBasePointTypeEnd IndexBasePointType = "End"
)

type ResolveNamesSearchScopeType XsString

const (
	ResolveNamesSearchScopeTypeActiveDirectory ResolveNamesSearchScopeType = "ActiveDirectory"

	ResolveNamesSearchScopeTypeActiveDirectoryContacts ResolveNamesSearchScopeType = "ActiveDirectoryContacts"

	ResolveNamesSearchScopeTypeContacts ResolveNamesSearchScopeType = "Contacts"

	ResolveNamesSearchScopeTypeContactsActiveDirectory ResolveNamesSearchScopeType = "ContactsActiveDirectory"
)

type MeetingRequestTypeType XsString

const (
	MeetingRequestTypeTypeNone MeetingRequestTypeType = "None"

	MeetingRequestTypeTypeFullUpdate MeetingRequestTypeType = "FullUpdate"

	MeetingRequestTypeTypeInformationalUpdate MeetingRequestTypeType = "InformationalUpdate"

	MeetingRequestTypeTypeNewMeetingRequest MeetingRequestTypeType = "NewMeetingRequest"

	MeetingRequestTypeTypeOutdated MeetingRequestTypeType = "Outdated"

	MeetingRequestTypeTypeSilentUpdate MeetingRequestTypeType = "SilentUpdate"

	MeetingRequestTypeTypePrincipalWantsCopy MeetingRequestTypeType = "PrincipalWantsCopy"
)

type ReminderMinutesBeforeStartType string

type AvailabilityStatusType XsString

const (
	AvailabilityStatusTypeUnknown AvailabilityStatusType = "Unknown"

	AvailabilityStatusTypeFree AvailabilityStatusType = "Free"

	AvailabilityStatusTypeTentative AvailabilityStatusType = "Tentative"

	AvailabilityStatusTypeBusy AvailabilityStatusType = "Busy"

	AvailabilityStatusTypeOof AvailabilityStatusType = "Oof"

	AvailabilityStatusTypeWorkingElsewhere AvailabilityStatusType = "WorkingElsewhere"
)

type LegacyFreeBusyType XsString

const (
	LegacyFreeBusyTypeFree LegacyFreeBusyType = "Free"

	LegacyFreeBusyTypeTentative LegacyFreeBusyType = "Tentative"

	LegacyFreeBusyTypeBusy LegacyFreeBusyType = "Busy"

	LegacyFreeBusyTypeOOF LegacyFreeBusyType = "OOF"

	LegacyFreeBusyTypeWorkingElsewhere LegacyFreeBusyType = "WorkingElsewhere"

	LegacyFreeBusyTypeNoData LegacyFreeBusyType = "NoData"
)

type CalendarItemTypeType XsString

const (
	CalendarItemTypeTypeSingle CalendarItemTypeType = "Single"

	CalendarItemTypeTypeOccurrence CalendarItemTypeType = "Occurrence"

	CalendarItemTypeTypeException CalendarItemTypeType = "Exception"

	CalendarItemTypeTypeRecurringMaster CalendarItemTypeType = "RecurringMaster"
)

type ResponseTypeType XsString

const (
	ResponseTypeTypeUnknown ResponseTypeType = "Unknown"

	ResponseTypeTypeOrganizer ResponseTypeType = "Organizer"

	ResponseTypeTypeTentative ResponseTypeType = "Tentative"

	ResponseTypeTypeAccept ResponseTypeType = "Accept"

	ResponseTypeTypeDecline ResponseTypeType = "Decline"

	ResponseTypeTypeNoResponseReceived ResponseTypeType = "NoResponseReceived"
)

type LobbyBypassType XsString

const (
	LobbyBypassTypeDisabled LobbyBypassType = "Disabled"

	LobbyBypassTypeEnabledForGatewayParticipants LobbyBypassType = "EnabledForGatewayParticipants"
)

type OnlineMeetingAccessLevelType XsString

const (
	OnlineMeetingAccessLevelTypeLocked OnlineMeetingAccessLevelType = "Locked"

	OnlineMeetingAccessLevelTypeInvited OnlineMeetingAccessLevelType = "Invited"

	OnlineMeetingAccessLevelTypeInternal OnlineMeetingAccessLevelType = "Internal"

	OnlineMeetingAccessLevelTypeEveryone OnlineMeetingAccessLevelType = "Everyone"
)

type PresentersType XsString

const (
	PresentersTypeDisabled PresentersType = "Disabled"

	PresentersTypeInternal PresentersType = "Internal"

	PresentersTypeEveryone PresentersType = "Everyone"
)

type DayOfWeekType XsString

const (
	DayOfWeekTypeSunday DayOfWeekType = "Sunday"

	DayOfWeekTypeMonday DayOfWeekType = "Monday"

	DayOfWeekTypeTuesday DayOfWeekType = "Tuesday"

	DayOfWeekTypeWednesday DayOfWeekType = "Wednesday"

	DayOfWeekTypeThursday DayOfWeekType = "Thursday"

	DayOfWeekTypeFriday DayOfWeekType = "Friday"

	DayOfWeekTypeSaturday DayOfWeekType = "Saturday"

	DayOfWeekTypeDay DayOfWeekType = "Day"

	DayOfWeekTypeWeekday DayOfWeekType = "Weekday"

	DayOfWeekTypeWeekendDay DayOfWeekType = "WeekendDay"
)

type DaysOfWeekType []DayOfWeekType

type DayOfWeekIndexType XsString

const (
	DayOfWeekIndexTypeFirst DayOfWeekIndexType = "First"

	DayOfWeekIndexTypeSecond DayOfWeekIndexType = "Second"

	DayOfWeekIndexTypeThird DayOfWeekIndexType = "Third"

	DayOfWeekIndexTypeFourth DayOfWeekIndexType = "Fourth"

	DayOfWeekIndexTypeLast DayOfWeekIndexType = "Last"
)

type MonthNamesType XsString

const (
	MonthNamesTypeJanuary MonthNamesType = "January"

	MonthNamesTypeFebruary MonthNamesType = "February"

	MonthNamesTypeMarch MonthNamesType = "March"

	MonthNamesTypeApril MonthNamesType = "April"

	MonthNamesTypeMay MonthNamesType = "May"

	MonthNamesTypeJune MonthNamesType = "June"

	MonthNamesTypeJuly MonthNamesType = "July"

	MonthNamesTypeAugust MonthNamesType = "August"

	MonthNamesTypeSeptember MonthNamesType = "September"

	MonthNamesTypeOctober MonthNamesType = "October"

	MonthNamesTypeNovember MonthNamesType = "November"

	MonthNamesTypeDecember MonthNamesType = "December"
)

type LocationSourceType XsString

const (
	LocationSourceTypeNone LocationSourceType = "None"

	LocationSourceTypeLocationServices LocationSourceType = "LocationServices"

	LocationSourceTypePhonebookServices LocationSourceType = "PhonebookServices"

	LocationSourceTypeDevice LocationSourceType = "Device"

	LocationSourceTypeContact LocationSourceType = "Contact"

	LocationSourceTypeResource LocationSourceType = "Resource"
)

type TransitionTargetKindType XsString

const (
	TransitionTargetKindTypePeriod TransitionTargetKindType = "Period"

	TransitionTargetKindTypeGroup TransitionTargetKindType = "Group"
)

type RoleMemberTypeType XsString

const (
	RoleMemberTypeTypeNone RoleMemberTypeType = "None"

	RoleMemberTypeTypePassport RoleMemberTypeType = "Passport"

	RoleMemberTypeTypeEveryone RoleMemberTypeType = "Everyone"

	RoleMemberTypeTypeEmail RoleMemberTypeType = "Email"

	RoleMemberTypeTypePhone RoleMemberTypeType = "Phone"

	RoleMemberTypeTypeSkypeId RoleMemberTypeType = "SkypeId"

	RoleMemberTypeTypeExternalId RoleMemberTypeType = "ExternalId"

	RoleMemberTypeTypeGroup RoleMemberTypeType = "Group"

	RoleMemberTypeTypeGuid RoleMemberTypeType = "Guid"

	RoleMemberTypeTypeRole RoleMemberTypeType = "Role"

	RoleMemberTypeTypeService RoleMemberTypeType = "Service"

	RoleMemberTypeTypeCircle RoleMemberTypeType = "Circle"

	RoleMemberTypeTypeDomain RoleMemberTypeType = "Domain"

	RoleMemberTypeTypePartner RoleMemberTypeType = "Partner"
)

type ImAddressKeyType XsString

const (
	ImAddressKeyTypeImAddress1 ImAddressKeyType = "ImAddress1"

	ImAddressKeyTypeImAddress2 ImAddressKeyType = "ImAddress2"

	ImAddressKeyTypeImAddress3 ImAddressKeyType = "ImAddress3"
)

type EmailAddressKeyType XsString

const (
	EmailAddressKeyTypeEmailAddress1 EmailAddressKeyType = "EmailAddress1"

	EmailAddressKeyTypeEmailAddress2 EmailAddressKeyType = "EmailAddress2"

	EmailAddressKeyTypeEmailAddress3 EmailAddressKeyType = "EmailAddress3"
)

type AbchEmailAddressTypeType XsString

const (
	AbchEmailAddressTypeTypePersonal AbchEmailAddressTypeType = "Personal"

	AbchEmailAddressTypeTypeBusiness AbchEmailAddressTypeType = "Business"

	AbchEmailAddressTypeTypeOther AbchEmailAddressTypeType = "Other"

	AbchEmailAddressTypeTypePassport AbchEmailAddressTypeType = "Passport"
)

type ContactUrlKeyType XsString

const (
	ContactUrlKeyTypePersonal ContactUrlKeyType = "Personal"

	ContactUrlKeyTypeBusiness ContactUrlKeyType = "Business"

	ContactUrlKeyTypeAttachment ContactUrlKeyType = "Attachment"

	ContactUrlKeyTypeEbcDisplayDefinition ContactUrlKeyType = "EbcDisplayDefinition"

	ContactUrlKeyTypeEbcFinalImage ContactUrlKeyType = "EbcFinalImage"

	ContactUrlKeyTypeEbcLogo ContactUrlKeyType = "EbcLogo"

	ContactUrlKeyTypeFeed ContactUrlKeyType = "Feed"

	ContactUrlKeyTypeImage ContactUrlKeyType = "Image"

	ContactUrlKeyTypeInternalMarker ContactUrlKeyType = "InternalMarker"

	ContactUrlKeyTypeOther ContactUrlKeyType = "Other"
)

type PhoneNumberKeyType XsString

const (
	PhoneNumberKeyTypeAssistantPhone PhoneNumberKeyType = "AssistantPhone"

	PhoneNumberKeyTypeBusinessFax PhoneNumberKeyType = "BusinessFax"

	PhoneNumberKeyTypeBusinessPhone PhoneNumberKeyType = "BusinessPhone"

	PhoneNumberKeyTypeBusinessPhone2 PhoneNumberKeyType = "BusinessPhone2"

	PhoneNumberKeyTypeCallback PhoneNumberKeyType = "Callback"

	PhoneNumberKeyTypeCarPhone PhoneNumberKeyType = "CarPhone"

	PhoneNumberKeyTypeCompanyMainPhone PhoneNumberKeyType = "CompanyMainPhone"

	PhoneNumberKeyTypeHomeFax PhoneNumberKeyType = "HomeFax"

	PhoneNumberKeyTypeHomePhone PhoneNumberKeyType = "HomePhone"

	PhoneNumberKeyTypeHomePhone2 PhoneNumberKeyType = "HomePhone2"

	PhoneNumberKeyTypeIsdn PhoneNumberKeyType = "Isdn"

	PhoneNumberKeyTypeMobilePhone PhoneNumberKeyType = "MobilePhone"

	PhoneNumberKeyTypeOtherFax PhoneNumberKeyType = "OtherFax"

	PhoneNumberKeyTypeOtherTelephone PhoneNumberKeyType = "OtherTelephone"

	PhoneNumberKeyTypePager PhoneNumberKeyType = "Pager"

	PhoneNumberKeyTypePrimaryPhone PhoneNumberKeyType = "PrimaryPhone"

	PhoneNumberKeyTypeRadioPhone PhoneNumberKeyType = "RadioPhone"

	PhoneNumberKeyTypeTelex PhoneNumberKeyType = "Telex"

	PhoneNumberKeyTypeTtyTddPhone PhoneNumberKeyType = "TtyTddPhone"

	PhoneNumberKeyTypeBusinessMobile PhoneNumberKeyType = "BusinessMobile"

	PhoneNumberKeyTypeIPPhone PhoneNumberKeyType = "IPPhone"

	PhoneNumberKeyTypeMms PhoneNumberKeyType = "Mms"

	PhoneNumberKeyTypeMsn PhoneNumberKeyType = "Msn"
)

type PhysicalAddressIndexType XsString

const (
	PhysicalAddressIndexTypeNone PhysicalAddressIndexType = "None"

	PhysicalAddressIndexTypeHome PhysicalAddressIndexType = "Home"

	PhysicalAddressIndexTypeBusiness PhysicalAddressIndexType = "Business"

	PhysicalAddressIndexTypeOther PhysicalAddressIndexType = "Other"
)

type PhysicalAddressKeyType XsString

const (
	PhysicalAddressKeyTypeHome PhysicalAddressKeyType = "Home"

	PhysicalAddressKeyTypeBusiness PhysicalAddressKeyType = "Business"

	PhysicalAddressKeyTypeOther PhysicalAddressKeyType = "Other"
)

type FileAsMappingType XsString

const (
	FileAsMappingTypeNone FileAsMappingType = "None"

	FileAsMappingTypeLastCommaFirst FileAsMappingType = "LastCommaFirst"

	FileAsMappingTypeFirstSpaceLast FileAsMappingType = "FirstSpaceLast"

	FileAsMappingTypeCompany FileAsMappingType = "Company"

	FileAsMappingTypeLastCommaFirstCompany FileAsMappingType = "LastCommaFirstCompany"

	FileAsMappingTypeCompanyLastFirst FileAsMappingType = "CompanyLastFirst"

	FileAsMappingTypeLastFirst FileAsMappingType = "LastFirst"

	FileAsMappingTypeLastFirstCompany FileAsMappingType = "LastFirstCompany"

	FileAsMappingTypeCompanyLastCommaFirst FileAsMappingType = "CompanyLastCommaFirst"

	FileAsMappingTypeLastFirstSuffix FileAsMappingType = "LastFirstSuffix"

	FileAsMappingTypeLastSpaceFirstCompany FileAsMappingType = "LastSpaceFirstCompany"

	FileAsMappingTypeCompanyLastSpaceFirst FileAsMappingType = "CompanyLastSpaceFirst"

	FileAsMappingTypeLastSpaceFirst FileAsMappingType = "LastSpaceFirst"

	FileAsMappingTypeDisplayName FileAsMappingType = "DisplayName"

	FileAsMappingTypeFirstName FileAsMappingType = "FirstName"

	FileAsMappingTypeLastFirstMiddleSuffix FileAsMappingType = "LastFirstMiddleSuffix"

	FileAsMappingTypeLastName FileAsMappingType = "LastName"

	FileAsMappingTypeEmpty FileAsMappingType = "Empty"
)

type ContactSourceType XsString

const (
	ContactSourceTypeActiveDirectory ContactSourceType = "ActiveDirectory"

	ContactSourceTypeStore ContactSourceType = "Store"
)

type MemberStatusType XsString

const (
	MemberStatusTypeUnrecognized MemberStatusType = "Unrecognized"

	MemberStatusTypeNormal MemberStatusType = "Normal"

	MemberStatusTypeDemoted MemberStatusType = "Demoted"
)

//
// This max/min evaluation is applied to the field specified within the group by
// instance for EACH item within that group.  This determines which item from each group
// is to be selected as the representative for that group.
//

type AggregateType XsString

const (
	AggregateTypeMinimum AggregateType = "Minimum"

	AggregateTypeMaximum AggregateType = "Maximum"
)

//
// Represents standard groupings for GroupBy queries.
//

type StandardGroupByType XsString

const (
	StandardGroupByTypeConversationTopic StandardGroupByType = "ConversationTopic"
)

type ExcludesAttributeType XsString

type ContainmentModeType XsString

const (
	ContainmentModeTypeFullString ContainmentModeType = "FullString"

	ContainmentModeTypePrefixed ContainmentModeType = "Prefixed"

	ContainmentModeTypeSubstring ContainmentModeType = "Substring"

	ContainmentModeTypePrefixOnWords ContainmentModeType = "PrefixOnWords"

	ContainmentModeTypeExactPhrase ContainmentModeType = "ExactPhrase"
)

type ContainmentComparisonType XsString

const (
	ContainmentComparisonTypeExact ContainmentComparisonType = "Exact"

	ContainmentComparisonTypeIgnoreCase ContainmentComparisonType = "IgnoreCase"

	ContainmentComparisonTypeIgnoreNonSpacingCharacters ContainmentComparisonType = "IgnoreNonSpacingCharacters"

	ContainmentComparisonTypeLoose ContainmentComparisonType = "Loose"

	ContainmentComparisonTypeIgnoreCaseAndNonSpacingCharacters ContainmentComparisonType = "IgnoreCaseAndNonSpacingCharacters"

	ContainmentComparisonTypeLooseAndIgnoreCase ContainmentComparisonType = "LooseAndIgnoreCase"

	ContainmentComparisonTypeLooseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreNonSpace"

	ContainmentComparisonTypeLooseAndIgnoreCaseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreCaseAndIgnoreNonSpace"
)

type SortDirectionType XsString

const (
	SortDirectionTypeAscending SortDirectionType = "Ascending"

	SortDirectionTypeDescending SortDirectionType = "Descending"
)

type WatermarkType NonEmptyStringType

type SubscriptionIdType NonEmptyStringType

type NotificationEventTypeType XsString

const (
	NotificationEventTypeTypeCopiedEvent NotificationEventTypeType = "CopiedEvent"

	NotificationEventTypeTypeCreatedEvent NotificationEventTypeType = "CreatedEvent"

	NotificationEventTypeTypeDeletedEvent NotificationEventTypeType = "DeletedEvent"

	NotificationEventTypeTypeModifiedEvent NotificationEventTypeType = "ModifiedEvent"

	NotificationEventTypeTypeMovedEvent NotificationEventTypeType = "MovedEvent"

	NotificationEventTypeTypeNewMailEvent NotificationEventTypeType = "NewMailEvent"

	NotificationEventTypeTypeFreeBusyChangedEvent NotificationEventTypeType = "FreeBusyChangedEvent"
)

type SubscriptionTimeoutType XsInt

type SubscriptionStatusFrequencyType XsInt

type SubscriptionStatusType XsString

const (
	SubscriptionStatusTypeOK SubscriptionStatusType = "OK"

	SubscriptionStatusTypeUnsubscribe SubscriptionStatusType = "Unsubscribe"
)

type StreamingSubscriptionConnectionTimeoutType XsInt

type ConnectionStatusType XsString

const (
	ConnectionStatusTypeOK ConnectionStatusType = "OK"

	ConnectionStatusTypeClosed ConnectionStatusType = "Closed"
)

type UnifiedGroupAccessType XsString

const (
	UnifiedGroupAccessTypeNone UnifiedGroupAccessType = "None"

	UnifiedGroupAccessTypePrivate UnifiedGroupAccessType = "Private"

	UnifiedGroupAccessTypeSecret UnifiedGroupAccessType = "Secret"

	UnifiedGroupAccessTypePublic UnifiedGroupAccessType = "Public"
)

type MaxSyncChangesReturnedType XsInt

type SyncFolderItemsScopeType XsString

const (
	SyncFolderItemsScopeTypeNormalItems SyncFolderItemsScopeType = "NormalItems"

	SyncFolderItemsScopeTypeNormalAndAssociatedItems SyncFolderItemsScopeType = "NormalAndAssociatedItems"
)

type AvailabilityProxyRequestType XsString

const (
	AvailabilityProxyRequestTypeCrossSite AvailabilityProxyRequestType = "CrossSite"

	AvailabilityProxyRequestTypeCrossForest AvailabilityProxyRequestType = "CrossForest"
)

type MeetingAttendeeType XsString

const (
	MeetingAttendeeTypeOrganizer MeetingAttendeeType = "Organizer"

	MeetingAttendeeTypeRequired MeetingAttendeeType = "Required"

	MeetingAttendeeTypeOptional MeetingAttendeeType = "Optional"

	MeetingAttendeeTypeRoom MeetingAttendeeType = "Room"

	MeetingAttendeeTypeResource MeetingAttendeeType = "Resource"
)

type FreeBusyViewType interface{}

type SuggestionQuality XsString

const (
	SuggestionQualityExcellent SuggestionQuality = "Excellent"

	SuggestionQualityGood SuggestionQuality = "Good"

	SuggestionQualityFair SuggestionQuality = "Fair"

	SuggestionQualityPoor SuggestionQuality = "Poor"
)

type OofState XsString

const (
	OofStateDisabled OofState = "Disabled"

	OofStateEnabled OofState = "Enabled"

	OofStateScheduled OofState = "Scheduled"
)

type ExternalAudience XsString

const (
	ExternalAudienceNone ExternalAudience = "None"

	ExternalAudienceKnown ExternalAudience = "Known"

	ExternalAudienceAll ExternalAudience = "All"
)

type SendPromptType XsString

const (
	SendPromptTypeNone SendPromptType = "None"

	SendPromptTypeSend SendPromptType = "Send"

	SendPromptTypeVotingOption SendPromptType = "VotingOption"
)

// Surfaces the various id types that are supported for conversion

type IdFormatType XsString

const (
	IdFormatTypeEwsLegacyId IdFormatType = "EwsLegacyId"

	IdFormatTypeEwsId IdFormatType = "EwsId"

	IdFormatTypeEntryId IdFormatType = "EntryId"

	IdFormatTypeHexEntryId IdFormatType = "HexEntryId"

	IdFormatTypeStoreId IdFormatType = "StoreId"

	IdFormatTypeOwaId IdFormatType = "OwaId"
)

type DistinguishedUserType XsString

const (
	DistinguishedUserTypeDefault DistinguishedUserType = "Default"

	DistinguishedUserTypeAnonymous DistinguishedUserType = "Anonymous"
)

type PermissionReadAccessType XsString

const (
	PermissionReadAccessTypeNone PermissionReadAccessType = "None"

	PermissionReadAccessTypeFullDetails PermissionReadAccessType = "FullDetails"
)

type CalendarPermissionReadAccessType XsString

const (
	CalendarPermissionReadAccessTypeNone CalendarPermissionReadAccessType = "None"

	CalendarPermissionReadAccessTypeTimeOnly CalendarPermissionReadAccessType = "TimeOnly"

	CalendarPermissionReadAccessTypeTimeAndSubjectAndLocation CalendarPermissionReadAccessType = "TimeAndSubjectAndLocation"

	CalendarPermissionReadAccessTypeFullDetails CalendarPermissionReadAccessType = "FullDetails"
)

type PermissionActionType XsString

const (
	PermissionActionTypeNone PermissionActionType = "None"

	PermissionActionTypeOwned PermissionActionType = "Owned"

	PermissionActionTypeAll PermissionActionType = "All"
)

type PermissionLevelType XsString

const (
	PermissionLevelTypeNone PermissionLevelType = "None"

	PermissionLevelTypeOwner PermissionLevelType = "Owner"

	PermissionLevelTypePublishingEditor PermissionLevelType = "PublishingEditor"

	PermissionLevelTypeEditor PermissionLevelType = "Editor"

	PermissionLevelTypePublishingAuthor PermissionLevelType = "PublishingAuthor"

	PermissionLevelTypeAuthor PermissionLevelType = "Author"

	PermissionLevelTypeNoneditingAuthor PermissionLevelType = "NoneditingAuthor"

	PermissionLevelTypeReviewer PermissionLevelType = "Reviewer"

	PermissionLevelTypeContributor PermissionLevelType = "Contributor"

	PermissionLevelTypeCustom PermissionLevelType = "Custom"
)

type CalendarPermissionLevelType XsString

const (
	CalendarPermissionLevelTypeNone CalendarPermissionLevelType = "None"

	CalendarPermissionLevelTypeOwner CalendarPermissionLevelType = "Owner"

	CalendarPermissionLevelTypePublishingEditor CalendarPermissionLevelType = "PublishingEditor"

	CalendarPermissionLevelTypeEditor CalendarPermissionLevelType = "Editor"

	CalendarPermissionLevelTypePublishingAuthor CalendarPermissionLevelType = "PublishingAuthor"

	CalendarPermissionLevelTypeAuthor CalendarPermissionLevelType = "Author"

	CalendarPermissionLevelTypeNoneditingAuthor CalendarPermissionLevelType = "NoneditingAuthor"

	CalendarPermissionLevelTypeReviewer CalendarPermissionLevelType = "Reviewer"

	CalendarPermissionLevelTypeContributor CalendarPermissionLevelType = "Contributor"

	CalendarPermissionLevelTypeFreeBusyTimeOnly CalendarPermissionLevelType = "FreeBusyTimeOnly"

	CalendarPermissionLevelTypeFreeBusyTimeAndSubjectAndLocation CalendarPermissionLevelType = "FreeBusyTimeAndSubjectAndLocation"

	CalendarPermissionLevelTypeCustom CalendarPermissionLevelType = "Custom"
)

type DeliverMeetingRequestsType XsString

const (
	DeliverMeetingRequestsTypeDelegatesOnly DeliverMeetingRequestsType = "DelegatesOnly"

	DeliverMeetingRequestsTypeDelegatesAndMe DeliverMeetingRequestsType = "DelegatesAndMe"

	DeliverMeetingRequestsTypeDelegatesAndSendInformationToMe DeliverMeetingRequestsType = "DelegatesAndSendInformationToMe"

	DeliverMeetingRequestsTypeNoForward DeliverMeetingRequestsType = "NoForward"
)

type DelegateFolderPermissionLevelType XsString

const (
	DelegateFolderPermissionLevelTypeNone DelegateFolderPermissionLevelType = "None"

	DelegateFolderPermissionLevelTypeEditor DelegateFolderPermissionLevelType = "Editor"

	DelegateFolderPermissionLevelTypeReviewer DelegateFolderPermissionLevelType = "Reviewer"

	DelegateFolderPermissionLevelTypeAuthor DelegateFolderPermissionLevelType = "Author"

	DelegateFolderPermissionLevelTypeCustom DelegateFolderPermissionLevelType = "Custom"
)

type MailTipTypes interface{}

type ServiceConfigurationType interface{}

//
// Represents the message keys that can be returned for invalid recipients
//

type InvalidRecipientResponseCodeType XsString

const (
	InvalidRecipientResponseCodeTypeOtherError InvalidRecipientResponseCodeType = "OtherError"

	InvalidRecipientResponseCodeTypeRecipientOrganizationNotFederated InvalidRecipientResponseCodeType = "RecipientOrganizationNotFederated"

	InvalidRecipientResponseCodeTypeCannotObtainTokenFromSTS InvalidRecipientResponseCodeType = "CannotObtainTokenFromSTS"

	InvalidRecipientResponseCodeTypeSystemPolicyBlocksSharingWithThisRecipient InvalidRecipientResponseCodeType = "SystemPolicyBlocksSharingWithThisRecipient"

	InvalidRecipientResponseCodeTypeRecipientOrganizationFederatedWithUnknownTokenIssuer InvalidRecipientResponseCodeType = "RecipientOrganizationFederatedWithUnknownTokenIssuer"
)

type SharingDataType XsString

const (
	SharingDataTypeCalendar SharingDataType = "Calendar"

	SharingDataTypeContacts SharingDataType = "Contacts"
)

type PhoneCallStateType XsString

const (
	PhoneCallStateTypeIdle PhoneCallStateType = "Idle"

	PhoneCallStateTypeConnecting PhoneCallStateType = "Connecting"

	PhoneCallStateTypeAlerted PhoneCallStateType = "Alerted"

	PhoneCallStateTypeConnected PhoneCallStateType = "Connected"

	PhoneCallStateTypeDisconnected PhoneCallStateType = "Disconnected"

	PhoneCallStateTypeIncoming PhoneCallStateType = "Incoming"

	PhoneCallStateTypeTransferring PhoneCallStateType = "Transferring"

	PhoneCallStateTypeForwarding PhoneCallStateType = "Forwarding"
)

type ConnectionFailureCauseType XsString

const (
	ConnectionFailureCauseTypeNone ConnectionFailureCauseType = "None"

	ConnectionFailureCauseTypeUserBusy ConnectionFailureCauseType = "UserBusy"

	ConnectionFailureCauseTypeNoAnswer ConnectionFailureCauseType = "NoAnswer"

	ConnectionFailureCauseTypeUnavailable ConnectionFailureCauseType = "Unavailable"

	ConnectionFailureCauseTypeOther ConnectionFailureCauseType = "Other"
)

type UserConfigurationDictionaryObjectTypesType XsString

const (
	UserConfigurationDictionaryObjectTypesTypeDateTime UserConfigurationDictionaryObjectTypesType = "DateTime"

	UserConfigurationDictionaryObjectTypesTypeBoolean UserConfigurationDictionaryObjectTypesType = "Boolean"

	UserConfigurationDictionaryObjectTypesTypeByte UserConfigurationDictionaryObjectTypesType = "Byte"

	UserConfigurationDictionaryObjectTypesTypeString UserConfigurationDictionaryObjectTypesType = "String"

	UserConfigurationDictionaryObjectTypesTypeInteger32 UserConfigurationDictionaryObjectTypesType = "Integer32"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger32 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger32"

	UserConfigurationDictionaryObjectTypesTypeInteger64 UserConfigurationDictionaryObjectTypesType = "Integer64"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger64 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger64"

	UserConfigurationDictionaryObjectTypesTypeStringArray UserConfigurationDictionaryObjectTypesType = "StringArray"

	UserConfigurationDictionaryObjectTypesTypeByteArray UserConfigurationDictionaryObjectTypesType = "ByteArray"
)

type UserConfigurationPropertyType interface{}

type ProtectionRuleTrueType XsString

type ProtectionRuleAllInternalType XsString

type ProtectionRuleValueType XsString

type ProtectionRuleActionKindType XsString

const (
	ProtectionRuleActionKindTypeRightsProtectMessage ProtectionRuleActionKindType = "RightsProtectMessage"
)

type TeamMailboxLifecycleStateType XsString

const (
	TeamMailboxLifecycleStateTypeActive TeamMailboxLifecycleStateType = "Active"

	TeamMailboxLifecycleStateTypeClosed TeamMailboxLifecycleStateType = "Closed"

	TeamMailboxLifecycleStateTypeUnlinked TeamMailboxLifecycleStateType = "Unlinked"

	TeamMailboxLifecycleStateTypePendingDelete TeamMailboxLifecycleStateType = "PendingDelete"
)

// Surfaces the various report message action types

type ReportMessageActionType XsString

const (
	ReportMessageActionTypeJunk ReportMessageActionType = "Junk"

	ReportMessageActionTypeNotJunk ReportMessageActionType = "NotJunk"

	ReportMessageActionTypePhish ReportMessageActionType = "Phish"

	ReportMessageActionTypeUnsubscribe ReportMessageActionType = "Unsubscribe"

	ReportMessageActionTypeGetPolicy ReportMessageActionType = "GetPolicy"
)

// Surfaces the various report message platform types

type ReportMessagePlatformType XsString

const (
	ReportMessagePlatformTypeUnknown ReportMessagePlatformType = "Unknown"

	ReportMessagePlatformTypeAndroid ReportMessagePlatformType = "Android"

	ReportMessagePlatformTypeIOS ReportMessagePlatformType = "iOS"

	ReportMessagePlatformTypeMac ReportMessagePlatformType = "Mac"

	ReportMessagePlatformTypeOfficeOnline ReportMessagePlatformType = "OfficeOnline"

	ReportMessagePlatformTypePC ReportMessagePlatformType = "PC"

	ReportMessagePlatformTypeUniversal ReportMessagePlatformType = "Universal"
)

type MessageTrackingReportTemplateType XsString

const (
	MessageTrackingReportTemplateTypeSummary MessageTrackingReportTemplateType = "Summary"

	MessageTrackingReportTemplateTypeRecipientPath MessageTrackingReportTemplateType = "RecipientPath"
)

// Flagged for action enumeration, currently used in FlaggedForAction rule predicate

type FlaggedForActionType XsString

const (
	FlaggedForActionTypeAny FlaggedForActionType = "Any"

	FlaggedForActionTypeCall FlaggedForActionType = "Call"

	FlaggedForActionTypeDoNotForward FlaggedForActionType = "DoNotForward"

	FlaggedForActionTypeFollowUp FlaggedForActionType = "FollowUp"

	FlaggedForActionTypeFYI FlaggedForActionType = "FYI"

	FlaggedForActionTypeForward FlaggedForActionType = "Forward"

	FlaggedForActionTypeNoResponseNecessary FlaggedForActionType = "NoResponseNecessary"

	FlaggedForActionTypeRead FlaggedForActionType = "Read"

	FlaggedForActionTypeReply FlaggedForActionType = "Reply"

	FlaggedForActionTypeReplyToAll FlaggedForActionType = "ReplyToAll"

	FlaggedForActionTypeReview FlaggedForActionType = "Review"
)

// Rule field URI enumerates all possible rule fields that could trigger validation error

type RuleFieldURIType XsString

const (
	RuleFieldURITypeRuleId RuleFieldURIType = "RuleId"

	RuleFieldURITypeDisplayName RuleFieldURIType = "DisplayName"

	RuleFieldURITypePriority RuleFieldURIType = "Priority"

	RuleFieldURITypeIsNotSupported RuleFieldURIType = "IsNotSupported"

	RuleFieldURITypeActions RuleFieldURIType = "Actions"

	RuleFieldURITypeConditionCategories RuleFieldURIType = "Condition:Categories"

	RuleFieldURITypeConditionContainsBodyStrings RuleFieldURIType = "Condition:ContainsBodyStrings"

	RuleFieldURITypeConditionContainsHeaderStrings RuleFieldURIType = "Condition:ContainsHeaderStrings"

	RuleFieldURITypeConditionContainsRecipientStrings RuleFieldURIType = "Condition:ContainsRecipientStrings"

	RuleFieldURITypeConditionContainsSenderStrings RuleFieldURIType = "Condition:ContainsSenderStrings"

	RuleFieldURITypeConditionContainsSubjectOrBodyStrings RuleFieldURIType = "Condition:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeConditionContainsSubjectStrings RuleFieldURIType = "Condition:ContainsSubjectStrings"

	RuleFieldURITypeConditionFlaggedForAction RuleFieldURIType = "Condition:FlaggedForAction"

	RuleFieldURITypeConditionFromAddresses RuleFieldURIType = "Condition:FromAddresses"

	RuleFieldURITypeConditionFromConnectedAccounts RuleFieldURIType = "Condition:FromConnectedAccounts"

	RuleFieldURITypeConditionHasAttachments RuleFieldURIType = "Condition:HasAttachments"

	RuleFieldURITypeConditionImportance RuleFieldURIType = "Condition:Importance"

	RuleFieldURITypeConditionIsApprovalRequest RuleFieldURIType = "Condition:IsApprovalRequest"

	RuleFieldURITypeConditionIsAutomaticForward RuleFieldURIType = "Condition:IsAutomaticForward"

	RuleFieldURITypeConditionIsAutomaticReply RuleFieldURIType = "Condition:IsAutomaticReply"

	RuleFieldURITypeConditionIsEncrypted RuleFieldURIType = "Condition:IsEncrypted"

	RuleFieldURITypeConditionIsMeetingRequest RuleFieldURIType = "Condition:IsMeetingRequest"

	RuleFieldURITypeConditionIsMeetingResponse RuleFieldURIType = "Condition:IsMeetingResponse"

	RuleFieldURITypeConditionIsNDR RuleFieldURIType = "Condition:IsNDR"

	RuleFieldURITypeConditionIsPermissionControlled RuleFieldURIType = "Condition:IsPermissionControlled"

	RuleFieldURITypeConditionIsReadReceipt RuleFieldURIType = "Condition:IsReadReceipt"

	RuleFieldURITypeConditionIsSigned RuleFieldURIType = "Condition:IsSigned"

	RuleFieldURITypeConditionIsVoicemail RuleFieldURIType = "Condition:IsVoicemail"

	RuleFieldURITypeConditionItemClasses RuleFieldURIType = "Condition:ItemClasses"

	RuleFieldURITypeConditionMessageClassifications RuleFieldURIType = "Condition:MessageClassifications"

	RuleFieldURITypeConditionNotSentToMe RuleFieldURIType = "Condition:NotSentToMe"

	RuleFieldURITypeConditionSentCcMe RuleFieldURIType = "Condition:SentCcMe"

	RuleFieldURITypeConditionSentOnlyToMe RuleFieldURIType = "Condition:SentOnlyToMe"

	RuleFieldURITypeConditionSentToAddresses RuleFieldURIType = "Condition:SentToAddresses"

	RuleFieldURITypeConditionSentToMe RuleFieldURIType = "Condition:SentToMe"

	RuleFieldURITypeConditionSentToOrCcMe RuleFieldURIType = "Condition:SentToOrCcMe"

	RuleFieldURITypeConditionSensitivity RuleFieldURIType = "Condition:Sensitivity"

	RuleFieldURITypeConditionWithinDateRange RuleFieldURIType = "Condition:WithinDateRange"

	RuleFieldURITypeConditionWithinSizeRange RuleFieldURIType = "Condition:WithinSizeRange"

	RuleFieldURITypeExceptionCategories RuleFieldURIType = "Exception:Categories"

	RuleFieldURITypeExceptionContainsBodyStrings RuleFieldURIType = "Exception:ContainsBodyStrings"

	RuleFieldURITypeExceptionContainsHeaderStrings RuleFieldURIType = "Exception:ContainsHeaderStrings"

	RuleFieldURITypeExceptionContainsRecipientStrings RuleFieldURIType = "Exception:ContainsRecipientStrings"

	RuleFieldURITypeExceptionContainsSenderStrings RuleFieldURIType = "Exception:ContainsSenderStrings"

	RuleFieldURITypeExceptionContainsSubjectOrBodyStrings RuleFieldURIType = "Exception:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeExceptionContainsSubjectStrings RuleFieldURIType = "Exception:ContainsSubjectStrings"

	RuleFieldURITypeExceptionFlaggedForAction RuleFieldURIType = "Exception:FlaggedForAction"

	RuleFieldURITypeExceptionFromAddresses RuleFieldURIType = "Exception:FromAddresses"

	RuleFieldURITypeExceptionFromConnectedAccounts RuleFieldURIType = "Exception:FromConnectedAccounts"

	RuleFieldURITypeExceptionHasAttachments RuleFieldURIType = "Exception:HasAttachments"

	RuleFieldURITypeExceptionImportance RuleFieldURIType = "Exception:Importance"

	RuleFieldURITypeExceptionIsApprovalRequest RuleFieldURIType = "Exception:IsApprovalRequest"

	RuleFieldURITypeExceptionIsAutomaticForward RuleFieldURIType = "Exception:IsAutomaticForward"

	RuleFieldURITypeExceptionIsAutomaticReply RuleFieldURIType = "Exception:IsAutomaticReply"

	RuleFieldURITypeExceptionIsEncrypted RuleFieldURIType = "Exception:IsEncrypted"

	RuleFieldURITypeExceptionIsMeetingRequest RuleFieldURIType = "Exception:IsMeetingRequest"

	RuleFieldURITypeExceptionIsMeetingResponse RuleFieldURIType = "Exception:IsMeetingResponse"

	RuleFieldURITypeExceptionIsNDR RuleFieldURIType = "Exception:IsNDR"

	RuleFieldURITypeExceptionIsPermissionControlled RuleFieldURIType = "Exception:IsPermissionControlled"

	RuleFieldURITypeExceptionIsReadReceipt RuleFieldURIType = "Exception:IsReadReceipt"

	RuleFieldURITypeExceptionIsSigned RuleFieldURIType = "Exception:IsSigned"

	RuleFieldURITypeExceptionIsVoicemail RuleFieldURIType = "Exception:IsVoicemail"

	RuleFieldURITypeExceptionItemClasses RuleFieldURIType = "Exception:ItemClasses"

	RuleFieldURITypeExceptionMessageClassifications RuleFieldURIType = "Exception:MessageClassifications"

	RuleFieldURITypeExceptionNotSentToMe RuleFieldURIType = "Exception:NotSentToMe"

	RuleFieldURITypeExceptionSentCcMe RuleFieldURIType = "Exception:SentCcMe"

	RuleFieldURITypeExceptionSentOnlyToMe RuleFieldURIType = "Exception:SentOnlyToMe"

	RuleFieldURITypeExceptionSentToAddresses RuleFieldURIType = "Exception:SentToAddresses"

	RuleFieldURITypeExceptionSentToMe RuleFieldURIType = "Exception:SentToMe"

	RuleFieldURITypeExceptionSentToOrCcMe RuleFieldURIType = "Exception:SentToOrCcMe"

	RuleFieldURITypeExceptionSensitivity RuleFieldURIType = "Exception:Sensitivity"

	RuleFieldURITypeExceptionWithinDateRange RuleFieldURIType = "Exception:WithinDateRange"

	RuleFieldURITypeExceptionWithinSizeRange RuleFieldURIType = "Exception:WithinSizeRange"

	RuleFieldURITypeActionAssignCategories RuleFieldURIType = "Action:AssignCategories"

	RuleFieldURITypeActionCopyToFolder RuleFieldURIType = "Action:CopyToFolder"

	RuleFieldURITypeActionDelete RuleFieldURIType = "Action:Delete"

	RuleFieldURITypeActionForwardAsAttachmentToRecipients RuleFieldURIType = "Action:ForwardAsAttachmentToRecipients"

	RuleFieldURITypeActionForwardToRecipients RuleFieldURIType = "Action:ForwardToRecipients"

	RuleFieldURITypeActionMarkImportance RuleFieldURIType = "Action:MarkImportance"

	RuleFieldURITypeActionMarkAsRead RuleFieldURIType = "Action:MarkAsRead"

	RuleFieldURITypeActionMoveToFolder RuleFieldURIType = "Action:MoveToFolder"

	RuleFieldURITypeActionPermanentDelete RuleFieldURIType = "Action:PermanentDelete"

	RuleFieldURITypeActionRedirectToRecipients RuleFieldURIType = "Action:RedirectToRecipients"

	RuleFieldURITypeActionSendSMSAlertToRecipients RuleFieldURIType = "Action:SendSMSAlertToRecipients"

	RuleFieldURITypeActionServerReplyWithMessage RuleFieldURIType = "Action:ServerReplyWithMessage"

	RuleFieldURITypeActionStopProcessingRules RuleFieldURIType = "Action:StopProcessingRules"

	RuleFieldURITypeIsEnabled RuleFieldURIType = "IsEnabled"

	RuleFieldURITypeIsInError RuleFieldURIType = "IsInError"

	RuleFieldURITypeConditions RuleFieldURIType = "Conditions"

	RuleFieldURITypeExceptions RuleFieldURIType = "Exceptions"
)

// Rule validation error code describing what failed validation for each rule predicate or action.

type RuleValidationErrorCodeType XsString

const (
	RuleValidationErrorCodeTypeADOperationFailure RuleValidationErrorCodeType = "ADOperationFailure"

	RuleValidationErrorCodeTypeConnectedAccountNotFound RuleValidationErrorCodeType = "ConnectedAccountNotFound"

	RuleValidationErrorCodeTypeCreateWithRuleId RuleValidationErrorCodeType = "CreateWithRuleId"

	RuleValidationErrorCodeTypeEmptyValueFound RuleValidationErrorCodeType = "EmptyValueFound"

	RuleValidationErrorCodeTypeDuplicatedPriority RuleValidationErrorCodeType = "DuplicatedPriority"

	RuleValidationErrorCodeTypeDuplicatedOperationOnTheSameRule RuleValidationErrorCodeType = "DuplicatedOperationOnTheSameRule"

	RuleValidationErrorCodeTypeFolderDoesNotExist RuleValidationErrorCodeType = "FolderDoesNotExist"

	RuleValidationErrorCodeTypeInvalidAddress RuleValidationErrorCodeType = "InvalidAddress"

	RuleValidationErrorCodeTypeInvalidDateRange RuleValidationErrorCodeType = "InvalidDateRange"

	RuleValidationErrorCodeTypeInvalidFolderId RuleValidationErrorCodeType = "InvalidFolderId"

	RuleValidationErrorCodeTypeInvalidSizeRange RuleValidationErrorCodeType = "InvalidSizeRange"

	RuleValidationErrorCodeTypeInvalidValue RuleValidationErrorCodeType = "InvalidValue"

	RuleValidationErrorCodeTypeMessageClassificationNotFound RuleValidationErrorCodeType = "MessageClassificationNotFound"

	RuleValidationErrorCodeTypeMissingAction RuleValidationErrorCodeType = "MissingAction"

	RuleValidationErrorCodeTypeMissingParameter RuleValidationErrorCodeType = "MissingParameter"

	RuleValidationErrorCodeTypeMissingRangeValue RuleValidationErrorCodeType = "MissingRangeValue"

	RuleValidationErrorCodeTypeNotSettable RuleValidationErrorCodeType = "NotSettable"

	RuleValidationErrorCodeTypeRecipientDoesNotExist RuleValidationErrorCodeType = "RecipientDoesNotExist"

	RuleValidationErrorCodeTypeRuleNotFound RuleValidationErrorCodeType = "RuleNotFound"

	RuleValidationErrorCodeTypeSizeLessThanZero RuleValidationErrorCodeType = "SizeLessThanZero"

	RuleValidationErrorCodeTypeStringValueTooBig RuleValidationErrorCodeType = "StringValueTooBig"

	RuleValidationErrorCodeTypeUnsupportedAddress RuleValidationErrorCodeType = "UnsupportedAddress"

	RuleValidationErrorCodeTypeUnexpectedError RuleValidationErrorCodeType = "UnexpectedError"

	RuleValidationErrorCodeTypeUnsupportedRule RuleValidationErrorCodeType = "UnsupportedRule"
)

type SearchItemKindType XsString

const (
	SearchItemKindTypeEmail SearchItemKindType = "Email"

	SearchItemKindTypeMeetings SearchItemKindType = "Meetings"

	SearchItemKindTypeTasks SearchItemKindType = "Tasks"

	SearchItemKindTypeNotes SearchItemKindType = "Notes"

	SearchItemKindTypeDocs SearchItemKindType = "Docs"

	SearchItemKindTypeJournals SearchItemKindType = "Journals"

	SearchItemKindTypeContacts SearchItemKindType = "Contacts"

	SearchItemKindTypeIm SearchItemKindType = "Im"

	SearchItemKindTypeVoicemail SearchItemKindType = "Voicemail"

	SearchItemKindTypeFaxes SearchItemKindType = "Faxes"

	SearchItemKindTypePosts SearchItemKindType = "Posts"

	SearchItemKindTypeRssfeeds SearchItemKindType = "Rssfeeds"
)

type MailboxSearchLocationType XsString

const (
	MailboxSearchLocationTypePrimaryOnly MailboxSearchLocationType = "PrimaryOnly"

	MailboxSearchLocationTypeArchiveOnly MailboxSearchLocationType = "ArchiveOnly"

	MailboxSearchLocationTypeAll MailboxSearchLocationType = "All"
)

type SearchResultType XsString

const (
	SearchResultTypeStatisticsOnly SearchResultType = "StatisticsOnly"

	SearchResultTypePreviewOnly SearchResultType = "PreviewOnly"
)

type SearchPageDirectionType XsString

const (
	SearchPageDirectionTypePrevious SearchPageDirectionType = "Previous"

	SearchPageDirectionTypeNext SearchPageDirectionType = "Next"
)

type PreviewItemBaseShapeType XsString

const (
	PreviewItemBaseShapeTypeDefault PreviewItemBaseShapeType = "Default"

	PreviewItemBaseShapeTypeCompact PreviewItemBaseShapeType = "Compact"
)

type HoldActionType XsString

const (
	HoldActionTypeCreate HoldActionType = "Create"

	HoldActionTypeUpdate HoldActionType = "Update"

	HoldActionTypeRemove HoldActionType = "Remove"
)

type HoldStatusType XsString

const (
	HoldStatusTypeNotOnHold HoldStatusType = "NotOnHold"

	HoldStatusTypePending HoldStatusType = "Pending"

	HoldStatusTypeOnHold HoldStatusType = "OnHold"

	HoldStatusTypePartialHold HoldStatusType = "PartialHold"

	HoldStatusTypeFailed HoldStatusType = "Failed"
)

type ItemIndexErrorType XsString

const (
	ItemIndexErrorTypeNone ItemIndexErrorType = "None"

	ItemIndexErrorTypeGenericError ItemIndexErrorType = "GenericError"

	ItemIndexErrorTypeTimeout ItemIndexErrorType = "Timeout"

	ItemIndexErrorTypeStaleEvent ItemIndexErrorType = "StaleEvent"

	ItemIndexErrorTypeMailboxOffline ItemIndexErrorType = "MailboxOffline"

	ItemIndexErrorTypeAttachmentLimitReached ItemIndexErrorType = "AttachmentLimitReached"

	ItemIndexErrorTypeMarsWriterTruncation ItemIndexErrorType = "MarsWriterTruncation"

	ItemIndexErrorTypeDocumentParserFailure ItemIndexErrorType = "DocumentParserFailure"
)

type UserPhotoSizeType XsString

const (
	UserPhotoSizeTypeHR48x48 UserPhotoSizeType = "HR48x48"

	UserPhotoSizeTypeHR64x64 UserPhotoSizeType = "HR64x64"

	UserPhotoSizeTypeHR96x96 UserPhotoSizeType = "HR96x96"

	UserPhotoSizeTypeHR120x120 UserPhotoSizeType = "HR120x120"

	UserPhotoSizeTypeHR240x240 UserPhotoSizeType = "HR240x240"

	UserPhotoSizeTypeHR360x360 UserPhotoSizeType = "HR360x360"

	UserPhotoSizeTypeHR432x432 UserPhotoSizeType = "HR432x432"

	UserPhotoSizeTypeHR504x504 UserPhotoSizeType = "HR504x504"

	UserPhotoSizeTypeHR648x648 UserPhotoSizeType = "HR648x648"

	UserPhotoSizeTypeHR1024xN UserPhotoSizeType = "HR1024xN"

	UserPhotoSizeTypeHR1920xN UserPhotoSizeType = "HR1920xN"
)

type UserPhotoTypeType XsString

const (
	UserPhotoTypeTypeUserPhoto UserPhotoTypeType = "UserPhoto"

	UserPhotoTypeTypeProfileHeaderPhoto UserPhotoTypeType = "ProfileHeaderPhoto"
)

type ElcFolderType XsString

const (
	ElcFolderTypeCalendar ElcFolderType = "Calendar"

	ElcFolderTypeContacts ElcFolderType = "Contacts"

	ElcFolderTypeDeletedItems ElcFolderType = "DeletedItems"

	ElcFolderTypeDrafts ElcFolderType = "Drafts"

	ElcFolderTypeInbox ElcFolderType = "Inbox"

	ElcFolderTypeJunkEmail ElcFolderType = "JunkEmail"

	ElcFolderTypeJournal ElcFolderType = "Journal"

	ElcFolderTypeNotes ElcFolderType = "Notes"

	ElcFolderTypeOutbox ElcFolderType = "Outbox"

	ElcFolderTypeSentItems ElcFolderType = "SentItems"

	ElcFolderTypeTasks ElcFolderType = "Tasks"

	ElcFolderTypeAll ElcFolderType = "All"

	ElcFolderTypeManagedCustomFolder ElcFolderType = "ManagedCustomFolder"

	ElcFolderTypeRssSubscriptions ElcFolderType = "RssSubscriptions"

	ElcFolderTypeSyncIssues ElcFolderType = "SyncIssues"

	ElcFolderTypeConversationHistory ElcFolderType = "ConversationHistory"

	ElcFolderTypePersonal ElcFolderType = "Personal"

	ElcFolderTypeRecoverableItems ElcFolderType = "RecoverableItems"

	ElcFolderTypeNonIpmRoot ElcFolderType = "NonIpmRoot"
)

type RetentionActionType XsString

const (
	RetentionActionTypeNone RetentionActionType = "None"

	RetentionActionTypeMoveToDeletedItems RetentionActionType = "MoveToDeletedItems"

	RetentionActionTypeMoveToFolder RetentionActionType = "MoveToFolder"

	RetentionActionTypeDeleteAndAllowRecovery RetentionActionType = "DeleteAndAllowRecovery"

	RetentionActionTypePermanentlyDelete RetentionActionType = "PermanentlyDelete"

	RetentionActionTypeMarkAsPastRetentionLimit RetentionActionType = "MarkAsPastRetentionLimit"

	RetentionActionTypeMoveToArchive RetentionActionType = "MoveToArchive"
)

type RetentionType XsString

const (
	RetentionTypeDelete RetentionType = "Delete"

	RetentionTypeArchive RetentionType = "Archive"
)

type ClientExtensionProvidedToType XsString

const (
	ClientExtensionProvidedToTypeEveryone ClientExtensionProvidedToType = "Everyone"

	ClientExtensionProvidedToTypeSpecificUsers ClientExtensionProvidedToType = "SpecificUsers"
)

type ClientExtensionTypeType XsString

const (
	ClientExtensionTypeTypeDefault ClientExtensionTypeType = "Default"

	ClientExtensionTypeTypePrivate ClientExtensionTypeType = "Private"

	ClientExtensionTypeTypeMarketPlace ClientExtensionTypeType = "MarketPlace"

	ClientExtensionTypeTypePrivateCatalog ClientExtensionTypeType = "PrivateCatalog"

	ClientExtensionTypeTypeMarketplacePrivateCatalog ClientExtensionTypeType = "MarketplacePrivateCatalog"
)

type ClientExtensionScopeType XsString

const (
	ClientExtensionScopeTypeNone ClientExtensionScopeType = "None"

	ClientExtensionScopeTypeUser ClientExtensionScopeType = "User"

	ClientExtensionScopeTypeOrganization ClientExtensionScopeType = "Organization"

	ClientExtensionScopeTypeDefault ClientExtensionScopeType = "Default"
)

type ConsentStateType XsString

const (
	ConsentStateTypeNotResponded ConsentStateType = "NotResponded"

	ConsentStateTypeNotConsented ConsentStateType = "NotConsented"

	ConsentStateTypeConsented ConsentStateType = "Consented"
)

// List of possible reasons for disabling the client extension

type DisableReasonType XsString

const (
	DisableReasonTypeNoReason DisableReasonType = "NoReason"

	DisableReasonTypeOutlookClientPerformance DisableReasonType = "OutlookClientPerformance"

	DisableReasonTypeOWAClientPerformance DisableReasonType = "OWAClientPerformance"

	DisableReasonTypeMobileClientPerformance DisableReasonType = "MobileClientPerformance"
)

type IconIndexType XsString

const (
	IconIndexTypeDefault IconIndexType = "Default"

	IconIndexTypePostItem IconIndexType = "PostItem"

	IconIndexTypeMailRead IconIndexType = "MailRead"

	IconIndexTypeMailUnread IconIndexType = "MailUnread"

	IconIndexTypeMailReplied IconIndexType = "MailReplied"

	IconIndexTypeMailForwarded IconIndexType = "MailForwarded"

	IconIndexTypeMailEncrypted IconIndexType = "MailEncrypted"

	IconIndexTypeMailSmimeSigned IconIndexType = "MailSmimeSigned"

	IconIndexTypeMailEncryptedReplied IconIndexType = "MailEncryptedReplied"

	IconIndexTypeMailSmimeSignedReplied IconIndexType = "MailSmimeSignedReplied"

	IconIndexTypeMailEncryptedForwarded IconIndexType = "MailEncryptedForwarded"

	IconIndexTypeMailSmimeSignedForwarded IconIndexType = "MailSmimeSignedForwarded"

	IconIndexTypeMailEncryptedRead IconIndexType = "MailEncryptedRead"

	IconIndexTypeMailSmimeSignedRead IconIndexType = "MailSmimeSignedRead"

	IconIndexTypeMailIrm IconIndexType = "MailIrm"

	IconIndexTypeMailIrmForwarded IconIndexType = "MailIrmForwarded"

	IconIndexTypeMailIrmReplied IconIndexType = "MailIrmReplied"

	IconIndexTypeSmsSubmitted IconIndexType = "SmsSubmitted"

	IconIndexTypeSmsRoutedToDeliveryPoint IconIndexType = "SmsRoutedToDeliveryPoint"

	IconIndexTypeSmsRoutedToExternalMessagingSystem IconIndexType = "SmsRoutedToExternalMessagingSystem"

	IconIndexTypeSmsDelivered IconIndexType = "SmsDelivered"

	IconIndexTypeOutlookDefaultForContacts IconIndexType = "OutlookDefaultForContacts"

	IconIndexTypeAppointmentItem IconIndexType = "AppointmentItem"

	IconIndexTypeAppointmentRecur IconIndexType = "AppointmentRecur"

	IconIndexTypeAppointmentMeet IconIndexType = "AppointmentMeet"

	IconIndexTypeAppointmentMeetRecur IconIndexType = "AppointmentMeetRecur"

	IconIndexTypeAppointmentMeetNY IconIndexType = "AppointmentMeetNY"

	IconIndexTypeAppointmentMeetYes IconIndexType = "AppointmentMeetYes"

	IconIndexTypeAppointmentMeetNo IconIndexType = "AppointmentMeetNo"

	IconIndexTypeAppointmentMeetMaybe IconIndexType = "AppointmentMeetMaybe"

	IconIndexTypeAppointmentMeetCancel IconIndexType = "AppointmentMeetCancel"

	IconIndexTypeAppointmentMeetInfo IconIndexType = "AppointmentMeetInfo"

	IconIndexTypeTaskItem IconIndexType = "TaskItem"

	IconIndexTypeTaskRecur IconIndexType = "TaskRecur"

	IconIndexTypeTaskOwned IconIndexType = "TaskOwned"

	IconIndexTypeTaskDelegated IconIndexType = "TaskDelegated"
)

type MeetingSpaceTypeEnum XsString

const (
	MeetingSpaceTypeEnumPublic MeetingSpaceTypeEnum = "Public"

	MeetingSpaceTypeEnumPrivate MeetingSpaceTypeEnum = "Private"
)

type ParticipantActivityRole XsString

const (
	ParticipantActivityRoleOrganizer ParticipantActivityRole = "Organizer"

	ParticipantActivityRoleAttendee ParticipantActivityRole = "Attendee"

	ParticipantActivityRolePresenter ParticipantActivityRole = "Presenter"
)

type ParticipantActivityMediaType XsString

const (
	ParticipantActivityMediaTypeAppSharing ParticipantActivityMediaType = "AppSharing"

	ParticipantActivityMediaTypeAudioVideo ParticipantActivityMediaType = "AudioVideo"

	ParticipantActivityMediaTypeChat ParticipantActivityMediaType = "Chat"

	ParticipantActivityMediaTypeDataConf ParticipantActivityMediaType = "DataConf"

	ParticipantActivityMediaTypeMeeting ParticipantActivityMediaType = "Meeting"

	ParticipantActivityMediaTypeMeetingConf ParticipantActivityMediaType = "MeetingConf"

	ParticipantActivityMediaTypePhoneConf ParticipantActivityMediaType = "PhoneConf"

	ParticipantActivityMediaTypeFocus ParticipantActivityMediaType = "Focus"
)

type ContentActivityType XsString

const (
	ContentActivityTypePoll ContentActivityType = "Poll"

	ContentActivityTypeWhiteBoard ContentActivityType = "WhiteBoard"

	ContentActivityTypeQAndA ContentActivityType = "QAndA"

	ContentActivityTypeChat ContentActivityType = "Chat"

	ContentActivityTypeMeeting ContentActivityType = "Meeting"

	ContentActivityTypeAnnotations ContentActivityType = "Annotations"

	ContentActivityTypeSharedNotes ContentActivityType = "SharedNotes"
)

type ContentActivityMediaType XsString

const (
	ContentActivityMediaTypeAppSharing ContentActivityMediaType = "AppSharing"

	ContentActivityMediaTypeAudioVideo ContentActivityMediaType = "AudioVideo"

	ContentActivityMediaTypeChat ContentActivityMediaType = "Chat"

	ContentActivityMediaTypeDataConf ContentActivityMediaType = "DataConf"

	ContentActivityMediaTypeMeeting ContentActivityMediaType = "Meeting"

	ContentActivityMediaTypeMeetingConf ContentActivityMediaType = "MeetingConf"

	ContentActivityMediaTypePhoneConf ContentActivityMediaType = "PhoneConf"
)

type ContentActivityAcl XsString

const (
	ContentActivityAclOrganizer ContentActivityAcl = "Organizer"

	ContentActivityAclPresenter ContentActivityAcl = "Presenter"

	ContentActivityAclEveryone ContentActivityAcl = "Everyone"
)

type WarmupOptionsType interface{}

type SearchApplicationIdType XsString

const (
	SearchApplicationIdTypeOutlook SearchApplicationIdType = "Outlook"

	SearchApplicationIdTypeOwa SearchApplicationIdType = "Owa"

	SearchApplicationIdTypePaw SearchApplicationIdType = "Paw"

	SearchApplicationIdTypeTeamspace SearchApplicationIdType = "Teamspace"

	SearchApplicationIdTypeOneDrive SearchApplicationIdType = "OneDrive"

	SearchApplicationIdTypeOther SearchApplicationIdType = "Other"
)

type ItemTypesFilterType interface{}

type SuggestionKindType interface{}

type RefinerTypeType XsString

const (
	RefinerTypeTypeNone RefinerTypeType = "None"

	RefinerTypeTypeTo RefinerTypeType = "To"

	RefinerTypeTypeFrom RefinerTypeType = "From"

	RefinerTypeTypeFolder RefinerTypeType = "Folder"

	RefinerTypeTypeHasAttachment RefinerTypeType = "HasAttachment"

	RefinerTypeTypeMailboxSource RefinerTypeType = "MailboxSource"
)

type SearchResultsPropertySetNameType XsString

const (
	SearchResultsPropertySetNameTypeDefault SearchResultsPropertySetNameType = "Default"

	SearchResultsPropertySetNameTypeOwa16 SearchResultsPropertySetNameType = "Owa16"

	SearchResultsPropertySetNameTypeOutlook16 SearchResultsPropertySetNameType = "Outlook16"
)

type SearchScopeGroupsType interface{}

type SearchScopeArchivesType interface{}

type ExecuteSearchSortOrderType XsString

const (
	ExecuteSearchSortOrderTypeDateTime ExecuteSearchSortOrderType = "DateTime"

	ExecuteSearchSortOrderTypeRelevance ExecuteSearchSortOrderType = "Relevance"
)

type MatchOptionsType XsString

const (
	MatchOptionsTypeFullString MatchOptionsType = "FullString"

	MatchOptionsTypePrefix MatchOptionsType = "Prefix"
)

type PeopleSuggestionPersonType XsString

const (
	PeopleSuggestionPersonTypeUnknown PeopleSuggestionPersonType = "Unknown"

	PeopleSuggestionPersonTypePerson PeopleSuggestionPersonType = "Person"

	PeopleSuggestionPersonTypeDistributionList PeopleSuggestionPersonType = "DistributionList"

	PeopleSuggestionPersonTypeRoom PeopleSuggestionPersonType = "Room"

	PeopleSuggestionPersonTypePlace PeopleSuggestionPersonType = "Place"

	PeopleSuggestionPersonTypeModernGroup PeopleSuggestionPersonType = "ModernGroup"
)

type ClientIdType XsString

const (
	ClientIdTypeWeb ClientIdType = "Web"

	ClientIdTypeMobile ClientIdType = "Mobile"

	ClientIdTypeTablet ClientIdType = "Tablet"

	ClientIdTypeDesktop ClientIdType = "Desktop"

	ClientIdTypeExchange ClientIdType = "Exchange"

	ClientIdTypeOutlook ClientIdType = "Outlook"

	ClientIdTypeMacOutlook ClientIdType = "MacOutlook"

	ClientIdTypePOP3 ClientIdType = "POP3"

	ClientIdTypeIMAP4 ClientIdType = "IMAP4"

	ClientIdTypeOther ClientIdType = "Other"

	ClientIdTypeLync ClientIdType = "Lync"

	ClientIdTypeOutlookService ClientIdType = "OutlookService"

	ClientIdTypeMacMail ClientIdType = "MacMail"
)

type EntityFeedbackEntityAddSourceType XsString

const (
	EntityFeedbackEntityAddSourceTypeNone EntityFeedbackEntityAddSourceType = "None"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApi EntityFeedbackEntityAddSourceType = "EntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApiCache EntityFeedbackEntityAddSourceType = "EntityRelevanceApiCache"

	EntityFeedbackEntityAddSourceTypeActiveDirectory EntityFeedbackEntityAddSourceType = "ActiveDirectory"

	EntityFeedbackEntityAddSourceTypeExplicitTyping EntityFeedbackEntityAddSourceType = "ExplicitTyping"

	EntityFeedbackEntityAddSourceTypePaste EntityFeedbackEntityAddSourceType = "Paste"

	EntityFeedbackEntityAddSourceTypeLocalCacheAndEntityRelevanceApi EntityFeedbackEntityAddSourceType = "LocalCacheAndEntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeLocalCache EntityFeedbackEntityAddSourceType = "LocalCache"

	EntityFeedbackEntityAddSourceTypeOther EntityFeedbackEntityAddSourceType = "Other"
)

type SystemDayOfWeek XsString

const (
	SystemDayOfWeekSunday SystemDayOfWeek = "Sunday"

	SystemDayOfWeekMonday SystemDayOfWeek = "Monday"

	SystemDayOfWeekTuesday SystemDayOfWeek = "Tuesday"

	SystemDayOfWeekWednesday SystemDayOfWeek = "Wednesday"

	SystemDayOfWeekThursday SystemDayOfWeek = "Thursday"

	SystemDayOfWeekFriday SystemDayOfWeek = "Friday"

	SystemDayOfWeekSaturday SystemDayOfWeek = "Saturday"
)

type EmailReminderChangeType XsString

const (
	EmailReminderChangeTypeNone EmailReminderChangeType = "None"

	EmailReminderChangeTypeAdded EmailReminderChangeType = "Added"

	EmailReminderChangeTypeOverride EmailReminderChangeType = "Override"

	EmailReminderChangeTypeDeleted EmailReminderChangeType = "Deleted"
)

type EmailReminderSendOption XsString

const (
	EmailReminderSendOptionNotSet EmailReminderSendOption = "NotSet"

	EmailReminderSendOptionUser EmailReminderSendOption = "User"

	EmailReminderSendOptionAllAttendees EmailReminderSendOption = "AllAttendees"

	EmailReminderSendOptionStaff EmailReminderSendOption = "Staff"

	EmailReminderSendOptionCustomer EmailReminderSendOption = "Customer"
)

type InsightStatusType XsString

const (
	InsightStatusTypeCreated InsightStatusType = "Created"

	InsightStatusTypeActive InsightStatusType = "Active"

	InsightStatusTypeDismissed InsightStatusType = "Dismissed"

	InsightStatusTypeInvalid InsightStatusType = "Invalid"
)

//
// Reasons no suggestions are returned by FindMeetingTimeCandidates
//

type EmptySuggestionReason XsString

const (
	EmptySuggestionReasonUnknown EmptySuggestionReason = "Unknown"

	EmptySuggestionReasonAttendeesUnavailable EmptySuggestionReason = "AttendeesUnavailable"

	EmptySuggestionReasonLocationsUnavailable EmptySuggestionReason = "LocationsUnavailable"

	EmptySuggestionReasonOrganizerUnavailable EmptySuggestionReason = "OrganizerUnavailable"

	EmptySuggestionReasonAttendeesUnavailableOrUnknown EmptySuggestionReason = "AttendeesUnavailableOrUnknown"
)

type AddInStateType XsString

const (
	AddInStateTypeFlagged AddInStateType = "Flagged"

	AddInStateTypeOK AddInStateType = "OK"

	AddInStateTypeRemoved AddInStateType = "Removed"

	AddInStateTypeUndefined AddInStateType = "Undefined"

	AddInStateTypeWithdrawingSoon AddInStateType = "WithdrawingSoon"

	AddInStateTypeWithdrawn AddInStateType = "Withdrawn"
)

type AADOfficeExtensionStatusType XsString

const (
	AADOfficeExtensionStatusTypeOptionalDisabled AADOfficeExtensionStatusType = "OptionalDisabled"

	AADOfficeExtensionStatusTypeOptionalEnabled AADOfficeExtensionStatusType = "OptionalEnabled"

	AADOfficeExtensionStatusTypeMandatory AADOfficeExtensionStatusType = "Mandatory"

	AADOfficeExtensionStatusTypeUndefined AADOfficeExtensionStatusType = "Undefined"
)

type OfficeClientCodeType XsString

type VersionType XsString

type OMEMessageRevocationStatus XsString

const (
	OMEMessageRevocationStatusNone OMEMessageRevocationStatus = "None"

	OMEMessageRevocationStatusSuccess OMEMessageRevocationStatus = "Success"

	OMEMessageRevocationStatusFailed OMEMessageRevocationStatus = "Failed"

	OMEMessageRevocationStatusMessageNotFound OMEMessageRevocationStatus = "MessageNotFound"

	OMEMessageRevocationStatusPartialFailed OMEMessageRevocationStatus = "PartialFailed"

	OMEMessageRevocationStatusAlreadyRevoked OMEMessageRevocationStatus = "AlreadyRevoked"
)

type MailboxCulture MailboxCultureType

type ManagementRole ManagementRoleType

type SerializedSecurityContext SerializedSecurityContextType

type ExchangeImpersonation ExchangeImpersonationType

type OpenAsAdminOrSystemService OpenAsAdminOrSystemServiceType

type SharingSecurity EncryptedDataContainerType

type ProxySecurityContext ProxySecurityContextType

type ProxySuggesterSid ProxySecurityContextType

type ProxyPartnerToken ProxySecurityContextType

type ServerVersionInfo struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerVersionInfo"`

	MajorVersion XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types MajorVersion,attr,omitempty" json:"MajorVersion,omitempty"`

	MinorVersion XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types MinorVersion,attr,omitempty" json:"MinorVersion,omitempty"`

	MajorBuildNumber XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types MajorBuildNumber,attr,omitempty" json:"MajorBuildNumber,omitempty"`

	MinorBuildNumber XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types MinorBuildNumber,attr,omitempty" json:"MinorBuildNumber,omitempty"`

	Version XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,attr,omitempty" json:"Version,omitempty"`
}

type RequestServerVersion struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequestServerVersion"`

	Version *ExchangeVersionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,attr,omitempty" json:"Version,omitempty"`
}

type DateTimePrecision DateTimePrecisionType

type Path BasePathToElementType

type FieldURI PathToUnindexedFieldType

type IndexedFieldURI PathToIndexedFieldType

type ExtendedFieldURI PathToExtendedFieldType

type ExceptionFieldURI PathToExceptionFieldType

type BaseItemId BaseItemIdType

type TimeZoneContext TimeZoneContextType

type Transition TransitionType

type AbsoluteDateTransition AbsoluteDateTransitionType

type RecurringDayTransition RecurringDayTransitionType

type RecurringDateTransition RecurringDateTransitionType

type SearchExpression SearchExpressionType

type Exists ExistsType

type Excludes ExcludesType

type IsEqualTo IsEqualToType

type IsNotEqualTo IsNotEqualToType

type IsGreaterThan IsGreaterThanType

type IsGreaterThanOrEqualTo IsGreaterThanOrEqualToType

type IsLessThan IsLessThanType

type IsLessThanOrEqualTo IsLessThanOrEqualToType

type Contains ContainsExpressionType

type Not NotType

type And AndType

type Or OrType

type Near NearType

type Mailbox EmailAddress

type FreeBusyViewOptions FreeBusyViewOptionsType

type TimeZone SerializableTimeZone

type SuggestionsViewOptions SuggestionsViewOptionsType

type OofSettings UserOofSettings

type MeetingSpace MeetingSpaceType

type MeetingInstance MeetingInstanceType

type MailboxCultureType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxCulture"`

	Value XsLanguage `xml:",chardata" json:"-,"`
}

type InstalledAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Extension"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	MarketplaceAssetId XsString `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	Enabled XsBoolean `xml:"Enabled,omitempty" json:"Enabled,omitempty"`

	ConsentState XsString `xml:"ConsentState,omitempty" json:"ConsentState,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`

	LicenseStatus XsString `xml:"LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate XsDateTime `xml:"TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	ProviderName XsString `xml:"ProviderName,omitempty" json:"ProviderName,omitempty"`

	IconUrl XsString `xml:"IconUrl,omitempty" json:"IconUrl,omitempty"`

	HighResolutionIconUrl XsString `xml:"HighResolutionIconUrl,omitempty" json:"HighResolutionIconUrl,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	Description XsString `xml:"Description,omitempty" json:"Description,omitempty"`

	Requirements XsString `xml:"Requirements,omitempty" json:"Requirements,omitempty"`

	Version XsString `xml:"Version,omitempty" json:"Version,omitempty"`
}

type NonEmptyArrayOfRoleType struct {
	Role []XsString `xml:"Role,omitempty" json:"Role,omitempty"`
}

type ManagementRoleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagementRole"`

	UserRoles *NonEmptyArrayOfRoleType `xml:"UserRoles,omitempty" json:"UserRoles,omitempty"`

	ApplicationRoles *NonEmptyArrayOfRoleType `xml:"ApplicationRoles,omitempty" json:"ApplicationRoles,omitempty"`
}

type SidAndAttributesType struct {
	SecurityIdentifier XsString `xml:"SecurityIdentifier,omitempty" json:"SecurityIdentifier,omitempty"`

	Attributes XsUnsignedInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributes,attr,omitempty" json:"Attributes,omitempty"`
}

type NonEmptyArrayOfGroupIdentifiersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSids"`

	GroupIdentifier []*SidAndAttributesType `xml:"GroupIdentifier,omitempty" json:"GroupIdentifier,omitempty"`
}

type NonEmptyArrayOfRestrictedGroupIdentifiersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RestrictedGroupSids"`

	RestrictedGroupIdentifier []*SidAndAttributesType `xml:"RestrictedGroupIdentifier,omitempty" json:"RestrictedGroupIdentifier,omitempty"`
}

type SerializedSecurityContextType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SerializedSecurityContext"`

	UserSid XsString `xml:"UserSid,omitempty" json:"UserSid,omitempty"`

	GroupSids *NonEmptyArrayOfGroupIdentifiersType `xml:"GroupSids,omitempty" json:"GroupSids,omitempty"`

	RestrictedGroupSids *NonEmptyArrayOfRestrictedGroupIdentifiersType `xml:"RestrictedGroupSids,omitempty" json:"RestrictedGroupSids,omitempty"`

	PrimarySmtpAddress XsString `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type ConnectingSIDType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConnectingSID"`

	PrincipalName *PrincipalNameType `xml:"PrincipalName,omitempty" json:"PrincipalName,omitempty"`

	SID *SIDType `xml:"SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress *PrimarySmtpAddressType `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type PrincipalNameType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrincipalName"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SIDType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SID"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type PrimarySmtpAddressType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SmtpAddressType struct {
	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type ExchangeImpersonationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExchangeImpersonation"`

	ConnectingSID *ConnectingSIDType `xml:"ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`
}

type OpenAsAdminOrSystemServiceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OpenAsAdminOrSystemService"`

	ConnectingSID *ConnectingSIDType `xml:"ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`

	LogonType *SpecialLogonTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LogonType,attr,omitempty" json:"LogonType,omitempty"`

	BudgetType XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types BudgetType,attr,omitempty" json:"BudgetType,omitempty"`
}

type ProxySecurityContextType struct {
	Value XsBase64Binary `xml:",chardata" json:"-,"`
}

type BaseEmailAddressType struct {
}

type EmailAddressType struct {
	*BaseEmailAddressType

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	EmailAddress *NonEmptyStringType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	RoutingType *NonEmptyStringType `xml:"RoutingType,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"MailboxType,omitempty" json:"MailboxType,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	OriginalDisplayName XsString `xml:"OriginalDisplayName,omitempty" json:"OriginalDisplayName,omitempty"`
}

type EmailAddressExtendedType struct {
	*EmailAddressType

	ExternalObjectId XsString `xml:"ExternalObjectId,omitempty" json:"ExternalObjectId,omitempty"`

	PrimaryEmailAddress *NonEmptyStringType `xml:"PrimaryEmailAddress,omitempty" json:"PrimaryEmailAddress,omitempty"`
}

type ArrayOfEmailAddressesType struct {
	Address []*EmailAddressType `xml:"Address,omitempty" json:"Address,omitempty"`
}

type DirectoryEntryType struct {
	Id *EmailAddressType `xml:"Id,omitempty" json:"Id,omitempty"`
}

type RoomType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Room"`

	*DirectoryEntryType
}

type ArrayOfRoomsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rooms"`

	Room []*RoomType `xml:"Room,omitempty" json:"Room,omitempty"`
}

type TimeSlot struct {
	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	DurationInMinutes XsDouble `xml:"DurationInMinutes,omitempty" json:"DurationInMinutes,omitempty"`
}

type MeetingLocation struct {
	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type ReminderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Reminder"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	ReminderTime XsDateTime `xml:"ReminderTime,omitempty" json:"ReminderTime,omitempty"`

	StartDate XsDateTime `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	EndDate XsDateTime `xml:"EndDate,omitempty" json:"EndDate,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	RecurringMasterItemId *ItemIdType `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	ReminderGroup *ReminderGroupType `xml:"ReminderGroup,omitempty" json:"ReminderGroup,omitempty"`

	UID XsString `xml:"UID,omitempty" json:"UID,omitempty"`
}

type ArrayOfRemindersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Reminders"`

	Reminder []*ReminderType `xml:"Reminder,omitempty" json:"Reminder,omitempty"`
}

type ArrayOfRecipientsType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type SingleRecipientType struct {
	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type BasePathToElementType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Path"`
}

type PathToUnindexedFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI"`

	*BasePathToElementType

	FieldURI *UnindexedFieldURIType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToIndexedFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IndexedFieldURI"`

	*BasePathToElementType

	FieldURI *DictionaryURIType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,attr,omitempty" json:"FieldURI,omitempty"`

	FieldIndex XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldIndex,attr,omitempty" json:"FieldIndex,omitempty"`
}

type PathToExceptionFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExceptionFieldURI"`

	*BasePathToElementType

	FieldURI *ExceptionPropertyURIType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToExtendedFieldType struct {
	*BasePathToElementType

	DistinguishedPropertySetId *DistinguishedPropertySetType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedPropertySetId,attr,omitempty" json:"DistinguishedPropertySetId,omitempty"`

	PropertySetId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PropertySetId,attr,omitempty" json:"PropertySetId,omitempty"`

	PropertyTag *PropertyTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PropertyTag,attr,omitempty" json:"PropertyTag,omitempty"`

	PropertyName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types PropertyName,attr,omitempty" json:"PropertyName,omitempty"`

	PropertyId XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types PropertyId,attr,omitempty" json:"PropertyId,omitempty"`

	PropertyType *MapiPropertyTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PropertyType,attr,omitempty" json:"PropertyType,omitempty"`
}

type NonEmptyArrayOfPathsToElementType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties"`

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type NonEmptyArrayOfPropertyValuesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Values"`

	Value []XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type NonEmptyArrayOfExtendedPropertyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties"`

	ExtendedProperty []*ExtendedPropertyType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type ExtendedPropertyType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`

	Values *NonEmptyArrayOfPropertyValuesType `xml:"Values,omitempty" json:"Values,omitempty"`
}

type FolderResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderShape"`

	BaseShape *DefaultShapeNamesType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ItemResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemShape"`

	BaseShape *DefaultShapeNamesType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	IncludeMimeContent XsBoolean `xml:"IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"BodyType,omitempty" json:"BodyType,omitempty"`

	UniqueBodyType *BodyTypeResponseType `xml:"UniqueBodyType,omitempty" json:"UniqueBodyType,omitempty"`

	NormalizedBodyType *BodyTypeResponseType `xml:"NormalizedBodyType,omitempty" json:"NormalizedBodyType,omitempty"`

	FilterHtmlContent XsBoolean `xml:"FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	ConvertHtmlCodePageToUTF8 XsBoolean `xml:"ConvertHtmlCodePageToUTF8,omitempty" json:"ConvertHtmlCodePageToUTF8,omitempty"`

	InlineImageUrlTemplate XsString `xml:"InlineImageUrlTemplate,omitempty" json:"InlineImageUrlTemplate,omitempty"`

	BlockExternalImages XsBoolean `xml:"BlockExternalImages,omitempty" json:"BlockExternalImages,omitempty"`

	AddBlankTargetToLinks XsBoolean `xml:"AddBlankTargetToLinks,omitempty" json:"AddBlankTargetToLinks,omitempty"`

	MaximumBodySize XsInt `xml:"MaximumBodySize,omitempty" json:"MaximumBodySize,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type AttachmentResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentShape"`

	IncludeMimeContent XsBoolean `xml:"IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"BodyType,omitempty" json:"BodyType,omitempty"`

	FilterHtmlContent XsBoolean `xml:"FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ConversationResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationShape"`

	BaseShape *DefaultShapeNamesType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonaResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonaShape"`

	BaseShape *DefaultShapeNamesType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type NonEmptyArrayOfClientAccessTokenRequestsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenRequests"`

	TokenRequest []*ClientAccessTokenRequestType `xml:"TokenRequest,omitempty" json:"TokenRequest,omitempty"`
}

type ClientAccessTokenRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenRequest"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"TokenType,omitempty" json:"TokenType,omitempty"`

	Scope XsString `xml:"Scope,omitempty" json:"Scope,omitempty"`

	ResourceUri XsString `xml:"ResourceUri,omitempty" json:"ResourceUri,omitempty"`

	IdentityAndEwsTokenId XsString `xml:"IdentityAndEwsTokenId,omitempty" json:"IdentityAndEwsTokenId,omitempty"`

	RequestedCapabilities XsString `xml:"RequestedCapabilities,omitempty" json:"RequestedCapabilities,omitempty"`

	SupportsSharedFolders XsBoolean `xml:"SupportsSharedFolders,omitempty" json:"SupportsSharedFolders,omitempty"`
}

type ClientAccessTokenType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Token"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"TokenType,omitempty" json:"TokenType,omitempty"`

	TokenValue XsString `xml:"TokenValue,omitempty" json:"TokenValue,omitempty"`

	TTL XsInteger `xml:"TTL,omitempty" json:"TTL,omitempty"`
}

type ChangeDescriptionType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type ItemChangeDescriptionType struct {
	*ChangeDescriptionType
}

type FolderChangeDescriptionType struct {
	*ChangeDescriptionType
}

type SetItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetItemField"`

	*ItemChangeDescriptionType

	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type SetFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type DeleteItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteItemField"`

	*ItemChangeDescriptionType
}

type DeleteFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFolderField"`

	*FolderChangeDescriptionType
}

type AppendToItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToItemField"`

	*ItemChangeDescriptionType

	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type AppendToFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type NonEmptyArrayOfItemChangeDescriptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Updates"`

	AppendToItemField *AppendToItemFieldType `xml:"AppendToItemField,omitempty" json:"AppendToItemField,omitempty"`

	SetItemField *SetItemFieldType `xml:"SetItemField,omitempty" json:"SetItemField,omitempty"`

	DeleteItemField *DeleteItemFieldType `xml:"DeleteItemField,omitempty" json:"DeleteItemField,omitempty"`
}

type NonEmptyArrayOfFolderChangeDescriptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Updates"`

	AppendToFolderField *AppendToFolderFieldType `xml:"AppendToFolderField,omitempty" json:"AppendToFolderField,omitempty"`

	SetFolderField *SetFolderFieldType `xml:"SetFolderField,omitempty" json:"SetFolderField,omitempty"`

	DeleteFolderField *DeleteFolderFieldType `xml:"DeleteFolderField,omitempty" json:"DeleteFolderField,omitempty"`
}

type ItemChangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemChange"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`
}

type NonEmptyArrayOfItemChangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemChanges"`

	ItemChange []*ItemChangeType `xml:"ItemChange,omitempty" json:"ItemChange,omitempty"`
}

type InternetHeaderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageHeader"`

	Value XsString `xml:",chardata" json:"-,"`

	HeaderName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types HeaderName,attr,omitempty" json:"HeaderName,omitempty"`
}

type NonEmptyArrayOfInternetHeadersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageHeaders"`

	InternetMessageHeader []*InternetHeaderType `xml:"InternetMessageHeader,omitempty" json:"InternetMessageHeader,omitempty"`
}

type NonEmptyArrayOfPredictedActionReasonType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PredictedActionReasons"`

	PredictedActionReason []*PredictedActionReasonType `xml:"PredictedActionReason,omitempty" json:"PredictedActionReason,omitempty"`
}

type RequestAttachmentIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId"`

	*BaseItemIdType

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type AttachmentIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId"`

	*RequestAttachmentIdType

	RootItemId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type RootItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemId"`

	*BaseItemIdType

	RootItemId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type NonEmptyArrayOfRequestAttachmentIdsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentIds"`

	AttachmentId *RequestAttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type AttachmentType struct {
	AttachmentId *AttachmentIdType `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	ContentType XsString `xml:"ContentType,omitempty" json:"ContentType,omitempty"`

	ContentId XsString `xml:"ContentId,omitempty" json:"ContentId,omitempty"`

	ContentLocation XsString `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	AttachmentOriginalUrl XsString `xml:"AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty"`

	Size XsInt `xml:"Size,omitempty" json:"Size,omitempty"`

	LastModifiedTime XsDateTime `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsInline XsBoolean `xml:"IsInline,omitempty" json:"IsInline,omitempty"`
}

type ItemAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemAttachment"`

	*AttachmentType

	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type SyncFolderItemsCreateOrUpdateType struct {
	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type FileAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAttachment"`

	*AttachmentType

	IsContactPhoto XsBoolean `xml:"IsContactPhoto,omitempty" json:"IsContactPhoto,omitempty"`

	Content XsBase64Binary `xml:"Content,omitempty" json:"Content,omitempty"`
}

type ReferenceAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceAttachment"`

	*AttachmentType

	AttachLongPathName XsString `xml:"AttachLongPathName,omitempty" json:"AttachLongPathName,omitempty"`

	ProviderType XsString `xml:"ProviderType,omitempty" json:"ProviderType,omitempty"`

	ProviderEndpointUrl XsString `xml:"ProviderEndpointUrl,omitempty" json:"ProviderEndpointUrl,omitempty"`

	AttachmentThumbnailUrl XsString `xml:"AttachmentThumbnailUrl,omitempty" json:"AttachmentThumbnailUrl,omitempty"`

	AttachmentPreviewUrl XsString `xml:"AttachmentPreviewUrl,omitempty" json:"AttachmentPreviewUrl,omitempty"`

	PermissionType XsInt `xml:"PermissionType,omitempty" json:"PermissionType,omitempty"`

	OriginalPermissionType XsInt `xml:"OriginalPermissionType,omitempty" json:"OriginalPermissionType,omitempty"`

	AttachmentIsFolder XsBoolean `xml:"AttachmentIsFolder,omitempty" json:"AttachmentIsFolder,omitempty"`
}

type ArrayOfAttachmentsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attachments"`

	ItemAttachment *ItemAttachmentType `xml:"ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type NonEmptyArrayOfAttachmentsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attachments"`

	ItemAttachment *ItemAttachmentType `xml:"ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type BodyType struct {
	Value XsString `xml:",chardata" json:"-,"`

	BodyType *BodyTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyType,attr,omitempty" json:"BodyType,omitempty"`

	IsTruncated XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type UniqueBodyType struct {
	Value XsString `xml:",chardata" json:"-,"`

	UniqueBodyType *BodyTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueBodyType,attr,omitempty" json:"UniqueBodyType,omitempty"`

	IsTruncated XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type NormalizedBodyType struct {
	Value XsString `xml:",chardata" json:"-,"`

	NormalizedBodyType *BodyTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NormalizedBodyType,attr,omitempty" json:"NormalizedBodyType,omitempty"`

	IsTruncated XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type BaseFolderIdType struct {
}

type DistinguishedFolderIdType struct {
	*BaseFolderIdType

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	Id *DistinguishedFolderIdNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type FolderIdType struct {
	*BaseFolderIdType

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type AddressListIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressListId"`

	*BaseFolderIdType

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfDistinguishedFolderIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderScope"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfBaseFolderIdsType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type TargetFolderIdType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	AddressListId *AddressListIdType `xml:"AddressListId,omitempty" json:"AddressListId,omitempty"`
}

type NonEmptyArrayOfUploadItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items"`

	Item []*UploadItemType `xml:"Item,omitempty" json:"Item,omitempty"`
}

type UploadItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	ParentFolderId *FolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	Data XsBase64Binary `xml:"Data,omitempty" json:"Data,omitempty"`

	CreateAction *CreateActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateAction,attr,omitempty" json:"CreateAction,omitempty"`

	IsAssociated XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAssociated,attr,omitempty" json:"IsAssociated,omitempty"`
}

type FindFolderParentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootFolder"`

	Folders *ArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty"`
}

type BaseFolderType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	ParentFolderId *FolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderClass XsString `xml:"FolderClass,omitempty" json:"FolderClass,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	TotalCount XsInt `xml:"TotalCount,omitempty" json:"TotalCount,omitempty"`

	ChildFolderCount XsInt `xml:"ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	ManagedFolderInformation *ManagedFolderInformationType `xml:"ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdNameType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	PolicyTag *RetentionTagType `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	ReplicaList *ArrayOfStringsType `xml:"ReplicaList,omitempty" json:"ReplicaList,omitempty"`
}

type ManagedFolderInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagedFolderInformation"`

	CanDelete XsBoolean `xml:"CanDelete,omitempty" json:"CanDelete,omitempty"`

	CanRenameOrMove XsBoolean `xml:"CanRenameOrMove,omitempty" json:"CanRenameOrMove,omitempty"`

	MustDisplayComment XsBoolean `xml:"MustDisplayComment,omitempty" json:"MustDisplayComment,omitempty"`

	HasQuota XsBoolean `xml:"HasQuota,omitempty" json:"HasQuota,omitempty"`

	IsManagedFoldersRoot XsBoolean `xml:"IsManagedFoldersRoot,omitempty" json:"IsManagedFoldersRoot,omitempty"`

	ManagedFolderId XsString `xml:"ManagedFolderId,omitempty" json:"ManagedFolderId,omitempty"`

	Comment XsString `xml:"Comment,omitempty" json:"Comment,omitempty"`

	StorageQuota XsInt `xml:"StorageQuota,omitempty" json:"StorageQuota,omitempty"`

	FolderSize XsInt `xml:"FolderSize,omitempty" json:"FolderSize,omitempty"`

	HomePage XsString `xml:"HomePage,omitempty" json:"HomePage,omitempty"`
}

type FolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder"`

	*BaseFolderType

	PermissionSet *PermissionSetType `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	UnreadCount XsInt `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type CalendarFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder"`

	*BaseFolderType

	SharingEffectiveRights *CalendarPermissionReadAccessType `xml:"SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *CalendarPermissionSetType `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty"`
}

type ReminderItemActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderItemAction"`

	ActionType *ReminderActionType `xml:"ActionType,omitempty" json:"ActionType,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	NewReminderTime XsString `xml:"NewReminderTime,omitempty" json:"NewReminderTime,omitempty"`
}

type NonEmptyArrayOfReminderItemActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderItemActions"`

	ReminderItemAction []*ReminderItemActionType `xml:"ReminderItemAction,omitempty" json:"ReminderItemAction,omitempty"`
}

type ContactsFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder"`

	*BaseFolderType

	SharingEffectiveRights *PermissionReadAccessType `xml:"SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *PermissionSetType `xml:"PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	SourceId XsString `xml:"SourceId,omitempty" json:"SourceId,omitempty"`

	AccountName XsString `xml:"AccountName,omitempty" json:"AccountName,omitempty"`
}

type SearchFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder"`

	*FolderType

	SearchParameters *SearchParametersType `xml:"SearchParameters,omitempty" json:"SearchParameters,omitempty"`
}

type TasksFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder"`

	*FolderType
}

type NonEmptyArrayOfFoldersType struct {
	Folder *FolderType `xml:"Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type ArrayOfFoldersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folders"`

	Folder *FolderType `xml:"Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type BaseItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseItemId"`
}

type ItemIdType struct {
	*BaseItemIdType

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type NonEmptyArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	RecurringMasterItemIdRanges *RecurringMasterItemIdRangesType `xml:"RecurringMasterItemIdRanges,omitempty" json:"RecurringMasterItemIdRanges,omitempty"`
}

type ArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type ArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type ResponseObjectCoreType struct {
	*MessageType

	ReferenceItemId *ItemIdType `xml:"ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty"`
}

type ResponseObjectType struct {
	*ResponseObjectCoreType

	//
	// The name of this reply object class as an English string.  The client
	// application is required to translate it if it's running in a different locale
	//

	ObjectName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ObjectName,attr,omitempty" json:"ObjectName,omitempty"`
}

type NonEmptyArrayOfResponseObjectsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseObjects"`

	AcceptItem *AcceptItemType `xml:"AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	AddItemToMyCalendar *AddItemToMyCalendarType `xml:"AddItemToMyCalendar,omitempty" json:"AddItemToMyCalendar,omitempty"`

	ProposeNewTime *ProposeNewTimeType `xml:"ProposeNewTime,omitempty" json:"ProposeNewTime,omitempty"`
}

type FolderChangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderChange"`

	Updates *NonEmptyArrayOfFolderChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty"`

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfFolderChangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderChanges"`

	FolderChange []*FolderChangeType `xml:"FolderChange,omitempty" json:"FolderChange,omitempty"`
}

type WellKnownResponseObjectType struct {
}

type SmartResponseBaseType struct {
}

type SmartResponseType struct {
	*SmartResponseBaseType

	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type ReplyToItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyToItem"`

	*SmartResponseType
}

type ReplyAllToItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyAllToItem"`

	*SmartResponseType

	IsSpecificMessageReply XsBoolean `xml:"IsSpecificMessageReply,omitempty" json:"IsSpecificMessageReply,omitempty"`
}

type ForwardItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardItem"`

	*SmartResponseType
}

type CancelCalendarItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CancelCalendarItem"`

	*SmartResponseType
}

type ReferenceItemResponseType struct {
}

type SuppressReadReceiptType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuppressReadReceipt"`

	*ReferenceItemResponseType
}

type FindItemParentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootFolder"`

	Items *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty"`

	Groups *ArrayOfGroupedItemsType `xml:"Groups,omitempty" json:"Groups,omitempty"`
}

type ItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	MimeContent *MimeContentType `xml:"MimeContent,omitempty" json:"MimeContent,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	ParentFolderId *FolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemClass *ItemClassType `xml:"ItemClass,omitempty" json:"ItemClass,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	Body *BodyType `xml:"Body,omitempty" json:"Body,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty"`

	DateTimeReceived XsDateTime `xml:"DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty"`

	Size XsInt `xml:"Size,omitempty" json:"Size,omitempty"`

	Categories *ArrayOfStringsType `xml:"Categories,omitempty" json:"Categories,omitempty"`

	Importance *ImportanceChoicesType `xml:"Importance,omitempty" json:"Importance,omitempty"`

	InReplyTo XsString `xml:"InReplyTo,omitempty" json:"InReplyTo,omitempty"`

	IsSubmitted XsBoolean `xml:"IsSubmitted,omitempty" json:"IsSubmitted,omitempty"`

	IsDraft XsBoolean `xml:"IsDraft,omitempty" json:"IsDraft,omitempty"`

	IsFromMe XsBoolean `xml:"IsFromMe,omitempty" json:"IsFromMe,omitempty"`

	IsResend XsBoolean `xml:"IsResend,omitempty" json:"IsResend,omitempty"`

	IsUnmodified XsBoolean `xml:"IsUnmodified,omitempty" json:"IsUnmodified,omitempty"`

	InternetMessageHeaders *NonEmptyArrayOfInternetHeadersType `xml:"InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty"`

	DateTimeSent XsDateTime `xml:"DateTimeSent,omitempty" json:"DateTimeSent,omitempty"`

	DateTimeCreated XsDateTime `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	ResponseObjects *NonEmptyArrayOfResponseObjectsType `xml:"ResponseObjects,omitempty" json:"ResponseObjects,omitempty"`

	ReminderDueBy XsDateTime `xml:"ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty"`

	ReminderIsSet XsBoolean `xml:"ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty"`

	ReminderNextTime XsDateTime `xml:"ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty"`

	ReminderMinutesBeforeStart *ReminderMinutesBeforeStartType `xml:"ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty"`

	DisplayCc XsString `xml:"DisplayCc,omitempty" json:"DisplayCc,omitempty"`

	DisplayTo XsString `xml:"DisplayTo,omitempty" json:"DisplayTo,omitempty"`

	DisplayBcc XsString `xml:"DisplayBcc,omitempty" json:"DisplayBcc,omitempty"`

	HasAttachments XsBoolean `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	Culture XsLanguage `xml:"Culture,omitempty" json:"Culture,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	LastModifiedName XsString `xml:"LastModifiedName,omitempty" json:"LastModifiedName,omitempty"`

	LastModifiedTime XsDateTime `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsAssociated XsBoolean `xml:"IsAssociated,omitempty" json:"IsAssociated,omitempty"`

	WebClientReadFormQueryString XsString `xml:"WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty"`

	WebClientEditFormQueryString XsString `xml:"WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty"`

	ConversationId *ItemIdType `xml:"ConversationId,omitempty" json:"ConversationId,omitempty"`

	UniqueBody *BodyType `xml:"UniqueBody,omitempty" json:"UniqueBody,omitempty"`

	Flag *FlagType `xml:"Flag,omitempty" json:"Flag,omitempty"`

	StoreEntryId XsBase64Binary `xml:"StoreEntryId,omitempty" json:"StoreEntryId,omitempty"`

	InstanceKey XsBase64Binary `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	NormalizedBody *BodyType `xml:"NormalizedBody,omitempty" json:"NormalizedBody,omitempty"`

	EntityExtractionResult *EntityExtractionResultType `xml:"EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty"`

	PolicyTag *RetentionTagType `xml:"PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	RetentionDate XsDateTime `xml:"RetentionDate,omitempty" json:"RetentionDate,omitempty"`

	Preview XsString `xml:"Preview,omitempty" json:"Preview,omitempty"`

	RightsManagementLicenseData *RightsManagementLicenseDataType `xml:"RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty"`

	PredictedActionReasons *NonEmptyArrayOfPredictedActionReasonType `xml:"PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty"`

	IsClutter XsBoolean `xml:"IsClutter,omitempty" json:"IsClutter,omitempty"`

	BlockStatus XsBoolean `xml:"BlockStatus,omitempty" json:"BlockStatus,omitempty"`

	HasBlockedImages XsBoolean `xml:"HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty"`

	TextBody *BodyType `xml:"TextBody,omitempty" json:"TextBody,omitempty"`

	IconIndex *IconIndexType `xml:"IconIndex,omitempty" json:"IconIndex,omitempty"`

	SearchKey XsBase64Binary `xml:"SearchKey,omitempty" json:"SearchKey,omitempty"`

	SortKey XsLong `xml:"SortKey,omitempty" json:"SortKey,omitempty"`

	Hashtags *ArrayOfStringsType `xml:"Hashtags,omitempty" json:"Hashtags,omitempty"`

	Mentions *ArrayOfRecipientsType `xml:"Mentions,omitempty" json:"Mentions,omitempty"`

	MentionedMe XsBoolean `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	MentionsPreview *MentionsPreviewType `xml:"MentionsPreview,omitempty" json:"MentionsPreview,omitempty"`

	MentionsEx *NonEmptyArrayOfMentionActionsType `xml:"MentionsEx,omitempty" json:"MentionsEx,omitempty"`

	AppliedHashtags *NonEmptyArrayOfAppliedHashtagType `xml:"AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty"`

	AppliedHashtagsPreview *AppliedHashtagsPreviewType `xml:"AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty"`

	Likes *NonEmptyArrayOfLikeType `xml:"Likes,omitempty" json:"Likes,omitempty"`

	LikesPreview *LikesPreviewType `xml:"LikesPreview,omitempty" json:"LikesPreview,omitempty"`

	PendingSocialActivityTagIds *ArrayOfStringsType `xml:"PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty"`

	AtAllMention XsBoolean `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	CanDelete XsBoolean `xml:"CanDelete,omitempty" json:"CanDelete,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`
}

type ArrayOfItemClassType struct {
	ItemClass *ItemClassType `xml:"ItemClass,omitempty" json:"ItemClass,omitempty"`
}

type FlagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flag"`

	FlagStatus *FlagStatusType `xml:"FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	StartDate XsDateTime `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	DueDate XsDateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty"`

	CompleteDate XsDateTime `xml:"CompleteDate,omitempty" json:"CompleteDate,omitempty"`
}

type EntityType struct {
	Position []*EmailPositionType `xml:"Position,omitempty" json:"Position,omitempty"`
}

type ArrayOfAddressesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Addresses"`

	Address []XsString `xml:"Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfAddressEntitiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Addresses"`

	AddressEntity []*AddressEntityType `xml:"AddressEntity,omitempty" json:"AddressEntity,omitempty"`
}

type AddressEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressEntity"`

	*EntityType

	Address XsString `xml:"Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfEmailAddressEntitiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses"`

	EmailAddressEntity []*EmailAddressEntityType `xml:"EmailAddressEntity,omitempty" json:"EmailAddressEntity,omitempty"`
}

type EmailAddressEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressEntity"`

	*EntityType

	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ArrayOfUrlEntitiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls"`

	UrlEntity []*UrlEntityType `xml:"UrlEntity,omitempty" json:"UrlEntity,omitempty"`
}

type UrlEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UrlEntity"`

	*EntityType

	Url XsString `xml:"Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfMeetingSuggestionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSuggestions"`

	MeetingSuggestion []*MeetingSuggestionType `xml:"MeetingSuggestion,omitempty" json:"MeetingSuggestion,omitempty"`
}

type MeetingSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSuggestion"`

	*EntityType

	Attendees *ArrayOfEmailUsersType `xml:"Attendees,omitempty" json:"Attendees,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	MeetingString XsString `xml:"MeetingString,omitempty" json:"MeetingString,omitempty"`

	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	TimeStringBeginIndex XsInteger `xml:"TimeStringBeginIndex,omitempty" json:"TimeStringBeginIndex,omitempty"`

	TimeStringLength XsInteger `xml:"TimeStringLength,omitempty" json:"TimeStringLength,omitempty"`

	EntityId XsString `xml:"EntityId,omitempty" json:"EntityId,omitempty"`

	ExtractionId XsString `xml:"ExtractionId,omitempty" json:"ExtractionId,omitempty"`
}

type ArrayOfTaskSuggestionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskSuggestions"`

	TaskSuggestion []*TaskSuggestionType `xml:"TaskSuggestion,omitempty" json:"TaskSuggestion,omitempty"`
}

type ArrayOfContactsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contacts"`

	Contact []*ContactType `xml:"Contact,omitempty" json:"Contact,omitempty"`
}

type ContactType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact"`

	*EntityType

	PersonName XsString `xml:"PersonName,omitempty" json:"PersonName,omitempty"`

	BusinessName XsString `xml:"BusinessName,omitempty" json:"BusinessName,omitempty"`

	PhoneNumbers *ArrayOfPhonesType `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	Urls *ArrayOfUrlsType `xml:"Urls,omitempty" json:"Urls,omitempty"`

	EmailAddresses *ArrayOfExtractedEmailAddresses `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Addresses *ArrayOfAddressesType `xml:"Addresses,omitempty" json:"Addresses,omitempty"`

	ContactString XsString `xml:"ContactString,omitempty" json:"ContactString,omitempty"`
}

type ArrayOfUrlsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls"`

	Url []XsString `xml:"Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfPhonesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers"`

	Phone []*PhoneType `xml:"Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Phone"`

	OriginalPhoneString XsString `xml:"OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString XsString `xml:"PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfPhoneEntitiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers"`

	Phone []*PhoneEntityType `xml:"Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Phone"`

	*EntityType

	OriginalPhoneString XsString `xml:"OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString XsString `xml:"PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfEmailUsersType struct {
	EmailUser []*EmailUserType `xml:"EmailUser,omitempty" json:"EmailUser,omitempty"`
}

type EmailUserType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailUser"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	UserId XsString `xml:"UserId,omitempty" json:"UserId,omitempty"`
}

type TaskSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskSuggestion"`

	*EntityType

	TaskString XsString `xml:"TaskString,omitempty" json:"TaskString,omitempty"`

	Assignees *ArrayOfEmailUsersType `xml:"Assignees,omitempty" json:"Assignees,omitempty"`
}

type ArrayOfExtractedEmailAddresses struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses"`

	EmailAddress []XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ParcelDeliveryEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParcelDelivery"`

	Carrier XsString `xml:"Carrier,omitempty" json:"Carrier,omitempty"`

	TrackingNumber XsString `xml:"TrackingNumber,omitempty" json:"TrackingNumber,omitempty"`

	TrackingUrl XsString `xml:"TrackingUrl,omitempty" json:"TrackingUrl,omitempty"`

	ExpectedArrivalFrom XsString `xml:"ExpectedArrivalFrom,omitempty" json:"ExpectedArrivalFrom,omitempty"`

	ExpectedArrivalUntil XsString `xml:"ExpectedArrivalUntil,omitempty" json:"ExpectedArrivalUntil,omitempty"`

	Product XsString `xml:"Product,omitempty" json:"Product,omitempty"`

	ProductUrl XsString `xml:"ProductUrl,omitempty" json:"ProductUrl,omitempty"`

	ProductImage XsString `xml:"ProductImage,omitempty" json:"ProductImage,omitempty"`

	ProductSku XsString `xml:"ProductSku,omitempty" json:"ProductSku,omitempty"`

	ProductDescription XsString `xml:"ProductDescription,omitempty" json:"ProductDescription,omitempty"`

	ProductBrand XsString `xml:"ProductBrand,omitempty" json:"ProductBrand,omitempty"`

	ProductColor XsString `xml:"ProductColor,omitempty" json:"ProductColor,omitempty"`

	OrderNumber XsString `xml:"OrderNumber,omitempty" json:"OrderNumber,omitempty"`

	Seller XsString `xml:"Seller,omitempty" json:"Seller,omitempty"`

	OrderStatus XsString `xml:"OrderStatus,omitempty" json:"OrderStatus,omitempty"`

	AddressName XsString `xml:"AddressName,omitempty" json:"AddressName,omitempty"`

	StreetAddress XsString `xml:"StreetAddress,omitempty" json:"StreetAddress,omitempty"`

	AddressLocality XsString `xml:"AddressLocality,omitempty" json:"AddressLocality,omitempty"`

	AddressRegion XsString `xml:"AddressRegion,omitempty" json:"AddressRegion,omitempty"`

	AddressCountry XsString `xml:"AddressCountry,omitempty" json:"AddressCountry,omitempty"`

	PostalCode XsString `xml:"PostalCode,omitempty" json:"PostalCode,omitempty"`
}

type InferenceClassificationOverrideType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Override"`

	Id *GuidType `xml:"Id,omitempty" json:"Id,omitempty"`

	SenderSmtpAddress XsString `xml:"SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName XsString `xml:"SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type ArrayOfInferenceClassificationOverridesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Overrides"`

	Override []*InferenceClassificationOverrideType `xml:"Override,omitempty" json:"Override,omitempty"`
}

type ArrayOfParcelDeliveryEntitiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParcelDeliveries"`

	ParcelDelivery []*ParcelDeliveryEntityType `xml:"ParcelDelivery,omitempty" json:"ParcelDelivery,omitempty"`
}

type FlightEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flight"`

	FlightNumber XsString `xml:"FlightNumber,omitempty" json:"FlightNumber,omitempty"`

	AirlineIataCode XsString `xml:"AirlineIataCode,omitempty" json:"AirlineIataCode,omitempty"`

	DepartureTime XsString `xml:"DepartureTime,omitempty" json:"DepartureTime,omitempty"`

	WindowsTimeZoneName XsString `xml:"WindowsTimeZoneName,omitempty" json:"WindowsTimeZoneName,omitempty"`

	DepartureAirportIataCode XsString `xml:"DepartureAirportIataCode,omitempty" json:"DepartureAirportIataCode,omitempty"`

	ArrivalAirportIataCode XsString `xml:"ArrivalAirportIataCode,omitempty" json:"ArrivalAirportIataCode,omitempty"`
}

type ArrayOfFlightsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flights"`

	Flight []*FlightEntityType `xml:"Flight,omitempty" json:"Flight,omitempty"`
}

type FlightReservationEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlightReservation"`

	ReservationId XsString `xml:"ReservationId,omitempty" json:"ReservationId,omitempty"`

	ReservationStatus XsString `xml:"ReservationStatus,omitempty" json:"ReservationStatus,omitempty"`

	UnderName XsString `xml:"UnderName,omitempty" json:"UnderName,omitempty"`

	BrokerName XsString `xml:"BrokerName,omitempty" json:"BrokerName,omitempty"`

	BrokerPhone XsString `xml:"BrokerPhone,omitempty" json:"BrokerPhone,omitempty"`

	Flights *ArrayOfFlightsType `xml:"Flights,omitempty" json:"Flights,omitempty"`
}

type ArrayOfFlightReservationsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlightReservations"`

	FlightReservation []*FlightReservationEntityType `xml:"FlightReservation,omitempty" json:"FlightReservation,omitempty"`
}

type SenderAddInEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Microsoft.OutlookServices.SenderApp"`

	ExtensionId XsString `xml:"ExtensionId,omitempty" json:"ExtensionId,omitempty"`
}

type ArrayOfSenderAddInsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderAddIns"`

	Microsoft_OutlookServices_SenderApp []*SenderAddInEntityType `xml:"Microsoft.OutlookServices.SenderApp,omitempty" json:"Microsoft.OutlookServices.SenderApp,omitempty"`
}

type EntityExtractionResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityExtractionResult"`

	Addresses *ArrayOfAddressEntitiesType `xml:"Addresses,omitempty" json:"Addresses,omitempty"`

	MeetingSuggestions *ArrayOfMeetingSuggestionsType `xml:"MeetingSuggestions,omitempty" json:"MeetingSuggestions,omitempty"`

	TaskSuggestions *ArrayOfTaskSuggestionsType `xml:"TaskSuggestions,omitempty" json:"TaskSuggestions,omitempty"`

	EmailAddresses *ArrayOfEmailAddressEntitiesType `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Contacts *ArrayOfContactsType `xml:"Contacts,omitempty" json:"Contacts,omitempty"`

	Urls *ArrayOfUrlEntitiesType `xml:"Urls,omitempty" json:"Urls,omitempty"`

	PhoneNumbers *ArrayOfPhoneEntitiesType `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	ParcelDeliveries *ArrayOfParcelDeliveryEntitiesType `xml:"ParcelDeliveries,omitempty" json:"ParcelDeliveries,omitempty"`

	FlightReservations *ArrayOfFlightReservationsType `xml:"FlightReservations,omitempty" json:"FlightReservations,omitempty"`

	SenderAddIns *ArrayOfSenderAddInsType `xml:"SenderAddIns,omitempty" json:"SenderAddIns,omitempty"`
}

type RightsManagementLicenseDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RightsManagementLicenseData"`

	RightsManagedMessageDecryptionStatus XsInt `xml:"RightsManagedMessageDecryptionStatus,omitempty" json:"RightsManagedMessageDecryptionStatus,omitempty"`

	RmsTemplateId XsString `xml:"RmsTemplateId,omitempty" json:"RmsTemplateId,omitempty"`

	TemplateName XsString `xml:"TemplateName,omitempty" json:"TemplateName,omitempty"`

	TemplateDescription XsString `xml:"TemplateDescription,omitempty" json:"TemplateDescription,omitempty"`

	EditAllowed XsBoolean `xml:"EditAllowed,omitempty" json:"EditAllowed,omitempty"`

	ReplyAllowed XsBoolean `xml:"ReplyAllowed,omitempty" json:"ReplyAllowed,omitempty"`

	ReplyAllAllowed XsBoolean `xml:"ReplyAllAllowed,omitempty" json:"ReplyAllAllowed,omitempty"`

	ForwardAllowed XsBoolean `xml:"ForwardAllowed,omitempty" json:"ForwardAllowed,omitempty"`

	ModifyRecipientsAllowed XsBoolean `xml:"ModifyRecipientsAllowed,omitempty" json:"ModifyRecipientsAllowed,omitempty"`

	ExtractAllowed XsBoolean `xml:"ExtractAllowed,omitempty" json:"ExtractAllowed,omitempty"`

	PrintAllowed XsBoolean `xml:"PrintAllowed,omitempty" json:"PrintAllowed,omitempty"`

	ExportAllowed XsBoolean `xml:"ExportAllowed,omitempty" json:"ExportAllowed,omitempty"`

	ProgrammaticAccessAllowed XsBoolean `xml:"ProgrammaticAccessAllowed,omitempty" json:"ProgrammaticAccessAllowed,omitempty"`

	IsOwner XsBoolean `xml:"IsOwner,omitempty" json:"IsOwner,omitempty"`

	ContentOwner XsString `xml:"ContentOwner,omitempty" json:"ContentOwner,omitempty"`

	ContentExpiryDate XsString `xml:"ContentExpiryDate,omitempty" json:"ContentExpiryDate,omitempty"`
}

type ConversationActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationAction"`

	Action *ConversationActionTypeType `xml:"Action,omitempty" json:"Action,omitempty"`

	ConversationId *ItemIdType `xml:"ConversationId,omitempty" json:"ConversationId,omitempty"`

	ContextFolderId *TargetFolderIdType `xml:"ContextFolderId,omitempty" json:"ContextFolderId,omitempty"`

	ConversationLastSyncTime XsDateTime `xml:"ConversationLastSyncTime,omitempty" json:"ConversationLastSyncTime,omitempty"`

	ProcessRightAway XsBoolean `xml:"ProcessRightAway,omitempty" json:"ProcessRightAway,omitempty"`

	DestinationFolderId *TargetFolderIdType `xml:"DestinationFolderId,omitempty" json:"DestinationFolderId,omitempty"`

	Categories *ArrayOfStringsType `xml:"Categories,omitempty" json:"Categories,omitempty"`

	EnableAlwaysDelete XsBoolean `xml:"EnableAlwaysDelete,omitempty" json:"EnableAlwaysDelete,omitempty"`

	IsRead XsBoolean `xml:"IsRead,omitempty" json:"IsRead,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,omitempty" json:"DeleteType,omitempty"`

	RetentionPolicyType *RetentionType `xml:"RetentionPolicyType,omitempty" json:"RetentionPolicyType,omitempty"`

	RetentionPolicyTagId XsString `xml:"RetentionPolicyTagId,omitempty" json:"RetentionPolicyTagId,omitempty"`

	Flag *FlagType `xml:"Flag,omitempty" json:"Flag,omitempty"`

	SuppressReadReceipts XsBoolean `xml:"SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type NonEmptyArrayOfApplyConversationActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationActions"`

	ConversationAction []*ConversationActionType `xml:"ConversationAction,omitempty" json:"ConversationAction,omitempty"`
}

type ConversationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation"`

	ConversationId *ItemIdType `xml:"ConversationId,omitempty" json:"ConversationId,omitempty"`

	ConversationTopic XsString `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	UniqueRecipients *ArrayOfStringsType `xml:"UniqueRecipients,omitempty" json:"UniqueRecipients,omitempty"`

	GlobalUniqueRecipients *ArrayOfStringsType `xml:"GlobalUniqueRecipients,omitempty" json:"GlobalUniqueRecipients,omitempty"`

	UniqueUnreadSenders *ArrayOfStringsType `xml:"UniqueUnreadSenders,omitempty" json:"UniqueUnreadSenders,omitempty"`

	GlobalUniqueUnreadSenders *ArrayOfStringsType `xml:"GlobalUniqueUnreadSenders,omitempty" json:"GlobalUniqueUnreadSenders,omitempty"`

	UniqueSenders *ArrayOfStringsType `xml:"UniqueSenders,omitempty" json:"UniqueSenders,omitempty"`

	GlobalUniqueSenders *ArrayOfStringsType `xml:"GlobalUniqueSenders,omitempty" json:"GlobalUniqueSenders,omitempty"`

	LastDeliveryTime XsDateTime `xml:"LastDeliveryTime,omitempty" json:"LastDeliveryTime,omitempty"`

	GlobalLastDeliveryTime XsDateTime `xml:"GlobalLastDeliveryTime,omitempty" json:"GlobalLastDeliveryTime,omitempty"`

	Categories *ArrayOfStringsType `xml:"Categories,omitempty" json:"Categories,omitempty"`

	GlobalCategories *ArrayOfStringsType `xml:"GlobalCategories,omitempty" json:"GlobalCategories,omitempty"`

	FlagStatus *FlagStatusType `xml:"FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	GlobalFlagStatus *FlagStatusType `xml:"GlobalFlagStatus,omitempty" json:"GlobalFlagStatus,omitempty"`

	HasAttachments XsBoolean `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	GlobalHasAttachments XsBoolean `xml:"GlobalHasAttachments,omitempty" json:"GlobalHasAttachments,omitempty"`

	MessageCount XsInt `xml:"MessageCount,omitempty" json:"MessageCount,omitempty"`

	GlobalMessageCount XsInt `xml:"GlobalMessageCount,omitempty" json:"GlobalMessageCount,omitempty"`

	UnreadCount XsInt `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	GlobalUnreadCount XsInt `xml:"GlobalUnreadCount,omitempty" json:"GlobalUnreadCount,omitempty"`

	Size XsInt `xml:"Size,omitempty" json:"Size,omitempty"`

	GlobalSize XsInt `xml:"GlobalSize,omitempty" json:"GlobalSize,omitempty"`

	ItemClasses *ArrayOfItemClassType `xml:"ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	GlobalItemClasses *ArrayOfItemClassType `xml:"GlobalItemClasses,omitempty" json:"GlobalItemClasses,omitempty"`

	Importance *ImportanceChoicesType `xml:"Importance,omitempty" json:"Importance,omitempty"`

	GlobalImportance *ImportanceChoicesType `xml:"GlobalImportance,omitempty" json:"GlobalImportance,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	GlobalItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"GlobalItemIds,omitempty" json:"GlobalItemIds,omitempty"`

	LastModifiedTime XsDateTime `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	InstanceKey XsBase64Binary `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	Preview XsString `xml:"Preview,omitempty" json:"Preview,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	IconIndex *IconIndexType `xml:"IconIndex,omitempty" json:"IconIndex,omitempty"`

	GlobalIconIndex *IconIndexType `xml:"GlobalIconIndex,omitempty" json:"GlobalIconIndex,omitempty"`

	DraftItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"DraftItemIds,omitempty" json:"DraftItemIds,omitempty"`

	HasIrm XsBoolean `xml:"HasIrm,omitempty" json:"HasIrm,omitempty"`

	GlobalHasIrm XsBoolean `xml:"GlobalHasIrm,omitempty" json:"GlobalHasIrm,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`

	SortKey XsLong `xml:"SortKey,omitempty" json:"SortKey,omitempty"`

	MentionedMe XsBoolean `xml:"MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	GlobalMentionedMe XsBoolean `xml:"GlobalMentionedMe,omitempty" json:"GlobalMentionedMe,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `xml:"MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	From *SingleRecipientType `xml:"From,omitempty" json:"From,omitempty"`

	AtAllMention XsBoolean `xml:"AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	GlobalAtAllMention XsBoolean `xml:"GlobalAtAllMention,omitempty" json:"GlobalAtAllMention,omitempty"`
}

type HighlightTermType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Term"`

	Scope XsString `xml:"Scope,omitempty" json:"Scope,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfConversationsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversations"`

	Conversation *ConversationType `xml:"Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation"`

	ConversationId *ItemIdType `xml:"ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState XsBase64Binary `xml:"SyncState,omitempty" json:"SyncState,omitempty"`
}

type ArrayOfConversationRequestsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversations"`

	Conversation *ConversationRequestType `xml:"Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationNodeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationNode"`

	InternetMessageId XsString `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	ParentInternetMessageId XsString `xml:"ParentInternetMessageId,omitempty" json:"ParentInternetMessageId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"Items,omitempty" json:"Items,omitempty"`
}

type ArrayOfConversationNodesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationNodes"`

	ConversationNode *ConversationNodeType `xml:"ConversationNode,omitempty" json:"ConversationNode,omitempty"`
}

type ConversationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation"`

	ConversationId *ItemIdType `xml:"ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState XsBase64Binary `xml:"SyncState,omitempty" json:"SyncState,omitempty"`

	ConversationNodes *ArrayOfConversationNodesType `xml:"ConversationNodes,omitempty" json:"ConversationNodes,omitempty"`

	CanDelete XsBoolean `xml:"CanDelete,omitempty" json:"CanDelete,omitempty"`
}

type ArrayOfHighlightTermsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types HighlightTerms"`

	Term []*HighlightTermType `xml:"Term,omitempty" json:"Term,omitempty"`
}

type PersonaAttributionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attribution"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	SourceId *ItemIdType `xml:"SourceId,omitempty" json:"SourceId,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsWritable XsBoolean `xml:"IsWritable,omitempty" json:"IsWritable,omitempty"`

	IsQuickContact XsBoolean `xml:"IsQuickContact,omitempty" json:"IsQuickContact,omitempty"`

	IsHidden XsBoolean `xml:"IsHidden,omitempty" json:"IsHidden,omitempty"`

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`
}

type ArrayOfPersonaAttributionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions"`

	Attribution []*PersonaAttributionType `xml:"Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfValueAttributionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions"`

	Attribution []XsString `xml:"Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfStringValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Values"`

	Value []XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type StringAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringAttributedValue"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type BodyContentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`

	BodyType *BodyTypeType `xml:"BodyType,omitempty" json:"BodyType,omitempty"`
}

type BodyContentAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyContentAttributedValue"`

	Value *BodyContentType `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type StringArrayAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringArrayAttributedValue"`

	Values *ArrayOfStringValueType `xml:"Values,omitempty" json:"Values,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type EmailAddressAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressAttributedValue"`

	Value *EmailAddressType `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPhoneNumberType struct {
	Number XsString `xml:"Number,omitempty" json:"Number,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`
}

type PhoneNumberAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumberAttributedValue"`

	Value *PersonaPhoneNumberType `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPostalAddressType struct {
	Street XsString `xml:"Street,omitempty" json:"Street,omitempty"`

	City XsString `xml:"City,omitempty" json:"City,omitempty"`

	State XsString `xml:"State,omitempty" json:"State,omitempty"`

	Country XsString `xml:"Country,omitempty" json:"Country,omitempty"`

	PostalCode XsString `xml:"PostalCode,omitempty" json:"PostalCode,omitempty"`

	PostOfficeBox XsString `xml:"PostOfficeBox,omitempty" json:"PostOfficeBox,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`

	Latitude XsDouble `xml:"Latitude,omitempty" json:"Latitude,omitempty"`

	Longitude XsDouble `xml:"Longitude,omitempty" json:"Longitude,omitempty"`

	Accuracy XsDouble `xml:"Accuracy,omitempty" json:"Accuracy,omitempty"`

	Altitude XsDouble `xml:"Altitude,omitempty" json:"Altitude,omitempty"`

	AltitudeAccuracy XsDouble `xml:"AltitudeAccuracy,omitempty" json:"AltitudeAccuracy,omitempty"`

	FormattedAddress XsString `xml:"FormattedAddress,omitempty" json:"FormattedAddress,omitempty"`

	LocationUri XsString `xml:"LocationUri,omitempty" json:"LocationUri,omitempty"`

	LocationSource *LocationSourceType `xml:"LocationSource,omitempty" json:"LocationSource,omitempty"`
}

type PostalAddressAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalAddressAttributedValue"`

	Value *PersonaPostalAddressType `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type ExtendedPropertyAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedPropertyAttributedValue"`

	Value *ExtendedPropertyType `xml:"Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`
}

type ArrayOfStringAttributedValuesType struct {
	StringAttributedValue []*StringAttributedValueType `xml:"StringAttributedValue,omitempty" json:"StringAttributedValue,omitempty"`
}

type ArrayOfStringArrayAttributedValuesType struct {
	StringArrayAttributedValue []*StringArrayAttributedValueType `xml:"StringArrayAttributedValue,omitempty" json:"StringArrayAttributedValue,omitempty"`
}

type ArrayOfBodyContentAttributedValuesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bodies"`

	BodyContentAttributedValue []*BodyContentAttributedValueType `xml:"BodyContentAttributedValue,omitempty" json:"BodyContentAttributedValue,omitempty"`
}

type ArrayOfEmailAddressAttributedValuesType struct {
	EmailAddressAttributedValue []*EmailAddressAttributedValueType `xml:"EmailAddressAttributedValue,omitempty" json:"EmailAddressAttributedValue,omitempty"`
}

type ArrayOfPhoneNumberAttributedValuesType struct {
	PhoneNumberAttributedValue []*PhoneNumberAttributedValueType `xml:"PhoneNumberAttributedValue,omitempty" json:"PhoneNumberAttributedValue,omitempty"`
}

type ArrayOfPostalAddressAttributedValuesType struct {
	PostalAddressAttributedValue []*PostalAddressAttributedValueType `xml:"PostalAddressAttributedValue,omitempty" json:"PostalAddressAttributedValue,omitempty"`
}

type ArrayOfExtendedPropertyAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties"`

	ExtendedPropertyAttributedValue []*ExtendedPropertyAttributedValueType `xml:"ExtendedPropertyAttributedValue,omitempty" json:"ExtendedPropertyAttributedValue,omitempty"`
}

type InsightFiltersType struct {
	Count XsInt `xml:"Count,omitempty" json:"Count,omitempty"`

	Types *ArrayOfStringsType `xml:"Types,omitempty" json:"Types,omitempty"`

	KeyInsightsOnly XsBoolean `xml:"KeyInsightsOnly,omitempty" json:"KeyInsightsOnly,omitempty"`
}

type InsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	InsightSource XsString `xml:"InsightSource,omitempty" json:"InsightSource,omitempty"`

	UpdatedUtcTicks XsLong `xml:"UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty"`
}

type StringInsightValue struct {
	*InsightValue

	Data XsString `xml:"Data,omitempty" json:"Data,omitempty"`
}

type DelveDocument struct {
	*InsightValue

	Rank XsDouble `xml:"Rank,omitempty" json:"Rank,omitempty"`

	Author XsString `xml:"Author,omitempty" json:"Author,omitempty"`

	Created XsString `xml:"Created,omitempty" json:"Created,omitempty"`

	LastModifiedTime XsString `xml:"LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	DefaultEncodingURL XsString `xml:"DefaultEncodingURL,omitempty" json:"DefaultEncodingURL,omitempty"`

	FileType XsString `xml:"FileType,omitempty" json:"FileType,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	DocumentId XsString `xml:"DocumentId,omitempty" json:"DocumentId,omitempty"`

	PreviewURL XsString `xml:"PreviewURL,omitempty" json:"PreviewURL,omitempty"`

	LastEditor XsString `xml:"LastEditor,omitempty" json:"LastEditor,omitempty"`
}

type ProfileInsightValue struct {
	*InsightValue

	FullName XsString `xml:"FullName,omitempty" json:"FullName,omitempty"`

	FirstName XsString `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	LastName XsString `xml:"LastName,omitempty" json:"LastName,omitempty"`

	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Avatar XsString `xml:"Avatar,omitempty" json:"Avatar,omitempty"`

	JoinedUtcTicks XsLong `xml:"JoinedUtcTicks,omitempty" json:"JoinedUtcTicks,omitempty"`

	ProfilePicture *UserProfilePicture `xml:"ProfilePicture,omitempty" json:"ProfilePicture,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`
}

type OutOfOfficeInsightValue struct {
	*InsightValue

	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	Message XsString `xml:"Message,omitempty" json:"Message,omitempty"`

	Culture XsString `xml:"Culture,omitempty" json:"Culture,omitempty"`
}

type JobInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	*InsightValue

	Company XsString `xml:"Company,omitempty" json:"Company,omitempty"`

	CompanyDescription XsString `xml:"CompanyDescription,omitempty" json:"CompanyDescription,omitempty"`

	CompanyTicker XsString `xml:"CompanyTicker,omitempty" json:"CompanyTicker,omitempty"`

	CompanyLogoUrl XsString `xml:"CompanyLogoUrl,omitempty" json:"CompanyLogoUrl,omitempty"`

	CompanyWebsiteUrl XsString `xml:"CompanyWebsiteUrl,omitempty" json:"CompanyWebsiteUrl,omitempty"`

	CompanyLinkedInUrl XsString `xml:"CompanyLinkedInUrl,omitempty" json:"CompanyLinkedInUrl,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	StartUtcTicks XsLong `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks XsLong `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type CompanyInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	*InsightValue

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	SatoriId XsString `xml:"SatoriId,omitempty" json:"SatoriId,omitempty"`

	Description XsString `xml:"Description,omitempty" json:"Description,omitempty"`

	DescriptionAttribution XsString `xml:"DescriptionAttribution,omitempty" json:"DescriptionAttribution,omitempty"`

	ImageUrl XsString `xml:"ImageUrl,omitempty" json:"ImageUrl,omitempty"`

	ImageUrlAttribution XsString `xml:"ImageUrlAttribution,omitempty" json:"ImageUrlAttribution,omitempty"`

	YearFound XsString `xml:"YearFound,omitempty" json:"YearFound,omitempty"`

	FinanceSymbol XsString `xml:"FinanceSymbol,omitempty" json:"FinanceSymbol,omitempty"`

	WebsiteUrl XsString `xml:"WebsiteUrl,omitempty" json:"WebsiteUrl,omitempty"`
}

type UserProfilePicture struct {
	*InsightValue

	Blob XsString `xml:"Blob,omitempty" json:"Blob,omitempty"`

	PhotoSize XsString `xml:"PhotoSize,omitempty" json:"PhotoSize,omitempty"`

	Url XsString `xml:"Url,omitempty" json:"Url,omitempty"`

	ImageType XsString `xml:"ImageType,omitempty" json:"ImageType,omitempty"`
}

type EducationInsightValue struct {
	*InsightValue

	Institute XsString `xml:"Institute,omitempty" json:"Institute,omitempty"`

	Degree XsString `xml:"Degree,omitempty" json:"Degree,omitempty"`

	StartUtcTicks XsLong `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks XsLong `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type SkillInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item"`

	*InsightValue

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Strength XsInt `xml:"Strength,omitempty" json:"Strength,omitempty"`
}

type MeetingInsightValue struct {
	*InsightValue

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	StartUtcTicks XsLong `xml:"StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks XsLong `xml:"EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	Organizer *ProfileInsightValue `xml:"Organizer,omitempty" json:"Organizer,omitempty"`

	Attendees *ArrayOfProfileInsightValue `xml:"Attendees,omitempty" json:"Attendees,omitempty"`
}

type EmailInsightValue struct {
	*InsightValue

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	ThreadId XsString `xml:"ThreadId,omitempty" json:"ThreadId,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	LastEmailDateUtcTicks XsLong `xml:"LastEmailDateUtcTicks,omitempty" json:"LastEmailDateUtcTicks,omitempty"`

	Body XsString `xml:"Body,omitempty" json:"Body,omitempty"`

	LastEmailSender *ProfileInsightValue `xml:"LastEmailSender,omitempty" json:"LastEmailSender,omitempty"`

	EmailsCount XsInt `xml:"EmailsCount,omitempty" json:"EmailsCount,omitempty"`
}

type ArrayOfInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemList"`

	Item []*InsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfSkillInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Skills"`

	Item []*SkillInsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfProfileInsightValue struct {
	Item []*ProfileInsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfJobInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CurrentJob"`

	Item []*JobInsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCompanyInsightValue struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyProfile"`

	Item []*CompanyInsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type InsightContent struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Content"`
}

type SingleValueInsightContent struct {
	*InsightContent

	Item *InsightValue `xml:"Item,omitempty" json:"Item,omitempty"`
}

type MultiValueInsightContent struct {
	*InsightContent

	ItemList *ArrayOfInsightValue `xml:"ItemList,omitempty" json:"ItemList,omitempty"`
}

type Insight struct {
	InsightType XsString `xml:"InsightType,omitempty" json:"InsightType,omitempty"`

	Rank XsDouble `xml:"Rank,omitempty" json:"Rank,omitempty"`

	Content *InsightContent `xml:"Content,omitempty" json:"Content,omitempty"`

	Text XsString `xml:"Text,omitempty" json:"Text,omitempty"`

	ItemList *ArrayOfInsightValue `xml:"ItemList,omitempty" json:"ItemList,omitempty"`

	RequiresToken XsBoolean `xml:"RequiresToken,omitempty" json:"RequiresToken,omitempty"`
}

type ComputedInsightValueProperty struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Property"`

	Key XsString `xml:"Key,omitempty" json:"Key,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfComputedInsightValueProperty struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties"`

	Property []*ComputedInsightValueProperty `xml:"Property,omitempty" json:"Property,omitempty"`
}

type ComputedInsightValue struct {
	*InsightValue

	Properties *ArrayOfComputedInsightValueProperty `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfInsight struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Insights"`

	Insight []*Insight `xml:"Insight,omitempty" json:"Insight,omitempty"`
}

type PersonResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person"`

	FullName XsString `xml:"FullName,omitempty" json:"FullName,omitempty"`

	GivenName XsString `xml:"GivenName,omitempty" json:"GivenName,omitempty"`

	Surname XsString `xml:"Surname,omitempty" json:"Surname,omitempty"`

	PhoneNumber XsString `xml:"PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	SMSNumber XsString `xml:"SMSNumber,omitempty" json:"SMSNumber,omitempty"`

	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Alias XsString `xml:"Alias,omitempty" json:"Alias,omitempty"`

	Department XsString `xml:"Department,omitempty" json:"Department,omitempty"`

	LinkedInProfileLink XsString `xml:"LinkedInProfileLink,omitempty" json:"LinkedInProfileLink,omitempty"`

	Skills *ArrayOfSkillInsightValue `xml:"Skills,omitempty" json:"Skills,omitempty"`

	ProfessionalBiography XsString `xml:"ProfessionalBiography,omitempty" json:"ProfessionalBiography,omitempty"`

	ManagementChain *ArrayOfProfileInsightValue `xml:"ManagementChain,omitempty" json:"ManagementChain,omitempty"`

	DirectReports *ArrayOfProfileInsightValue `xml:"DirectReports,omitempty" json:"DirectReports,omitempty"`

	Peers *ArrayOfProfileInsightValue `xml:"Peers,omitempty" json:"Peers,omitempty"`

	TeamSize XsString `xml:"TeamSize,omitempty" json:"TeamSize,omitempty"`

	CurrentJob *ArrayOfJobInsightValue `xml:"CurrentJob,omitempty" json:"CurrentJob,omitempty"`

	Birthday XsString `xml:"Birthday,omitempty" json:"Birthday,omitempty"`

	Hometown XsString `xml:"Hometown,omitempty" json:"Hometown,omitempty"`

	CurrentLocation XsString `xml:"CurrentLocation,omitempty" json:"CurrentLocation,omitempty"`

	CompanyProfile *ArrayOfCompanyInsightValue `xml:"CompanyProfile,omitempty" json:"CompanyProfile,omitempty"`

	Office XsString `xml:"Office,omitempty" json:"Office,omitempty"`

	Headline XsString `xml:"Headline,omitempty" json:"Headline,omitempty"`

	MutualConnections *ArrayOfProfileInsightValue `xml:"MutualConnections,omitempty" json:"MutualConnections,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	MutualManager *ProfileInsightValue `xml:"MutualManager,omitempty" json:"MutualManager,omitempty"`

	Insights *ArrayOfInsight `xml:"Insights,omitempty" json:"Insights,omitempty"`

	UserProfilePicture *UserProfilePicture `xml:"UserProfilePicture,omitempty" json:"UserProfilePicture,omitempty"`
}

type ArrayOfPersonType struct {
	Person *PersonType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type PeopleTokenType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PeopleToken"`

	TokenSource *TokenSourceType `xml:"TokenSource,omitempty" json:"TokenSource,omitempty"`

	ExpirationDateTime XsDateTime `xml:"ExpirationDateTime,omitempty" json:"ExpirationDateTime,omitempty"`

	TokenValue XsString `xml:"TokenValue,omitempty" json:"TokenValue,omitempty"`
}

type NonEmptyArrayOfPeopleTokenType struct {
	PeopleToken []*PeopleTokenType `xml:"PeopleToken,omitempty" json:"PeopleToken,omitempty"`
}

type PersonaType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Persona"`

	PersonaId *ItemIdType `xml:"PersonaId,omitempty" json:"PersonaId,omitempty"`

	PersonaType XsString `xml:"PersonaType,omitempty" json:"PersonaType,omitempty"`

	PersonaObjectStatus XsString `xml:"PersonaObjectStatus,omitempty" json:"PersonaObjectStatus,omitempty"`

	CreationTime XsDateTime `xml:"CreationTime,omitempty" json:"CreationTime,omitempty"`

	Bodies *ArrayOfBodyContentAttributedValuesType `xml:"Bodies,omitempty" json:"Bodies,omitempty"`

	DisplayNameFirstLastSortKey XsString `xml:"DisplayNameFirstLastSortKey,omitempty" json:"DisplayNameFirstLastSortKey,omitempty"`

	DisplayNameLastFirstSortKey XsString `xml:"DisplayNameLastFirstSortKey,omitempty" json:"DisplayNameLastFirstSortKey,omitempty"`

	CompanyNameSortKey XsString `xml:"CompanyNameSortKey,omitempty" json:"CompanyNameSortKey,omitempty"`

	HomeCitySortKey XsString `xml:"HomeCitySortKey,omitempty" json:"HomeCitySortKey,omitempty"`

	WorkCitySortKey XsString `xml:"WorkCitySortKey,omitempty" json:"WorkCitySortKey,omitempty"`

	DisplayNameFirstLastHeader XsString `xml:"DisplayNameFirstLastHeader,omitempty" json:"DisplayNameFirstLastHeader,omitempty"`

	DisplayNameLastFirstHeader XsString `xml:"DisplayNameLastFirstHeader,omitempty" json:"DisplayNameLastFirstHeader,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	DisplayNameFirstLast XsString `xml:"DisplayNameFirstLast,omitempty" json:"DisplayNameFirstLast,omitempty"`

	DisplayNameLastFirst XsString `xml:"DisplayNameLastFirst,omitempty" json:"DisplayNameLastFirst,omitempty"`

	FileAs XsString `xml:"FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsId XsString `xml:"FileAsId,omitempty" json:"FileAsId,omitempty"`

	DisplayNamePrefix XsString `xml:"DisplayNamePrefix,omitempty" json:"DisplayNamePrefix,omitempty"`

	GivenName XsString `xml:"GivenName,omitempty" json:"GivenName,omitempty"`

	MiddleName XsString `xml:"MiddleName,omitempty" json:"MiddleName,omitempty"`

	Surname XsString `xml:"Surname,omitempty" json:"Surname,omitempty"`

	Generation XsString `xml:"Generation,omitempty" json:"Generation,omitempty"`

	Nickname XsString `xml:"Nickname,omitempty" json:"Nickname,omitempty"`

	YomiCompanyName XsString `xml:"YomiCompanyName,omitempty" json:"YomiCompanyName,omitempty"`

	YomiFirstName XsString `xml:"YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName XsString `xml:"YomiLastName,omitempty" json:"YomiLastName,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	Department XsString `xml:"Department,omitempty" json:"Department,omitempty"`

	CompanyName XsString `xml:"CompanyName,omitempty" json:"CompanyName,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	EmailAddress *EmailAddressType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	EmailAddresses *ArrayOfEmailAddressesType `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	PhoneNumber *PersonaPhoneNumberType `xml:"PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	ImAddress XsString `xml:"ImAddress,omitempty" json:"ImAddress,omitempty"`

	HomeCity XsString `xml:"HomeCity,omitempty" json:"HomeCity,omitempty"`

	WorkCity XsString `xml:"WorkCity,omitempty" json:"WorkCity,omitempty"`

	RelevanceScore XsInt `xml:"RelevanceScore,omitempty" json:"RelevanceScore,omitempty"`

	FolderIds *ArrayOfFolderIdType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`

	Attributions *ArrayOfPersonaAttributionsType `xml:"Attributions,omitempty" json:"Attributions,omitempty"`

	DisplayNames *ArrayOfStringAttributedValuesType `xml:"DisplayNames,omitempty" json:"DisplayNames,omitempty"`

	FileAses *ArrayOfStringAttributedValuesType `xml:"FileAses,omitempty" json:"FileAses,omitempty"`

	FileAsIds *ArrayOfStringAttributedValuesType `xml:"FileAsIds,omitempty" json:"FileAsIds,omitempty"`

	DisplayNamePrefixes *ArrayOfStringAttributedValuesType `xml:"DisplayNamePrefixes,omitempty" json:"DisplayNamePrefixes,omitempty"`

	GivenNames *ArrayOfStringAttributedValuesType `xml:"GivenNames,omitempty" json:"GivenNames,omitempty"`

	MiddleNames *ArrayOfStringAttributedValuesType `xml:"MiddleNames,omitempty" json:"MiddleNames,omitempty"`

	Surnames *ArrayOfStringAttributedValuesType `xml:"Surnames,omitempty" json:"Surnames,omitempty"`

	Generations *ArrayOfStringAttributedValuesType `xml:"Generations,omitempty" json:"Generations,omitempty"`

	Nicknames *ArrayOfStringAttributedValuesType `xml:"Nicknames,omitempty" json:"Nicknames,omitempty"`

	Initials *ArrayOfStringAttributedValuesType `xml:"Initials,omitempty" json:"Initials,omitempty"`

	YomiCompanyNames *ArrayOfStringAttributedValuesType `xml:"YomiCompanyNames,omitempty" json:"YomiCompanyNames,omitempty"`

	YomiFirstNames *ArrayOfStringAttributedValuesType `xml:"YomiFirstNames,omitempty" json:"YomiFirstNames,omitempty"`

	YomiLastNames *ArrayOfStringAttributedValuesType `xml:"YomiLastNames,omitempty" json:"YomiLastNames,omitempty"`

	BusinessPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"BusinessPhoneNumbers,omitempty" json:"BusinessPhoneNumbers,omitempty"`

	BusinessPhoneNumbers2 *ArrayOfPhoneNumberAttributedValuesType `xml:"BusinessPhoneNumbers2,omitempty" json:"BusinessPhoneNumbers2,omitempty"`

	HomePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"HomePhones,omitempty" json:"HomePhones,omitempty"`

	HomePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"HomePhones2,omitempty" json:"HomePhones2,omitempty"`

	MobilePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"MobilePhones,omitempty" json:"MobilePhones,omitempty"`

	MobilePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"MobilePhones2,omitempty" json:"MobilePhones2,omitempty"`

	AssistantPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"AssistantPhoneNumbers,omitempty" json:"AssistantPhoneNumbers,omitempty"`

	CallbackPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"CallbackPhones,omitempty" json:"CallbackPhones,omitempty"`

	CarPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"CarPhones,omitempty" json:"CarPhones,omitempty"`

	HomeFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"HomeFaxes,omitempty" json:"HomeFaxes,omitempty"`

	OrganizationMainPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"OrganizationMainPhones,omitempty" json:"OrganizationMainPhones,omitempty"`

	OtherFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"OtherFaxes,omitempty" json:"OtherFaxes,omitempty"`

	OtherTelephones *ArrayOfPhoneNumberAttributedValuesType `xml:"OtherTelephones,omitempty" json:"OtherTelephones,omitempty"`

	OtherPhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"OtherPhones2,omitempty" json:"OtherPhones2,omitempty"`

	Pagers *ArrayOfPhoneNumberAttributedValuesType `xml:"Pagers,omitempty" json:"Pagers,omitempty"`

	RadioPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"RadioPhones,omitempty" json:"RadioPhones,omitempty"`

	TelexNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"TelexNumbers,omitempty" json:"TelexNumbers,omitempty"`

	TTYTDDPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"TTYTDDPhoneNumbers,omitempty" json:"TTYTDDPhoneNumbers,omitempty"`

	WorkFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"WorkFaxes,omitempty" json:"WorkFaxes,omitempty"`

	Emails1 *ArrayOfEmailAddressAttributedValuesType `xml:"Emails1,omitempty" json:"Emails1,omitempty"`

	Emails2 *ArrayOfEmailAddressAttributedValuesType `xml:"Emails2,omitempty" json:"Emails2,omitempty"`

	Emails3 *ArrayOfEmailAddressAttributedValuesType `xml:"Emails3,omitempty" json:"Emails3,omitempty"`

	BusinessHomePages *ArrayOfStringAttributedValuesType `xml:"BusinessHomePages,omitempty" json:"BusinessHomePages,omitempty"`

	PersonalHomePages *ArrayOfStringAttributedValuesType `xml:"PersonalHomePages,omitempty" json:"PersonalHomePages,omitempty"`

	OfficeLocations *ArrayOfStringAttributedValuesType `xml:"OfficeLocations,omitempty" json:"OfficeLocations,omitempty"`

	ImAddresses *ArrayOfStringAttributedValuesType `xml:"ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	ImAddresses2 *ArrayOfStringAttributedValuesType `xml:"ImAddresses2,omitempty" json:"ImAddresses2,omitempty"`

	ImAddresses3 *ArrayOfStringAttributedValuesType `xml:"ImAddresses3,omitempty" json:"ImAddresses3,omitempty"`

	BusinessAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"BusinessAddresses,omitempty" json:"BusinessAddresses,omitempty"`

	HomeAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"HomeAddresses,omitempty" json:"HomeAddresses,omitempty"`

	OtherAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"OtherAddresses,omitempty" json:"OtherAddresses,omitempty"`

	Titles *ArrayOfStringAttributedValuesType `xml:"Titles,omitempty" json:"Titles,omitempty"`

	Departments *ArrayOfStringAttributedValuesType `xml:"Departments,omitempty" json:"Departments,omitempty"`

	CompanyNames *ArrayOfStringAttributedValuesType `xml:"CompanyNames,omitempty" json:"CompanyNames,omitempty"`

	Managers *ArrayOfStringAttributedValuesType `xml:"Managers,omitempty" json:"Managers,omitempty"`

	AssistantNames *ArrayOfStringAttributedValuesType `xml:"AssistantNames,omitempty" json:"AssistantNames,omitempty"`

	Professions *ArrayOfStringAttributedValuesType `xml:"Professions,omitempty" json:"Professions,omitempty"`

	SpouseNames *ArrayOfStringAttributedValuesType `xml:"SpouseNames,omitempty" json:"SpouseNames,omitempty"`

	Children *ArrayOfStringArrayAttributedValuesType `xml:"Children,omitempty" json:"Children,omitempty"`

	Schools *ArrayOfStringAttributedValuesType `xml:"Schools,omitempty" json:"Schools,omitempty"`

	Hobbies *ArrayOfStringAttributedValuesType `xml:"Hobbies,omitempty" json:"Hobbies,omitempty"`

	WeddingAnniversaries *ArrayOfStringAttributedValuesType `xml:"WeddingAnniversaries,omitempty" json:"WeddingAnniversaries,omitempty"`

	Birthdays *ArrayOfStringAttributedValuesType `xml:"Birthdays,omitempty" json:"Birthdays,omitempty"`

	Locations *ArrayOfStringAttributedValuesType `xml:"Locations,omitempty" json:"Locations,omitempty"`

	InlineLinks *ArrayOfStringAttributedValuesType `xml:"InlineLinks,omitempty" json:"InlineLinks,omitempty"`

	ItemLinkIds *ArrayOfStringArrayAttributedValuesType `xml:"ItemLinkIds,omitempty" json:"ItemLinkIds,omitempty"`

	HasActiveDeals XsString `xml:"HasActiveDeals,omitempty" json:"HasActiveDeals,omitempty"`

	IsBusinessContact XsString `xml:"IsBusinessContact,omitempty" json:"IsBusinessContact,omitempty"`

	AttributedHasActiveDeals *ArrayOfStringAttributedValuesType `xml:"AttributedHasActiveDeals,omitempty" json:"AttributedHasActiveDeals,omitempty"`

	AttributedIsBusinessContact *ArrayOfStringAttributedValuesType `xml:"AttributedIsBusinessContact,omitempty" json:"AttributedIsBusinessContact,omitempty"`

	SourceMailboxGuids *ArrayOfStringAttributedValuesType `xml:"SourceMailboxGuids,omitempty" json:"SourceMailboxGuids,omitempty"`

	LastContactedDate XsDateTime `xml:"LastContactedDate,omitempty" json:"LastContactedDate,omitempty"`

	ExtendedProperties *ArrayOfExtendedPropertyAttributedValueType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	ExternalDirectoryObjectId XsString `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	MapiEntryId XsString `xml:"MapiEntryId,omitempty" json:"MapiEntryId,omitempty"`

	MapiEmailAddress XsString `xml:"MapiEmailAddress,omitempty" json:"MapiEmailAddress,omitempty"`

	MapiAddressType XsString `xml:"MapiAddressType,omitempty" json:"MapiAddressType,omitempty"`

	MapiSearchKey XsString `xml:"MapiSearchKey,omitempty" json:"MapiSearchKey,omitempty"`

	MapiTransmittableDisplayName XsString `xml:"MapiTransmittableDisplayName,omitempty" json:"MapiTransmittableDisplayName,omitempty"`

	MapiSendRichInfo XsBoolean `xml:"MapiSendRichInfo,omitempty" json:"MapiSendRichInfo,omitempty"`
}

type ArrayOfPeopleType struct {
	Persona *PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty"`
}

type MailboxLocatorType struct {
	ExternalDirectoryObjectId XsString `xml:"ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	LegacyDn XsString `xml:"LegacyDn,omitempty" json:"LegacyDn,omitempty"`

	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	OrganizationId XsString `xml:"OrganizationId,omitempty" json:"OrganizationId,omitempty"`
}

type GroupLocatorType struct {
	*MailboxLocatorType

	AccessType XsInt `xml:"AccessType,omitempty" json:"AccessType,omitempty"`
}

type UserLocatorType struct {
	*MailboxLocatorType
}

type ArrayOfItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items"`

	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCalendarItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItems"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`
}

type InstantSearchPayloadType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Payload"`

	SearchSessionId XsString `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchRequestId XsLong `xml:"SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	ResultType *InstantSearchResultType `xml:"ResultType,omitempty" json:"ResultType,omitempty"`

	Items *ArrayOfItemsType `xml:"Items,omitempty" json:"Items,omitempty"`

	Conversations *ArrayOfConversationsType `xml:"Conversations,omitempty" json:"Conversations,omitempty"`

	CalendarItems *ArrayOfCalendarItemsType `xml:"CalendarItems,omitempty" json:"CalendarItems,omitempty"`
}

type ArrayOfStringsType struct {
	String []XsString `xml:"String,omitempty" json:"String,omitempty"`
}

type ArrayOfRealItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items"`

	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type NonEmptyArrayOfAllItemsType struct {
	Item *ItemType `xml:"Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"PostItem,omitempty" json:"PostItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	AcceptItem *AcceptItemType `xml:"AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	RoleMember *RoleMemberItemType `xml:"RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"Person,omitempty" json:"Person,omitempty"`
}

type MeetingRegistrationResponseObjectType struct {
	*WellKnownResponseObjectType

	ProposedStart XsDateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd XsDateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type AcceptItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptItem"`

	*MeetingRegistrationResponseObjectType
}

type TentativelyAcceptItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TentativelyAcceptItem"`

	*MeetingRegistrationResponseObjectType
}

type DeclineItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineItem"`

	*MeetingRegistrationResponseObjectType
}

type ProposeNewTimeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposeNewTime"`

	*ResponseObjectType
}

type RemoveItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RemoveItem"`

	*ResponseObjectType
}

type AddItemToMyCalendarType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddItemToMyCalendar"`

	*ResponseObjectType
}

type PostReplyItemBaseType struct {
}

type PostReplyItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostReplyItem"`

	*PostReplyItemBaseType

	NewBodyContent *BodyType `xml:"NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type MimeContentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MimeContent"`

	Value XsString `xml:",chardata" json:"-,"`

	CharacterSet XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MimeContentUTF8Type struct {
	Value XsString `xml:",chardata" json:"-,"`

	CharacterSet XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message"`

	*ItemType

	Sender *SingleRecipientType `xml:"Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfRecipientsType `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfRecipientsType `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfRecipientsType `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	IsReadReceiptRequested XsBoolean `xml:"IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty"`

	IsDeliveryReceiptRequested XsBoolean `xml:"IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty"`

	ConversationIndex XsBase64Binary `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic XsString `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"From,omitempty" json:"From,omitempty"`

	InternetMessageId XsString `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead XsBoolean `xml:"IsRead,omitempty" json:"IsRead,omitempty"`

	IsResponseRequested XsBoolean `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	References XsString `xml:"References,omitempty" json:"References,omitempty"`

	ReplyTo *ArrayOfRecipientsType `xml:"ReplyTo,omitempty" json:"ReplyTo,omitempty"`

	ReceivedBy *SingleRecipientType `xml:"ReceivedBy,omitempty" json:"ReceivedBy,omitempty"`

	ReceivedRepresenting *SingleRecipientType `xml:"ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty"`

	ApprovalRequestData *ApprovalRequestDataType `xml:"ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty"`

	VotingInformation *VotingInformationType `xml:"VotingInformation,omitempty" json:"VotingInformation,omitempty"`

	ReminderMessageData *ReminderMessageDataType `xml:"ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty"`

	MessageSafety *MessageSafetyType `xml:"MessageSafety,omitempty" json:"MessageSafety,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `xml:"MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	PublishedCalendarItemIcs XsString `xml:"PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty"`

	PublishedCalendarItemName XsString `xml:"PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty"`
}

type TaskType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task"`

	*ItemType

	ActualWork XsInt `xml:"ActualWork,omitempty" json:"ActualWork,omitempty"`

	AssignedTime XsDateTime `xml:"AssignedTime,omitempty" json:"AssignedTime,omitempty"`

	BillingInformation XsString `xml:"BillingInformation,omitempty" json:"BillingInformation,omitempty"`

	ChangeCount XsInt `xml:"ChangeCount,omitempty" json:"ChangeCount,omitempty"`

	Companies *ArrayOfStringsType `xml:"Companies,omitempty" json:"Companies,omitempty"`

	CompleteDate XsDateTime `xml:"CompleteDate,omitempty" json:"CompleteDate,omitempty"`

	Contacts *ArrayOfStringsType `xml:"Contacts,omitempty" json:"Contacts,omitempty"`

	DelegationState *TaskDelegateStateType `xml:"DelegationState,omitempty" json:"DelegationState,omitempty"`

	Delegator XsString `xml:"Delegator,omitempty" json:"Delegator,omitempty"`

	DueDate XsDateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty"`

	IsAssignmentEditable XsInt `xml:"IsAssignmentEditable,omitempty" json:"IsAssignmentEditable,omitempty"`

	IsComplete XsBoolean `xml:"IsComplete,omitempty" json:"IsComplete,omitempty"`

	IsRecurring XsBoolean `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsTeamTask XsBoolean `xml:"IsTeamTask,omitempty" json:"IsTeamTask,omitempty"`

	Mileage XsString `xml:"Mileage,omitempty" json:"Mileage,omitempty"`

	Owner XsString `xml:"Owner,omitempty" json:"Owner,omitempty"`

	PercentComplete XsDouble `xml:"PercentComplete,omitempty" json:"PercentComplete,omitempty"`

	Recurrence *TaskRecurrenceType `xml:"Recurrence,omitempty" json:"Recurrence,omitempty"`

	StartDate XsDateTime `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	Status *TaskStatusType `xml:"Status,omitempty" json:"Status,omitempty"`

	StatusDescription XsString `xml:"StatusDescription,omitempty" json:"StatusDescription,omitempty"`

	TotalWork XsInt `xml:"TotalWork,omitempty" json:"TotalWork,omitempty"`
}

type PostItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem"`

	*ItemType

	ConversationIndex XsBase64Binary `xml:"ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic XsString `xml:"ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"From,omitempty" json:"From,omitempty"`

	InternetMessageId XsString `xml:"InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead XsBoolean `xml:"IsRead,omitempty" json:"IsRead,omitempty"`

	PostedTime XsDateTime `xml:"PostedTime,omitempty" json:"PostedTime,omitempty"`

	References XsString `xml:"References,omitempty" json:"References,omitempty"`

	Sender *SingleRecipientType `xml:"Sender,omitempty" json:"Sender,omitempty"`
}

type SharingMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage"`

	*MessageType

	SharingMessageAction *SharingMessageActionType `xml:"SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`

	SharingMessageActions *ArrayOfSharingMessageActionType `xml:"SharingMessageActions,omitempty" json:"SharingMessageActions,omitempty"`
}

type ArrayOfSharingMessageActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessageActions"`

	SharingMessageAction *SharingMessageActionType `xml:"SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`
}

type SharingMessageActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessageAction"`

	Importance *SharingActionImportance `xml:"Importance,omitempty" json:"Importance,omitempty"`

	ActionType *SharingActionType `xml:"ActionType,omitempty" json:"ActionType,omitempty"`

	Action *SharingAction `xml:"Action,omitempty" json:"Action,omitempty"`
}

type BasePagingType struct {
	MaxEntriesReturned XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,omitempty"`
}

type IndexedPageViewType struct {
	*BasePagingType

	Offset XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Offset,attr,omitempty" json:"Offset,omitempty"`

	BasePoint *IndexBasePointType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type FractionalPageViewType struct {
	*BasePagingType

	Numerator XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Numerator,attr,omitempty" json:"Numerator,omitempty"`

	Denominator XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Denominator,attr,omitempty" json:"Denominator,omitempty"`
}

type SeekToConditionPageViewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SeekToConditionPageItemView"`

	*BasePagingType

	Condition *RestrictionType `xml:"Condition,omitempty" json:"Condition,omitempty"`

	BasePoint *IndexBasePointType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type CalendarViewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarView"`

	*BasePagingType

	StartDate XsDateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDate,attr,omitempty" json:"StartDate,omitempty"`

	EndDate XsDateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndDate,attr,omitempty" json:"EndDate,omitempty"`
}

type ContactsViewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsView"`

	*BasePagingType

	InitialName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types InitialName,attr,omitempty" json:"InitialName,omitempty"`

	FinalName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types FinalName,attr,omitempty" json:"FinalName,omitempty"`
}

type ResolutionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Resolution"`

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	Contact *ContactItemType `xml:"Contact,omitempty" json:"Contact,omitempty"`
}

type ArrayOfResolutionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResolutionSet"`

	Resolution *ResolutionType `xml:"Resolution,omitempty" json:"Resolution,omitempty"`
}

type ArrayOfDLExpansionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DLExpansion"`

	Mailbox []*EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type NonEmptyArrayOfTimeZoneIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Ids"`

	Id []XsString `xml:"Id,omitempty" json:"Id,omitempty"`
}

type ArrayOfTimeZoneDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneDefinitions"`

	TimeZoneDefinition *TimeZoneDefinitionType `xml:"TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type OnlineMeetingSettingsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OnlineMeetingSettings"`

	LobbyBypass *LobbyBypassType `xml:"LobbyBypass,omitempty" json:"LobbyBypass,omitempty"`

	AccessLevel *OnlineMeetingAccessLevelType `xml:"AccessLevel,omitempty" json:"AccessLevel,omitempty"`

	Presenters *PresentersType `xml:"Presenters,omitempty" json:"Presenters,omitempty"`
}

type AttendeeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attendee"`

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	ResponseType *ResponseTypeType `xml:"ResponseType,omitempty" json:"ResponseType,omitempty"`

	LastResponseTime XsDateTime `xml:"LastResponseTime,omitempty" json:"LastResponseTime,omitempty"`

	ProposedStart XsDateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd XsDateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type NonEmptyArrayOfAttendeesType struct {
	Attendee []*AttendeeType `xml:"Attendee,omitempty" json:"Attendee,omitempty"`
}

type OccurrenceItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceItemId"`

	*BaseItemIdType

	RecurringMasterId *DerivedItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterId,attr,omitempty" json:"RecurringMasterId,omitempty"`

	ChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`

	InstanceIndex XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstanceIndex,attr,omitempty" json:"InstanceIndex,omitempty"`
}

type RecurringMasterItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemId"`

	*BaseItemIdType

	OccurrenceId *DerivedItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceId,attr,omitempty" json:"OccurrenceId,omitempty"`

	ChangeKey XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type RecurringMasterItemIdRangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemIdRanges"`

	*ItemIdType

	Ranges *ArrayOfOccurrenceRangesType `xml:"Ranges,omitempty" json:"Ranges,omitempty"`
}

type ArrayOfOccurrenceRangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Ranges"`

	Range []*OccurrencesRangeType `xml:"Range,omitempty" json:"Range,omitempty"`
}

type OccurrencesRangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Range"`

	Start XsDateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,attr,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,attr,omitempty" json:"End,omitempty"`

	Count XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Count,attr,omitempty" json:"Count,omitempty"`

	CompareOriginalStartTime XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompareOriginalStartTime,attr,omitempty" json:"CompareOriginalStartTime,omitempty"`
}

type RecurrencePatternBaseType struct {
}

type IntervalRecurrencePatternBaseType struct {
	*RecurrencePatternBaseType

	Interval XsInt `xml:"Interval,omitempty" json:"Interval,omitempty"`
}

type RegeneratingPatternBaseType struct {
	*IntervalRecurrencePatternBaseType
}

type DailyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type WeeklyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type MonthlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type YearlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type RelativeYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`

	Month *MonthNamesType `xml:"Month,omitempty" json:"Month,omitempty"`
}

type AbsoluteYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DayOfMonth XsInt `xml:"DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`

	Month *MonthNamesType `xml:"Month,omitempty" json:"Month,omitempty"`
}

type RelativeMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`
}

type AbsoluteMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DayOfMonth XsInt `xml:"DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`
}

type WeeklyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DaysOfWeekType `xml:"DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	FirstDayOfWeek *DayOfWeekType `xml:"FirstDayOfWeek,omitempty" json:"FirstDayOfWeek,omitempty"`
}

type DailyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType
}

type EnhancedLocationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnhancedLocation"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	Annotation XsString `xml:"Annotation,omitempty" json:"Annotation,omitempty"`

	PostalAddress *PersonaPostalAddressType `xml:"PostalAddress,omitempty" json:"PostalAddress,omitempty"`
}

type TimeChangeType struct {
	Offset XsDuration `xml:"Offset,omitempty" json:"Offset,omitempty"`

	Time XsTime `xml:"Time,omitempty" json:"Time,omitempty"`

	TimeZoneName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeZone"`

	BaseOffset XsDuration `xml:"BaseOffset,omitempty" json:"BaseOffset,omitempty"`

	TimeZoneName XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneContextType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneContext"`

	TimeZoneDefinition *TimeZoneDefinitionType `xml:"TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type TransitionTargetType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types To"`

	Value XsString `xml:",chardata" json:"-,"`

	Kind *TransitionTargetKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Kind,attr,omitempty" json:"Kind,omitempty"`
}

type TransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Transition"`

	To *TransitionTargetType `xml:"To,omitempty" json:"To,omitempty"`
}

type AbsoluteDateTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AbsoluteDateTransition"`

	*TransitionType

	DateTime XsDateTime `xml:"DateTime,omitempty" json:"DateTime,omitempty"`
}

type RecurringTimeTransitionType struct {
	*TransitionType

	TimeOffset XsDuration `xml:"TimeOffset,omitempty" json:"TimeOffset,omitempty"`

	Month XsInt `xml:"Month,omitempty" json:"Month,omitempty"`
}

type RecurringDateTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringDateTransition"`

	*RecurringTimeTransitionType

	Day XsInt `xml:"Day,omitempty" json:"Day,omitempty"`
}

type RecurringDayTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringDayTransition"`

	*RecurringTimeTransitionType

	DayOfWeek *DayOfWeekType `xml:"DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Occurrence XsInt `xml:"Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type TimeZoneDefinitionType struct {
	Periods *NonEmptyArrayOfPeriodsType `xml:"Periods,omitempty" json:"Periods,omitempty"`

	TransitionsGroups *ArrayOfTransitionsGroupsType `xml:"TransitionsGroups,omitempty" json:"TransitionsGroups,omitempty"`

	Transitions *ArrayOfTransitionsType `xml:"Transitions,omitempty" json:"Transitions,omitempty"`

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`
}

type NonEmptyArrayOfPeriodsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Periods"`

	Period []*PeriodType `xml:"Period,omitempty" json:"Period,omitempty"`
}

type PeriodType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Period"`

	Bias XsDuration `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bias,attr,omitempty" json:"Bias,omitempty"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfTransitionsGroupsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TransitionsGroups"`

	TransitionsGroup []*ArrayOfTransitionsType `xml:"TransitionsGroup,omitempty" json:"TransitionsGroup,omitempty"`
}

type ArrayOfTransitionsType struct {
	Transition []*Transition `xml:"Transition,omitempty" json:"Transition,omitempty"`

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type RecurrenceRangeBaseType struct {
	StartDate XsDate `xml:"StartDate,omitempty" json:"StartDate,omitempty"`
}

type NoEndRecurrenceRangeType struct {
	*RecurrenceRangeBaseType
}

type EndDateRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	EndDate XsDate `xml:"EndDate,omitempty" json:"EndDate,omitempty"`
}

type NumberedRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	NumberOfOccurrences XsInt `xml:"NumberOfOccurrences,omitempty" json:"NumberOfOccurrences,omitempty"`
}

type RecurrenceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence"`
}

type TaskRecurrenceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence"`
}

type OccurrenceInfoType struct {
	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`

	OriginalStart XsDateTime `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty"`
}

type NonEmptyArrayOfOccurrenceInfoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedOccurrences"`

	Occurrence []*OccurrenceInfoType `xml:"Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type DeletedOccurrenceInfoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrence"`

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`
}

type NonEmptyArrayOfDeletedOccurrencesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrences"`

	DeletedOccurrence []*DeletedOccurrenceInfoType `xml:"DeletedOccurrence,omitempty" json:"DeletedOccurrence,omitempty"`
}

type CalendarItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem"`

	*ItemType

	UID XsString `xml:"UID,omitempty" json:"UID,omitempty"`

	RecurrenceId XsDateTime `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp XsDateTime `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`

	OriginalStart XsDateTime `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent XsBoolean `xml:"IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	When XsString `xml:"When,omitempty" json:"When,omitempty"`

	IsMeeting XsBoolean `xml:"IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled XsBoolean `xml:"IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring XsBoolean `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent XsBoolean `xml:"MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	IsResponseRequested XsBoolean `xml:"IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"Resources,omitempty" json:"Resources,omitempty"`

	InboxReminders *ArrayOfInboxReminderType `xml:"InboxReminders,omitempty" json:"InboxReminders,omitempty"`

	ConflictingMeetingCount XsInt `xml:"ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount XsInt `xml:"AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration XsString `xml:"Duration,omitempty" json:"Duration,omitempty"`

	TimeZone XsString `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime XsDateTime `xml:"AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber XsInt `xml:"AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState XsInt `xml:"AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType XsInt `xml:"ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal XsBoolean `xml:"AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting XsBoolean `xml:"IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl XsString `xml:"MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl XsString `xml:"NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	StartWallClock XsDateTime `xml:"StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock XsDateTime `xml:"EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId XsString `xml:"StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId XsString `xml:"EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	JoinOnlineMeetingUrl XsString `xml:"JoinOnlineMeetingUrl,omitempty" json:"JoinOnlineMeetingUrl,omitempty"`

	OnlineMeetingSettings *OnlineMeetingSettingsType `xml:"OnlineMeetingSettings,omitempty" json:"OnlineMeetingSettings,omitempty"`

	IsOrganizer XsBoolean `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	DoNotForwardMeeting XsBoolean `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage"`

	*MessageType

	AssociatedCalendarItemId *ItemIdType `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`

	IsDelegated XsBoolean `xml:"IsDelegated,omitempty" json:"IsDelegated,omitempty"`

	IsOutOfDate XsBoolean `xml:"IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty"`

	HasBeenProcessed XsBoolean `xml:"HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty"`

	ResponseType *ResponseTypeType `xml:"ResponseType,omitempty" json:"ResponseType,omitempty"`

	UID XsString `xml:"UID,omitempty" json:"UID,omitempty"`

	RecurrenceId XsDateTime `xml:"RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp XsDateTime `xml:"DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	IsOrganizer XsBoolean `xml:"IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`
}

type ChangeHighlightsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeHighlights"`

	HasLocationChanged XsBoolean `xml:"HasLocationChanged,omitempty" json:"HasLocationChanged,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	HasStartTimeChanged XsBoolean `xml:"HasStartTimeChanged,omitempty" json:"HasStartTimeChanged,omitempty"`

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	HasEndTimeChanged XsBoolean `xml:"HasEndTimeChanged,omitempty" json:"HasEndTimeChanged,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`
}

type MeetingRequestMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest"`

	*MeetingMessageType

	MeetingRequestType *MeetingRequestTypeType `xml:"MeetingRequestType,omitempty" json:"MeetingRequestType,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`

	OriginalStart XsDateTime `xml:"OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent XsBoolean `xml:"IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	When XsString `xml:"When,omitempty" json:"When,omitempty"`

	IsMeeting XsBoolean `xml:"IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled XsBoolean `xml:"IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring XsBoolean `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent XsBoolean `xml:"MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"Resources,omitempty" json:"Resources,omitempty"`

	ConflictingMeetingCount XsInt `xml:"ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount XsInt `xml:"AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration XsString `xml:"Duration,omitempty" json:"Duration,omitempty"`

	TimeZone XsString `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime XsDateTime `xml:"AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber XsInt `xml:"AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState XsInt `xml:"AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType XsInt `xml:"ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal XsBoolean `xml:"AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting XsBoolean `xml:"IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl XsString `xml:"MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl XsString `xml:"NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	ChangeHighlights *ChangeHighlightsType `xml:"ChangeHighlights,omitempty" json:"ChangeHighlights,omitempty"`

	StartWallClock XsDateTime `xml:"StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock XsDateTime `xml:"EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId XsString `xml:"StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId XsString `xml:"EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	DoNotForwardMeeting XsBoolean `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse"`

	*MeetingMessageType

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType XsString `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	ProposedStart XsDateTime `xml:"ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd XsDateTime `xml:"ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`
}

type MeetingCancellationMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation"`

	*MeetingMessageType

	Start XsDateTime `xml:"Start,omitempty" json:"Start,omitempty"`

	End XsDateTime `xml:"End,omitempty" json:"End,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType XsString `xml:"CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	DoNotForwardMeeting XsBoolean `xml:"DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type CompleteNameType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompleteName"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	FirstName XsString `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	MiddleName XsString `xml:"MiddleName,omitempty" json:"MiddleName,omitempty"`

	LastName XsString `xml:"LastName,omitempty" json:"LastName,omitempty"`

	Suffix XsString `xml:"Suffix,omitempty" json:"Suffix,omitempty"`

	Initials XsString `xml:"Initials,omitempty" json:"Initials,omitempty"`

	FullName XsString `xml:"FullName,omitempty" json:"FullName,omitempty"`

	Nickname XsString `xml:"Nickname,omitempty" json:"Nickname,omitempty"`

	YomiFirstName XsString `xml:"YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName XsString `xml:"YomiLastName,omitempty" json:"YomiLastName,omitempty"`
}

type ImAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry"`

	Value XsString `xml:",chardata" json:"-,"`

	Key *ImAddressKeyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Url"`

	Type *ContactUrlKeyType `xml:"Type,omitempty" json:"Type,omitempty"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Address XsString `xml:"Address,omitempty" json:"Address,omitempty"`
}

type AbchEmailAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Email"`

	Type *AbchEmailAddressTypeType `xml:"Type,omitempty" json:"Type,omitempty"`

	Address XsString `xml:"Address,omitempty" json:"Address,omitempty"`

	IsMessengerEnabled XsBoolean `xml:"IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Capabilities XsLong `xml:"Capabilities,omitempty" json:"Capabilities,omitempty"`
}

type EmailAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry"`

	Value XsString `xml:",chardata" json:"-,"`

	Key *EmailAddressKeyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,attr,omitempty" json:"Key,omitempty"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`

	RoutingType XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoutingType,attr,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxType,attr,omitempty" json:"MailboxType,omitempty"`
}

type PhoneNumberDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry"`

	Value XsString `xml:",chardata" json:"-,"`

	Key *PhoneNumberKeyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,attr,omitempty" json:"Key,omitempty"`
}

type PhysicalAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry"`

	Street XsString `xml:"Street,omitempty" json:"Street,omitempty"`

	City XsString `xml:"City,omitempty" json:"City,omitempty"`

	State XsString `xml:"State,omitempty" json:"State,omitempty"`

	CountryOrRegion XsString `xml:"CountryOrRegion,omitempty" json:"CountryOrRegion,omitempty"`

	PostalCode XsString `xml:"PostalCode,omitempty" json:"PostalCode,omitempty"`

	Key *PhysicalAddressKeyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls"`

	Url []*ContactUrlDictionaryEntryType `xml:"Url,omitempty" json:"Url,omitempty"`
}

type AbchEmailAddressDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AbchEmailAddresses"`

	Email []*AbchEmailAddressDictionaryEntryType `xml:"Email,omitempty" json:"Email,omitempty"`
}

type ImAddressDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddresses"`

	Entry []*ImAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty"`
}

type EmailAddressDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses"`

	Entry []*EmailAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty"`
}

type PhoneNumberDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers"`

	Entry []*PhoneNumberDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty"`
}

type PhysicalAddressDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhysicalAddresses"`

	Entry []*PhysicalAddressDictionaryEntryType `xml:"Entry,omitempty" json:"Entry,omitempty"`
}

type MembersListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Members"`

	Member []*MemberType `xml:"Member,omitempty" json:"Member,omitempty"`
}

type MemberType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Member"`

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *MemberStatusType `xml:"Status,omitempty" json:"Status,omitempty"`

	Key XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,attr,omitempty" json:"Key,omitempty"`
}

type RoleMemberItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember"`

	*ItemType

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	Type *RoleMemberTypeType `xml:"Type,omitempty" json:"Type,omitempty"`

	MemberId XsString `xml:"MemberId,omitempty" json:"MemberId,omitempty"`
}

type NetworkItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network"`

	*ItemType

	DomainId XsInt `xml:"DomainId,omitempty" json:"DomainId,omitempty"`

	DomainTag XsString `xml:"DomainTag,omitempty" json:"DomainTag,omitempty"`

	UserTileUrl XsString `xml:"UserTileUrl,omitempty" json:"UserTileUrl,omitempty"`

	ProfileUrl XsString `xml:"ProfileUrl,omitempty" json:"ProfileUrl,omitempty"`

	Settings XsInt `xml:"Settings,omitempty" json:"Settings,omitempty"`

	IsDefault XsBoolean `xml:"IsDefault,omitempty" json:"IsDefault,omitempty"`

	AutoLinkError XsString `xml:"AutoLinkError,omitempty" json:"AutoLinkError,omitempty"`

	AutoLinkSuccess XsString `xml:"AutoLinkSuccess,omitempty" json:"AutoLinkSuccess,omitempty"`

	UserEmail XsString `xml:"UserEmail,omitempty" json:"UserEmail,omitempty"`

	ClientPublishSecret XsString `xml:"ClientPublishSecret,omitempty" json:"ClientPublishSecret,omitempty"`

	ClientToken XsString `xml:"ClientToken,omitempty" json:"ClientToken,omitempty"`

	ClientToken2 XsString `xml:"ClientToken2,omitempty" json:"ClientToken2,omitempty"`

	ContactSyncError XsString `xml:"ContactSyncError,omitempty" json:"ContactSyncError,omitempty"`

	ContactSyncSuccess XsString `xml:"ContactSyncSuccess,omitempty" json:"ContactSyncSuccess,omitempty"`

	ErrorOffers XsInt `xml:"ErrorOffers,omitempty" json:"ErrorOffers,omitempty"`

	FirstAuthErrorDates XsString `xml:"FirstAuthErrorDates,omitempty" json:"FirstAuthErrorDates,omitempty"`

	LastVersionSaved XsInt `xml:"LastVersionSaved,omitempty" json:"LastVersionSaved,omitempty"`

	LastWelcomeContact XsString `xml:"LastWelcomeContact,omitempty" json:"LastWelcomeContact,omitempty"`

	Offers XsInt `xml:"Offers,omitempty" json:"Offers,omitempty"`

	PsaLastChanged XsDateTime `xml:"PsaLastChanged,omitempty" json:"PsaLastChanged,omitempty"`

	RefreshToken2 XsString `xml:"RefreshToken2,omitempty" json:"RefreshToken2,omitempty"`

	RefreshTokenExpiry2 XsString `xml:"RefreshTokenExpiry2,omitempty" json:"RefreshTokenExpiry2,omitempty"`

	SessionHandle XsString `xml:"SessionHandle,omitempty" json:"SessionHandle,omitempty"`

	RejectedOffers XsInt `xml:"RejectedOffers,omitempty" json:"RejectedOffers,omitempty"`

	SyncEnabled XsBoolean `xml:"SyncEnabled,omitempty" json:"SyncEnabled,omitempty"`

	TokenRefreshLastAttempted XsDateTime `xml:"TokenRefreshLastAttempted,omitempty" json:"TokenRefreshLastAttempted,omitempty"`

	TokenRefreshLastCompleted XsDateTime `xml:"TokenRefreshLastCompleted,omitempty" json:"TokenRefreshLastCompleted,omitempty"`

	PsaState XsString `xml:"PsaState,omitempty" json:"PsaState,omitempty"`

	SourceEntryID XsBase64Binary `xml:"SourceEntryID,omitempty" json:"SourceEntryID,omitempty"`

	AccountName XsString `xml:"AccountName,omitempty" json:"AccountName,omitempty"`

	LastSync XsDateTime `xml:"LastSync,omitempty" json:"LastSync,omitempty"`
}

type AbchPersonItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person"`

	*ItemType

	AntiLinkInfo XsString `xml:"AntiLinkInfo,omitempty" json:"AntiLinkInfo,omitempty"`

	PersonId *GuidType `xml:"PersonId,omitempty" json:"PersonId,omitempty"`

	ContactHandles *ArrayOfAbchPersonContactHandlesType `xml:"ContactHandles,omitempty" json:"ContactHandles,omitempty"`

	ContactCategories *ArrayOfStringsType `xml:"ContactCategories,omitempty" json:"ContactCategories,omitempty"`

	RelevanceOrder1 XsString `xml:"RelevanceOrder1,omitempty" json:"RelevanceOrder1,omitempty"`

	RelevanceOrder2 XsString `xml:"RelevanceOrder2,omitempty" json:"RelevanceOrder2,omitempty"`

	TrustLevel XsInt `xml:"TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	FavoriteOrder XsInt `xml:"FavoriteOrder,omitempty" json:"FavoriteOrder,omitempty"`

	ExchangePersonIdGuid *GuidType `xml:"ExchangePersonIdGuid,omitempty" json:"ExchangePersonIdGuid,omitempty"`
}

type ArrayOfAbchPersonContactHandlesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactHandles"`

	ContactHandle []*AbchPersonContactHandle `xml:"ContactHandle,omitempty" json:"ContactHandle,omitempty"`
}

type AbchPersonContactHandle struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactHandle"`

	SourceId XsString `xml:"SourceId,omitempty" json:"SourceId,omitempty"`

	ObjectId XsString `xml:"ObjectId,omitempty" json:"ObjectId,omitempty"`

	AccountName XsString `xml:"AccountName,omitempty" json:"AccountName,omitempty"`
}

type ArrayOfGuidType struct {
	Guid []*GuidType `xml:"Guid,omitempty" json:"Guid,omitempty"`
}

type ContactItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact"`

	*ItemType

	FileAs XsString `xml:"FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsMapping *FileAsMappingType `xml:"FileAsMapping,omitempty" json:"FileAsMapping,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	GivenName XsString `xml:"GivenName,omitempty" json:"GivenName,omitempty"`

	Initials XsString `xml:"Initials,omitempty" json:"Initials,omitempty"`

	MiddleName XsString `xml:"MiddleName,omitempty" json:"MiddleName,omitempty"`

	Nickname XsString `xml:"Nickname,omitempty" json:"Nickname,omitempty"`

	CompleteName *CompleteNameType `xml:"CompleteName,omitempty" json:"CompleteName,omitempty"`

	CompanyName XsString `xml:"CompanyName,omitempty" json:"CompanyName,omitempty"`

	EmailAddresses *EmailAddressDictionaryType `xml:"EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	AbchEmailAddresses *AbchEmailAddressDictionaryType `xml:"AbchEmailAddresses,omitempty" json:"AbchEmailAddresses,omitempty"`

	PhysicalAddresses *PhysicalAddressDictionaryType `xml:"PhysicalAddresses,omitempty" json:"PhysicalAddresses,omitempty"`

	PhoneNumbers *PhoneNumberDictionaryType `xml:"PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	AssistantName XsString `xml:"AssistantName,omitempty" json:"AssistantName,omitempty"`

	Birthday XsDateTime `xml:"Birthday,omitempty" json:"Birthday,omitempty"`

	BusinessHomePage XsAnyURI `xml:"BusinessHomePage,omitempty" json:"BusinessHomePage,omitempty"`

	Children *ArrayOfStringsType `xml:"Children,omitempty" json:"Children,omitempty"`

	Companies *ArrayOfStringsType `xml:"Companies,omitempty" json:"Companies,omitempty"`

	ContactSource *ContactSourceType `xml:"ContactSource,omitempty" json:"ContactSource,omitempty"`

	Department XsString `xml:"Department,omitempty" json:"Department,omitempty"`

	Generation XsString `xml:"Generation,omitempty" json:"Generation,omitempty"`

	ImAddresses *ImAddressDictionaryType `xml:"ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	JobTitle XsString `xml:"JobTitle,omitempty" json:"JobTitle,omitempty"`

	Manager XsString `xml:"Manager,omitempty" json:"Manager,omitempty"`

	Mileage XsString `xml:"Mileage,omitempty" json:"Mileage,omitempty"`

	OfficeLocation XsString `xml:"OfficeLocation,omitempty" json:"OfficeLocation,omitempty"`

	PostalAddressIndex *PhysicalAddressIndexType `xml:"PostalAddressIndex,omitempty" json:"PostalAddressIndex,omitempty"`

	Profession XsString `xml:"Profession,omitempty" json:"Profession,omitempty"`

	SpouseName XsString `xml:"SpouseName,omitempty" json:"SpouseName,omitempty"`

	Surname XsString `xml:"Surname,omitempty" json:"Surname,omitempty"`

	WeddingAnniversary XsDateTime `xml:"WeddingAnniversary,omitempty" json:"WeddingAnniversary,omitempty"`

	HasPicture XsBoolean `xml:"HasPicture,omitempty" json:"HasPicture,omitempty"`

	PhoneticFullName XsString `xml:"PhoneticFullName,omitempty" json:"PhoneticFullName,omitempty"`

	PhoneticFirstName XsString `xml:"PhoneticFirstName,omitempty" json:"PhoneticFirstName,omitempty"`

	PhoneticLastName XsString `xml:"PhoneticLastName,omitempty" json:"PhoneticLastName,omitempty"`

	Alias XsString `xml:"Alias,omitempty" json:"Alias,omitempty"`

	Notes XsString `xml:"Notes,omitempty" json:"Notes,omitempty"`

	Photo XsBase64Binary `xml:"Photo,omitempty" json:"Photo,omitempty"`

	UserSMIMECertificate *ArrayOfBinaryType `xml:"UserSMIMECertificate,omitempty" json:"UserSMIMECertificate,omitempty"`

	MSExchangeCertificate *ArrayOfBinaryType `xml:"MSExchangeCertificate,omitempty" json:"MSExchangeCertificate,omitempty"`

	DirectoryId XsString `xml:"DirectoryId,omitempty" json:"DirectoryId,omitempty"`

	ManagerMailbox *SingleRecipientType `xml:"ManagerMailbox,omitempty" json:"ManagerMailbox,omitempty"`

	DirectReports *ArrayOfRecipientsType `xml:"DirectReports,omitempty" json:"DirectReports,omitempty"`

	AccountName XsString `xml:"AccountName,omitempty" json:"AccountName,omitempty"`

	IsAutoUpdateDisabled XsBoolean `xml:"IsAutoUpdateDisabled,omitempty" json:"IsAutoUpdateDisabled,omitempty"`

	IsMessengerEnabled XsBoolean `xml:"IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Comment XsString `xml:"Comment,omitempty" json:"Comment,omitempty"`

	ContactShortId XsInt `xml:"ContactShortId,omitempty" json:"ContactShortId,omitempty"`

	ContactType XsString `xml:"ContactType,omitempty" json:"ContactType,omitempty"`

	Gender XsString `xml:"Gender,omitempty" json:"Gender,omitempty"`

	IsHidden XsBoolean `xml:"IsHidden,omitempty" json:"IsHidden,omitempty"`

	ObjectId XsString `xml:"ObjectId,omitempty" json:"ObjectId,omitempty"`

	PassportId XsLong `xml:"PassportId,omitempty" json:"PassportId,omitempty"`

	IsPrivate XsBoolean `xml:"IsPrivate,omitempty" json:"IsPrivate,omitempty"`

	SourceId XsString `xml:"SourceId,omitempty" json:"SourceId,omitempty"`

	TrustLevel XsInt `xml:"TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	CreatedBy XsString `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	Urls *ContactUrlDictionaryType `xml:"Urls,omitempty" json:"Urls,omitempty"`

	Cid XsLong `xml:"Cid,omitempty" json:"Cid,omitempty"`

	SkypeAuthCertificate XsString `xml:"SkypeAuthCertificate,omitempty" json:"SkypeAuthCertificate,omitempty"`

	SkypeContext XsString `xml:"SkypeContext,omitempty" json:"SkypeContext,omitempty"`

	SkypeId XsString `xml:"SkypeId,omitempty" json:"SkypeId,omitempty"`

	SkypeRelationship XsString `xml:"SkypeRelationship,omitempty" json:"SkypeRelationship,omitempty"`

	YomiNickname XsString `xml:"YomiNickname,omitempty" json:"YomiNickname,omitempty"`

	XboxLiveTag XsString `xml:"XboxLiveTag,omitempty" json:"XboxLiveTag,omitempty"`

	InviteFree XsBoolean `xml:"InviteFree,omitempty" json:"InviteFree,omitempty"`

	HidePresenceAndProfile XsBoolean `xml:"HidePresenceAndProfile,omitempty" json:"HidePresenceAndProfile,omitempty"`

	IsPendingOutbound XsBoolean `xml:"IsPendingOutbound,omitempty" json:"IsPendingOutbound,omitempty"`

	SupportGroupFeeds XsBoolean `xml:"SupportGroupFeeds,omitempty" json:"SupportGroupFeeds,omitempty"`

	UserTileHash XsString `xml:"UserTileHash,omitempty" json:"UserTileHash,omitempty"`

	UnifiedInbox XsBoolean `xml:"UnifiedInbox,omitempty" json:"UnifiedInbox,omitempty"`

	Mris *ArrayOfStringsType `xml:"Mris,omitempty" json:"Mris,omitempty"`

	Wlid XsString `xml:"Wlid,omitempty" json:"Wlid,omitempty"`

	AbchContactId *GuidType `xml:"AbchContactId,omitempty" json:"AbchContactId,omitempty"`

	NotInBirthdayCalendar XsBoolean `xml:"NotInBirthdayCalendar,omitempty" json:"NotInBirthdayCalendar,omitempty"`

	ShellContactType XsString `xml:"ShellContactType,omitempty" json:"ShellContactType,omitempty"`

	ImMri XsString `xml:"ImMri,omitempty" json:"ImMri,omitempty"`

	PresenceTrustLevel XsInt `xml:"PresenceTrustLevel,omitempty" json:"PresenceTrustLevel,omitempty"`

	OtherMri XsString `xml:"OtherMri,omitempty" json:"OtherMri,omitempty"`

	ProfileLastChanged XsString `xml:"ProfileLastChanged,omitempty" json:"ProfileLastChanged,omitempty"`

	MobileIMEnabled XsBoolean `xml:"MobileIMEnabled,omitempty" json:"MobileIMEnabled,omitempty"`

	PartnerNetworkProfilePhotoUrl XsString `xml:"PartnerNetworkProfilePhotoUrl,omitempty" json:"PartnerNetworkProfilePhotoUrl,omitempty"`

	PartnerNetworkThumbnailPhotoUrl XsString `xml:"PartnerNetworkThumbnailPhotoUrl,omitempty" json:"PartnerNetworkThumbnailPhotoUrl,omitempty"`

	PersonId XsString `xml:"PersonId,omitempty" json:"PersonId,omitempty"`

	ConversationGuid *GuidType `xml:"ConversationGuid,omitempty" json:"ConversationGuid,omitempty"`
}

type ArrayOfBinaryType struct {
	Base64Binary []XsBase64Binary `xml:"Base64Binary,omitempty" json:"Base64Binary,omitempty"`
}

type DistributionListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList"`

	*ItemType

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	FileAs XsString `xml:"FileAs,omitempty" json:"FileAs,omitempty"`

	ContactSource *ContactSourceType `xml:"ContactSource,omitempty" json:"ContactSource,omitempty"`

	Members *MembersListType `xml:"Members,omitempty" json:"Members,omitempty"`
}

type SearchParametersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchParameters"`

	Restriction *RestrictionType `xml:"Restriction,omitempty" json:"Restriction,omitempty"`

	BaseFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"BaseFolderIds,omitempty" json:"BaseFolderIds,omitempty"`

	Traversal *SearchFolderTraversalType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type ConstantValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Constant"`

	Value XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,attr,omitempty" json:"Value,omitempty"`
}

type SearchExpressionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchExpression"`
}

type AggregateOnType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AggregateOn"`

	FieldURI *PathToUnindexedFieldType `xml:"FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Aggregate *AggregateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Aggregate,attr,omitempty" json:"Aggregate,omitempty"`
}

type BaseGroupByType struct {
	Order *SortDirectionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Order,attr,omitempty" json:"Order,omitempty"`
}

type GroupByType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupBy"`

	*BaseGroupByType

	AggregateOn *AggregateOnType `xml:"AggregateOn,omitempty" json:"AggregateOn,omitempty"`

	UseCollapsibleGroups XsBoolean `xml:"UseCollapsibleGroups,omitempty" json:"UseCollapsibleGroups,omitempty"`

	ItemsPerGroup XsNonNegativeInteger `xml:"ItemsPerGroup,omitempty" json:"ItemsPerGroup,omitempty"`

	MaxItemsPerGroup XsNonNegativeInteger `xml:"MaxItemsPerGroup,omitempty" json:"MaxItemsPerGroup,omitempty"`

	GroupsToExpand *ArrayOfGroupIdType `xml:"GroupsToExpand,omitempty" json:"GroupsToExpand,omitempty"`

	FieldURI *PathToUnindexedFieldType `xml:"FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type DistinguishedGroupByType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedGroupBy"`

	*BaseGroupByType

	StandardGroupBy *StandardGroupByType `xml:"StandardGroupBy,omitempty" json:"StandardGroupBy,omitempty"`
}

type ArrayOfGroupIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupsToExpand"`

	GroupId XsBase64Binary `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type GroupedItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupedItems"`

	GroupIndex XsString `xml:"GroupIndex,omitempty" json:"GroupIndex,omitempty"`

	Items *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty"`

	GroupSummary *GroupSummaryType `xml:"GroupSummary,omitempty" json:"GroupSummary,omitempty"`
}

type ArrayOfGroupedItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Groups"`

	GroupedItems []*GroupedItemsType `xml:"GroupedItems,omitempty" json:"GroupedItems,omitempty"`
}

type GroupSummaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSummary"`

	GroupCount XsInt `xml:"GroupCount,omitempty" json:"GroupCount,omitempty"`

	UnreadCount XsInt `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	InstanceKey XsBase64Binary `xml:"InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	GroupByValue XsString `xml:"GroupByValue,omitempty" json:"GroupByValue,omitempty"`
}

type ExistsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Exists"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type FieldURIOrConstantType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURIOrConstant"`

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"Constant,omitempty" json:"Constant,omitempty"`
}

type TwoOperandExpressionType struct {
	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	FieldURIOrConstant *FieldURIOrConstantType `xml:"FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty"`
}

type ExcludesValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bitmask"`

	Value *ExcludesAttributeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,attr,omitempty" json:"Value,omitempty"`
}

type ExcludesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Excludes"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Bitmask *ExcludesValueType `xml:"Bitmask,omitempty" json:"Bitmask,omitempty"`
}

type IsEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsEqualTo"`

	*TwoOperandExpressionType
}

type IsNotEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsNotEqualTo"`

	*TwoOperandExpressionType
}

type IsGreaterThanType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsGreaterThan"`

	*TwoOperandExpressionType
}

type IsGreaterThanOrEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsGreaterThanOrEqualTo"`

	*TwoOperandExpressionType
}

type IsLessThanType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsLessThan"`

	*TwoOperandExpressionType
}

type IsLessThanOrEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsLessThanOrEqualTo"`

	*TwoOperandExpressionType
}

type ContainsExpressionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contains"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"Constant,omitempty" json:"Constant,omitempty"`

	ContainmentMode *ContainmentModeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainmentMode,attr,omitempty" json:"ContainmentMode,omitempty"`

	ContainmentComparison *ContainmentComparisonType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainmentComparison,attr,omitempty" json:"ContainmentComparison,omitempty"`
}

type NotType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Not"`

	*SearchExpressionType

	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type MultipleOperandBooleanExpressionType struct {
	*SearchExpressionType

	SearchExpression []*SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type AndType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types And"`

	*MultipleOperandBooleanExpressionType
}

type OrType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Or"`

	*MultipleOperandBooleanExpressionType
}

type NearType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Near"`

	*MultipleOperandBooleanExpressionType

	Distance XsUnsignedInt `xml:"Distance,omitempty" json:"Distance,omitempty"`

	Ordered XsBoolean `xml:"Ordered,omitempty" json:"Ordered,omitempty"`
}

type RestrictionType struct {
	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type FieldOrderType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Order *SortDirectionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Order,attr,omitempty" json:"Order,omitempty"`
}

type NonEmptyArrayOfFieldOrdersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SortOrder"`

	FieldOrder []*FieldOrderType `xml:"FieldOrder,omitempty" json:"FieldOrder,omitempty"`
}

type NonEmptyArrayOfFolderNamesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderNames"`

	FolderName []XsString `xml:"FolderName,omitempty" json:"FolderName,omitempty"`
}

type BaseNotificationEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StatusEvent"`

	Watermark *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty"`
}

type BaseObjectChangedEventType struct {
	*BaseNotificationEventType

	TimeStamp XsDateTime `xml:"TimeStamp,omitempty" json:"TimeStamp,omitempty"`

	ParentFolderId *FolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type ModifiedEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedEvent"`

	*BaseObjectChangedEventType

	UnreadCount XsInt `xml:"UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type MovedCopiedEventType struct {
	*BaseObjectChangedEventType

	OldParentFolderId *FolderIdType `xml:"OldParentFolderId,omitempty" json:"OldParentFolderId,omitempty"`

	OldFolderId *FolderIdType `xml:"OldFolderId,omitempty" json:"OldFolderId,omitempty"`

	OldItemId *ItemIdType `xml:"OldItemId,omitempty" json:"OldItemId,omitempty"`
}

type NotificationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Notification"`

	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	PreviousWatermark *WatermarkType `xml:"PreviousWatermark,omitempty" json:"PreviousWatermark,omitempty"`

	MoreEvents XsBoolean `xml:"MoreEvents,omitempty" json:"MoreEvents,omitempty"`

	CopiedEvent *MovedCopiedEventType `xml:"CopiedEvent,omitempty" json:"CopiedEvent,omitempty"`

	CreatedEvent *BaseObjectChangedEventType `xml:"CreatedEvent,omitempty" json:"CreatedEvent,omitempty"`

	DeletedEvent *BaseObjectChangedEventType `xml:"DeletedEvent,omitempty" json:"DeletedEvent,omitempty"`

	ModifiedEvent *ModifiedEventType `xml:"ModifiedEvent,omitempty" json:"ModifiedEvent,omitempty"`

	MovedEvent *MovedCopiedEventType `xml:"MovedEvent,omitempty" json:"MovedEvent,omitempty"`

	NewMailEvent *BaseObjectChangedEventType `xml:"NewMailEvent,omitempty" json:"NewMailEvent,omitempty"`

	StatusEvent *BaseNotificationEventType `xml:"StatusEvent,omitempty" json:"StatusEvent,omitempty"`

	FreeBusyChangedEvent *BaseObjectChangedEventType `xml:"FreeBusyChangedEvent,omitempty" json:"FreeBusyChangedEvent,omitempty"`
}

type NonEmptyArrayOfNotificationEventTypesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventTypes"`

	EventType *NotificationEventTypeType `xml:"EventType,omitempty" json:"EventType,omitempty"`
}

type BaseSubscriptionRequestType struct {
	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"EventTypes,omitempty" json:"EventTypes,omitempty"`

	Watermark *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty"`

	SubscribeToAllFolders XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type PushSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PushSubscriptionRequest"`

	*BaseSubscriptionRequestType

	StatusFrequency *SubscriptionStatusFrequencyType `xml:"StatusFrequency,omitempty" json:"StatusFrequency,omitempty"`

	URL XsString `xml:"URL,omitempty" json:"URL,omitempty"`

	CallerData XsString `xml:"CallerData,omitempty" json:"CallerData,omitempty"`
}

type PullSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PullSubscriptionRequest"`

	*BaseSubscriptionRequestType

	Timeout *SubscriptionTimeoutType `xml:"Timeout,omitempty" json:"Timeout,omitempty"`
}

type StreamingSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StreamingSubscriptionRequest"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"EventTypes,omitempty" json:"EventTypes,omitempty"`

	SubscribeToAllFolders XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type NonEmptyArrayOfSubscriptionIdsType struct {
	SubscriptionId []*SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type NonEmptyArrayOfNotificationsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Notifications"`

	Notification []*NotificationType `xml:"Notification,omitempty" json:"Notification,omitempty"`
}

type SyncFolderItemsDeleteType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type SyncFolderItemsReadFlagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReadFlagChange"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	IsRead XsBoolean `xml:"IsRead,omitempty" json:"IsRead,omitempty"`
}

type SyncFolderItemsChangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Changes"`

	Create *SyncFolderItemsCreateOrUpdateType `xml:"Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderItemsCreateOrUpdateType `xml:"Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderItemsDeleteType `xml:"Delete,omitempty" json:"Delete,omitempty"`

	ReadFlagChange *SyncFolderItemsReadFlagType `xml:"ReadFlagChange,omitempty" json:"ReadFlagChange,omitempty"`
}

type SyncFolderHierarchyCreateOrUpdateType struct {
	Folder *FolderType `xml:"Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type SyncFolderHierarchyDeleteType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete"`

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`
}

type SyncFolderHierarchyChangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Changes"`

	Create *SyncFolderHierarchyCreateOrUpdateType `xml:"Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderHierarchyCreateOrUpdateType `xml:"Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderHierarchyDeleteType `xml:"Delete,omitempty" json:"Delete,omitempty"`
}

type RequestTypeHeader struct {
	RequestType *AvailabilityProxyRequestType `xml:"RequestType,omitempty" json:"RequestType,omitempty"`
}

type CalendarEventDetails struct {
	ID XsString `xml:"ID,omitempty" json:"ID,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	IsMeeting XsBoolean `xml:"IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsRecurring XsBoolean `xml:"IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsException XsBoolean `xml:"IsException,omitempty" json:"IsException,omitempty"`

	IsReminderSet XsBoolean `xml:"IsReminderSet,omitempty" json:"IsReminderSet,omitempty"`

	IsPrivate XsBoolean `xml:"IsPrivate,omitempty" json:"IsPrivate,omitempty"`
}

type CalendarEvent struct {
	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	BusyType *LegacyFreeBusyType `xml:"BusyType,omitempty" json:"BusyType,omitempty"`

	CalendarEventDetails *CalendarEventDetails `xml:"CalendarEventDetails,omitempty" json:"CalendarEventDetails,omitempty"`
}

type ArrayOfCalendarEvent struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarEventArray"`

	CalendarEvent []*CalendarEvent `xml:"CalendarEvent,omitempty" json:"CalendarEvent,omitempty"`
}

type Duration struct {
	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`
}

type EmailAddress struct {
	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Address XsString `xml:"Address,omitempty" json:"Address,omitempty"`

	RoutingType XsString `xml:"RoutingType,omitempty" json:"RoutingType,omitempty"`
}

type FreeBusyViewOptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FreeBusyViewOptions"`

	TimeWindow *Duration `xml:"TimeWindow,omitempty" json:"TimeWindow,omitempty"`

	MergedFreeBusyIntervalInMinutes XsInt `xml:"MergedFreeBusyIntervalInMinutes,omitempty" json:"MergedFreeBusyIntervalInMinutes,omitempty"`

	RequestedView *FreeBusyViewType `xml:"RequestedView,omitempty" json:"RequestedView,omitempty"`
}

type WorkingPeriod struct {
	DayOfWeek *DaysOfWeekType `xml:"DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	StartTimeInMinutes XsInt `xml:"StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes XsInt `xml:"EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type ArrayOfWorkingPeriod struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkingPeriodArray"`

	WorkingPeriod []*WorkingPeriod `xml:"WorkingPeriod,omitempty" json:"WorkingPeriod,omitempty"`
}

type SerializableTimeZoneTime struct {
	Bias XsInt `xml:"Bias,omitempty" json:"Bias,omitempty"`

	Time XsString `xml:"Time,omitempty" json:"Time,omitempty"`

	DayOrder XsShort `xml:"DayOrder,omitempty" json:"DayOrder,omitempty"`

	Month XsShort `xml:"Month,omitempty" json:"Month,omitempty"`

	DayOfWeek *DayOfWeekType `xml:"DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Year XsString `xml:"Year,omitempty" json:"Year,omitempty"`
}

type SerializableTimeZone struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZone"`

	Bias XsInt `xml:"Bias,omitempty" json:"Bias,omitempty"`

	StandardTime *SerializableTimeZoneTime `xml:"StandardTime,omitempty" json:"StandardTime,omitempty"`

	DaylightTime *SerializableTimeZoneTime `xml:"DaylightTime,omitempty" json:"DaylightTime,omitempty"`
}

type WorkingHours struct {
	TimeZone *SerializableTimeZone `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	WorkingPeriodArray *ArrayOfWorkingPeriod `xml:"WorkingPeriodArray,omitempty" json:"WorkingPeriodArray,omitempty"`
}

type FreeBusyView struct {
	FreeBusyViewType *FreeBusyViewType `xml:"FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`

	MergedFreeBusy XsString `xml:"MergedFreeBusy,omitempty" json:"MergedFreeBusy,omitempty"`

	CalendarEventArray *ArrayOfCalendarEvent `xml:"CalendarEventArray,omitempty" json:"CalendarEventArray,omitempty"`

	WorkingHours *WorkingHours `xml:"WorkingHours,omitempty" json:"WorkingHours,omitempty"`
}

type MailboxData struct {
	Email *EmailAddress `xml:"Email,omitempty" json:"Email,omitempty"`

	AttendeeType *MeetingAttendeeType `xml:"AttendeeType,omitempty" json:"AttendeeType,omitempty"`

	ExcludeConflicts XsBoolean `xml:"ExcludeConflicts,omitempty" json:"ExcludeConflicts,omitempty"`
}

type ArrayOfMailboxData struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxDataArray"`

	MailboxData []*MailboxData `xml:"MailboxData,omitempty" json:"MailboxData,omitempty"`
}

type SuggestionsViewOptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionsViewOptions"`

	GoodThreshold XsInt `xml:"GoodThreshold,omitempty" json:"GoodThreshold,omitempty"`

	MaximumResultsByDay XsInt `xml:"MaximumResultsByDay,omitempty" json:"MaximumResultsByDay,omitempty"`

	MaximumNonWorkHourResultsByDay XsInt `xml:"MaximumNonWorkHourResultsByDay,omitempty" json:"MaximumNonWorkHourResultsByDay,omitempty"`

	MeetingDurationInMinutes XsInt `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	MinimumSuggestionQuality *SuggestionQuality `xml:"MinimumSuggestionQuality,omitempty" json:"MinimumSuggestionQuality,omitempty"`

	DetailedSuggestionsWindow *Duration `xml:"DetailedSuggestionsWindow,omitempty" json:"DetailedSuggestionsWindow,omitempty"`

	CurrentMeetingTime XsDateTime `xml:"CurrentMeetingTime,omitempty" json:"CurrentMeetingTime,omitempty"`

	GlobalObjectId XsString `xml:"GlobalObjectId,omitempty" json:"GlobalObjectId,omitempty"`
}

type ArrayOfAttendeeConflictData struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeConflictDataArray"`

	UnknownAttendeeConflictData *UnknownAttendeeConflictData `xml:"UnknownAttendeeConflictData,omitempty" json:"UnknownAttendeeConflictData,omitempty"`

	IndividualAttendeeConflictData *IndividualAttendeeConflictData `xml:"IndividualAttendeeConflictData,omitempty" json:"IndividualAttendeeConflictData,omitempty"`

	TooBigGroupAttendeeConflictData *TooBigGroupAttendeeConflictData `xml:"TooBigGroupAttendeeConflictData,omitempty" json:"TooBigGroupAttendeeConflictData,omitempty"`

	GroupAttendeeConflictData *GroupAttendeeConflictData `xml:"GroupAttendeeConflictData,omitempty" json:"GroupAttendeeConflictData,omitempty"`
}

type AttendeeConflictData struct {
}

type UnknownAttendeeConflictData struct {
	*AttendeeConflictData
}

type TooBigGroupAttendeeConflictData struct {
	*AttendeeConflictData
}

type IndividualAttendeeConflictData struct {
	*AttendeeConflictData

	BusyType *LegacyFreeBusyType `xml:"BusyType,omitempty" json:"BusyType,omitempty"`
}

type GroupAttendeeConflictData struct {
	*AttendeeConflictData

	NumberOfMembers XsInt `xml:"NumberOfMembers,omitempty" json:"NumberOfMembers,omitempty"`

	NumberOfMembersAvailable XsInt `xml:"NumberOfMembersAvailable,omitempty" json:"NumberOfMembersAvailable,omitempty"`

	NumberOfMembersWithConflict XsInt `xml:"NumberOfMembersWithConflict,omitempty" json:"NumberOfMembersWithConflict,omitempty"`

	NumberOfMembersWithNoData XsInt `xml:"NumberOfMembersWithNoData,omitempty" json:"NumberOfMembersWithNoData,omitempty"`
}

type Suggestion struct {
	MeetingTime XsDateTime `xml:"MeetingTime,omitempty" json:"MeetingTime,omitempty"`

	IsWorkTime XsBoolean `xml:"IsWorkTime,omitempty" json:"IsWorkTime,omitempty"`

	SuggestionQuality *SuggestionQuality `xml:"SuggestionQuality,omitempty" json:"SuggestionQuality,omitempty"`

	AttendeeConflictDataArray *ArrayOfAttendeeConflictData `xml:"AttendeeConflictDataArray,omitempty" json:"AttendeeConflictDataArray,omitempty"`
}

type ArrayOfSuggestion struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionArray"`

	Suggestion []*Suggestion `xml:"Suggestion,omitempty" json:"Suggestion,omitempty"`
}

type SuggestionDayResult struct {
	Date XsDateTime `xml:"Date,omitempty" json:"Date,omitempty"`

	DayQuality *SuggestionQuality `xml:"DayQuality,omitempty" json:"DayQuality,omitempty"`

	SuggestionArray *ArrayOfSuggestion `xml:"SuggestionArray,omitempty" json:"SuggestionArray,omitempty"`
}

type ArrayOfSuggestionDayResult struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionDayResultArray"`

	SuggestionDayResult []*SuggestionDayResult `xml:"SuggestionDayResult,omitempty" json:"SuggestionDayResult,omitempty"`
}

type ReplyBody struct {
	Message XsString `xml:"Message,omitempty" json:"Message,omitempty"`

	EmptyString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ,attr,omitempty" json:",omitempty"`
}

type ArrayOfEventIDType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventsToDeleteIDs"`

	EventToDeleteID XsString `xml:"EventToDeleteID,omitempty" json:"EventToDeleteID,omitempty"`
}

type UserOofSettings struct {
	OofState *OofState `xml:"OofState,omitempty" json:"OofState,omitempty"`

	ExternalAudience *ExternalAudience `xml:"ExternalAudience,omitempty" json:"ExternalAudience,omitempty"`

	Duration *Duration `xml:"Duration,omitempty" json:"Duration,omitempty"`

	InternalReply *ReplyBody `xml:"InternalReply,omitempty" json:"InternalReply,omitempty"`

	ExternalReply *ReplyBody `xml:"ExternalReply,omitempty" json:"ExternalReply,omitempty"`

	DeclineMeetingReply *ReplyBody `xml:"DeclineMeetingReply,omitempty" json:"DeclineMeetingReply,omitempty"`

	DeclineEventsForScheduledOOF XsBoolean `xml:"DeclineEventsForScheduledOOF,omitempty" json:"DeclineEventsForScheduledOOF,omitempty"`

	DeclineAllEventsForScheduledOOF XsBoolean `xml:"DeclineAllEventsForScheduledOOF,omitempty" json:"DeclineAllEventsForScheduledOOF,omitempty"`

	CreateOOFEvent XsBoolean `xml:"CreateOOFEvent,omitempty" json:"CreateOOFEvent,omitempty"`

	OOFEventSubject XsString `xml:"OOFEventSubject,omitempty" json:"OOFEventSubject,omitempty"`

	AutoDeclineFutureRequestsWhenOOF XsBoolean `xml:"AutoDeclineFutureRequestsWhenOOF,omitempty" json:"AutoDeclineFutureRequestsWhenOOF,omitempty"`

	OOFEventID XsString `xml:"OOFEventID,omitempty" json:"OOFEventID,omitempty"`

	EventsToDeleteIDs *ArrayOfEventIDType `xml:"EventsToDeleteIDs,omitempty" json:"EventsToDeleteIDs,omitempty"`
}

type Value struct {
	Value XsString `xml:",chardata" json:"-,"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`
}

type ApprovalRequestDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalRequestData"`

	IsUndecidedApprovalRequest XsBoolean `xml:"IsUndecidedApprovalRequest,omitempty" json:"IsUndecidedApprovalRequest,omitempty"`

	ApprovalDecision XsInt `xml:"ApprovalDecision,omitempty" json:"ApprovalDecision,omitempty"`

	ApprovalDecisionMaker XsString `xml:"ApprovalDecisionMaker,omitempty" json:"ApprovalDecisionMaker,omitempty"`

	ApprovalDecisionTime XsDateTime `xml:"ApprovalDecisionTime,omitempty" json:"ApprovalDecisionTime,omitempty"`
}

type ReminderMessageDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderMessageData"`

	ReminderText XsString `xml:"ReminderText,omitempty" json:"ReminderText,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	StartTime XsDateTime `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	AssociatedCalendarItemId *ItemIdType `xml:"AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`
}

type MessageSafetyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageSafety"`

	MessageSafetyLevel XsInt `xml:"MessageSafetyLevel,omitempty" json:"MessageSafetyLevel,omitempty"`

	MessageSafetyReason XsInt `xml:"MessageSafetyReason,omitempty" json:"MessageSafetyReason,omitempty"`

	Info XsString `xml:"Info,omitempty" json:"Info,omitempty"`
}

type VotingOptionDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingOptionData"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	SendPrompt *SendPromptType `xml:"SendPrompt,omitempty" json:"SendPrompt,omitempty"`
}

type ArrayOfVotingOptionDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserOptions"`

	VotingOptionData []*VotingOptionDataType `xml:"VotingOptionData,omitempty" json:"VotingOptionData,omitempty"`
}

type VotingInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingInformation"`

	UserOptions *ArrayOfVotingOptionDataType `xml:"UserOptions,omitempty" json:"UserOptions,omitempty"`

	VotingResponse XsString `xml:"VotingResponse,omitempty" json:"VotingResponse,omitempty"`
}

type AlternateIdBaseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternateId"`

	Format *IdFormatType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Format,attr,omitempty" json:"Format,omitempty"`
}

type AlternateIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternateId"`

	*AlternateIdBaseType

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	Mailbox *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,attr,omitempty" json:"Mailbox,omitempty"`

	IsArchive XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type AlternatePublicFolderIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderId"`

	*AlternateIdBaseType

	FolderId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,attr,omitempty" json:"FolderId,omitempty"`
}

type AlternatePublicFolderItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderItemId"`

	*AlternatePublicFolderIdType

	ItemId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,attr,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfAlternateIdsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceIds"`

	AlternateId *AlternateIdType `xml:"AlternateId,omitempty" json:"AlternateId,omitempty"`

	AlternatePublicFolderId *AlternatePublicFolderIdType `xml:"AlternatePublicFolderId,omitempty" json:"AlternatePublicFolderId,omitempty"`

	AlternatePublicFolderItemId *AlternatePublicFolderItemIdType `xml:"AlternatePublicFolderItemId,omitempty" json:"AlternatePublicFolderItemId,omitempty"`
}

type UserIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserId"`

	SID XsString `xml:"SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress XsString `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	DistinguishedUser *DistinguishedUserType `xml:"DistinguishedUser,omitempty" json:"DistinguishedUser,omitempty"`

	ExternalUserIdentity XsString `xml:"ExternalUserIdentity,omitempty" json:"ExternalUserIdentity,omitempty"`
}

type ArrayOfPermissionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Permissions"`

	Permission *PermissionType `xml:"Permission,omitempty" json:"Permission,omitempty"`
}

type ArrayOfCalendarPermissionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermissions"`

	CalendarPermission *CalendarPermissionType `xml:"CalendarPermission,omitempty" json:"CalendarPermission,omitempty"`
}

type ArrayOfUnknownEntriesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnknownEntries"`

	UnknownEntry XsString `xml:"UnknownEntry,omitempty" json:"UnknownEntry,omitempty"`
}

type BasePermissionType struct {
	UserId *UserIdType `xml:"UserId,omitempty" json:"UserId,omitempty"`

	CanCreateItems XsBoolean `xml:"CanCreateItems,omitempty" json:"CanCreateItems,omitempty"`

	CanCreateSubFolders XsBoolean `xml:"CanCreateSubFolders,omitempty" json:"CanCreateSubFolders,omitempty"`

	IsFolderOwner XsBoolean `xml:"IsFolderOwner,omitempty" json:"IsFolderOwner,omitempty"`

	IsFolderVisible XsBoolean `xml:"IsFolderVisible,omitempty" json:"IsFolderVisible,omitempty"`

	IsFolderContact XsBoolean `xml:"IsFolderContact,omitempty" json:"IsFolderContact,omitempty"`

	EditItems *PermissionActionType `xml:"EditItems,omitempty" json:"EditItems,omitempty"`

	DeleteItems *PermissionActionType `xml:"DeleteItems,omitempty" json:"DeleteItems,omitempty"`
}

type PermissionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Permission"`

	*BasePermissionType

	ReadItems *PermissionReadAccessType `xml:"ReadItems,omitempty" json:"ReadItems,omitempty"`

	PermissionLevel *PermissionLevelType `xml:"PermissionLevel,omitempty" json:"PermissionLevel,omitempty"`
}

type CalendarPermissionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermission"`

	*BasePermissionType

	ReadItems *CalendarPermissionReadAccessType `xml:"ReadItems,omitempty" json:"ReadItems,omitempty"`

	CalendarPermissionLevel *CalendarPermissionLevelType `xml:"CalendarPermissionLevel,omitempty" json:"CalendarPermissionLevel,omitempty"`
}

type PermissionSetType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionSet"`

	Permissions *ArrayOfPermissionsType `xml:"Permissions,omitempty" json:"Permissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type CalendarPermissionSetType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionSet"`

	CalendarPermissions *ArrayOfCalendarPermissionsType `xml:"CalendarPermissions,omitempty" json:"CalendarPermissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type EffectiveRightsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EffectiveRights"`

	CreateAssociated XsBoolean `xml:"CreateAssociated,omitempty" json:"CreateAssociated,omitempty"`

	CreateContents XsBoolean `xml:"CreateContents,omitempty" json:"CreateContents,omitempty"`

	CreateHierarchy XsBoolean `xml:"CreateHierarchy,omitempty" json:"CreateHierarchy,omitempty"`

	Delete XsBoolean `xml:"Delete,omitempty" json:"Delete,omitempty"`

	Modify XsBoolean `xml:"Modify,omitempty" json:"Modify,omitempty"`

	Read XsBoolean `xml:"Read,omitempty" json:"Read,omitempty"`

	ViewPrivateItems XsBoolean `xml:"ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type ArrayOfDelegateUserType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegateUsers"`

	DelegateUser []*DelegateUserType `xml:"DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type ArrayOfUserIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserIds"`

	UserId []*UserIdType `xml:"UserId,omitempty" json:"UserId,omitempty"`
}

type DelegateUserType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegateUser"`

	UserId *UserIdType `xml:"UserId,omitempty" json:"UserId,omitempty"`

	DelegatePermissions *DelegatePermissionsType `xml:"DelegatePermissions,omitempty" json:"DelegatePermissions,omitempty"`

	ReceiveCopiesOfMeetingMessages XsBoolean `xml:"ReceiveCopiesOfMeetingMessages,omitempty" json:"ReceiveCopiesOfMeetingMessages,omitempty"`

	ViewPrivateItems XsBoolean `xml:"ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type DelegatePermissionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegatePermissions"`

	CalendarFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"CalendarFolderPermissionLevel,omitempty" json:"CalendarFolderPermissionLevel,omitempty"`

	TasksFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"TasksFolderPermissionLevel,omitempty" json:"TasksFolderPermissionLevel,omitempty"`

	InboxFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"InboxFolderPermissionLevel,omitempty" json:"InboxFolderPermissionLevel,omitempty"`

	ContactsFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"ContactsFolderPermissionLevel,omitempty" json:"ContactsFolderPermissionLevel,omitempty"`

	NotesFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"NotesFolderPermissionLevel,omitempty" json:"NotesFolderPermissionLevel,omitempty"`

	JournalFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"JournalFolderPermissionLevel,omitempty" json:"JournalFolderPermissionLevel,omitempty"`
}

type ConflictResultsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConflictResults"`

	Count XsInt `xml:"Count,omitempty" json:"Count,omitempty"`
}

type OutOfOfficeMailTip struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OutOfOffice"`

	ReplyBody *ReplyBody `xml:"ReplyBody,omitempty" json:"ReplyBody,omitempty"`

	Duration *Duration `xml:"Duration,omitempty" json:"Duration,omitempty"`
}

type SmtpDomainList struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalDomains"`

	Domain []*SmtpDomain `xml:"Domain,omitempty" json:"Domain,omitempty"`
}

type SmtpDomain struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Domain"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`

	IncludeSubdomains XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IncludeSubdomains,attr,omitempty" json:"IncludeSubdomains,omitempty"`
}

type MailTips struct {
	RecipientAddress *EmailAddressType `xml:"RecipientAddress,omitempty" json:"RecipientAddress,omitempty"`

	PendingMailTips *MailTipTypes `xml:"PendingMailTips,omitempty" json:"PendingMailTips,omitempty"`

	OutOfOffice *OutOfOfficeMailTip `xml:"OutOfOffice,omitempty" json:"OutOfOffice,omitempty"`

	MailboxFull XsBoolean `xml:"MailboxFull,omitempty" json:"MailboxFull,omitempty"`

	CustomMailTip XsString `xml:"CustomMailTip,omitempty" json:"CustomMailTip,omitempty"`

	TotalMemberCount XsInt `xml:"TotalMemberCount,omitempty" json:"TotalMemberCount,omitempty"`

	ExternalMemberCount XsInt `xml:"ExternalMemberCount,omitempty" json:"ExternalMemberCount,omitempty"`

	MaxMessageSize XsInt `xml:"MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	DeliveryRestricted XsBoolean `xml:"DeliveryRestricted,omitempty" json:"DeliveryRestricted,omitempty"`

	IsModerated XsBoolean `xml:"IsModerated,omitempty" json:"IsModerated,omitempty"`

	InvalidRecipient XsBoolean `xml:"InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`

	Scope XsInt `xml:"Scope,omitempty" json:"Scope,omitempty"`

	RecipientSuggestions *ArrayOfRecipientSuggestionsType `xml:"RecipientSuggestions,omitempty" json:"RecipientSuggestions,omitempty"`

	PreferAccessibleContent XsBoolean `xml:"PreferAccessibleContent,omitempty" json:"PreferAccessibleContent,omitempty"`
}

type ArrayOfRecipientSuggestionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientSuggestions"`

	RecipientSuggestion *RecipientSuggestionType `xml:"RecipientSuggestion,omitempty" json:"RecipientSuggestion,omitempty"`
}

type RecipientSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientSuggestion"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ServiceConfiguration struct {
}

type MailTipsServiceConfiguration struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailTipsConfiguration"`

	*ServiceConfiguration

	MailTipsEnabled XsBoolean `xml:"MailTipsEnabled,omitempty" json:"MailTipsEnabled,omitempty"`

	MaxRecipientsPerGetMailTipsRequest XsInt `xml:"MaxRecipientsPerGetMailTipsRequest,omitempty" json:"MaxRecipientsPerGetMailTipsRequest,omitempty"`

	MaxMessageSize XsInt `xml:"MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	LargeAudienceThreshold XsInt `xml:"LargeAudienceThreshold,omitempty" json:"LargeAudienceThreshold,omitempty"`

	ShowExternalRecipientCount XsBoolean `xml:"ShowExternalRecipientCount,omitempty" json:"ShowExternalRecipientCount,omitempty"`

	InternalDomains *SmtpDomainList `xml:"InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	PolicyTipsEnabled XsBoolean `xml:"PolicyTipsEnabled,omitempty" json:"PolicyTipsEnabled,omitempty"`

	LargeAudienceCap XsInt `xml:"LargeAudienceCap,omitempty" json:"LargeAudienceCap,omitempty"`
}

type UnifiedMessageServiceConfiguration struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnifiedMessagingConfiguration"`

	*ServiceConfiguration

	UmEnabled XsBoolean `xml:"UmEnabled,omitempty" json:"UmEnabled,omitempty"`

	PlayOnPhoneDialString XsString `xml:"PlayOnPhoneDialString,omitempty" json:"PlayOnPhoneDialString,omitempty"`

	PlayOnPhoneEnabled XsBoolean `xml:"PlayOnPhoneEnabled,omitempty" json:"PlayOnPhoneEnabled,omitempty"`
}

type SharePointURLsServiceConfiguration struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharePointURLsConfiguration"`

	*ServiceConfiguration

	InternalSPMySiteHostURL XsString `xml:"InternalSPMySiteHostURL,omitempty" json:"InternalSPMySiteHostURL,omitempty"`

	ExternalSPMySiteHostURL XsString `xml:"ExternalSPMySiteHostURL,omitempty" json:"ExternalSPMySiteHostURL,omitempty"`
}

type OfficeIntegrationConfiguration struct {
	*ServiceConfiguration

	OfficeSidebarURL XsString `xml:"OfficeSidebarURL,omitempty" json:"OfficeSidebarURL,omitempty"`
}

type ConfigurationRequestDetailsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConfigurationRequestDetails"`
}

type ArrayOfSmtpAddressType struct {
	SmtpAddress *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfEncryptedSharedFolderDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EncryptedSharedFolderDataCollection"`

	EncryptedSharedFolderData *EncryptedSharedFolderDataType `xml:"EncryptedSharedFolderData,omitempty" json:"EncryptedSharedFolderData,omitempty"`
}

type EncryptedSharedFolderDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EncryptedSharedFolderData"`

	Token *EncryptedDataContainerType `xml:"Token,omitempty" json:"Token,omitempty"`

	Data *EncryptedDataContainerType `xml:"Data,omitempty" json:"Data,omitempty"`
}

type EncryptedDataContainerType struct {
	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfInvalidRecipientsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InvalidRecipients"`

	InvalidRecipient *InvalidRecipientType `xml:"InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`
}

type InvalidRecipientType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InvalidRecipient"`

	SmtpAddress *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	ResponseCode *InvalidRecipientResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	MessageText XsString `xml:"MessageText,omitempty" json:"MessageText,omitempty"`
}

type AcceptSharingInvitationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptSharingInvitation"`

	*ReferenceItemResponseType
}

type PhoneCallIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneCallId"`

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type PhoneCallInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneCallInformation"`

	PhoneCallState *PhoneCallStateType `xml:"PhoneCallState,omitempty" json:"PhoneCallState,omitempty"`

	ConnectionFailureCause *ConnectionFailureCauseType `xml:"ConnectionFailureCause,omitempty" json:"ConnectionFailureCause,omitempty"`

	SIPResponseText XsString `xml:"SIPResponseText,omitempty" json:"SIPResponseText,omitempty"`

	SIPResponseCode XsInt `xml:"SIPResponseCode,omitempty" json:"SIPResponseCode,omitempty"`
}

type UserConfigurationNameType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserConfigurationName"`

	*TargetFolderIdType

	Name *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`
}

type UserConfigurationDictionaryObjectType struct {
	Type *UserConfigurationDictionaryObjectTypesType `xml:"Type,omitempty" json:"Type,omitempty"`

	Value []XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type UserConfigurationDictionaryEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DictionaryEntry"`

	DictionaryKey *UserConfigurationDictionaryObjectType `xml:"DictionaryKey,omitempty" json:"DictionaryKey,omitempty"`

	DictionaryValue *UserConfigurationDictionaryObjectType `xml:"DictionaryValue,omitempty" json:"DictionaryValue,omitempty"`
}

type UserConfigurationDictionaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Dictionary"`

	DictionaryEntry []*UserConfigurationDictionaryEntryType `xml:"DictionaryEntry,omitempty" json:"DictionaryEntry,omitempty"`
}

type UserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserConfiguration"`

	UserConfigurationName *UserConfigurationNameType `xml:"UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	Dictionary *UserConfigurationDictionaryType `xml:"Dictionary,omitempty" json:"Dictionary,omitempty"`

	XmlData XsBase64Binary `xml:"XmlData,omitempty" json:"XmlData,omitempty"`

	BinaryData XsBase64Binary `xml:"BinaryData,omitempty" json:"BinaryData,omitempty"`
}

type ProtectionRulesServiceConfiguration struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProtectionRulesConfiguration"`

	*ServiceConfiguration

	Rules *ArrayOfProtectionRulesType `xml:"Rules,omitempty" json:"Rules,omitempty"`

	InternalDomains *SmtpDomainList `xml:"InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	RefreshInterval XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefreshInterval,attr,omitempty" json:"RefreshInterval,omitempty"`
}

type ArrayOfProtectionRulesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rules"`

	Rule []*ProtectionRuleType `xml:"Rule,omitempty" json:"Rule,omitempty"`
}

type ProtectionRuleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule"`

	Condition *ProtectionRuleConditionType `xml:"Condition,omitempty" json:"Condition,omitempty"`

	Action *ProtectionRuleActionType `xml:"Action,omitempty" json:"Action,omitempty"`

	Name XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`

	UserOverridable XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserOverridable,attr,omitempty" json:"UserOverridable,omitempty"`

	Priority XsInt `xml:"http://schemas.microsoft.com/exchange/services/2006/types Priority,attr,omitempty" json:"Priority,omitempty"`
}

type ProtectionRuleConditionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Condition"`

	AllInternal *ProtectionRuleAllInternalType `xml:"AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleAndType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types And"`

	AllInternal *ProtectionRuleAllInternalType `xml:"AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleRecipientIsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientIs"`

	Value []*ProtectionRuleValueType `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleSenderDepartmentsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderDepartments"`

	Value []*ProtectionRuleValueType `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Action"`

	Argument []*ProtectionRuleArgumentType `xml:"Argument,omitempty" json:"Argument,omitempty"`

	Name *ProtectionRuleActionKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,attr,omitempty" json:"Name,omitempty"`
}

type ProtectionRuleArgumentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Argument"`

	Value XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,attr,omitempty" json:"Value,omitempty"`
}

type PolicyNudgeRulesServiceConfiguration struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PolicyNudgeRulesConfiguration"`

	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfFolderIdType struct {
	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`
}

type FindMessageTrackingSearchResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingSearchResult"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Sender *EmailAddressType `xml:"Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"Recipients,omitempty" json:"Recipients,omitempty"`

	SubmittedTime XsDateTime `xml:"SubmittedTime,omitempty" json:"SubmittedTime,omitempty"`

	MessageTrackingReportId *NonEmptyStringType `xml:"MessageTrackingReportId,omitempty" json:"MessageTrackingReportId,omitempty"`

	PreviousHopServer *NonEmptyStringType `xml:"PreviousHopServer,omitempty" json:"PreviousHopServer,omitempty"`

	FirstHopServer *NonEmptyStringType `xml:"FirstHopServer,omitempty" json:"FirstHopServer,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfFindMessageTrackingSearchResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingSearchResults"`

	MessageTrackingSearchResult *FindMessageTrackingSearchResultType `xml:"MessageTrackingSearchResult,omitempty" json:"MessageTrackingSearchResult,omitempty"`
}

type RecipientTrackingEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientTrackingEvent"`

	Date XsDateTime `xml:"Date,omitempty" json:"Date,omitempty"`

	Recipient *EmailAddressType `xml:"Recipient,omitempty" json:"Recipient,omitempty"`

	DeliveryStatus XsString `xml:"DeliveryStatus,omitempty" json:"DeliveryStatus,omitempty"`

	EventDescription XsString `xml:"EventDescription,omitempty" json:"EventDescription,omitempty"`

	EventData *ArrayOfStringsType `xml:"EventData,omitempty" json:"EventData,omitempty"`

	Server *NonEmptyStringType `xml:"Server,omitempty" json:"Server,omitempty"`

	InternalId XsNonNegativeInteger `xml:"InternalId,omitempty" json:"InternalId,omitempty"`

	BccRecipient XsBoolean `xml:"BccRecipient,omitempty" json:"BccRecipient,omitempty"`

	HiddenRecipient XsBoolean `xml:"HiddenRecipient,omitempty" json:"HiddenRecipient,omitempty"`

	UniquePathId *NonEmptyStringType `xml:"UniquePathId,omitempty" json:"UniquePathId,omitempty"`

	RootAddress *NonEmptyStringType `xml:"RootAddress,omitempty" json:"RootAddress,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type MessageTrackingReportType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingReport"`

	Sender *EmailAddressType `xml:"Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	SubmitTime XsDateTime `xml:"SubmitTime,omitempty" json:"SubmitTime,omitempty"`

	OriginalRecipients *ArrayOfEmailAddressesType `xml:"OriginalRecipients,omitempty" json:"OriginalRecipients,omitempty"`

	RecipientTrackingEvents *ArrayOfRecipientTrackingEventType `xml:"RecipientTrackingEvents,omitempty" json:"RecipientTrackingEvents,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type TrackingPropertyType struct {
	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfTrackingPropertiesType struct {
	TrackingPropertyType *TrackingPropertyType `xml:"TrackingPropertyType,omitempty" json:"TrackingPropertyType,omitempty"`
}

type ArrayOfArraysOfTrackingPropertiesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Errors"`

	ArrayOfTrackingPropertiesType *ArrayOfTrackingPropertiesType `xml:"ArrayOfTrackingPropertiesType,omitempty" json:"ArrayOfTrackingPropertiesType,omitempty"`
}

type ArrayOfRecipientTrackingEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientTrackingEvents"`

	RecipientTrackingEvent *RecipientTrackingEventType `xml:"RecipientTrackingEvent,omitempty" json:"RecipientTrackingEvent,omitempty"`
}

type RulePredicateSizeRangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types WithinSizeRange"`

	MinimumSize XsInt `xml:"MinimumSize,omitempty" json:"MinimumSize,omitempty"`

	MaximumSize XsInt `xml:"MaximumSize,omitempty" json:"MaximumSize,omitempty"`
}

type RulePredicateDateRangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types WithinDateRange"`

	StartDateTime XsDateTime `xml:"StartDateTime,omitempty" json:"StartDateTime,omitempty"`

	EndDateTime XsDateTime `xml:"EndDateTime,omitempty" json:"EndDateTime,omitempty"`
}

type RulePredicatesType struct {
	Categories *ArrayOfStringsType `xml:"Categories,omitempty" json:"Categories,omitempty"`

	ContainsBodyStrings *ArrayOfStringsType `xml:"ContainsBodyStrings,omitempty" json:"ContainsBodyStrings,omitempty"`

	ContainsHeaderStrings *ArrayOfStringsType `xml:"ContainsHeaderStrings,omitempty" json:"ContainsHeaderStrings,omitempty"`

	ContainsRecipientStrings *ArrayOfStringsType `xml:"ContainsRecipientStrings,omitempty" json:"ContainsRecipientStrings,omitempty"`

	ContainsSenderStrings *ArrayOfStringsType `xml:"ContainsSenderStrings,omitempty" json:"ContainsSenderStrings,omitempty"`

	ContainsSubjectOrBodyStrings *ArrayOfStringsType `xml:"ContainsSubjectOrBodyStrings,omitempty" json:"ContainsSubjectOrBodyStrings,omitempty"`

	ContainsSubjectStrings *ArrayOfStringsType `xml:"ContainsSubjectStrings,omitempty" json:"ContainsSubjectStrings,omitempty"`

	FlaggedForAction *FlaggedForActionType `xml:"FlaggedForAction,omitempty" json:"FlaggedForAction,omitempty"`

	FromAddresses *ArrayOfEmailAddressesType `xml:"FromAddresses,omitempty" json:"FromAddresses,omitempty"`

	FromConnectedAccounts *ArrayOfStringsType `xml:"FromConnectedAccounts,omitempty" json:"FromConnectedAccounts,omitempty"`

	HasAttachments XsBoolean `xml:"HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	Importance *ImportanceChoicesType `xml:"Importance,omitempty" json:"Importance,omitempty"`

	IsApprovalRequest XsBoolean `xml:"IsApprovalRequest,omitempty" json:"IsApprovalRequest,omitempty"`

	IsAutomaticForward XsBoolean `xml:"IsAutomaticForward,omitempty" json:"IsAutomaticForward,omitempty"`

	IsAutomaticReply XsBoolean `xml:"IsAutomaticReply,omitempty" json:"IsAutomaticReply,omitempty"`

	IsEncrypted XsBoolean `xml:"IsEncrypted,omitempty" json:"IsEncrypted,omitempty"`

	IsMeetingRequest XsBoolean `xml:"IsMeetingRequest,omitempty" json:"IsMeetingRequest,omitempty"`

	IsMeetingResponse XsBoolean `xml:"IsMeetingResponse,omitempty" json:"IsMeetingResponse,omitempty"`

	IsNDR XsBoolean `xml:"IsNDR,omitempty" json:"IsNDR,omitempty"`

	IsPermissionControlled XsBoolean `xml:"IsPermissionControlled,omitempty" json:"IsPermissionControlled,omitempty"`

	IsReadReceipt XsBoolean `xml:"IsReadReceipt,omitempty" json:"IsReadReceipt,omitempty"`

	IsSigned XsBoolean `xml:"IsSigned,omitempty" json:"IsSigned,omitempty"`

	IsVoicemail XsBoolean `xml:"IsVoicemail,omitempty" json:"IsVoicemail,omitempty"`

	ItemClasses *ArrayOfStringsType `xml:"ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	MessageClassifications *ArrayOfStringsType `xml:"MessageClassifications,omitempty" json:"MessageClassifications,omitempty"`

	NotSentToMe XsBoolean `xml:"NotSentToMe,omitempty" json:"NotSentToMe,omitempty"`

	SentCcMe XsBoolean `xml:"SentCcMe,omitempty" json:"SentCcMe,omitempty"`

	SentOnlyToMe XsBoolean `xml:"SentOnlyToMe,omitempty" json:"SentOnlyToMe,omitempty"`

	SentToAddresses *ArrayOfEmailAddressesType `xml:"SentToAddresses,omitempty" json:"SentToAddresses,omitempty"`

	SentToMe XsBoolean `xml:"SentToMe,omitempty" json:"SentToMe,omitempty"`

	SentToOrCcMe XsBoolean `xml:"SentToOrCcMe,omitempty" json:"SentToOrCcMe,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	WithinDateRange *RulePredicateDateRangeType `xml:"WithinDateRange,omitempty" json:"WithinDateRange,omitempty"`

	WithinSizeRange *RulePredicateSizeRangeType `xml:"WithinSizeRange,omitempty" json:"WithinSizeRange,omitempty"`
}

type RuleActionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Actions"`

	AssignCategories *ArrayOfStringsType `xml:"AssignCategories,omitempty" json:"AssignCategories,omitempty"`

	CopyToFolder *TargetFolderIdType `xml:"CopyToFolder,omitempty" json:"CopyToFolder,omitempty"`

	Delete XsBoolean `xml:"Delete,omitempty" json:"Delete,omitempty"`

	ForwardAsAttachmentToRecipients *ArrayOfEmailAddressesType `xml:"ForwardAsAttachmentToRecipients,omitempty" json:"ForwardAsAttachmentToRecipients,omitempty"`

	ForwardToRecipients *ArrayOfEmailAddressesType `xml:"ForwardToRecipients,omitempty" json:"ForwardToRecipients,omitempty"`

	MarkImportance *ImportanceChoicesType `xml:"MarkImportance,omitempty" json:"MarkImportance,omitempty"`

	MarkAsRead XsBoolean `xml:"MarkAsRead,omitempty" json:"MarkAsRead,omitempty"`

	MoveToFolder *TargetFolderIdType `xml:"MoveToFolder,omitempty" json:"MoveToFolder,omitempty"`

	PermanentDelete XsBoolean `xml:"PermanentDelete,omitempty" json:"PermanentDelete,omitempty"`

	RedirectToRecipients *ArrayOfEmailAddressesType `xml:"RedirectToRecipients,omitempty" json:"RedirectToRecipients,omitempty"`

	SendSMSAlertToRecipients *ArrayOfEmailAddressesType `xml:"SendSMSAlertToRecipients,omitempty" json:"SendSMSAlertToRecipients,omitempty"`

	ServerReplyWithMessage *ItemIdType `xml:"ServerReplyWithMessage,omitempty" json:"ServerReplyWithMessage,omitempty"`

	StopProcessingRules XsBoolean `xml:"StopProcessingRules,omitempty" json:"StopProcessingRules,omitempty"`
}

type RuleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule"`

	RuleId XsString `xml:"RuleId,omitempty" json:"RuleId,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	Priority XsInt `xml:"Priority,omitempty" json:"Priority,omitempty"`

	IsEnabled XsBoolean `xml:"IsEnabled,omitempty" json:"IsEnabled,omitempty"`

	IsNotSupported XsBoolean `xml:"IsNotSupported,omitempty" json:"IsNotSupported,omitempty"`

	IsInError XsBoolean `xml:"IsInError,omitempty" json:"IsInError,omitempty"`

	Conditions *RulePredicatesType `xml:"Conditions,omitempty" json:"Conditions,omitempty"`

	Exceptions *RulePredicatesType `xml:"Exceptions,omitempty" json:"Exceptions,omitempty"`

	Actions *RuleActionsType `xml:"Actions,omitempty" json:"Actions,omitempty"`
}

type ArrayOfRulesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxRules"`

	Rule []*RuleType `xml:"Rule,omitempty" json:"Rule,omitempty"`
}

type RuleValidationErrorType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Error"`

	FieldURI *RuleFieldURIType `xml:"FieldURI,omitempty" json:"FieldURI,omitempty"`

	ErrorCode *RuleValidationErrorCodeType `xml:"ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage XsString `xml:"ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	FieldValue XsString `xml:"FieldValue,omitempty" json:"FieldValue,omitempty"`
}

type ArrayOfRuleValidationErrorsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ValidationErrors"`

	Error []*RuleValidationErrorType `xml:"Error,omitempty" json:"Error,omitempty"`
}

type RuleOperationType struct {
}

type ArrayOfRuleOperationsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Operations"`

	CreateRuleOperation *CreateRuleOperationType `xml:"CreateRuleOperation,omitempty" json:"CreateRuleOperation,omitempty"`

	SetRuleOperation *SetRuleOperationType `xml:"SetRuleOperation,omitempty" json:"SetRuleOperation,omitempty"`

	DeleteRuleOperation *DeleteRuleOperationType `xml:"DeleteRuleOperation,omitempty" json:"DeleteRuleOperation,omitempty"`
}

type CreateRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"Rule,omitempty" json:"Rule,omitempty"`
}

type SetRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"Rule,omitempty" json:"Rule,omitempty"`
}

type DeleteRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteRuleOperation"`

	*RuleOperationType

	RuleId XsString `xml:"RuleId,omitempty" json:"RuleId,omitempty"`
}

type RuleOperationErrorType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleOperationError"`

	OperationIndex XsInt `xml:"OperationIndex,omitempty" json:"OperationIndex,omitempty"`

	ValidationErrors *ArrayOfRuleValidationErrorsType `xml:"ValidationErrors,omitempty" json:"ValidationErrors,omitempty"`
}

type ArrayOfRuleOperationErrorsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleOperationErrors"`

	RuleOperationError []*RuleOperationErrorType `xml:"RuleOperationError,omitempty" json:"RuleOperationError,omitempty"`
}

type ArrayOfSearchItemKindsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTypes"`

	SearchItemKind []*SearchItemKindType `xml:"SearchItemKind,omitempty" json:"SearchItemKind,omitempty"`
}

type UserMailboxType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserMailbox"`

	Id XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`

	IsArchive XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfUserMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailboxes"`

	UserMailbox []*UserMailboxType `xml:"UserMailbox,omitempty" json:"UserMailbox,omitempty"`
}

type SearchableMailboxType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchableMailbox"`

	Guid *GuidType `xml:"Guid,omitempty" json:"Guid,omitempty"`

	PrimarySmtpAddress XsString `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	IsExternalMailbox XsBoolean `xml:"IsExternalMailbox,omitempty" json:"IsExternalMailbox,omitempty"`

	ExternalEmailAddress XsString `xml:"ExternalEmailAddress,omitempty" json:"ExternalEmailAddress,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsMembershipGroup XsBoolean `xml:"IsMembershipGroup,omitempty" json:"IsMembershipGroup,omitempty"`

	ReferenceId XsString `xml:"ReferenceId,omitempty" json:"ReferenceId,omitempty"`
}

type ArrayOfSearchableMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchableMailboxes"`

	SearchableMailbox []*SearchableMailboxType `xml:"SearchableMailbox,omitempty" json:"SearchableMailbox,omitempty"`
}

type KeywordStatisticsSearchResultType struct {
	Keyword XsString `xml:"Keyword,omitempty" json:"Keyword,omitempty"`

	ItemHits XsInt `xml:"ItemHits,omitempty" json:"ItemHits,omitempty"`

	Size XsLong `xml:"Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfKeywordStatisticsSearchResultsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types KeywordStats"`

	KeywordStat []*KeywordStatisticsSearchResultType `xml:"KeywordStat,omitempty" json:"KeywordStat,omitempty"`
}

type MailboxStatisticsSearchResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStatisticsSearchResult"`

	UserMailbox *UserMailboxType `xml:"UserMailbox,omitempty" json:"UserMailbox,omitempty"`

	KeywordStatisticsSearchResult *KeywordStatisticsSearchResultType `xml:"KeywordStatisticsSearchResult,omitempty" json:"KeywordStatisticsSearchResult,omitempty"`
}

type ExtendedAttributeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedAttribute"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfExtendedAttributesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedAttributes"`

	ExtendedAttribute []*ExtendedAttributeType `xml:"ExtendedAttribute,omitempty" json:"ExtendedAttribute,omitempty"`
}

type MailboxSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxSearchScope"`

	Mailbox XsString `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	SearchScope *MailboxSearchLocationType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty"`

	ExtendedAttributes *ArrayOfExtendedAttributesType `xml:"ExtendedAttributes,omitempty" json:"ExtendedAttributes,omitempty"`
}

type NonEmptyArrayOfMailboxSearchScopesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxSearchScopes"`

	MailboxSearchScope []*MailboxSearchScopeType `xml:"MailboxSearchScope,omitempty" json:"MailboxSearchScope,omitempty"`
}

type MailboxQueryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxQuery"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	MailboxSearchScopes *NonEmptyArrayOfMailboxSearchScopesType `xml:"MailboxSearchScopes,omitempty" json:"MailboxSearchScopes,omitempty"`
}

type PreviewItemMailboxType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox"`

	MailboxId XsString `xml:"MailboxId,omitempty" json:"MailboxId,omitempty"`

	PrimarySmtpAddress XsString `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type NonEmptyArrayOfMailboxQueriesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchQueries"`

	MailboxQuery []*MailboxQueryType `xml:"MailboxQuery,omitempty" json:"MailboxQuery,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIsType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type PreviewItemResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreviewItemResponseShape"`

	BaseShape *PreviewItemBaseShapeType `xml:"BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfExtendedFieldURIsType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type SearchPreviewItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchPreviewItem"`

	Id *ItemIdType `xml:"Id,omitempty" json:"Id,omitempty"`

	Mailbox *PreviewItemMailboxType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	ParentId *ItemIdType `xml:"ParentId,omitempty" json:"ParentId,omitempty"`

	ItemClass *ItemClassType `xml:"ItemClass,omitempty" json:"ItemClass,omitempty"`

	UniqueHash XsString `xml:"UniqueHash,omitempty" json:"UniqueHash,omitempty"`

	SortValue XsString `xml:"SortValue,omitempty" json:"SortValue,omitempty"`

	OwaLink XsString `xml:"OwaLink,omitempty" json:"OwaLink,omitempty"`

	Sender XsString `xml:"Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfSmtpAddressType `xml:"ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfSmtpAddressType `xml:"CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfSmtpAddressType `xml:"BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	CreatedTime XsDateTime `xml:"CreatedTime,omitempty" json:"CreatedTime,omitempty"`

	ReceivedTime XsDateTime `xml:"ReceivedTime,omitempty" json:"ReceivedTime,omitempty"`

	SentTime XsDateTime `xml:"SentTime,omitempty" json:"SentTime,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Size XsLong `xml:"Size,omitempty" json:"Size,omitempty"`

	Preview XsString `xml:"Preview,omitempty" json:"Preview,omitempty"`

	Importance *ImportanceChoicesType `xml:"Importance,omitempty" json:"Importance,omitempty"`

	Read XsBoolean `xml:"Read,omitempty" json:"Read,omitempty"`

	HasAttachment XsBoolean `xml:"HasAttachment,omitempty" json:"HasAttachment,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type ArrayOfSearchPreviewItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items"`

	SearchPreviewItem []*SearchPreviewItemType `xml:"SearchPreviewItem,omitempty" json:"SearchPreviewItem,omitempty"`
}

type FailedSearchMailboxType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FailedMailbox"`

	Mailbox XsString `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	ErrorCode XsInt `xml:"ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage XsString `xml:"ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	IsArchive XsBoolean `xml:"IsArchive,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfFailedSearchMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FailedMailboxes"`

	FailedMailbox []*FailedSearchMailboxType `xml:"FailedMailbox,omitempty" json:"FailedMailbox,omitempty"`
}

type SearchMailboxesResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchMailboxesResult"`

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"ResultType,omitempty" json:"ResultType,omitempty"`

	ItemCount XsLong `xml:"ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size XsLong `xml:"Size,omitempty" json:"Size,omitempty"`

	PageItemCount XsInt `xml:"PageItemCount,omitempty" json:"PageItemCount,omitempty"`

	PageItemSize XsLong `xml:"PageItemSize,omitempty" json:"PageItemSize,omitempty"`

	KeywordStats *ArrayOfKeywordStatisticsSearchResultsType `xml:"KeywordStats,omitempty" json:"KeywordStats,omitempty"`

	Items *ArrayOfSearchPreviewItemsType `xml:"Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`

	Refiners *ArrayOfSearchRefinerItemsType `xml:"Refiners,omitempty" json:"Refiners,omitempty"`

	MailboxStats *ArrayOfMailboxStatisticsItemsType `xml:"MailboxStats,omitempty" json:"MailboxStats,omitempty"`
}

type SearchRefinerItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Refiner"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`

	Count XsLong `xml:"Count,omitempty" json:"Count,omitempty"`

	Token XsString `xml:"Token,omitempty" json:"Token,omitempty"`
}

type ArrayOfSearchRefinerItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Refiners"`

	Refiner []*SearchRefinerItemType `xml:"Refiner,omitempty" json:"Refiner,omitempty"`
}

type OneDriveItemType struct {
	*ItemType

	ResourceId XsString `xml:"ResourceId,omitempty" json:"ResourceId,omitempty"`
}

type FileItemType struct {
	*ItemType

	FileName XsString `xml:"FileName,omitempty" json:"FileName,omitempty"`

	FileExtension XsString `xml:"FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileSize XsLong `xml:"FileSize,omitempty" json:"FileSize,omitempty"`

	FileCreatedTime XsString `xml:"FileCreatedTime,omitempty" json:"FileCreatedTime,omitempty"`

	FileModifiedTime XsString `xml:"FileModifiedTime,omitempty" json:"FileModifiedTime,omitempty"`

	StorageProviderContext XsString `xml:"StorageProviderContext,omitempty" json:"StorageProviderContext,omitempty"`

	FileID XsString `xml:"FileID,omitempty" json:"FileID,omitempty"`

	ItemReferenceId XsString `xml:"ItemReferenceId,omitempty" json:"ItemReferenceId,omitempty"`

	ReferenceId XsString `xml:"ReferenceId,omitempty" json:"ReferenceId,omitempty"`

	Sender XsString `xml:"Sender,omitempty" json:"Sender,omitempty"`

	ItemReceivedTime XsString `xml:"ItemReceivedTime,omitempty" json:"ItemReceivedTime,omitempty"`

	ItemPath XsString `xml:"ItemPath,omitempty" json:"ItemPath,omitempty"`

	ItemSentTime XsString `xml:"ItemSentTime,omitempty" json:"ItemSentTime,omitempty"`

	FileContexts *ArrayOfStringsType `xml:"FileContexts,omitempty" json:"FileContexts,omitempty"`

	VisualizationContainerUrl XsString `xml:"VisualizationContainerUrl,omitempty" json:"VisualizationContainerUrl,omitempty"`

	VisualizationContainerTitle XsString `xml:"VisualizationContainerTitle,omitempty" json:"VisualizationContainerTitle,omitempty"`

	VisualizationAccessUrl XsString `xml:"VisualizationAccessUrl,omitempty" json:"VisualizationAccessUrl,omitempty"`

	ReferenceAttachmentProviderEndpoint XsString `xml:"ReferenceAttachmentProviderEndpoint,omitempty" json:"ReferenceAttachmentProviderEndpoint,omitempty"`

	ReferenceAttachmentProviderType XsString `xml:"ReferenceAttachmentProviderType,omitempty" json:"ReferenceAttachmentProviderType,omitempty"`

	ItemConversationId XsString `xml:"ItemConversationId,omitempty" json:"ItemConversationId,omitempty"`

	SharepointItemListId *GuidType `xml:"SharepointItemListId,omitempty" json:"SharepointItemListId,omitempty"`

	SharepointItemListItemId XsString `xml:"SharepointItemListItemId,omitempty" json:"SharepointItemListItemId,omitempty"`

	SharepointItemSiteId *GuidType `xml:"SharepointItemSiteId,omitempty" json:"SharepointItemSiteId,omitempty"`

	SharepointItemSitePath XsString `xml:"SharepointItemSitePath,omitempty" json:"SharepointItemSitePath,omitempty"`

	SharepointItemWebId *GuidType `xml:"SharepointItemWebId,omitempty" json:"SharepointItemWebId,omitempty"`

	AttachmentId XsString `xml:"AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type DocumentFileItemType struct {
	*FileItemType

	Author *ArrayOfStringsType `xml:"Author,omitempty" json:"Author,omitempty"`

	Title XsString `xml:"Title,omitempty" json:"Title,omitempty"`

	LastModifiedBy XsString `xml:"LastModifiedBy,omitempty" json:"LastModifiedBy,omitempty"`
}

type DelveItemType struct {
	*ItemType

	GraphNodeLogicalId XsString `xml:"GraphNodeLogicalId,omitempty" json:"GraphNodeLogicalId,omitempty"`
}

type MailboxStatisticsItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStat"`

	MailboxId XsString `xml:"MailboxId,omitempty" json:"MailboxId,omitempty"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	ItemCount XsLong `xml:"ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size XsLong `xml:"Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfMailboxStatisticsItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStats"`

	MailboxStat []*MailboxStatisticsItemType `xml:"MailboxStat,omitempty" json:"MailboxStat,omitempty"`
}

type MailboxHoldStatusType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldStatus"`

	Mailbox XsString `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *HoldStatusType `xml:"Status,omitempty" json:"Status,omitempty"`

	AdditionalInfo XsString `xml:"AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfMailboxHoldStatusType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldStatuses"`

	MailboxHoldStatus []*MailboxHoldStatusType `xml:"MailboxHoldStatus,omitempty" json:"MailboxHoldStatus,omitempty"`
}

type MailboxHoldResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldResult"`

	HoldId XsString `xml:"HoldId,omitempty" json:"HoldId,omitempty"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	MailboxHoldStatuses *ArrayOfMailboxHoldStatusType `xml:"MailboxHoldStatuses,omitempty" json:"MailboxHoldStatuses,omitempty"`
}

type NonEmptyArrayOfLegacyDNsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailboxes"`

	LegacyDN []XsString `xml:"LegacyDN,omitempty" json:"LegacyDN,omitempty"`
}

type NonIndexableItemStatisticType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemStatistic"`

	Mailbox XsString `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	ItemCount XsLong `xml:"ItemCount,omitempty" json:"ItemCount,omitempty"`

	ErrorMessage XsString `xml:"ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`
}

type ArrayOfNonIndexableItemStatisticsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemStatistics"`

	NonIndexableItemStatistic []*NonIndexableItemStatisticType `xml:"NonIndexableItemStatistic,omitempty" json:"NonIndexableItemStatistic,omitempty"`
}

type NonIndexableItemDetailType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemDetail"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	ErrorCode *ItemIndexErrorType `xml:"ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorDescription XsString `xml:"ErrorDescription,omitempty" json:"ErrorDescription,omitempty"`

	IsPartiallyIndexed XsBoolean `xml:"IsPartiallyIndexed,omitempty" json:"IsPartiallyIndexed,omitempty"`

	IsPermanentFailure XsBoolean `xml:"IsPermanentFailure,omitempty" json:"IsPermanentFailure,omitempty"`

	SortValue XsString `xml:"SortValue,omitempty" json:"SortValue,omitempty"`

	AttemptCount XsInt `xml:"AttemptCount,omitempty" json:"AttemptCount,omitempty"`

	LastAttemptTime XsDateTime `xml:"LastAttemptTime,omitempty" json:"LastAttemptTime,omitempty"`

	AdditionalInfo XsString `xml:"AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfNonIndexableItemDetailsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items"`

	NonIndexableItemDetail []*NonIndexableItemDetailType `xml:"NonIndexableItemDetail,omitempty" json:"NonIndexableItemDetail,omitempty"`
}

type NonIndexableItemDetailResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemDetailsResult"`

	Items *ArrayOfNonIndexableItemDetailsType `xml:"Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type DiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiscoverySearchConfiguration"`

	SearchId XsString `xml:"SearchId,omitempty" json:"SearchId,omitempty"`

	SearchQuery XsString `xml:"SearchQuery,omitempty" json:"SearchQuery,omitempty"`

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	InPlaceHoldIdentity XsString `xml:"InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ManagedByOrganization XsString `xml:"ManagedByOrganization,omitempty" json:"ManagedByOrganization,omitempty"`

	Language XsString `xml:"Language,omitempty" json:"Language,omitempty"`
}

type ArrayOfDiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiscoverySearchConfigurations"`

	DiscoverySearchConfiguration []*DiscoverySearchConfigurationType `xml:"DiscoverySearchConfiguration,omitempty" json:"DiscoverySearchConfiguration,omitempty"`
}

type RetentionTagType struct {
	Value *GuidType `xml:",chardata" json:"-,"`

	IsExplicit XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsExplicit,attr,omitempty" json:"IsExplicit,omitempty"`
}

type RetentionPolicyTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyTag"`

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	RetentionId *GuidType `xml:"RetentionId,omitempty" json:"RetentionId,omitempty"`

	RetentionPeriod XsInt `xml:"RetentionPeriod,omitempty" json:"RetentionPeriod,omitempty"`

	Type *ElcFolderType `xml:"Type,omitempty" json:"Type,omitempty"`

	RetentionAction *RetentionActionType `xml:"RetentionAction,omitempty" json:"RetentionAction,omitempty"`

	Description XsString `xml:"Description,omitempty" json:"Description,omitempty"`

	IsVisible XsBoolean `xml:"IsVisible,omitempty" json:"IsVisible,omitempty"`

	OptedInto XsBoolean `xml:"OptedInto,omitempty" json:"OptedInto,omitempty"`

	IsArchive XsBoolean `xml:"IsArchive,omitempty" json:"IsArchive,omitempty"`

	ParentLabelIdentity XsString `xml:"ParentLabelIdentity,omitempty" json:"ParentLabelIdentity,omitempty"`

	Priority XsInt `xml:"Priority,omitempty" json:"Priority,omitempty"`
}

type ArrayOfRetentionPolicyTagsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyTags"`

	RetentionPolicyTag []*RetentionPolicyTagType `xml:"RetentionPolicyTag,omitempty" json:"RetentionPolicyTag,omitempty"`
}

type ClientExtensionType struct {
	SpecificUsers *ArrayOfStringsType `xml:"SpecificUsers,omitempty" json:"SpecificUsers,omitempty"`

	Manifest XsBase64Binary `xml:"Manifest,omitempty" json:"Manifest,omitempty"`

	IsAvailable XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAvailable,attr,omitempty" json:"IsAvailable,omitempty"`

	IsMandatory XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMandatory,attr,omitempty" json:"IsMandatory,omitempty"`

	IsEnabledByDefault XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsEnabledByDefault,attr,omitempty" json:"IsEnabledByDefault,omitempty"`

	ProvidedTo *ClientExtensionProvidedToType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProvidedTo,attr,omitempty" json:"ProvidedTo,omitempty"`

	Type *ClientExtensionTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,attr,omitempty" json:"Type,omitempty"`

	Scope *ClientExtensionScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Scope,attr,omitempty" json:"Scope,omitempty"`

	MarketplaceAssetId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarketplaceAssetId,attr,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarketplaceContentMarket,attr,omitempty" json:"MarketplaceContentMarket,omitempty"`

	AppStatus XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppStatus,attr,omitempty" json:"AppStatus,omitempty"`

	Etoken XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Etoken,attr,omitempty" json:"Etoken,omitempty"`

	InstalledDateTime XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstalledDateTime,attr,omitempty" json:"InstalledDateTime,omitempty"`

	Version XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,attr,omitempty" json:"Version,omitempty"`

	ExtensionId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtensionId,attr,omitempty" json:"ExtensionId,omitempty"`
}

type ImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImGroup"`

	DisplayName *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupType *NonEmptyStringType `xml:"GroupType,omitempty" json:"GroupType,omitempty"`

	ExchangeStoreId *ItemIdType `xml:"ExchangeStoreId,omitempty" json:"ExchangeStoreId,omitempty"`

	MemberCorrelationKey *NonEmptyArrayOfItemIdsType `xml:"MemberCorrelationKey,omitempty" json:"MemberCorrelationKey,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	SmtpAddress XsString `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Groups"`

	ImGroup *ImGroupType `xml:"ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type ImItemListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImItemList"`

	Groups *ArrayOfImGroupType `xml:"Groups,omitempty" json:"Groups,omitempty"`

	Personas *ArrayOfPeopleType `xml:"Personas,omitempty" json:"Personas,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIs struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties"`

	ExtendedProperty *PathToExtendedFieldType `xml:"ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type NonEmptyStateDefinitionType struct {
	DeletedOccurrenceStateDefinition *DeletedOccurrenceStateDefinitionType `xml:"DeletedOccurrenceStateDefinition,omitempty" json:"DeletedOccurrenceStateDefinition,omitempty"`

	DeleteFromFolderStateDefinition *DeleteFromFolderStateDefinitionType `xml:"DeleteFromFolderStateDefinition,omitempty" json:"DeleteFromFolderStateDefinition,omitempty"`

	LocationBasedStateDefinition *LocationBasedStateDefinitionType `xml:"LocationBasedStateDefinition,omitempty" json:"LocationBasedStateDefinition,omitempty"`
}

type BaseCalendarItemStateDefinitionType struct {
}

type DeletedOccurrenceStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrenceStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OccurrenceDate XsDateTime `xml:"OccurrenceDate,omitempty" json:"OccurrenceDate,omitempty"`

	IsOccurrencePresent XsBoolean `xml:"IsOccurrencePresent,omitempty" json:"IsOccurrencePresent,omitempty"`
}

type DeleteFromFolderStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFromFolderStateDefinition"`

	*BaseCalendarItemStateDefinitionType
}

type LocationBasedStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationBasedStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OrganizerLocation XsString `xml:"OrganizerLocation,omitempty" json:"OrganizerLocation,omitempty"`

	AttendeeLocation XsString `xml:"AttendeeLocation,omitempty" json:"AttendeeLocation,omitempty"`
}

type MeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSpace"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	ChangeKey XsString `xml:"ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Type *MeetingSpaceTypeEnum `xml:"Type,omitempty" json:"Type,omitempty"`

	Version XsString `xml:"Version,omitempty" json:"Version,omitempty"`

	JoinUrl XsString `xml:"JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated XsString `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified XsString `xml:"DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	ExpiryTime XsString `xml:"ExpiryTime,omitempty" json:"ExpiryTime,omitempty"`

	Meadata XsString `xml:"Meadata,omitempty" json:"Meadata,omitempty"`

	Tag XsString `xml:"Tag,omitempty" json:"Tag,omitempty"`
}

type ParticipantActivity struct {
	Id *GuidType `xml:"Id,omitempty" json:"Id,omitempty"`

	CreatedBy XsString `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	StartTime XsString `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsString `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	ClientVersion XsString `xml:"ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	Role *ParticipantActivityRole `xml:"Role,omitempty" json:"Role,omitempty"`

	MediaType *ParticipantActivityMediaType `xml:"MediaType,omitempty" json:"MediaType,omitempty"`

	MediaDetails XsString `xml:"MediaDetails,omitempty" json:"MediaDetails,omitempty"`
}

type NonEmptyArrayOfParticipantActivities struct {
	ParticipantActivity []*ParticipantActivity `xml:"ParticipantActivity,omitempty" json:"ParticipantActivity,omitempty"`
}

type ContentActivity struct {
	Id *GuidType `xml:"Id,omitempty" json:"Id,omitempty"`

	SharedBy XsString `xml:"SharedBy,omitempty" json:"SharedBy,omitempty"`

	ContentLocation XsString `xml:"ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	StartTime XsString `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime XsString `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	Type *ContentActivityType `xml:"Type,omitempty" json:"Type,omitempty"`

	MediaType *ContentActivityMediaType `xml:"MediaType,omitempty" json:"MediaType,omitempty"`

	Acl *ContentActivityAcl `xml:"Acl,omitempty" json:"Acl,omitempty"`
}

type NonEmptyArrayOfContentActivities struct {
	ContentActivity []*ContentActivity `xml:"ContentActivity,omitempty" json:"ContentActivity,omitempty"`
}

type MeetingInstanceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingInstance"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	ChangeKey XsString `xml:"ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Version XsString `xml:"Version,omitempty" json:"Version,omitempty"`

	JoinUrl XsString `xml:"JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated XsString `xml:"DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified XsString `xml:"DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	Meadata XsString `xml:"Meadata,omitempty" json:"Meadata,omitempty"`

	Tag XsString `xml:"Tag,omitempty" json:"Tag,omitempty"`

	ParentGoid XsString `xml:"ParentGoid,omitempty" json:"ParentGoid,omitempty"`

	ParticipantActivities *NonEmptyArrayOfParticipantActivities `xml:"ParticipantActivities,omitempty" json:"ParticipantActivities,omitempty"`

	ContentActivities *NonEmptyArrayOfContentActivities `xml:"ContentActivities,omitempty" json:"ContentActivities,omitempty"`
}

type SearchFolderScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderScope"`

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	WellKnownFolder *DistinguishedFolderIdType `xml:"WellKnownFolder,omitempty" json:"WellKnownFolder,omitempty"`
}

type PrimaryMailboxSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimaryMailboxSearchScope"`

	FolderScope *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal XsBoolean `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type LargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LargeArchiveSearchScope"`

	ArchiveTypes *SearchScopeArchivesType `xml:"ArchiveTypes,omitempty" json:"ArchiveTypes,omitempty"`
}

type GroupSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSearchScope"`

	GroupTypes *SearchScopeGroupsType `xml:"GroupTypes,omitempty" json:"GroupTypes,omitempty"`
}

type SingleLargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SingleLargeArchiveSearchScope"`

	MailboxGuid *GuidType `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal XsBoolean `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type OneDriveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OneDriveSearchScope"`

	OneDriveView *OneDriveViewType `xml:"OneDriveView,omitempty" json:"OneDriveView,omitempty"`
}

type DelveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelveSearchScope"`

	DelveView *DelveViewType `xml:"DelveView,omitempty" json:"DelveView,omitempty"`
}

type CustomSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CustomSearchScope"`

	MailboxGuid *GuidType `xml:"MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal XsBoolean `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type ArrayOfSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchScope"`

	PrimaryMailboxSearchScope *PrimaryMailboxSearchScopeType `xml:"PrimaryMailboxSearchScope,omitempty" json:"PrimaryMailboxSearchScope,omitempty"`

	LargeArchiveSearchScope *LargeArchiveSearchScopeType `xml:"LargeArchiveSearchScope,omitempty" json:"LargeArchiveSearchScope,omitempty"`

	GroupSearchScope *GroupSearchScopeType `xml:"GroupSearchScope,omitempty" json:"GroupSearchScope,omitempty"`

	CustomSearchScope *CustomSearchScopeType `xml:"CustomSearchScope,omitempty" json:"CustomSearchScope,omitempty"`

	OneDriveSearchScope *OneDriveSearchScopeType `xml:"OneDriveSearchScope,omitempty" json:"OneDriveSearchScope,omitempty"`

	SingleLargeArchiveSearchScope *SingleLargeArchiveSearchScopeType `xml:"SingleLargeArchiveSearchScope,omitempty" json:"SingleLargeArchiveSearchScope,omitempty"`

	DelveSearchScope *DelveSearchScopeType `xml:"DelveSearchScope,omitempty" json:"DelveSearchScope,omitempty"`
}

type DynamicRefinerQueryType struct {
	RefinerQuery XsString `xml:"RefinerQuery,omitempty" json:"RefinerQuery,omitempty"`

	TDRefinerId XsInt `xml:"TDRefinerId,omitempty" json:"TDRefinerId,omitempty"`
}

type ExtendedKeywordDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedKeywordDefinition"`

	Keyword XsString `xml:"Keyword,omitempty" json:"Keyword,omitempty"`

	Properties *NonEmptyArrayOfExtendedFieldURIsType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type SuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Suggestion"`

	SuggestedQuery XsString `xml:"SuggestedQuery,omitempty" json:"SuggestedQuery,omitempty"`

	DisplayText XsString `xml:"DisplayText,omitempty" json:"DisplayText,omitempty"`

	SuggestionType *SuggestionKindType `xml:"SuggestionType,omitempty" json:"SuggestionType,omitempty"`

	Trigger XsString `xml:"Trigger,omitempty" json:"Trigger,omitempty"`

	TDSuggestionId XsInt `xml:"TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty"`

	IsDeletable XsBoolean `xml:"IsDeletable,omitempty" json:"IsDeletable,omitempty"`
}

type PeopleSuggestionType struct {
	*SuggestionType

	PrimarySmtpAddress XsString `xml:"PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	PersonType XsString `xml:"PersonType,omitempty" json:"PersonType,omitempty"`
}

type FileSuggestionType struct {
	*SuggestionType

	FileName XsString `xml:"FileName,omitempty" json:"FileName,omitempty"`

	FileExtension XsString `xml:"FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileReferenceId XsString `xml:"FileReferenceId,omitempty" json:"FileReferenceId,omitempty"`

	FileTitle XsString `xml:"FileTitle,omitempty" json:"FileTitle,omitempty"`

	ContainerTitle XsString `xml:"ContainerTitle,omitempty" json:"ContainerTitle,omitempty"`

	ContainerUrl XsString `xml:"ContainerUrl,omitempty" json:"ContainerUrl,omitempty"`
}

type SearchSuggestionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchSuggestions"`

	TDSuggestionsBatchId XsLong `xml:"TDSuggestionsBatchId,omitempty" json:"TDSuggestionsBatchId,omitempty"`

	TDSuggestionsInstanceId *GuidType `xml:"TDSuggestionsInstanceId,omitempty" json:"TDSuggestionsInstanceId,omitempty"`

	Suggestions struct {
		Suggestion []*SuggestionType `xml:"Suggestion,omitempty" json:"Suggestion,omitempty"`
	} `xml:"Suggestions,omitempty" json:"Suggestions,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type DeleteSearchSuggestionResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Response"`

	Success XsBoolean `xml:"Success,omitempty" json:"Success,omitempty"`

	StatusMessage XsString `xml:"StatusMessage,omitempty" json:"StatusMessage,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type SearchDiagnosticsStepType struct {
	StartTime XsString `xml:"StartTime,omitempty" json:"StartTime,omitempty"`

	StepTime XsLong `xml:"StepTime,omitempty" json:"StepTime,omitempty"`

	StepType XsString `xml:"StepType,omitempty" json:"StepType,omitempty"`

	AdditionalEntries struct {
		Entry []XsString `xml:"Entry,omitempty" json:"Entry,omitempty"`
	} `xml:"AdditionalEntries,omitempty" json:"AdditionalEntries,omitempty"`
}

type SearchRefinerType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchRefiner"`

	RefinerType *RefinerTypeType `xml:"RefinerType,omitempty" json:"RefinerType,omitempty"`

	Refiner *DynamicRefinerQueryType `xml:"Refiner,omitempty" json:"Refiner,omitempty"`

	ResultCount XsLong `xml:"ResultCount,omitempty" json:"ResultCount,omitempty"`
}

type FolderRefinerType struct {
	*SearchRefinerType

	FolderId *FolderIdType `xml:"FolderId,omitempty" json:"FolderId,omitempty"`
}

type PeopleRefinerType struct {
	*SearchRefinerType

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type MailboxRefinerType struct {
	*SearchRefinerType

	MailboxDisplayName XsString `xml:"MailboxDisplayName,omitempty" json:"MailboxDisplayName,omitempty"`
}

type AttachmentRefinerType struct {
	*SearchRefinerType

	HasAttachment XsBoolean `xml:"HasAttachment,omitempty" json:"HasAttachment,omitempty"`
}

type HashtagRefinerType struct {
	*SearchRefinerType

	DisplayName XsString `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type SearchDiagnosticsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiagnosticsData"`
}

type MailboxInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxInformation"`
}

type ExecuteSearchQueryIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types QueryId"`

	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,attr,omitempty" json:"Id,omitempty"`
}

type SearchResultsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchResults"`

	Items struct {
		Item []*ItemType `xml:"Item,omitempty" json:"Item,omitempty"`
	} `xml:"Items,omitempty" json:"Items,omitempty"`

	Conversations struct {
		Conversation []*ConversationType `xml:"Conversation,omitempty" json:"Conversation,omitempty"`
	} `xml:"Conversations,omitempty" json:"Conversations,omitempty"`

	People struct {
		Persona []*PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty"`
	} `xml:"People,omitempty" json:"People,omitempty"`

	MoreResultsAvailable XsBoolean `xml:"MoreResultsAvailable,omitempty" json:"MoreResultsAvailable,omitempty"`

	RefinerTelemetryBatchId XsInt `xml:"RefinerTelemetryBatchId,omitempty" json:"RefinerTelemetryBatchId,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*SearchRefinerType `xml:"SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `xml:"SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`

	SearchResultsCount XsInt `xml:"SearchResultsCount,omitempty" json:"SearchResultsCount,omitempty"`

	TotalResultsCount XsInt `xml:"TotalResultsCount,omitempty" json:"TotalResultsCount,omitempty"`

	SearchTerms *ArrayOfStringsType `xml:"SearchTerms,omitempty" json:"SearchTerms,omitempty"`

	QueryId *ExecuteSearchQueryIdType `xml:"QueryId,omitempty" json:"QueryId,omitempty"`

	MailboxesInformation struct {
		MailboxInformation []*MailboxInformationType `xml:"MailboxInformation,omitempty" json:"MailboxInformation,omitempty"`
	} `xml:"MailboxesInformation,omitempty" json:"MailboxesInformation,omitempty"`
}

type SearchResultItemIdType struct {
	*ItemIdType

	EntryId XsBase64Binary `xml:"EntryId,omitempty" json:"EntryId,omitempty"`

	OutlookItemId XsBase64Binary `xml:"OutlookItemId,omitempty" json:"OutlookItemId,omitempty"`
}

type SearchResultConversationIdType struct {
	*ItemIdType

	OutlookConversationId XsBase64Binary `xml:"OutlookConversationId,omitempty" json:"OutlookConversationId,omitempty"`
}

type ArrayOfWorkHours struct {
	WorkHours *WorkHoursType `xml:"WorkHours,omitempty" json:"WorkHours,omitempty"`
}

type WorkHoursType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkHours"`

	WorkDay *SystemDayOfWeek `xml:"WorkDay,omitempty" json:"WorkDay,omitempty"`

	TimeSlots *ArrayOfWorkTimeSlot `xml:"TimeSlots,omitempty" json:"TimeSlots,omitempty"`
}

type ArrayOfWorkTimeSlot struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeSlots"`

	TimeSlot []*WorkTimeSlot `xml:"TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type WorkTimeSlot struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeSlot"`

	StartTimeInMinutes XsInt `xml:"StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes XsInt `xml:"EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type AnalyzedQuery struct {
	QueryLanguage XsString `xml:"QueryLanguage,omitempty" json:"QueryLanguage,omitempty"`

	SearchRestrictions *RestrictionType `xml:"SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`
}

type ContextPropertyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContextProperty"`

	Key XsString `xml:"Key,omitempty" json:"Key,omitempty"`

	Value XsString `xml:"Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfContextProperty struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Context"`

	ContextProperty []*ContextPropertyType `xml:"ContextProperty,omitempty" json:"ContextProperty,omitempty"`
}

type ArrayOfEntityFeedbackEntry struct {
	EntityFeedbackEntry []*EntityFeedbackEntryType `xml:"EntityFeedbackEntry,omitempty" json:"EntityFeedbackEntry,omitempty"`
}

type EntityFeedbackEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityFeedbackEntry"`

	ClientEventTimeUtc XsDateTime `xml:"ClientEventTimeUtc,omitempty" json:"ClientEventTimeUtc,omitempty"`

	ClientEventTimeLocal XsDateTime `xml:"ClientEventTimeLocal,omitempty" json:"ClientEventTimeLocal,omitempty"`

	ClientSessionId *GuidType `xml:"ClientSessionId,omitempty" json:"ClientSessionId,omitempty"`

	ClientVersion XsString `xml:"ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	ClientId *ClientIdType `xml:"ClientId,omitempty" json:"ClientId,omitempty"`

	EntrySequenceNumber XsInt `xml:"EntrySequenceNumber,omitempty" json:"EntrySequenceNumber,omitempty"`

	TransactionId XsString `xml:"TransactionId,omitempty" json:"TransactionId,omitempty"`

	EventType XsString `xml:"EventType,omitempty" json:"EventType,omitempty"`

	TargetEntityList XsString `xml:"TargetEntityList,omitempty" json:"TargetEntityList,omitempty"`

	EntityAddSource *EntityFeedbackEntityAddSourceType `xml:"EntityAddSource,omitempty" json:"EntityAddSource,omitempty"`

	JsonPropertyBag XsString `xml:"JsonPropertyBag,omitempty" json:"JsonPropertyBag,omitempty"`
}

type ArrayOfInboxReminderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxReminders"`

	InboxReminder []*InboxReminderType `xml:"InboxReminder,omitempty" json:"InboxReminder,omitempty"`
}

type InboxReminderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxReminder"`

	Id *GuidType `xml:"Id,omitempty" json:"Id,omitempty"`

	ReminderOffset XsInt `xml:"ReminderOffset,omitempty" json:"ReminderOffset,omitempty"`

	Message XsString `xml:"Message,omitempty" json:"Message,omitempty"`

	IsOrganizerReminder XsBoolean `xml:"IsOrganizerReminder,omitempty" json:"IsOrganizerReminder,omitempty"`

	OccurrenceChange *EmailReminderChangeType `xml:"OccurrenceChange,omitempty" json:"OccurrenceChange,omitempty"`

	SendOption *EmailReminderSendOption `xml:"SendOption,omitempty" json:"SendOption,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	RichTextMessage XsString `xml:"RichTextMessage,omitempty" json:"RichTextMessage,omitempty"`
}

type InsightContextItem struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Context"`

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	Val XsString `xml:"Val,omitempty" json:"Val,omitempty"`
}

type ArrayOfInsightContextItem struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Context"`

	Context []*InsightContextItem `xml:"Context,omitempty" json:"Context,omitempty"`
}

type InsightItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Insight"`

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	InsightId *GuidType `xml:"InsightId,omitempty" json:"InsightId,omitempty"`

	Type XsString `xml:"Type,omitempty" json:"Type,omitempty"`

	StartTimeUtc XsDateTime `xml:"StartTimeUtc,omitempty" json:"StartTimeUtc,omitempty"`

	EndTimeUtc XsDateTime `xml:"EndTimeUtc,omitempty" json:"EndTimeUtc,omitempty"`

	Status *InsightStatusType `xml:"Status,omitempty" json:"Status,omitempty"`

	Version XsString `xml:"Version,omitempty" json:"Version,omitempty"`

	Context *ArrayOfInsightContextItem `xml:"Context,omitempty" json:"Context,omitempty"`

	Text XsString `xml:"Text,omitempty" json:"Text,omitempty"`

	ApplicationsIds *ArrayOfStringsType `xml:"ApplicationsIds,omitempty" json:"ApplicationsIds,omitempty"`

	SuggestedActions XsString `xml:"SuggestedActions,omitempty" json:"SuggestedActions,omitempty"`

	AppContexts *ArrayOfStringsType `xml:"AppContexts,omitempty" json:"AppContexts,omitempty"`
}

type ArrayOfInsightItemType struct {
	Insight []*InsightItemType `xml:"Insight,omitempty" json:"Insight,omitempty"`
}

type ResponseMessageInfoType struct {
	MessageText XsString `xml:"MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode XsString `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	ResponseClass *ResponseClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type BaseAvailabilityCalendarViewType struct {
	FreeBusyViewType *FreeBusyViewType `xml:"FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`
}

type ArrayOfPeopleQuerySource struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types QuerySources"`

	Source []XsString `xml:"Source,omitempty" json:"Source,omitempty"`
}

type CalendarActivityDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarActivityData"`

	ActivityAction XsString `xml:"ActivityAction,omitempty" json:"ActivityAction,omitempty"`

	ClientId XsString `xml:"ClientId,omitempty" json:"ClientId,omitempty"`

	CasRequestId *GuidType `xml:"CasRequestId,omitempty" json:"CasRequestId,omitempty"`

	IndexSelected XsInt `xml:"IndexSelected,omitempty" json:"IndexSelected,omitempty"`
}

type MentionActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionAction"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime XsString `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime XsString `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink XsString `xml:"DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application XsString `xml:"Application,omitempty" json:"Application,omitempty"`

	Mentioned *EmailAddressExtendedType `xml:"Mentioned,omitempty" json:"Mentioned,omitempty"`

	MentionText XsString `xml:"MentionText,omitempty" json:"MentionText,omitempty"`

	ClientReference XsString `xml:"ClientReference,omitempty" json:"ClientReference,omitempty"`
}

type NonEmptyArrayOfMentionActionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionsEx"`

	MentionAction []*MentionActionType `xml:"MentionAction,omitempty" json:"MentionAction,omitempty"`
}

type AppliedHashtagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtag"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime XsString `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime XsString `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink XsString `xml:"DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application XsString `xml:"Application,omitempty" json:"Application,omitempty"`

	Tag XsString `xml:"Tag,omitempty" json:"Tag,omitempty"`

	IsAutoTagged XsBoolean `xml:"IsAutoTagged,omitempty" json:"IsAutoTagged,omitempty"`

	IsInlined XsBoolean `xml:"IsInlined,omitempty" json:"IsInlined,omitempty"`
}

type AppliedHashtagsPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtagsPreview"`

	Hashtags *ArrayOfStringsType `xml:"Hashtags,omitempty" json:"Hashtags,omitempty"`
}

type NonEmptyArrayOfAppliedHashtagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtags"`

	AppliedHashtag []*AppliedHashtagType `xml:"AppliedHashtag,omitempty" json:"AppliedHashtag,omitempty"`
}

type LikeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Like"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime XsString `xml:"CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime XsString `xml:"ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink XsString `xml:"DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application XsString `xml:"Application,omitempty" json:"Application,omitempty"`
}

type LikesPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LikesPreview"`

	LikeCount XsInt `xml:"LikeCount,omitempty" json:"LikeCount,omitempty"`
}

type MentionsPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionsPreview"`

	IsMentioned XsBoolean `xml:"IsMentioned,omitempty" json:"IsMentioned,omitempty"`
}

type NonEmptyArrayOfLikeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Likes"`

	Like []*LikeType `xml:"Like,omitempty" json:"Like,omitempty"`
}

type AttendeeAvailability struct {
	EmailAddress XsString `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Availability *AvailabilityStatusType `xml:"Availability,omitempty" json:"Availability,omitempty"`
}

type ArrayOfMeetingLocation struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Locations"`

	MeetingLocation []*MeetingLocation `xml:"MeetingLocation,omitempty" json:"MeetingLocation,omitempty"`
}

type ArrayOfAttendeeAvailability struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeAvailabilities"`

	AttendeeAvailability []*AttendeeAvailability `xml:"AttendeeAvailability,omitempty" json:"AttendeeAvailability,omitempty"`
}

type MeetingTimeCandidate struct {
	MeetingTimeslot *TimeSlot `xml:"MeetingTimeslot,omitempty" json:"MeetingTimeslot,omitempty"`

	Confidence XsDouble `xml:"Confidence,omitempty" json:"Confidence,omitempty"`

	Score XsInt `xml:"Score,omitempty" json:"Score,omitempty"`

	OrganizerAvailability *AvailabilityStatusType `xml:"OrganizerAvailability,omitempty" json:"OrganizerAvailability,omitempty"`

	AttendeeAvailabilities *ArrayOfAttendeeAvailability `xml:"AttendeeAvailabilities,omitempty" json:"AttendeeAvailabilities,omitempty"`

	Locations *ArrayOfMeetingLocation `xml:"Locations,omitempty" json:"Locations,omitempty"`

	SuggestionHint XsString `xml:"SuggestionHint,omitempty" json:"SuggestionHint,omitempty"`
}

type ArrayOfMeetingTimeCandidate struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeCandidates"`

	MeetingTimeCandidate []*MeetingTimeCandidate `xml:"MeetingTimeCandidate,omitempty" json:"MeetingTimeCandidate,omitempty"`
}

type MeetingTimeCandidatesConstraintItem struct {
	Email XsString `xml:"Email,omitempty" json:"Email,omitempty"`
}

type AttendeeConstraintItem struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeItem"`

	*MeetingTimeCandidatesConstraintItem

	IsRequired XsBoolean `xml:"IsRequired,omitempty" json:"IsRequired,omitempty"`
}

type LocationConstraintItem struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationItem"`

	*MeetingTimeCandidatesConstraintItem

	Name XsString `xml:"Name,omitempty" json:"Name,omitempty"`

	ResolveAvailability XsBoolean `xml:"ResolveAvailability,omitempty" json:"ResolveAvailability,omitempty"`
}

type ArrayOfLocationConstraintItems struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationEntries"`

	LocationItem []*LocationConstraintItem `xml:"LocationItem,omitempty" json:"LocationItem,omitempty"`
}

type ArrayOfAttendeeConstraintItems struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeEntries"`

	AttendeeItem []*AttendeeConstraintItem `xml:"AttendeeItem,omitempty" json:"AttendeeItem,omitempty"`
}

type ArrayOfTimeSlot struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchWindows"`

	TimeSlot []*TimeSlot `xml:"TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type FindMeetingTimesAttendeeConstraints struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeConstraints"`

	AttendeeEntries *ArrayOfAttendeeConstraintItems `xml:"AttendeeEntries,omitempty" json:"AttendeeEntries,omitempty"`
}

type FindMeetingTimesLocationConstraints struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationConstraints"`

	LocationEntries *ArrayOfLocationConstraintItems `xml:"LocationEntries,omitempty" json:"LocationEntries,omitempty"`

	IsRequired XsBoolean `xml:"IsRequired,omitempty" json:"IsRequired,omitempty"`

	SuggestLocation XsBoolean `xml:"SuggestLocation,omitempty" json:"SuggestLocation,omitempty"`
}

type FindMeetingTimesSearchConstraints struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchConstraints"`

	SearchWindows *ArrayOfTimeSlot `xml:"SearchWindows,omitempty" json:"SearchWindows,omitempty"`

	MeetingDurationInMinutes XsInt `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindMeetingTimesConstraints struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Constraints"`

	MaxCandidates XsInt `xml:"MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	IsOrganizerOptional XsBoolean `xml:"IsOrganizerOptional,omitempty" json:"IsOrganizerOptional,omitempty"`

	ReturnSuggestionHints XsBoolean `xml:"ReturnSuggestionHints,omitempty" json:"ReturnSuggestionHints,omitempty"`

	AppName XsString `xml:"AppName,omitempty" json:"AppName,omitempty"`

	AppScenario XsString `xml:"AppScenario,omitempty" json:"AppScenario,omitempty"`

	MinimumAttendeePercentage XsDouble `xml:"MinimumAttendeePercentage,omitempty" json:"MinimumAttendeePercentage,omitempty"`
}

type OfficeClientType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Client"`

	Code *OfficeClientCodeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Code,attr,omitempty" json:"Code,omitempty"`

	Version *VersionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,attr,omitempty" json:"Version,omitempty"`
}

type ArrayOfAppsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Apps"`

	App []*AppType `xml:"App,omitempty" json:"App,omitempty"`

	Metadata *Metadata `xml:"Metadata,omitempty" json:"Metadata,omitempty"`
}

type AppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types App"`

	Metadata *AppMetadata `xml:"Metadata,omitempty" json:"Metadata,omitempty"`

	Manifest XsBase64Binary `xml:"Manifest,omitempty" json:"Manifest,omitempty"`
}

type Metadata struct {
	CustomApps XsString `xml:"CustomApps,omitempty" json:"CustomApps,omitempty"`

	GenericInfo XsString `xml:"GenericInfo,omitempty" json:"GenericInfo,omitempty"`
}

type AppMetadata struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Metadata"`

	EndNodeUrl XsString `xml:"EndNodeUrl,omitempty" json:"EndNodeUrl,omitempty"`

	AppStatus XsString `xml:"AppStatus,omitempty" json:"AppStatus,omitempty"`

	ActionUrl XsString `xml:"ActionUrl,omitempty" json:"ActionUrl,omitempty"`

	ProductId XsString `xml:"ProductId,omitempty" json:"ProductId,omitempty"`

	EnabledStatus XsBoolean `xml:"EnabledStatus,omitempty" json:"EnabledStatus,omitempty"`

	ConsentState XsString `xml:"ConsentState,omitempty" json:"ConsentState,omitempty"`

	ExtensionType XsString `xml:"ExtensionType,omitempty" json:"ExtensionType,omitempty"`

	MarketplaceAssetId XsString `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	LicenseStatus XsString `xml:"LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate XsDateTime `xml:"TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	InstalledBy XsString `xml:"InstalledBy,omitempty" json:"InstalledBy,omitempty"`

	IsMandatory XsBoolean `xml:"IsMandatory,omitempty" json:"IsMandatory,omitempty"`
}

//
// Represents the message keys that can be returned by response error messages
//

type ResponseCodeType XsString

const (
	ResponseCodeTypeNoError ResponseCodeType = "NoError"

	ResponseCodeTypeErrorAccessDenied ResponseCodeType = "ErrorAccessDenied"

	ResponseCodeTypeErrorAccessModeSpecified ResponseCodeType = "ErrorAccessModeSpecified"

	ResponseCodeTypeErrorAccountDisabled ResponseCodeType = "ErrorAccountDisabled"

	ResponseCodeTypeErrorAddDelegatesFailed ResponseCodeType = "ErrorAddDelegatesFailed"

	ResponseCodeTypeErrorAddressSpaceNotFound ResponseCodeType = "ErrorAddressSpaceNotFound"

	ResponseCodeTypeErrorADOperation ResponseCodeType = "ErrorADOperation"

	ResponseCodeTypeErrorADSessionFilter ResponseCodeType = "ErrorADSessionFilter"

	ResponseCodeTypeErrorADUnavailable ResponseCodeType = "ErrorADUnavailable"

	ResponseCodeTypeErrorServiceUnavailable ResponseCodeType = "ErrorServiceUnavailable"

	ResponseCodeTypeErrorAutoDiscoverFailed ResponseCodeType = "ErrorAutoDiscoverFailed"

	ResponseCodeTypeErrorAffectedTaskOccurrencesRequired ResponseCodeType = "ErrorAffectedTaskOccurrencesRequired"

	ResponseCodeTypeErrorAttachmentNestLevelLimitExceeded ResponseCodeType = "ErrorAttachmentNestLevelLimitExceeded"

	ResponseCodeTypeErrorAttachmentSizeLimitExceeded ResponseCodeType = "ErrorAttachmentSizeLimitExceeded"

	ResponseCodeTypeErrorArchiveFolderPathCreation ResponseCodeType = "ErrorArchiveFolderPathCreation"

	ResponseCodeTypeErrorArchiveMailboxNotEnabled ResponseCodeType = "ErrorArchiveMailboxNotEnabled"

	ResponseCodeTypeErrorArchiveMailboxServiceDiscoveryFailed ResponseCodeType = "ErrorArchiveMailboxServiceDiscoveryFailed"

	ResponseCodeTypeErrorAvailabilityConfigNotFound ResponseCodeType = "ErrorAvailabilityConfigNotFound"

	ResponseCodeTypeErrorBatchProcessingStopped ResponseCodeType = "ErrorBatchProcessingStopped"

	ResponseCodeTypeErrorCalendarCannotMoveOrCopyOccurrence ResponseCodeType = "ErrorCalendarCannotMoveOrCopyOccurrence"

	ResponseCodeTypeErrorCalendarCannotUpdateDeletedItem ResponseCodeType = "ErrorCalendarCannotUpdateDeletedItem"

	ResponseCodeTypeErrorCalendarCannotUseIdForOccurrenceId ResponseCodeType = "ErrorCalendarCannotUseIdForOccurrenceId"

	ResponseCodeTypeErrorCalendarCannotUseIdForRecurringMasterId ResponseCodeType = "ErrorCalendarCannotUseIdForRecurringMasterId"

	ResponseCodeTypeErrorCalendarDurationIsTooLong ResponseCodeType = "ErrorCalendarDurationIsTooLong"

	ResponseCodeTypeErrorCalendarEndDateIsEarlierThanStartDate ResponseCodeType = "ErrorCalendarEndDateIsEarlierThanStartDate"

	ResponseCodeTypeErrorCalendarFolderIsInvalidForCalendarView ResponseCodeType = "ErrorCalendarFolderIsInvalidForCalendarView"

	ResponseCodeTypeErrorCalendarInvalidAttributeValue ResponseCodeType = "ErrorCalendarInvalidAttributeValue"

	ResponseCodeTypeErrorCalendarInvalidDayForTimeChangePattern ResponseCodeType = "ErrorCalendarInvalidDayForTimeChangePattern"

	ResponseCodeTypeErrorCalendarInvalidDayForWeeklyRecurrence ResponseCodeType = "ErrorCalendarInvalidDayForWeeklyRecurrence"

	ResponseCodeTypeErrorCalendarInvalidPropertyState ResponseCodeType = "ErrorCalendarInvalidPropertyState"

	ResponseCodeTypeErrorCalendarInvalidPropertyValue ResponseCodeType = "ErrorCalendarInvalidPropertyValue"

	ResponseCodeTypeErrorCalendarInvalidRecurrence ResponseCodeType = "ErrorCalendarInvalidRecurrence"

	ResponseCodeTypeErrorCalendarInvalidTimeZone ResponseCodeType = "ErrorCalendarInvalidTimeZone"

	ResponseCodeTypeErrorCalendarIsCancelledForAccept ResponseCodeType = "ErrorCalendarIsCancelledForAccept"

	ResponseCodeTypeErrorCalendarIsCancelledForDecline ResponseCodeType = "ErrorCalendarIsCancelledForDecline"

	ResponseCodeTypeErrorCalendarIsCancelledForRemove ResponseCodeType = "ErrorCalendarIsCancelledForRemove"

	ResponseCodeTypeErrorCalendarIsCancelledForTentative ResponseCodeType = "ErrorCalendarIsCancelledForTentative"

	ResponseCodeTypeErrorCalendarIsDelegatedForAccept ResponseCodeType = "ErrorCalendarIsDelegatedForAccept"

	ResponseCodeTypeErrorCalendarIsDelegatedForDecline ResponseCodeType = "ErrorCalendarIsDelegatedForDecline"

	ResponseCodeTypeErrorCalendarIsDelegatedForRemove ResponseCodeType = "ErrorCalendarIsDelegatedForRemove"

	ResponseCodeTypeErrorCalendarIsDelegatedForTentative ResponseCodeType = "ErrorCalendarIsDelegatedForTentative"

	ResponseCodeTypeErrorCalendarIsNotOrganizer ResponseCodeType = "ErrorCalendarIsNotOrganizer"

	ResponseCodeTypeErrorCalendarIsOrganizerForAccept ResponseCodeType = "ErrorCalendarIsOrganizerForAccept"

	ResponseCodeTypeErrorCalendarIsOrganizerForDecline ResponseCodeType = "ErrorCalendarIsOrganizerForDecline"

	ResponseCodeTypeErrorCalendarIsOrganizerForRemove ResponseCodeType = "ErrorCalendarIsOrganizerForRemove"

	ResponseCodeTypeErrorCalendarIsOrganizerForTentative ResponseCodeType = "ErrorCalendarIsOrganizerForTentative"

	ResponseCodeTypeErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange ResponseCodeType = "ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange"

	ResponseCodeTypeErrorCalendarOccurrenceIsDeletedFromRecurrence ResponseCodeType = "ErrorCalendarOccurrenceIsDeletedFromRecurrence"

	ResponseCodeTypeErrorCalendarOutOfRange ResponseCodeType = "ErrorCalendarOutOfRange"

	ResponseCodeTypeErrorCalendarMeetingRequestIsOutOfDate ResponseCodeType = "ErrorCalendarMeetingRequestIsOutOfDate"

	ResponseCodeTypeErrorCalendarViewRangeTooBig ResponseCodeType = "ErrorCalendarViewRangeTooBig"

	ResponseCodeTypeErrorCallerIsInvalidADAccount ResponseCodeType = "ErrorCallerIsInvalidADAccount"

	ResponseCodeTypeErrorCannotAccessDeletedPublicFolder ResponseCodeType = "ErrorCannotAccessDeletedPublicFolder"

	ResponseCodeTypeErrorCannotArchiveCalendarContactTaskFolderException ResponseCodeType = "ErrorCannotArchiveCalendarContactTaskFolderException"

	ResponseCodeTypeErrorCannotArchiveItemsInPublicFolders ResponseCodeType = "ErrorCannotArchiveItemsInPublicFolders"

	ResponseCodeTypeErrorCannotArchiveItemsInArchiveMailbox ResponseCodeType = "ErrorCannotArchiveItemsInArchiveMailbox"

	ResponseCodeTypeErrorCannotCreateCalendarItemInNonCalendarFolder ResponseCodeType = "ErrorCannotCreateCalendarItemInNonCalendarFolder"

	ResponseCodeTypeErrorCannotCreateContactInNonContactFolder ResponseCodeType = "ErrorCannotCreateContactInNonContactFolder"

	ResponseCodeTypeErrorCannotCreatePostItemInNonMailFolder ResponseCodeType = "ErrorCannotCreatePostItemInNonMailFolder"

	ResponseCodeTypeErrorCannotCreateTaskInNonTaskFolder ResponseCodeType = "ErrorCannotCreateTaskInNonTaskFolder"

	ResponseCodeTypeErrorCannotDeleteObject ResponseCodeType = "ErrorCannotDeleteObject"

	ResponseCodeTypeErrorCannotDisableMandatoryExtension ResponseCodeType = "ErrorCannotDisableMandatoryExtension"

	ResponseCodeTypeErrorCannotFindUser ResponseCodeType = "ErrorCannotFindUser"

	ResponseCodeTypeErrorCannotGetSourceFolderPath ResponseCodeType = "ErrorCannotGetSourceFolderPath"

	ResponseCodeTypeErrorCannotGetExternalEcpUrl ResponseCodeType = "ErrorCannotGetExternalEcpUrl"

	ResponseCodeTypeErrorCannotOpenFileAttachment ResponseCodeType = "ErrorCannotOpenFileAttachment"

	ResponseCodeTypeErrorCannotDeleteTaskOccurrence ResponseCodeType = "ErrorCannotDeleteTaskOccurrence"

	ResponseCodeTypeErrorCannotEmptyFolder ResponseCodeType = "ErrorCannotEmptyFolder"

	ResponseCodeTypeErrorCannotSetCalendarPermissionOnNonCalendarFolder ResponseCodeType = "ErrorCannotSetCalendarPermissionOnNonCalendarFolder"

	ResponseCodeTypeErrorCannotSetNonCalendarPermissionOnCalendarFolder ResponseCodeType = "ErrorCannotSetNonCalendarPermissionOnCalendarFolder"

	ResponseCodeTypeErrorCannotSetPermissionUnknownEntries ResponseCodeType = "ErrorCannotSetPermissionUnknownEntries"

	ResponseCodeTypeErrorCannotSpecifySearchFolderAsSourceFolder ResponseCodeType = "ErrorCannotSpecifySearchFolderAsSourceFolder"

	ResponseCodeTypeErrorCannotUseFolderIdForItemId ResponseCodeType = "ErrorCannotUseFolderIdForItemId"

	ResponseCodeTypeErrorCannotUseItemIdForFolderId ResponseCodeType = "ErrorCannotUseItemIdForFolderId"

	ResponseCodeTypeErrorChangeKeyRequired ResponseCodeType = "ErrorChangeKeyRequired"

	ResponseCodeTypeErrorChangeKeyRequiredForWriteOperations ResponseCodeType = "ErrorChangeKeyRequiredForWriteOperations"

	ResponseCodeTypeErrorClientDisconnected ResponseCodeType = "ErrorClientDisconnected"

	ResponseCodeTypeErrorClientIntentInvalidStateDefinition ResponseCodeType = "ErrorClientIntentInvalidStateDefinition"

	ResponseCodeTypeErrorClientIntentNotFound ResponseCodeType = "ErrorClientIntentNotFound"

	ResponseCodeTypeErrorConnectionFailed ResponseCodeType = "ErrorConnectionFailed"

	ResponseCodeTypeErrorContainsFilterWrongType ResponseCodeType = "ErrorContainsFilterWrongType"

	ResponseCodeTypeErrorContentConversionFailed ResponseCodeType = "ErrorContentConversionFailed"

	ResponseCodeTypeErrorContentIndexingNotEnabled ResponseCodeType = "ErrorContentIndexingNotEnabled"

	ResponseCodeTypeErrorCorruptData ResponseCodeType = "ErrorCorruptData"

	ResponseCodeTypeErrorCreateItemAccessDenied ResponseCodeType = "ErrorCreateItemAccessDenied"

	ResponseCodeTypeErrorCreateManagedFolderPartialCompletion ResponseCodeType = "ErrorCreateManagedFolderPartialCompletion"

	ResponseCodeTypeErrorCreateSubfolderAccessDenied ResponseCodeType = "ErrorCreateSubfolderAccessDenied"

	ResponseCodeTypeErrorCrossMailboxMoveCopy ResponseCodeType = "ErrorCrossMailboxMoveCopy"

	ResponseCodeTypeErrorCrossSiteRequest ResponseCodeType = "ErrorCrossSiteRequest"

	ResponseCodeTypeErrorDataSizeLimitExceeded ResponseCodeType = "ErrorDataSizeLimitExceeded"

	ResponseCodeTypeErrorDataSourceOperation ResponseCodeType = "ErrorDataSourceOperation"

	ResponseCodeTypeErrorDelegateAlreadyExists ResponseCodeType = "ErrorDelegateAlreadyExists"

	ResponseCodeTypeErrorDelegateCannotAddOwner ResponseCodeType = "ErrorDelegateCannotAddOwner"

	ResponseCodeTypeErrorDelegateMissingConfiguration ResponseCodeType = "ErrorDelegateMissingConfiguration"

	ResponseCodeTypeErrorDelegateNoUser ResponseCodeType = "ErrorDelegateNoUser"

	ResponseCodeTypeErrorDelegateValidationFailed ResponseCodeType = "ErrorDelegateValidationFailed"

	ResponseCodeTypeErrorDeleteDistinguishedFolder ResponseCodeType = "ErrorDeleteDistinguishedFolder"

	ResponseCodeTypeErrorDeleteItemsFailed ResponseCodeType = "ErrorDeleteItemsFailed"

	ResponseCodeTypeErrorDeleteUnifiedMessagingPromptFailed ResponseCodeType = "ErrorDeleteUnifiedMessagingPromptFailed"

	ResponseCodeTypeErrorDistinguishedUserNotSupported ResponseCodeType = "ErrorDistinguishedUserNotSupported"

	ResponseCodeTypeErrorDistributionListMemberNotExist ResponseCodeType = "ErrorDistributionListMemberNotExist"

	ResponseCodeTypeErrorDuplicateInputFolderNames ResponseCodeType = "ErrorDuplicateInputFolderNames"

	ResponseCodeTypeErrorDuplicateUserIdsSpecified ResponseCodeType = "ErrorDuplicateUserIdsSpecified"

	ResponseCodeTypeErrorDuplicateTransactionId ResponseCodeType = "ErrorDuplicateTransactionId"

	ResponseCodeTypeErrorEmailAddressMismatch ResponseCodeType = "ErrorEmailAddressMismatch"

	ResponseCodeTypeErrorEventNotFound ResponseCodeType = "ErrorEventNotFound"

	ResponseCodeTypeErrorExceededConnectionCount ResponseCodeType = "ErrorExceededConnectionCount"

	ResponseCodeTypeErrorExceededSubscriptionCount ResponseCodeType = "ErrorExceededSubscriptionCount"

	ResponseCodeTypeErrorExceededFindCountLimit ResponseCodeType = "ErrorExceededFindCountLimit"

	ResponseCodeTypeErrorExpiredSubscription ResponseCodeType = "ErrorExpiredSubscription"

	ResponseCodeTypeErrorExtensionNotFound ResponseCodeType = "ErrorExtensionNotFound"

	ResponseCodeTypeErrorExtensionsNotAuthorized ResponseCodeType = "ErrorExtensionsNotAuthorized"

	ResponseCodeTypeErrorFolderCorrupt ResponseCodeType = "ErrorFolderCorrupt"

	ResponseCodeTypeErrorFolderNotFound ResponseCodeType = "ErrorFolderNotFound"

	ResponseCodeTypeErrorFolderPropertRequestFailed ResponseCodeType = "ErrorFolderPropertRequestFailed"

	ResponseCodeTypeErrorFolderSave ResponseCodeType = "ErrorFolderSave"

	ResponseCodeTypeErrorFolderSaveFailed ResponseCodeType = "ErrorFolderSaveFailed"

	ResponseCodeTypeErrorFolderSavePropertyError ResponseCodeType = "ErrorFolderSavePropertyError"

	ResponseCodeTypeErrorFolderExists ResponseCodeType = "ErrorFolderExists"

	ResponseCodeTypeErrorFreeBusyGenerationFailed ResponseCodeType = "ErrorFreeBusyGenerationFailed"

	ResponseCodeTypeErrorGetServerSecurityDescriptorFailed ResponseCodeType = "ErrorGetServerSecurityDescriptorFailed"

	ResponseCodeTypeErrorImContactLimitReached ResponseCodeType = "ErrorImContactLimitReached"

	ResponseCodeTypeErrorImGroupDisplayNameAlreadyExists ResponseCodeType = "ErrorImGroupDisplayNameAlreadyExists"

	ResponseCodeTypeErrorImGroupLimitReached ResponseCodeType = "ErrorImGroupLimitReached"

	ResponseCodeTypeErrorImpersonateUserDenied ResponseCodeType = "ErrorImpersonateUserDenied"

	ResponseCodeTypeErrorImpersonationDenied ResponseCodeType = "ErrorImpersonationDenied"

	ResponseCodeTypeErrorImpersonationFailed ResponseCodeType = "ErrorImpersonationFailed"

	ResponseCodeTypeErrorIncorrectSchemaVersion ResponseCodeType = "ErrorIncorrectSchemaVersion"

	ResponseCodeTypeErrorIncorrectUpdatePropertyCount ResponseCodeType = "ErrorIncorrectUpdatePropertyCount"

	ResponseCodeTypeErrorIndividualMailboxLimitReached ResponseCodeType = "ErrorIndividualMailboxLimitReached"

	ResponseCodeTypeErrorInsufficientResources ResponseCodeType = "ErrorInsufficientResources"

	ResponseCodeTypeErrorInternalServerError ResponseCodeType = "ErrorInternalServerError"

	ResponseCodeTypeErrorInternalServerTransientError ResponseCodeType = "ErrorInternalServerTransientError"

	ResponseCodeTypeErrorInvalidAccessLevel ResponseCodeType = "ErrorInvalidAccessLevel"

	ResponseCodeTypeErrorInvalidArgument ResponseCodeType = "ErrorInvalidArgument"

	ResponseCodeTypeErrorInvalidAttachmentId ResponseCodeType = "ErrorInvalidAttachmentId"

	ResponseCodeTypeErrorInvalidAttachmentSubfilter ResponseCodeType = "ErrorInvalidAttachmentSubfilter"

	ResponseCodeTypeErrorInvalidAttachmentSubfilterTextFilter ResponseCodeType = "ErrorInvalidAttachmentSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidAuthorizationContext ResponseCodeType = "ErrorInvalidAuthorizationContext"

	ResponseCodeTypeErrorInvalidChangeKey ResponseCodeType = "ErrorInvalidChangeKey"

	ResponseCodeTypeErrorInvalidClientSecurityContext ResponseCodeType = "ErrorInvalidClientSecurityContext"

	ResponseCodeTypeErrorInvalidCompleteDate ResponseCodeType = "ErrorInvalidCompleteDate"

	ResponseCodeTypeErrorInvalidContactEmailAddress ResponseCodeType = "ErrorInvalidContactEmailAddress"

	ResponseCodeTypeErrorInvalidContactEmailIndex ResponseCodeType = "ErrorInvalidContactEmailIndex"

	ResponseCodeTypeErrorInvalidCrossForestCredentials ResponseCodeType = "ErrorInvalidCrossForestCredentials"

	ResponseCodeTypeErrorInvalidDelegatePermission ResponseCodeType = "ErrorInvalidDelegatePermission"

	ResponseCodeTypeErrorInvalidDelegateUserId ResponseCodeType = "ErrorInvalidDelegateUserId"

	ResponseCodeTypeErrorInvalidExcludesRestriction ResponseCodeType = "ErrorInvalidExcludesRestriction"

	ResponseCodeTypeErrorInvalidExpressionTypeForSubFilter ResponseCodeType = "ErrorInvalidExpressionTypeForSubFilter"

	ResponseCodeTypeErrorInvalidExtendedProperty ResponseCodeType = "ErrorInvalidExtendedProperty"

	ResponseCodeTypeErrorInvalidExtendedPropertyValue ResponseCodeType = "ErrorInvalidExtendedPropertyValue"

	ResponseCodeTypeErrorInvalidFolderId ResponseCodeType = "ErrorInvalidFolderId"

	ResponseCodeTypeErrorInvalidFolderTypeForOperation ResponseCodeType = "ErrorInvalidFolderTypeForOperation"

	ResponseCodeTypeErrorInvalidFractionalPagingParameters ResponseCodeType = "ErrorInvalidFractionalPagingParameters"

	ResponseCodeTypeErrorInvalidFreeBusyViewType ResponseCodeType = "ErrorInvalidFreeBusyViewType"

	ResponseCodeTypeErrorInvalidId ResponseCodeType = "ErrorInvalidId"

	ResponseCodeTypeErrorInvalidIdEmpty ResponseCodeType = "ErrorInvalidIdEmpty"

	ResponseCodeTypeErrorInvalidIdMalformed ResponseCodeType = "ErrorInvalidIdMalformed"

	ResponseCodeTypeErrorInvalidIdMalformedEwsLegacyIdFormat ResponseCodeType = "ErrorInvalidIdMalformedEwsLegacyIdFormat"

	ResponseCodeTypeErrorInvalidIdMonikerTooLong ResponseCodeType = "ErrorInvalidIdMonikerTooLong"

	ResponseCodeTypeErrorInvalidIdNotAnItemAttachmentId ResponseCodeType = "ErrorInvalidIdNotAnItemAttachmentId"

	ResponseCodeTypeErrorInvalidIdReturnedByResolveNames ResponseCodeType = "ErrorInvalidIdReturnedByResolveNames"

	ResponseCodeTypeErrorInvalidIdStoreObjectIdTooLong ResponseCodeType = "ErrorInvalidIdStoreObjectIdTooLong"

	ResponseCodeTypeErrorInvalidIdTooManyAttachmentLevels ResponseCodeType = "ErrorInvalidIdTooManyAttachmentLevels"

	ResponseCodeTypeErrorInvalidIdXml ResponseCodeType = "ErrorInvalidIdXml"

	ResponseCodeTypeErrorInvalidImContactId ResponseCodeType = "ErrorInvalidImContactId"

	ResponseCodeTypeErrorInvalidImDistributionGroupSmtpAddress ResponseCodeType = "ErrorInvalidImDistributionGroupSmtpAddress"

	ResponseCodeTypeErrorInvalidImGroupId ResponseCodeType = "ErrorInvalidImGroupId"

	ResponseCodeTypeErrorInvalidIndexedPagingParameters ResponseCodeType = "ErrorInvalidIndexedPagingParameters"

	ResponseCodeTypeErrorInvalidInternetHeaderChildNodes ResponseCodeType = "ErrorInvalidInternetHeaderChildNodes"

	ResponseCodeTypeErrorInvalidItemForOperationArchiveItem ResponseCodeType = "ErrorInvalidItemForOperationArchiveItem"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItemAttachment ResponseCodeType = "ErrorInvalidItemForOperationCreateItemAttachment"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItem ResponseCodeType = "ErrorInvalidItemForOperationCreateItem"

	ResponseCodeTypeErrorInvalidItemForOperationAcceptItem ResponseCodeType = "ErrorInvalidItemForOperationAcceptItem"

	ResponseCodeTypeErrorInvalidItemForOperationDeclineItem ResponseCodeType = "ErrorInvalidItemForOperationDeclineItem"

	ResponseCodeTypeErrorInvalidItemForOperationCancelItem ResponseCodeType = "ErrorInvalidItemForOperationCancelItem"

	ResponseCodeTypeErrorInvalidItemForOperationExpandDL ResponseCodeType = "ErrorInvalidItemForOperationExpandDL"

	ResponseCodeTypeErrorInvalidItemForOperationRemoveItem ResponseCodeType = "ErrorInvalidItemForOperationRemoveItem"

	ResponseCodeTypeErrorInvalidItemForOperationSendItem ResponseCodeType = "ErrorInvalidItemForOperationSendItem"

	ResponseCodeTypeErrorInvalidItemForOperationTentative ResponseCodeType = "ErrorInvalidItemForOperationTentative"

	ResponseCodeTypeErrorInvalidLogonType ResponseCodeType = "ErrorInvalidLogonType"

	ResponseCodeTypeErrorInvalidLikeRequest ResponseCodeType = "ErrorInvalidLikeRequest"

	ResponseCodeTypeErrorInvalidMailbox ResponseCodeType = "ErrorInvalidMailbox"

	ResponseCodeTypeErrorInvalidManagedFolderProperty ResponseCodeType = "ErrorInvalidManagedFolderProperty"

	ResponseCodeTypeErrorInvalidManagedFolderQuota ResponseCodeType = "ErrorInvalidManagedFolderQuota"

	ResponseCodeTypeErrorInvalidManagedFolderSize ResponseCodeType = "ErrorInvalidManagedFolderSize"

	ResponseCodeTypeErrorInvalidMergedFreeBusyInterval ResponseCodeType = "ErrorInvalidMergedFreeBusyInterval"

	ResponseCodeTypeErrorInvalidNameForNameResolution ResponseCodeType = "ErrorInvalidNameForNameResolution"

	ResponseCodeTypeErrorInvalidOperation ResponseCodeType = "ErrorInvalidOperation"

	ResponseCodeTypeErrorInvalidNetworkServiceContext ResponseCodeType = "ErrorInvalidNetworkServiceContext"

	ResponseCodeTypeErrorInvalidOofParameter ResponseCodeType = "ErrorInvalidOofParameter"

	ResponseCodeTypeErrorInvalidPagingMaxRows ResponseCodeType = "ErrorInvalidPagingMaxRows"

	ResponseCodeTypeErrorInvalidParentFolder ResponseCodeType = "ErrorInvalidParentFolder"

	ResponseCodeTypeErrorInvalidPercentCompleteValue ResponseCodeType = "ErrorInvalidPercentCompleteValue"

	ResponseCodeTypeErrorInvalidPermissionSettings ResponseCodeType = "ErrorInvalidPermissionSettings"

	ResponseCodeTypeErrorInvalidPhoneCallId ResponseCodeType = "ErrorInvalidPhoneCallId"

	ResponseCodeTypeErrorInvalidPhoneNumber ResponseCodeType = "ErrorInvalidPhoneNumber"

	ResponseCodeTypeErrorInvalidUserInfo ResponseCodeType = "ErrorInvalidUserInfo"

	ResponseCodeTypeErrorInvalidPropertyAppend ResponseCodeType = "ErrorInvalidPropertyAppend"

	ResponseCodeTypeErrorInvalidPropertyDelete ResponseCodeType = "ErrorInvalidPropertyDelete"

	ResponseCodeTypeErrorInvalidPropertyForExists ResponseCodeType = "ErrorInvalidPropertyForExists"

	ResponseCodeTypeErrorInvalidPropertyForOperation ResponseCodeType = "ErrorInvalidPropertyForOperation"

	ResponseCodeTypeErrorInvalidPropertyRequest ResponseCodeType = "ErrorInvalidPropertyRequest"

	ResponseCodeTypeErrorInvalidPropertySet ResponseCodeType = "ErrorInvalidPropertySet"

	ResponseCodeTypeErrorInvalidPropertyUpdateSentMessage ResponseCodeType = "ErrorInvalidPropertyUpdateSentMessage"

	ResponseCodeTypeErrorInvalidProxySecurityContext ResponseCodeType = "ErrorInvalidProxySecurityContext"

	ResponseCodeTypeErrorInvalidPullSubscriptionId ResponseCodeType = "ErrorInvalidPullSubscriptionId"

	ResponseCodeTypeErrorInvalidPushSubscriptionUrl ResponseCodeType = "ErrorInvalidPushSubscriptionUrl"

	ResponseCodeTypeErrorInvalidRecipients ResponseCodeType = "ErrorInvalidRecipients"

	ResponseCodeTypeErrorInvalidRecipientSubfilter ResponseCodeType = "ErrorInvalidRecipientSubfilter"

	ResponseCodeTypeErrorInvalidRecipientSubfilterComparison ResponseCodeType = "ErrorInvalidRecipientSubfilterComparison"

	ResponseCodeTypeErrorInvalidRecipientSubfilterOrder ResponseCodeType = "ErrorInvalidRecipientSubfilterOrder"

	ResponseCodeTypeErrorInvalidRecipientSubfilterTextFilter ResponseCodeType = "ErrorInvalidRecipientSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidReferenceItem ResponseCodeType = "ErrorInvalidReferenceItem"

	ResponseCodeTypeErrorInvalidRequest ResponseCodeType = "ErrorInvalidRequest"

	ResponseCodeTypeErrorInvalidRestriction ResponseCodeType = "ErrorInvalidRestriction"

	ResponseCodeTypeErrorInvalidRetentionTagTypeMismatch ResponseCodeType = "ErrorInvalidRetentionTagTypeMismatch"

	ResponseCodeTypeErrorInvalidRetentionTagInvisible ResponseCodeType = "ErrorInvalidRetentionTagInvisible"

	ResponseCodeTypeErrorInvalidRetentionTagInheritance ResponseCodeType = "ErrorInvalidRetentionTagInheritance"

	ResponseCodeTypeErrorInvalidRetentionTagIdGuid ResponseCodeType = "ErrorInvalidRetentionTagIdGuid"

	ResponseCodeTypeErrorInvalidRoutingType ResponseCodeType = "ErrorInvalidRoutingType"

	ResponseCodeTypeErrorInvalidScheduledOofDuration ResponseCodeType = "ErrorInvalidScheduledOofDuration"

	ResponseCodeTypeErrorInvalidSchemaVersionForMailboxVersion ResponseCodeType = "ErrorInvalidSchemaVersionForMailboxVersion"

	ResponseCodeTypeErrorInvalidSecurityDescriptor ResponseCodeType = "ErrorInvalidSecurityDescriptor"

	ResponseCodeTypeErrorInvalidSendItemSaveSettings ResponseCodeType = "ErrorInvalidSendItemSaveSettings"

	ResponseCodeTypeErrorInvalidSerializedAccessToken ResponseCodeType = "ErrorInvalidSerializedAccessToken"

	ResponseCodeTypeErrorInvalidServerVersion ResponseCodeType = "ErrorInvalidServerVersion"

	ResponseCodeTypeErrorInvalidSid ResponseCodeType = "ErrorInvalidSid"

	ResponseCodeTypeErrorInvalidSIPUri ResponseCodeType = "ErrorInvalidSIPUri"

	ResponseCodeTypeErrorInvalidSmtpAddress ResponseCodeType = "ErrorInvalidSmtpAddress"

	ResponseCodeTypeErrorInvalidSubfilterType ResponseCodeType = "ErrorInvalidSubfilterType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotAttendeeType ResponseCodeType = "ErrorInvalidSubfilterTypeNotAttendeeType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotRecipientType ResponseCodeType = "ErrorInvalidSubfilterTypeNotRecipientType"

	ResponseCodeTypeErrorInvalidSubscription ResponseCodeType = "ErrorInvalidSubscription"

	ResponseCodeTypeErrorInvalidSubscriptionRequest ResponseCodeType = "ErrorInvalidSubscriptionRequest"

	ResponseCodeTypeErrorInvalidSyncStateData ResponseCodeType = "ErrorInvalidSyncStateData"

	ResponseCodeTypeErrorInvalidTimeInterval ResponseCodeType = "ErrorInvalidTimeInterval"

	ResponseCodeTypeErrorInvalidUserOofSettings ResponseCodeType = "ErrorInvalidUserOofSettings"

	ResponseCodeTypeErrorInvalidUserPrincipalName ResponseCodeType = "ErrorInvalidUserPrincipalName"

	ResponseCodeTypeErrorInvalidUserSid ResponseCodeType = "ErrorInvalidUserSid"

	ResponseCodeTypeErrorInvalidUserSidMissingUPN ResponseCodeType = "ErrorInvalidUserSidMissingUPN"

	ResponseCodeTypeErrorInvalidValueForProperty ResponseCodeType = "ErrorInvalidValueForProperty"

	ResponseCodeTypeErrorInvalidWatermark ResponseCodeType = "ErrorInvalidWatermark"

	ResponseCodeTypeErrorIPGatewayNotFound ResponseCodeType = "ErrorIPGatewayNotFound"

	ResponseCodeTypeErrorIrresolvableConflict ResponseCodeType = "ErrorIrresolvableConflict"

	ResponseCodeTypeErrorItemCorrupt ResponseCodeType = "ErrorItemCorrupt"

	ResponseCodeTypeErrorItemNotFound ResponseCodeType = "ErrorItemNotFound"

	ResponseCodeTypeErrorItemPropertyRequestFailed ResponseCodeType = "ErrorItemPropertyRequestFailed"

	ResponseCodeTypeErrorItemSave ResponseCodeType = "ErrorItemSave"

	ResponseCodeTypeErrorItemSavePropertyError ResponseCodeType = "ErrorItemSavePropertyError"

	ResponseCodeTypeErrorLegacyMailboxFreeBusyViewTypeNotMerged ResponseCodeType = "ErrorLegacyMailboxFreeBusyViewTypeNotMerged"

	ResponseCodeTypeErrorLocalServerObjectNotFound ResponseCodeType = "ErrorLocalServerObjectNotFound"

	ResponseCodeTypeErrorLogonAsNetworkServiceFailed ResponseCodeType = "ErrorLogonAsNetworkServiceFailed"

	ResponseCodeTypeErrorMailboxConfiguration ResponseCodeType = "ErrorMailboxConfiguration"

	ResponseCodeTypeErrorMailboxDataArrayEmpty ResponseCodeType = "ErrorMailboxDataArrayEmpty"

	ResponseCodeTypeErrorMailboxDataArrayTooBig ResponseCodeType = "ErrorMailboxDataArrayTooBig"

	ResponseCodeTypeErrorMailboxHoldNotFound ResponseCodeType = "ErrorMailboxHoldNotFound"

	ResponseCodeTypeErrorMailboxLogonFailed ResponseCodeType = "ErrorMailboxLogonFailed"

	ResponseCodeTypeErrorMailboxMoveInProgress ResponseCodeType = "ErrorMailboxMoveInProgress"

	ResponseCodeTypeErrorMailboxStoreUnavailable ResponseCodeType = "ErrorMailboxStoreUnavailable"

	ResponseCodeTypeErrorMailRecipientNotFound ResponseCodeType = "ErrorMailRecipientNotFound"

	ResponseCodeTypeErrorMailTipsDisabled ResponseCodeType = "ErrorMailTipsDisabled"

	ResponseCodeTypeErrorManagedFolderAlreadyExists ResponseCodeType = "ErrorManagedFolderAlreadyExists"

	ResponseCodeTypeErrorManagedFolderNotFound ResponseCodeType = "ErrorManagedFolderNotFound"

	ResponseCodeTypeErrorManagedFoldersRootFailure ResponseCodeType = "ErrorManagedFoldersRootFailure"

	ResponseCodeTypeErrorMeetingSuggestionGenerationFailed ResponseCodeType = "ErrorMeetingSuggestionGenerationFailed"

	ResponseCodeTypeErrorMessageDispositionRequired ResponseCodeType = "ErrorMessageDispositionRequired"

	ResponseCodeTypeErrorMessageSizeExceeded ResponseCodeType = "ErrorMessageSizeExceeded"

	ResponseCodeTypeErrorMimeContentConversionFailed ResponseCodeType = "ErrorMimeContentConversionFailed"

	ResponseCodeTypeErrorMimeContentInvalid ResponseCodeType = "ErrorMimeContentInvalid"

	ResponseCodeTypeErrorMimeContentInvalidBase64String ResponseCodeType = "ErrorMimeContentInvalidBase64String"

	ResponseCodeTypeErrorMissingArgument ResponseCodeType = "ErrorMissingArgument"

	ResponseCodeTypeErrorMissingEmailAddress ResponseCodeType = "ErrorMissingEmailAddress"

	ResponseCodeTypeErrorMissingEmailAddressForManagedFolder ResponseCodeType = "ErrorMissingEmailAddressForManagedFolder"

	ResponseCodeTypeErrorMissingInformationEmailAddress ResponseCodeType = "ErrorMissingInformationEmailAddress"

	ResponseCodeTypeErrorMissingInformationReferenceItemId ResponseCodeType = "ErrorMissingInformationReferenceItemId"

	ResponseCodeTypeErrorMissingItemForCreateItemAttachment ResponseCodeType = "ErrorMissingItemForCreateItemAttachment"

	ResponseCodeTypeErrorMissingManagedFolderId ResponseCodeType = "ErrorMissingManagedFolderId"

	ResponseCodeTypeErrorMissingRecipients ResponseCodeType = "ErrorMissingRecipients"

	ResponseCodeTypeErrorMissingUserIdInformation ResponseCodeType = "ErrorMissingUserIdInformation"

	ResponseCodeTypeErrorMoreThanOneAccessModeSpecified ResponseCodeType = "ErrorMoreThanOneAccessModeSpecified"

	ResponseCodeTypeErrorMoveCopyFailed ResponseCodeType = "ErrorMoveCopyFailed"

	ResponseCodeTypeErrorMoveDistinguishedFolder ResponseCodeType = "ErrorMoveDistinguishedFolder"

	ResponseCodeTypeErrorMoveUnifiedGroupPropertyFailed ResponseCodeType = "ErrorMoveUnifiedGroupPropertyFailed"

	ResponseCodeTypeErrorMultiLegacyMailboxAccess ResponseCodeType = "ErrorMultiLegacyMailboxAccess"

	ResponseCodeTypeErrorNameResolutionMultipleResults ResponseCodeType = "ErrorNameResolutionMultipleResults"

	ResponseCodeTypeErrorNameResolutionNoMailbox ResponseCodeType = "ErrorNameResolutionNoMailbox"

	ResponseCodeTypeErrorNameResolutionNoResults ResponseCodeType = "ErrorNameResolutionNoResults"

	ResponseCodeTypeErrorNoApplicableProxyCASServersAvailable ResponseCodeType = "ErrorNoApplicableProxyCASServersAvailable"

	ResponseCodeTypeErrorNoCalendar ResponseCodeType = "ErrorNoCalendar"

	ResponseCodeTypeErrorNoDestinationCASDueToKerberosRequirements ResponseCodeType = "ErrorNoDestinationCASDueToKerberosRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToSSLRequirements ResponseCodeType = "ErrorNoDestinationCASDueToSSLRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToVersionMismatch ResponseCodeType = "ErrorNoDestinationCASDueToVersionMismatch"

	ResponseCodeTypeErrorNoFolderClassOverride ResponseCodeType = "ErrorNoFolderClassOverride"

	ResponseCodeTypeErrorNoFreeBusyAccess ResponseCodeType = "ErrorNoFreeBusyAccess"

	ResponseCodeTypeErrorNonExistentMailbox ResponseCodeType = "ErrorNonExistentMailbox"

	ResponseCodeTypeErrorNonPrimarySmtpAddress ResponseCodeType = "ErrorNonPrimarySmtpAddress"

	ResponseCodeTypeErrorNoPropertyTagForCustomProperties ResponseCodeType = "ErrorNoPropertyTagForCustomProperties"

	ResponseCodeTypeErrorNoPublicFolderReplicaAvailable ResponseCodeType = "ErrorNoPublicFolderReplicaAvailable"

	ResponseCodeTypeErrorNoPublicFolderServerAvailable ResponseCodeType = "ErrorNoPublicFolderServerAvailable"

	ResponseCodeTypeErrorNoRespondingCASInDestinationSite ResponseCodeType = "ErrorNoRespondingCASInDestinationSite"

	ResponseCodeTypeErrorNotDelegate ResponseCodeType = "ErrorNotDelegate"

	ResponseCodeTypeErrorNotEnoughMemory ResponseCodeType = "ErrorNotEnoughMemory"

	ResponseCodeTypeErrorObjectTypeChanged ResponseCodeType = "ErrorObjectTypeChanged"

	ResponseCodeTypeErrorOccurrenceCrossingBoundary ResponseCodeType = "ErrorOccurrenceCrossingBoundary"

	ResponseCodeTypeErrorOccurrenceTimeSpanTooBig ResponseCodeType = "ErrorOccurrenceTimeSpanTooBig"

	ResponseCodeTypeErrorOperationNotAllowedWithPublicFolderRoot ResponseCodeType = "ErrorOperationNotAllowedWithPublicFolderRoot"

	ResponseCodeTypeErrorParentFolderIdRequired ResponseCodeType = "ErrorParentFolderIdRequired"

	ResponseCodeTypeErrorParentFolderNotFound ResponseCodeType = "ErrorParentFolderNotFound"

	ResponseCodeTypeErrorPasswordChangeRequired ResponseCodeType = "ErrorPasswordChangeRequired"

	ResponseCodeTypeErrorPasswordExpired ResponseCodeType = "ErrorPasswordExpired"

	ResponseCodeTypeErrorPhoneNumberNotDialable ResponseCodeType = "ErrorPhoneNumberNotDialable"

	ResponseCodeTypeErrorPropertyUpdate ResponseCodeType = "ErrorPropertyUpdate"

	ResponseCodeTypeErrorPromptPublishingOperationFailed ResponseCodeType = "ErrorPromptPublishingOperationFailed"

	ResponseCodeTypeErrorPropertyValidationFailure ResponseCodeType = "ErrorPropertyValidationFailure"

	ResponseCodeTypeErrorProxiedSubscriptionCallFailure ResponseCodeType = "ErrorProxiedSubscriptionCallFailure"

	ResponseCodeTypeErrorProxyCallFailed ResponseCodeType = "ErrorProxyCallFailed"

	ResponseCodeTypeErrorProxyGroupSidLimitExceeded ResponseCodeType = "ErrorProxyGroupSidLimitExceeded"

	ResponseCodeTypeErrorProxyRequestNotAllowed ResponseCodeType = "ErrorProxyRequestNotAllowed"

	ResponseCodeTypeErrorProxyRequestProcessingFailed ResponseCodeType = "ErrorProxyRequestProcessingFailed"

	ResponseCodeTypeErrorProxyServiceDiscoveryFailed ResponseCodeType = "ErrorProxyServiceDiscoveryFailed"

	ResponseCodeTypeErrorProxyTokenExpired ResponseCodeType = "ErrorProxyTokenExpired"

	ResponseCodeTypeErrorPublicFolderMailboxDiscoveryFailed ResponseCodeType = "ErrorPublicFolderMailboxDiscoveryFailed"

	ResponseCodeTypeErrorPublicFolderOperationFailed ResponseCodeType = "ErrorPublicFolderOperationFailed"

	ResponseCodeTypeErrorPublicFolderRequestProcessingFailed ResponseCodeType = "ErrorPublicFolderRequestProcessingFailed"

	ResponseCodeTypeErrorPublicFolderServerNotFound ResponseCodeType = "ErrorPublicFolderServerNotFound"

	ResponseCodeTypeErrorPublicFolderSyncException ResponseCodeType = "ErrorPublicFolderSyncException"

	ResponseCodeTypeErrorQueryFilterTooLong ResponseCodeType = "ErrorQueryFilterTooLong"

	ResponseCodeTypeErrorQuotaExceeded ResponseCodeType = "ErrorQuotaExceeded"

	ResponseCodeTypeErrorReadEventsFailed ResponseCodeType = "ErrorReadEventsFailed"

	ResponseCodeTypeErrorReadReceiptNotPending ResponseCodeType = "ErrorReadReceiptNotPending"

	ResponseCodeTypeErrorRecurrenceEndDateTooBig ResponseCodeType = "ErrorRecurrenceEndDateTooBig"

	ResponseCodeTypeErrorRecurrenceHasNoOccurrence ResponseCodeType = "ErrorRecurrenceHasNoOccurrence"

	ResponseCodeTypeErrorRemoveDelegatesFailed ResponseCodeType = "ErrorRemoveDelegatesFailed"

	ResponseCodeTypeErrorRequestAborted ResponseCodeType = "ErrorRequestAborted"

	ResponseCodeTypeErrorRequestStreamTooBig ResponseCodeType = "ErrorRequestStreamTooBig"

	ResponseCodeTypeErrorRequiredPropertyMissing ResponseCodeType = "ErrorRequiredPropertyMissing"

	ResponseCodeTypeErrorResolveNamesInvalidFolderType ResponseCodeType = "ErrorResolveNamesInvalidFolderType"

	ResponseCodeTypeErrorResolveNamesOnlyOneContactsFolderAllowed ResponseCodeType = "ErrorResolveNamesOnlyOneContactsFolderAllowed"

	ResponseCodeTypeErrorResponseSchemaValidation ResponseCodeType = "ErrorResponseSchemaValidation"

	ResponseCodeTypeErrorRestrictionTooLong ResponseCodeType = "ErrorRestrictionTooLong"

	ResponseCodeTypeErrorRestrictionTooComplex ResponseCodeType = "ErrorRestrictionTooComplex"

	ResponseCodeTypeErrorResultSetTooBig ResponseCodeType = "ErrorResultSetTooBig"

	ResponseCodeTypeErrorInvalidExchangeImpersonationHeaderData ResponseCodeType = "ErrorInvalidExchangeImpersonationHeaderData"

	ResponseCodeTypeErrorSavedItemFolderNotFound ResponseCodeType = "ErrorSavedItemFolderNotFound"

	ResponseCodeTypeErrorSchemaValidation ResponseCodeType = "ErrorSchemaValidation"

	ResponseCodeTypeErrorSearchFolderNotInitialized ResponseCodeType = "ErrorSearchFolderNotInitialized"

	ResponseCodeTypeErrorSendAsDenied ResponseCodeType = "ErrorSendAsDenied"

	ResponseCodeTypeErrorSendMeetingCancellationsRequired ResponseCodeType = "ErrorSendMeetingCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsOrCancellationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsOrCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsRequired"

	ResponseCodeTypeErrorSentMeetingRequestUpdate ResponseCodeType = "ErrorSentMeetingRequestUpdate"

	ResponseCodeTypeErrorSentTaskRequestUpdate ResponseCodeType = "ErrorSentTaskRequestUpdate"

	ResponseCodeTypeErrorServerBusy ResponseCodeType = "ErrorServerBusy"

	ResponseCodeTypeErrorServiceDiscoveryFailed ResponseCodeType = "ErrorServiceDiscoveryFailed"

	ResponseCodeTypeErrorStaleObject ResponseCodeType = "ErrorStaleObject"

	ResponseCodeTypeErrorSubmissionQuotaExceeded ResponseCodeType = "ErrorSubmissionQuotaExceeded"

	ResponseCodeTypeErrorSubscriptionAccessDenied ResponseCodeType = "ErrorSubscriptionAccessDenied"

	ResponseCodeTypeErrorSubscriptionDelegateAccessNotSupported ResponseCodeType = "ErrorSubscriptionDelegateAccessNotSupported"

	ResponseCodeTypeErrorSubscriptionNotFound ResponseCodeType = "ErrorSubscriptionNotFound"

	ResponseCodeTypeErrorSubscriptionUnsubscribed ResponseCodeType = "ErrorSubscriptionUnsubscribed"

	ResponseCodeTypeErrorSyncFolderNotFound ResponseCodeType = "ErrorSyncFolderNotFound"

	ResponseCodeTypeErrorTeamMailboxNotFound ResponseCodeType = "ErrorTeamMailboxNotFound"

	ResponseCodeTypeErrorTeamMailboxNotLinkedToSharePoint ResponseCodeType = "ErrorTeamMailboxNotLinkedToSharePoint"

	ResponseCodeTypeErrorTeamMailboxUrlValidationFailed ResponseCodeType = "ErrorTeamMailboxUrlValidationFailed"

	ResponseCodeTypeErrorTeamMailboxNotAuthorizedOwner ResponseCodeType = "ErrorTeamMailboxNotAuthorizedOwner"

	ResponseCodeTypeErrorTeamMailboxActiveToPendingDelete ResponseCodeType = "ErrorTeamMailboxActiveToPendingDelete"

	ResponseCodeTypeErrorTeamMailboxFailedSendingNotifications ResponseCodeType = "ErrorTeamMailboxFailedSendingNotifications"

	ResponseCodeTypeErrorTeamMailboxErrorUnknown ResponseCodeType = "ErrorTeamMailboxErrorUnknown"

	ResponseCodeTypeErrorTimeIntervalTooBig ResponseCodeType = "ErrorTimeIntervalTooBig"

	ResponseCodeTypeErrorTimeoutExpired ResponseCodeType = "ErrorTimeoutExpired"

	ResponseCodeTypeErrorTimeZone ResponseCodeType = "ErrorTimeZone"

	ResponseCodeTypeErrorToFolderNotFound ResponseCodeType = "ErrorToFolderNotFound"

	ResponseCodeTypeErrorTokenSerializationDenied ResponseCodeType = "ErrorTokenSerializationDenied"

	ResponseCodeTypeErrorTooManyObjectsOpened ResponseCodeType = "ErrorTooManyObjectsOpened"

	ResponseCodeTypeErrorUpdatePropertyMismatch ResponseCodeType = "ErrorUpdatePropertyMismatch"

	ResponseCodeTypeErrorAccessingPartialCreatedUnifiedGroup ResponseCodeType = "ErrorAccessingPartialCreatedUnifiedGroup"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADCreationFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADCreationFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNamingPolicy ResponseCodeType = "ErrorUnifiedGroupMailboxNamingPolicy"

	ResponseCodeTypeErrorUnifiedGroupMailboxDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNotFound ResponseCodeType = "ErrorUnifiedGroupMailboxNotFound"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateDelayed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateDelayed"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdatedPartialProperties ResponseCodeType = "ErrorUnifiedGroupMailboxUpdatedPartialProperties"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateFailed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxProvisionFailed ResponseCodeType = "ErrorUnifiedGroupMailboxProvisionFailed"

	ResponseCodeTypeErrorUnifiedMessagingDialPlanNotFound ResponseCodeType = "ErrorUnifiedMessagingDialPlanNotFound"

	ResponseCodeTypeErrorUnifiedMessagingReportDataNotFound ResponseCodeType = "ErrorUnifiedMessagingReportDataNotFound"

	ResponseCodeTypeErrorUnifiedMessagingPromptNotFound ResponseCodeType = "ErrorUnifiedMessagingPromptNotFound"

	ResponseCodeTypeErrorUnifiedMessagingRequestFailed ResponseCodeType = "ErrorUnifiedMessagingRequestFailed"

	ResponseCodeTypeErrorUnifiedMessagingServerNotFound ResponseCodeType = "ErrorUnifiedMessagingServerNotFound"

	ResponseCodeTypeErrorUnableToGetUserOofSettings ResponseCodeType = "ErrorUnableToGetUserOofSettings"

	ResponseCodeTypeErrorUnableToRemoveImContactFromGroup ResponseCodeType = "ErrorUnableToRemoveImContactFromGroup"

	ResponseCodeTypeErrorUnsupportedSubFilter ResponseCodeType = "ErrorUnsupportedSubFilter"

	ResponseCodeTypeErrorUnsupportedCulture ResponseCodeType = "ErrorUnsupportedCulture"

	ResponseCodeTypeErrorUnsupportedMapiPropertyType ResponseCodeType = "ErrorUnsupportedMapiPropertyType"

	ResponseCodeTypeErrorUnsupportedMimeConversion ResponseCodeType = "ErrorUnsupportedMimeConversion"

	ResponseCodeTypeErrorUnsupportedPathForQuery ResponseCodeType = "ErrorUnsupportedPathForQuery"

	ResponseCodeTypeErrorUnsupportedPathForSortGroup ResponseCodeType = "ErrorUnsupportedPathForSortGroup"

	ResponseCodeTypeErrorUnsupportedPropertyDefinition ResponseCodeType = "ErrorUnsupportedPropertyDefinition"

	ResponseCodeTypeErrorUnsupportedQueryFilter ResponseCodeType = "ErrorUnsupportedQueryFilter"

	ResponseCodeTypeErrorUnsupportedRecurrence ResponseCodeType = "ErrorUnsupportedRecurrence"

	ResponseCodeTypeErrorUnsupportedTypeForConversion ResponseCodeType = "ErrorUnsupportedTypeForConversion"

	ResponseCodeTypeErrorUpdateDelegatesFailed ResponseCodeType = "ErrorUpdateDelegatesFailed"

	ResponseCodeTypeErrorUserNotUnifiedMessagingEnabled ResponseCodeType = "ErrorUserNotUnifiedMessagingEnabled"

	ResponseCodeTypeErrorVoiceMailNotImplemented ResponseCodeType = "ErrorVoiceMailNotImplemented"

	ResponseCodeTypeErrorValueOutOfRange ResponseCodeType = "ErrorValueOutOfRange"

	ResponseCodeTypeErrorVirusDetected ResponseCodeType = "ErrorVirusDetected"

	ResponseCodeTypeErrorVirusMessageDeleted ResponseCodeType = "ErrorVirusMessageDeleted"

	ResponseCodeTypeErrorWebRequestInInvalidState ResponseCodeType = "ErrorWebRequestInInvalidState"

	ResponseCodeTypeErrorWin32InteropError ResponseCodeType = "ErrorWin32InteropError"

	ResponseCodeTypeErrorWorkingHoursSaveFailed ResponseCodeType = "ErrorWorkingHoursSaveFailed"

	ResponseCodeTypeErrorWorkingHoursXmlMalformed ResponseCodeType = "ErrorWorkingHoursXmlMalformed"

	ResponseCodeTypeErrorWrongServerVersion ResponseCodeType = "ErrorWrongServerVersion"

	ResponseCodeTypeErrorWrongServerVersionDelegate ResponseCodeType = "ErrorWrongServerVersionDelegate"

	ResponseCodeTypeErrorMissingInformationSharingFolderId ResponseCodeType = "ErrorMissingInformationSharingFolderId"

	ResponseCodeTypeErrorDuplicateSOAPHeader ResponseCodeType = "ErrorDuplicateSOAPHeader"

	ResponseCodeTypeErrorSharingSynchronizationFailed ResponseCodeType = "ErrorSharingSynchronizationFailed"

	ResponseCodeTypeErrorSharingNoExternalEwsAvailable ResponseCodeType = "ErrorSharingNoExternalEwsAvailable"

	ResponseCodeTypeErrorFreeBusyDLLimitReached ResponseCodeType = "ErrorFreeBusyDLLimitReached"

	ResponseCodeTypeErrorInvalidGetSharingFolderRequest ResponseCodeType = "ErrorInvalidGetSharingFolderRequest"

	ResponseCodeTypeErrorNotAllowedExternalSharingByPolicy ResponseCodeType = "ErrorNotAllowedExternalSharingByPolicy"

	ResponseCodeTypeErrorUserNotAllowedByPolicy ResponseCodeType = "ErrorUserNotAllowedByPolicy"

	ResponseCodeTypeErrorPermissionNotAllowedByPolicy ResponseCodeType = "ErrorPermissionNotAllowedByPolicy"

	ResponseCodeTypeErrorOrganizationNotFederated ResponseCodeType = "ErrorOrganizationNotFederated"

	ResponseCodeTypeErrorMailboxFailover ResponseCodeType = "ErrorMailboxFailover"

	ResponseCodeTypeErrorInvalidExternalSharingInitiator ResponseCodeType = "ErrorInvalidExternalSharingInitiator"

	ResponseCodeTypeErrorMessageTrackingPermanentError ResponseCodeType = "ErrorMessageTrackingPermanentError"

	ResponseCodeTypeErrorMessageTrackingTransientError ResponseCodeType = "ErrorMessageTrackingTransientError"

	ResponseCodeTypeErrorMessageTrackingNoSuchDomain ResponseCodeType = "ErrorMessageTrackingNoSuchDomain"

	ResponseCodeTypeErrorUserWithoutFederatedProxyAddress ResponseCodeType = "ErrorUserWithoutFederatedProxyAddress"

	ResponseCodeTypeErrorInvalidOrganizationRelationshipForFreeBusy ResponseCodeType = "ErrorInvalidOrganizationRelationshipForFreeBusy"

	ResponseCodeTypeErrorInvalidFederatedOrganizationId ResponseCodeType = "ErrorInvalidFederatedOrganizationId"

	ResponseCodeTypeErrorInvalidExternalSharingSubscriber ResponseCodeType = "ErrorInvalidExternalSharingSubscriber"

	ResponseCodeTypeErrorInvalidSharingData ResponseCodeType = "ErrorInvalidSharingData"

	ResponseCodeTypeErrorInvalidSharingMessage ResponseCodeType = "ErrorInvalidSharingMessage"

	ResponseCodeTypeErrorNotSupportedSharingMessage ResponseCodeType = "ErrorNotSupportedSharingMessage"

	ResponseCodeTypeErrorApplyConversationActionFailed ResponseCodeType = "ErrorApplyConversationActionFailed"

	ResponseCodeTypeErrorInboxRulesValidationError ResponseCodeType = "ErrorInboxRulesValidationError"

	ResponseCodeTypeErrorOutlookRuleBlobExists ResponseCodeType = "ErrorOutlookRuleBlobExists"

	ResponseCodeTypeErrorRulesOverQuota ResponseCodeType = "ErrorRulesOverQuota"

	ResponseCodeTypeErrorNewEventStreamConnectionOpened ResponseCodeType = "ErrorNewEventStreamConnectionOpened"

	ResponseCodeTypeErrorMissedNotificationEvents ResponseCodeType = "ErrorMissedNotificationEvents"

	ResponseCodeTypeErrorDuplicateLegacyDistinguishedName ResponseCodeType = "ErrorDuplicateLegacyDistinguishedName"

	ResponseCodeTypeErrorInvalidClientAccessTokenRequest ResponseCodeType = "ErrorInvalidClientAccessTokenRequest"

	ResponseCodeTypeErrorUnauthorizedClientAccessTokenRequest ResponseCodeType = "ErrorUnauthorizedClientAccessTokenRequest"

	ResponseCodeTypeErrorNoSpeechDetected ResponseCodeType = "ErrorNoSpeechDetected"

	ResponseCodeTypeErrorUMServerUnavailable ResponseCodeType = "ErrorUMServerUnavailable"

	ResponseCodeTypeErrorRecipientNotFound ResponseCodeType = "ErrorRecipientNotFound"

	ResponseCodeTypeErrorRecognizerNotInstalled ResponseCodeType = "ErrorRecognizerNotInstalled"

	ResponseCodeTypeErrorSpeechGrammarError ResponseCodeType = "ErrorSpeechGrammarError"

	ResponseCodeTypeErrorInvalidManagementRoleHeader ResponseCodeType = "ErrorInvalidManagementRoleHeader"

	ResponseCodeTypeErrorLocationServicesDisabled ResponseCodeType = "ErrorLocationServicesDisabled"

	ResponseCodeTypeErrorLocationServicesRequestTimedOut ResponseCodeType = "ErrorLocationServicesRequestTimedOut"

	ResponseCodeTypeErrorLocationServicesRequestFailed ResponseCodeType = "ErrorLocationServicesRequestFailed"

	ResponseCodeTypeErrorLocationServicesInvalidRequest ResponseCodeType = "ErrorLocationServicesInvalidRequest"

	ResponseCodeTypeErrorWeatherServiceDisabled ResponseCodeType = "ErrorWeatherServiceDisabled"

	ResponseCodeTypeErrorMailboxScopeNotAllowedWithoutQueryString ResponseCodeType = "ErrorMailboxScopeNotAllowedWithoutQueryString"

	ResponseCodeTypeErrorArchiveMailboxSearchFailed ResponseCodeType = "ErrorArchiveMailboxSearchFailed"

	ResponseCodeTypeErrorGetRemoteArchiveFolderFailed ResponseCodeType = "ErrorGetRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorFindRemoteArchiveFolderFailed ResponseCodeType = "ErrorFindRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorGetRemoteArchiveItemFailed ResponseCodeType = "ErrorGetRemoteArchiveItemFailed"

	ResponseCodeTypeErrorExportRemoteArchiveItemsFailed ResponseCodeType = "ErrorExportRemoteArchiveItemsFailed"

	ResponseCodeTypeErrorInvalidPhotoSize ResponseCodeType = "ErrorInvalidPhotoSize"

	ResponseCodeTypeErrorSearchQueryHasTooManyKeywords ResponseCodeType = "ErrorSearchQueryHasTooManyKeywords"

	ResponseCodeTypeErrorSearchTooManyMailboxes ResponseCodeType = "ErrorSearchTooManyMailboxes"

	ResponseCodeTypeErrorInvalidRetentionTagNone ResponseCodeType = "ErrorInvalidRetentionTagNone"

	ResponseCodeTypeErrorDiscoverySearchesDisabled ResponseCodeType = "ErrorDiscoverySearchesDisabled"

	ResponseCodeTypeErrorCalendarSeekToConditionNotSupported ResponseCodeType = "ErrorCalendarSeekToConditionNotSupported"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForAccept ResponseCodeType = "ErrorCalendarIsGroupMailboxForAccept"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForDecline ResponseCodeType = "ErrorCalendarIsGroupMailboxForDecline"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForTentative ResponseCodeType = "ErrorCalendarIsGroupMailboxForTentative"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForSuppressReadReceipt ResponseCodeType = "ErrorCalendarIsGroupMailboxForSuppressReadReceipt"

	ResponseCodeTypeErrorOrganizationAccessBlocked ResponseCodeType = "ErrorOrganizationAccessBlocked"

	ResponseCodeTypeErrorInvalidLicense ResponseCodeType = "ErrorInvalidLicense"

	ResponseCodeTypeErrorMessagePerFolderCountReceiveQuotaExceeded ResponseCodeType = "ErrorMessagePerFolderCountReceiveQuotaExceeded"

	ResponseCodeTypeErrorInvalidBulkActionType ResponseCodeType = "ErrorInvalidBulkActionType"

	ResponseCodeTypeErrorInvalidKeepNCount ResponseCodeType = "ErrorInvalidKeepNCount"

	ResponseCodeTypeErrorInvalidKeepNType ResponseCodeType = "ErrorInvalidKeepNType"

	ResponseCodeTypeErrorNoOAuthServerAvailableForRequest ResponseCodeType = "ErrorNoOAuthServerAvailableForRequest"

	ResponseCodeTypeErrorInstantSearchSessionExpired ResponseCodeType = "ErrorInstantSearchSessionExpired"

	ResponseCodeTypeErrorInstantSearchTimeout ResponseCodeType = "ErrorInstantSearchTimeout"

	ResponseCodeTypeErrorInstantSearchFailed ResponseCodeType = "ErrorInstantSearchFailed"

	ResponseCodeTypeErrorUnsupportedUserForExecuteSearch ResponseCodeType = "ErrorUnsupportedUserForExecuteSearch"

	ResponseCodeTypeErrorDuplicateExtendedKeywordDefinition ResponseCodeType = "ErrorDuplicateExtendedKeywordDefinition"

	ResponseCodeTypeErrorMissingExchangePrincipal ResponseCodeType = "ErrorMissingExchangePrincipal"

	ResponseCodeTypeErrorUnexpectedUnifiedGroupsCount ResponseCodeType = "ErrorUnexpectedUnifiedGroupsCount"

	ResponseCodeTypeErrorParsingXMLResponse ResponseCodeType = "ErrorParsingXMLResponse"

	ResponseCodeTypeErrorInvalidFederationOrganizationIdentifier ResponseCodeType = "ErrorInvalidFederationOrganizationIdentifier"

	ResponseCodeTypeErrorInvalidSweepRule ResponseCodeType = "ErrorInvalidSweepRule"

	ResponseCodeTypeErrorInvalidSweepRuleOperationType ResponseCodeType = "ErrorInvalidSweepRuleOperationType"

	ResponseCodeTypeErrorTargetDomainNotSupported ResponseCodeType = "ErrorTargetDomainNotSupported"

	ResponseCodeTypeErrorInvalidInternetWebProxyOnLocalServer ResponseCodeType = "ErrorInvalidInternetWebProxyOnLocalServer"

	ResponseCodeTypeErrorNoSenderRestrictionsSettingsFoundInRequest ResponseCodeType = "ErrorNoSenderRestrictionsSettingsFoundInRequest"

	ResponseCodeTypeErrorDuplicateSenderRestrictionsInputFound ResponseCodeType = "ErrorDuplicateSenderRestrictionsInputFound"

	ResponseCodeTypeErrorSenderRestrictionsUpdateFailed ResponseCodeType = "ErrorSenderRestrictionsUpdateFailed"

	ResponseCodeTypeErrorMessageSubmissionBlocked ResponseCodeType = "ErrorMessageSubmissionBlocked"

	ResponseCodeTypeErrorExceededMessageLimit ResponseCodeType = "ErrorExceededMessageLimit"

	ResponseCodeTypeErrorExceededMaxRecipientLimitBlock ResponseCodeType = "ErrorExceededMaxRecipientLimitBlock"

	ResponseCodeTypeErrorAccountSuspend ResponseCodeType = "ErrorAccountSuspend"

	ResponseCodeTypeErrorExceededMaxRecipientLimit ResponseCodeType = "ErrorExceededMaxRecipientLimit"

	ResponseCodeTypeErrorMessageBlocked ResponseCodeType = "ErrorMessageBlocked"

	ResponseCodeTypeErrorAccountSuspendShowTierUpgrade ResponseCodeType = "ErrorAccountSuspendShowTierUpgrade"

	ResponseCodeTypeErrorExceededMessageLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMessageLimitShowTierUpgrade"

	ResponseCodeTypeErrorExceededMaxRecipientLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMaxRecipientLimitShowTierUpgrade"

	ResponseCodeTypeErrorInvalidLongitude ResponseCodeType = "ErrorInvalidLongitude"

	ResponseCodeTypeErrorInvalidLatitude ResponseCodeType = "ErrorInvalidLatitude"

	ResponseCodeTypeErrorProxySoapException ResponseCodeType = "ErrorProxySoapException"

	ResponseCodeTypeErrorUnifiedGroupAlreadyExists ResponseCodeType = "ErrorUnifiedGroupAlreadyExists"

	ResponseCodeTypeErrorUnifiedGroupAadAuthorizationRequestDenied ResponseCodeType = "ErrorUnifiedGroupAadAuthorizationRequestDenied"

	ResponseCodeTypeErrorUnifiedGroupCreationDisabled ResponseCodeType = "ErrorUnifiedGroupCreationDisabled"

	ResponseCodeTypeErrorMarketPlaceExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorMarketPlaceExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorNewerExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerExtensionAlreadyInstalled"

	ResponseCodeTypeErrorNewerMarketPlaceExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerMarketPlaceExtensionAlreadyInstalled"

	ResponseCodeTypeErrorInvalidExtensionId ResponseCodeType = "ErrorInvalidExtensionId"

	ResponseCodeTypeErrorCannotUninstallProvidedExtensions ResponseCodeType = "ErrorCannotUninstallProvidedExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallMarketPlaceExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallMarketPlaceExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallReadWriteMailboxExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallReadWriteMailboxExtensions"

	ResponseCodeTypeErrorInvalidReportMessageActionType ResponseCodeType = "ErrorInvalidReportMessageActionType"

	ResponseCodeTypeErrorCannotDownloadExtensionManifest ResponseCodeType = "ErrorCannotDownloadExtensionManifest"

	ResponseCodeTypeErrorCalendarForwardActionNotAllowed ResponseCodeType = "ErrorCalendarForwardActionNotAllowed"

	ResponseCodeTypeErrorUnifiedGroupAliasNamingPolicy ResponseCodeType = "ErrorUnifiedGroupAliasNamingPolicy"

	ResponseCodeTypeErrorSubscriptionsDisabledForGroup ResponseCodeType = "ErrorSubscriptionsDisabledForGroup"

	ResponseCodeTypeErrorCannotFindFileAttachment ResponseCodeType = "ErrorCannotFindFileAttachment"

	ResponseCodeTypeErrorInvalidValueForFilter ResponseCodeType = "ErrorInvalidValueForFilter"

	ResponseCodeTypeErrorQuotaExceededOnDelete ResponseCodeType = "ErrorQuotaExceededOnDelete"

	ResponseCodeTypeErrorAccessDeniedDueToCompliance ResponseCodeType = "ErrorAccessDeniedDueToCompliance"

	ResponseCodeTypeErrorRecoverableItemsAccessDenied ResponseCodeType = "ErrorRecoverableItemsAccessDenied"
)

type ListOfExtensionIdsType []GuidType

type GetFolder GetFolderType

type UploadItems UploadItemsType

type UploadItemsResponse UploadItemsResponseType

type ExportItems ExportItemsType

type ExportItemsResponse ExportItemsResponseType

type CreateFolder CreateFolderType

type FindFolder FindFolderType

type FindFolderResponse FindFolderResponseType

type DeleteFolder DeleteFolderType

type DeleteFolderResponse DeleteFolderResponseType

type EmptyFolder EmptyFolderType

type EmptyFolderResponse EmptyFolderResponseType

type MoveFolder MoveFolderType

type CopyFolder CopyFolderType

type UpdateFolder UpdateFolderType

type CreateFolderResponse CreateFolderResponseType

type GetFolderResponse GetFolderResponseType

type UpdateFolderResponse UpdateFolderResponseType

type MoveFolderResponse MoveFolderResponseType

type CopyFolderResponse CopyFolderResponseType

type CreateFolderPath CreateFolderPathType

type CreateFolderPathResponse CreateFolderPathResponseType

type GetItem GetItemType

type CreateItem CreateItemType

type UpdateItem UpdateItemType

type UpdateItemInRecoverableItems UpdateItemInRecoverableItemsType

type DeleteItem DeleteItemType

type MoveItem MoveItemType

type CopyItem CopyItemType

type ArchiveItem ArchiveItemType

type SendItem SendItemType

type SendItemResponse SendItemResponseType

type FindItem FindItemType

type FindConversation FindConversationType

type FindConversationResponse FindConversationResponseMessageType

type PerformInstantSearch PerformInstantSearchRequest

type EndInstantSearchSession EndInstantSearchSessionRequest

type ApplyConversationAction ApplyConversationActionType

type ApplyConversationActionResponse ApplyConversationActionResponseType

type FindPeople FindPeopleType

type FindPeopleResponse FindPeopleResponseMessageType

type FindTags FindTagsType

type FindTagsResponse FindTagsResponseMessageType

type AddTag AddTagType

type AddTagResponse AddTagResponseMessageType

type HideTag HideTagType

type HideTagResponse HideTagResponseMessageType

type GetPersona GetPersonaType

type GetPersonaResponseMessage GetPersonaResponseMessageType

type CreateAttachment CreateAttachmentType

type CreateAttachmentResponse CreateAttachmentResponseType

type DeleteAttachment DeleteAttachmentType

type DeleteAttachmentResponse DeleteAttachmentResponseType

type GetAttachment GetAttachmentType

type GetAttachmentResponse GetAttachmentResponseType

type CreateItemResponse CreateItemResponseType

type UpdateItemResponse UpdateItemResponseType

type UpdateItemInRecoverableItemsResponse UpdateItemInRecoverableItemsResponseType

type GetItemResponse GetItemResponseType

type MoveItemResponse MoveItemResponseType

type CopyItemResponse CopyItemResponseType

type DeleteItemResponse DeleteItemResponseType

type FindItemResponse FindItemResponseType

type ArchiveItemResponse ArchiveItemResponseType

type GetClientAccessToken GetClientAccessTokenType

type GetClientAccessTokenResponse GetClientAccessTokenResponseType

type GetFocusedOtherOverrides GetFocusedOtherOverridesRequestType

type GetFocusedOtherOverridesResponse GetFocusedOtherOverridesResponseType

type CreateOrUpdateFocusedOtherOverride CreateOrUpdateFocusedOtherOverrideRequestType

type CreateOrUpdateFocusedOtherOverrideResponse CreateOrUpdateFocusedOtherOverrideResponseType

type DeleteFocusedOtherOverride DeleteFocusedOtherOverrideRequestType

type DeleteFocusedOtherOverrideResponse DeleteFocusedOtherOverrideResponseType

type ResolveNames ResolveNamesType

type ResolveNamesResponse ResolveNamesResponseType

type GetPasswordExpirationDate GetPasswordExpirationDateType

type GetPasswordExpirationDateResponse GetPasswordExpirationDateResponseMessageType

type GetMailTips GetMailTipsType

type GetMailTipsResponse GetMailTipsResponseMessageType

type PlayOnPhone PlayOnPhoneType

type PlayOnPhoneResponse PlayOnPhoneResponseMessageType

type GetPhoneCallInformation GetPhoneCallInformationType

type GetPhoneCallInformationResponse GetPhoneCallInformationResponseMessageType

type DisconnectPhoneCall DisconnectPhoneCallType

type DisconnectPhoneCallResponse DisconnectPhoneCallResponseMessageType

type ExpandDL ExpandDLType

type ExpandDLResponse ExpandDLResponseType

type GetServerTimeZones GetServerTimeZonesType

type GetServerTimeZonesResponse GetServerTimeZonesResponseType

type CreateManagedFolder CreateManagedFolderRequestType

type CreateManagedFolderResponse CreateManagedFolderResponseType

type Subscribe SubscribeType

type SubscribeResponse SubscribeResponseType

type Unsubscribe UnsubscribeType

type UnsubscribeResponse UnsubscribeResponseType

type GetEvents GetEventsType

type GetEventsResponse GetEventsResponseType

type GetStreamingEvents GetStreamingEventsType

type GetStreamingEventsResponse GetStreamingEventsResponseType

type SendNotification SendNotificationResponseType

type SendNotificationResult SendNotificationResultType

type SyncFolderHierarchy SyncFolderHierarchyType

type SyncFolderHierarchyResponse SyncFolderHierarchyResponseType

type SyncFolderItems SyncFolderItemsType

type SyncFolderItemsResponse SyncFolderItemsResponseType

type GetUserAvailabilityRequest GetUserAvailabilityRequestType

type GetUserAvailabilityResponse GetUserAvailabilityResponseType

type ConvertId ConvertIdType

type ConvertIdResponse ConvertIdResponseType

type GetDelegate GetDelegateType

type GetDelegateResponse GetDelegateResponseMessageType

type AddDelegate AddDelegateType

type AddDelegateResponse AddDelegateResponseMessageType

type RemoveDelegate RemoveDelegateType

type RemoveDelegateResponse RemoveDelegateResponseMessageType

type UpdateDelegate UpdateDelegateType

type UpdateDelegateResponse UpdateDelegateResponseMessageType

type GetSharingMetadata GetSharingMetadataType

type GetSharingMetadataResponse GetSharingMetadataResponseMessageType

type RefreshSharingFolder RefreshSharingFolderType

type RefreshSharingFolderResponse RefreshSharingFolderResponseMessageType

type GetSharingFolder GetSharingFolderType

type GetSharingFolderResponse GetSharingFolderResponseMessageType

type CreateUserConfiguration CreateUserConfigurationType

type CreateUserConfigurationResponse CreateUserConfigurationResponseType

type DeleteUserConfiguration DeleteUserConfigurationType

type DeleteUserConfigurationResponse DeleteUserConfigurationResponseType

type GetUserConfiguration GetUserConfigurationType

type GetUserConfigurationResponse GetUserConfigurationResponseType

type GetSpecificUserConfiguration GetSpecificUserConfigurationType

type GetSpecificUserConfigurationResponse GetSpecificUserConfigurationResponseType

type UpdateUserConfiguration UpdateUserConfigurationType

type UpdateUserConfigurationResponse UpdateUserConfigurationResponseType

type SetTeamMailbox SetTeamMailboxRequestType

type UnpinTeamMailbox UnpinTeamMailboxRequestType

type SetTeamMailboxResponse SetTeamMailboxResponseMessageType

type UnpinTeamMailboxResponse UnpinTeamMailboxResponseMessageType

type GetRoomLists GetRoomListsType

type GetRoomListsResponse GetRoomListsResponseMessageType

type GetRooms GetRoomsType

type GetRoomsResponse GetRoomsResponseMessageType

type GetReminders GetRemindersType

type GetRemindersResponse GetRemindersResponseMessageType

type PerformReminderAction PerformReminderActionType

type PerformReminderActionResponse PerformReminderActionResponseMessageType

type GetServiceConfiguration GetServiceConfigurationType

type GetServiceConfigurationResponse GetServiceConfigurationResponseMessageType

type FindMessageTrackingReport FindMessageTrackingReportRequestType

type FindMessageTrackingReportResponse FindMessageTrackingReportResponseMessageType

type GetMessageTrackingReport GetMessageTrackingReportRequestType

type GetMessageTrackingReportResponse GetMessageTrackingReportResponseMessageType

type GetInboxRules GetInboxRulesRequestType

type GetInboxRulesResponse GetInboxRulesResponseType

type UpdateInboxRules UpdateInboxRulesRequestType

type UpdateInboxRulesResponse UpdateInboxRulesResponseType

type FindMailboxStatisticsByKeywords FindMailboxStatisticsByKeywordsType

type FindMailboxStatisticsByKeywordsResponse FindMailboxStatisticsByKeywordsResponseType

type GetSearchableMailboxes GetSearchableMailboxesType

type GetSearchableMailboxesResponse GetSearchableMailboxesResponseMessageType

type SearchMailboxes SearchMailboxesType

type SearchMailboxesResponse SearchMailboxesResponseType

type GetDiscoverySearchConfiguration GetDiscoverySearchConfigurationType

type GetDiscoverySearchConfigurationResponse GetDiscoverySearchConfigurationResponseMessageType

type GetHoldOnMailboxes GetHoldOnMailboxesType

type GetHoldOnMailboxesResponse GetHoldOnMailboxesResponseMessageType

type SetHoldOnMailboxes SetHoldOnMailboxesType

type SetHoldOnMailboxesResponse SetHoldOnMailboxesResponseMessageType

type GetNonIndexableItemStatistics GetNonIndexableItemStatisticsType

type GetNonIndexableItemStatisticsResponse GetNonIndexableItemStatisticsResponseMessageType

type GetNonIndexableItemDetails GetNonIndexableItemDetailsType

type GetNonIndexableItemDetailsResponse GetNonIndexableItemDetailsResponseMessageType

type MarkAllItemsAsRead MarkAllItemsAsReadType

type MarkAllItemsAsReadResponse MarkAllItemsAsReadResponseType

type GetConversationItems GetConversationItemsType

type GetConversationItemsResponse GetConversationItemsResponseType

type GetOMEConfiguration GetOMEConfigurationType

type GetOMEConfigurationResponse OMEConfigurationResponseType

type SetOMEConfiguration SetOMEConfigurationType

type SetOMEConfigurationResponse SetOMEConfigurationResponseType

type GetOMEMessageStatus GetOMEMessageStatusType

type GetOMEMessageStatusResponse GetOMEMessageStatusResponseType

type SetOMEMessageStatus SetOMEMessageStatusType

type SetOMEMessageStatusResponse SetOMEMessageStatusResponseType

type GetAppManifests GetAppManifestsType

type GetAppManifestsResponse GetAppManifestsResponseType

type GetAppMarketplaceUrl GetAppMarketplaceUrlType

type GetAppMarketplaceUrlResponse GetAppMarketplaceUrlResponseMessageType

type MarkAsJunk MarkAsJunkType

type MarkAsJunkResponse MarkAsJunkResponseType

type MarkAsPhishing MarkAsPhishingType

type MarkAsPhishingResponse MarkAsPhishingResponseType

type ReportMessage ReportMessageType

type ReportMessageResponse ReportMessageResponseType

type InstallApp InstallAppType

type InstallAppResponse InstallAppResponseType

type UpdateExtensionUsage UpdateExtensionUsageType

type UpdateExtensionUsageResponse UpdateExtensionUsageResponseType

type UninstallApp UninstallAppType

type UninstallAppResponse UninstallAppResponseType

type DisableApp DisableAppType

type DisableAppResponse DisableAppResponseType

type AddNewImContactToGroup AddNewImContactToGroupType

type AddNewImContactToGroupResponse AddNewImContactToGroupResponseMessageType

type AddNewTelUriContactToGroup AddNewTelUriContactToGroupType

type AddNewTelUriContactToGroupResponse AddNewTelUriContactToGroupResponseMessageType

type AddImContactToGroup AddImContactToGroupType

type AddImContactToGroupResponse AddImContactToGroupResponseMessageType

type RemoveImContactFromGroup RemoveImContactFromGroupType

type RemoveImContactFromGroupResponse RemoveImContactFromGroupResponseMessageType

type AddImGroup AddImGroupType

type AddImGroupResponse AddImGroupResponseMessageType

type AddDistributionGroupToImList AddDistributionGroupToImListType

type AddDistributionGroupToImListResponse AddDistributionGroupToImListResponseMessageType

type GetImItemList GetImItemListType

type GetImItemListResponse GetImItemListResponseMessageType

type GetImItems GetImItemsType

type GetImItemsResponse GetImItemsResponseMessageType

type RemoveContactFromImList RemoveContactFromImListType

type RemoveContactFromImListResponse RemoveContactFromImListResponseMessageType

type RemoveDistributionGroupFromImList RemoveDistributionGroupFromImListType

type RemoveDistributionGroupFromImListResponse RemoveDistributionGroupFromImListResponseMessageType

type RemoveImGroup RemoveImGroupType

type RemoveImGroupResponse RemoveImGroupResponseMessageType

type SetImGroup SetImGroupType

type SetImGroupResponse SetImGroupResponseMessageType

type SetImListMigrationCompleted SetImListMigrationCompletedType

type SetImListMigrationCompletedResponse SetImListMigrationCompletedResponseMessageType

type GetUserRetentionPolicyTags GetUserRetentionPolicyTagsType

type GetUserRetentionPolicyTagsResponse GetUserRetentionPolicyTagsResponseMessageType

type GetUserPhoto GetUserPhotoType

type GetUserPhotoResponse GetUserPhotoResponseMessageType

type GetMeetingSpace GetMeetingSpaceType

type GetMeetingSpaceResponseMessage GetMeetingSpaceResponseMessageType

type CreateMeetingSpace CreateMeetingSpaceType

type CreateMeetingSpaceResponseMessage CreateMeetingSpaceResponseMessageType

type UpdateMeetingSpace UpdateMeetingSpaceType

type UpdateMeetingSpaceResponseMessage UpdateMeetingSpaceResponseMessageType

type FindMeetingSpaceByJoinUrl FindMeetingSpaceByJoinUrlType

type FindMeetingSpaceByJoinUrlResponseMessage FindMeetingSpaceByJoinUrlResponseMessageType

type DeleteMeetingSpace DeleteMeetingSpaceType

type DeleteMeetingSpaceResponseMessage DeleteMeetingSpaceResponseMessageType

type GetMeetingInstanceRequest GetMeetingInstanceRequestType

type GetMeetingInstanceResponse GetMeetingInstanceResponseMessageType

type CreateMeetingInstanceRequest CreateMeetingInstanceRequestType

type CreateMeetingInstanceResponse CreateMeetingInstanceResponseMessageType

type UpdateMeetingInstanceRequest UpdateMeetingInstanceRequestType

type UpdateMeetingInstanceResponse UpdateMeetingInstanceResponseMessageType

type DeleteMeetingInstanceRequest DeleteMeetingInstanceRequestType

type DeleteMeetingInstanceResponse DeleteMeetingInstanceResponseMessageType

type SetUserPhoto SetUserPhotoType

type SetUserPhotoResponse SetUserPhotoResponseMessageType

type RegisterConsent RegisterConsentType

type RegisterConsentResponse RegisterConsentResponseMessageType

type FindAvailableMeetingTimes FindAvailableMeetingTimesType

type FindAvailableMeetingTimesResponse FindAvailableMeetingTimesResponseMessageType

type FindMeetingTimeCandidates FindMeetingTimeCandidatesType

type FindMeetingTimeCandidatesResponse FindMeetingTimeCandidatesResponseMessageType

type StartSearchSessionResponse StartSearchSessionResponseMessage

type GetSearchSuggestionsResponse GetSearchSuggestionsResponseMessage

type DeleteSearchSuggestionResponse DeleteSearchSuggestionResponseMessageType

type ExecuteSearchResponse ExecuteSearchResponseMessage

type EndSearchSessionResponse EndSearchSessionResponseMessage

type GetLastPrivateCatalogUpdate GetLastPrivateCatalogUpdateType

type GetLastPrivateCatalogUpdateResponse GetLastPrivateCatalogUpdateResponseType

type GetPrivateCatalogAddIns GetPrivateCatalogAddInsType

type GetPrivateCatalogAddInsResponse GetPrivateCatalogAddInsResponseType

type ResponseMessageType struct {
	MessageText XsString `xml:"MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode *ResponseCodeType `xml:"ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	DescriptiveLinkKey XsInt `xml:"DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty"`

	MessageXml struct {
	} `xml:"MessageXml,omitempty" json:"MessageXml,omitempty"`

	ResponseClass *ResponseClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type ArrayOfResponseMessagesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages"`

	CreateItemResponseMessage *ItemInfoResponseMessageType `xml:"CreateItemResponseMessage,omitempty" json:"CreateItemResponseMessage,omitempty"`

	DeleteItemResponseMessage *DeleteItemResponseMessageType `xml:"DeleteItemResponseMessage,omitempty" json:"DeleteItemResponseMessage,omitempty"`

	GetItemResponseMessage *ItemInfoResponseMessageType `xml:"GetItemResponseMessage,omitempty" json:"GetItemResponseMessage,omitempty"`

	UpdateItemResponseMessage *UpdateItemResponseMessageType `xml:"UpdateItemResponseMessage,omitempty" json:"UpdateItemResponseMessage,omitempty"`

	UpdateItemInRecoverableItemsResponseMessage *UpdateItemInRecoverableItemsResponseMessageType `xml:"UpdateItemInRecoverableItemsResponseMessage,omitempty" json:"UpdateItemInRecoverableItemsResponseMessage,omitempty"`

	SendItemResponseMessage *ResponseMessageType `xml:"SendItemResponseMessage,omitempty" json:"SendItemResponseMessage,omitempty"`

	DeleteFolderResponseMessage *ResponseMessageType `xml:"DeleteFolderResponseMessage,omitempty" json:"DeleteFolderResponseMessage,omitempty"`

	EmptyFolderResponseMessage *ResponseMessageType `xml:"EmptyFolderResponseMessage,omitempty" json:"EmptyFolderResponseMessage,omitempty"`

	CreateFolderResponseMessage *FolderInfoResponseMessageType `xml:"CreateFolderResponseMessage,omitempty" json:"CreateFolderResponseMessage,omitempty"`

	GetFolderResponseMessage *FolderInfoResponseMessageType `xml:"GetFolderResponseMessage,omitempty" json:"GetFolderResponseMessage,omitempty"`

	FindFolderResponseMessage *FindFolderResponseMessageType `xml:"FindFolderResponseMessage,omitempty" json:"FindFolderResponseMessage,omitempty"`

	UpdateFolderResponseMessage *FolderInfoResponseMessageType `xml:"UpdateFolderResponseMessage,omitempty" json:"UpdateFolderResponseMessage,omitempty"`

	MoveFolderResponseMessage *FolderInfoResponseMessageType `xml:"MoveFolderResponseMessage,omitempty" json:"MoveFolderResponseMessage,omitempty"`

	CopyFolderResponseMessage *FolderInfoResponseMessageType `xml:"CopyFolderResponseMessage,omitempty" json:"CopyFolderResponseMessage,omitempty"`

	CreateFolderPathResponseMessage *FolderInfoResponseMessageType `xml:"CreateFolderPathResponseMessage,omitempty" json:"CreateFolderPathResponseMessage,omitempty"`

	CreateAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"CreateAttachmentResponseMessage,omitempty" json:"CreateAttachmentResponseMessage,omitempty"`

	DeleteAttachmentResponseMessage *DeleteAttachmentResponseMessageType `xml:"DeleteAttachmentResponseMessage,omitempty" json:"DeleteAttachmentResponseMessage,omitempty"`

	GetAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"GetAttachmentResponseMessage,omitempty" json:"GetAttachmentResponseMessage,omitempty"`

	UploadItemsResponseMessage *UploadItemsResponseMessageType `xml:"UploadItemsResponseMessage,omitempty" json:"UploadItemsResponseMessage,omitempty"`

	ExportItemsResponseMessage *ExportItemsResponseMessageType `xml:"ExportItemsResponseMessage,omitempty" json:"ExportItemsResponseMessage,omitempty"`

	MarkAllItemsAsReadResponseMessage *ResponseMessageType `xml:"MarkAllItemsAsReadResponseMessage,omitempty" json:"MarkAllItemsAsReadResponseMessage,omitempty"`

	GetClientAccessTokenResponseMessage *GetClientAccessTokenResponseMessageType `xml:"GetClientAccessTokenResponseMessage,omitempty" json:"GetClientAccessTokenResponseMessage,omitempty"`

	GetAppManifestsResponseMessage *ResponseMessageType `xml:"GetAppManifestsResponseMessage,omitempty" json:"GetAppManifestsResponseMessage,omitempty"`

	SetClientExtensionResponseMessage *ResponseMessageType `xml:"SetClientExtensionResponseMessage,omitempty" json:"SetClientExtensionResponseMessage,omitempty"`

	GetOMEConfigurationResponseMessage *ResponseMessageType `xml:"GetOMEConfigurationResponseMessage,omitempty" json:"GetOMEConfigurationResponseMessage,omitempty"`

	SetOMEConfigurationResponseMessage *ResponseMessageType `xml:"SetOMEConfigurationResponseMessage,omitempty" json:"SetOMEConfigurationResponseMessage,omitempty"`

	GetOMEMessageStatusResponseType *ResponseMessageType `xml:"GetOMEMessageStatusResponseType,omitempty" json:"GetOMEMessageStatusResponseType,omitempty"`

	SetOMEMessageStatusResponseType *ResponseMessageType `xml:"SetOMEMessageStatusResponseType,omitempty" json:"SetOMEMessageStatusResponseType,omitempty"`

	FindItemResponseMessage *FindItemResponseMessageType `xml:"FindItemResponseMessage,omitempty" json:"FindItemResponseMessage,omitempty"`

	MoveItemResponseMessage *ItemInfoResponseMessageType `xml:"MoveItemResponseMessage,omitempty" json:"MoveItemResponseMessage,omitempty"`

	ArchiveItemResponseMessage *ItemInfoResponseMessageType `xml:"ArchiveItemResponseMessage,omitempty" json:"ArchiveItemResponseMessage,omitempty"`

	CopyItemResponseMessage *ItemInfoResponseMessageType `xml:"CopyItemResponseMessage,omitempty" json:"CopyItemResponseMessage,omitempty"`

	ResolveNamesResponseMessage *ResolveNamesResponseMessageType `xml:"ResolveNamesResponseMessage,omitempty" json:"ResolveNamesResponseMessage,omitempty"`

	ExpandDLResponseMessage *ExpandDLResponseMessageType `xml:"ExpandDLResponseMessage,omitempty" json:"ExpandDLResponseMessage,omitempty"`

	GetServerTimeZonesResponseMessage *GetServerTimeZonesResponseMessageType `xml:"GetServerTimeZonesResponseMessage,omitempty" json:"GetServerTimeZonesResponseMessage,omitempty"`

	GetEventsResponseMessage *GetEventsResponseMessageType `xml:"GetEventsResponseMessage,omitempty" json:"GetEventsResponseMessage,omitempty"`

	GetStreamingEventsResponseMessage *GetStreamingEventsResponseMessageType `xml:"GetStreamingEventsResponseMessage,omitempty" json:"GetStreamingEventsResponseMessage,omitempty"`

	SubscribeResponseMessage *SubscribeResponseMessageType `xml:"SubscribeResponseMessage,omitempty" json:"SubscribeResponseMessage,omitempty"`

	UnsubscribeResponseMessage *ResponseMessageType `xml:"UnsubscribeResponseMessage,omitempty" json:"UnsubscribeResponseMessage,omitempty"`

	SendNotificationResponseMessage *SendNotificationResponseMessageType `xml:"SendNotificationResponseMessage,omitempty" json:"SendNotificationResponseMessage,omitempty"`

	SyncFolderHierarchyResponseMessage *SyncFolderHierarchyResponseMessageType `xml:"SyncFolderHierarchyResponseMessage,omitempty" json:"SyncFolderHierarchyResponseMessage,omitempty"`

	SyncFolderItemsResponseMessage *SyncFolderItemsResponseMessageType `xml:"SyncFolderItemsResponseMessage,omitempty" json:"SyncFolderItemsResponseMessage,omitempty"`

	CreateManagedFolderResponseMessage *FolderInfoResponseMessageType `xml:"CreateManagedFolderResponseMessage,omitempty" json:"CreateManagedFolderResponseMessage,omitempty"`

	ConvertIdResponseMessage *ConvertIdResponseMessageType `xml:"ConvertIdResponseMessage,omitempty" json:"ConvertIdResponseMessage,omitempty"`

	GetSharingMetadataResponseMessage *GetSharingMetadataResponseMessageType `xml:"GetSharingMetadataResponseMessage,omitempty" json:"GetSharingMetadataResponseMessage,omitempty"`

	RefreshSharingFolderResponseMessage *RefreshSharingFolderResponseMessageType `xml:"RefreshSharingFolderResponseMessage,omitempty" json:"RefreshSharingFolderResponseMessage,omitempty"`

	GetSharingFolderResponseMessage *GetSharingFolderResponseMessageType `xml:"GetSharingFolderResponseMessage,omitempty" json:"GetSharingFolderResponseMessage,omitempty"`

	CreateUserConfigurationResponseMessage *ResponseMessageType `xml:"CreateUserConfigurationResponseMessage,omitempty" json:"CreateUserConfigurationResponseMessage,omitempty"`

	DeleteUserConfigurationResponseMessage *ResponseMessageType `xml:"DeleteUserConfigurationResponseMessage,omitempty" json:"DeleteUserConfigurationResponseMessage,omitempty"`

	GetUserConfigurationResponseMessage *GetUserConfigurationResponseMessageType `xml:"GetUserConfigurationResponseMessage,omitempty" json:"GetUserConfigurationResponseMessage,omitempty"`

	GetSpecificUserConfigurationResponseMessage *GetSpecificUserConfigurationResponseMessageType `xml:"GetSpecificUserConfigurationResponseMessage,omitempty" json:"GetSpecificUserConfigurationResponseMessage,omitempty"`

	UpdateUserConfigurationResponseMessage *ResponseMessageType `xml:"UpdateUserConfigurationResponseMessage,omitempty" json:"UpdateUserConfigurationResponseMessage,omitempty"`

	GetRoomListsResponse *GetRoomListsResponseMessageType `xml:"GetRoomListsResponse,omitempty" json:"GetRoomListsResponse,omitempty"`

	GetRoomsResponse *GetRoomsResponseMessageType `xml:"GetRoomsResponse,omitempty" json:"GetRoomsResponse,omitempty"`

	GetRemindersResponse *GetRemindersResponseMessageType `xml:"GetRemindersResponse,omitempty" json:"GetRemindersResponse,omitempty"`

	PerformReminderActionResponse *PerformReminderActionResponseMessageType `xml:"PerformReminderActionResponse,omitempty" json:"PerformReminderActionResponse,omitempty"`

	ApplyConversationActionResponseMessage *ApplyConversationActionResponseMessageType `xml:"ApplyConversationActionResponseMessage,omitempty" json:"ApplyConversationActionResponseMessage,omitempty"`

	FindMailboxStatisticsByKeywordsResponseMessage *FindMailboxStatisticsByKeywordsResponseMessageType `xml:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty" json:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty"`

	GetSearchableMailboxesResponseMessage *GetSearchableMailboxesResponseMessageType `xml:"GetSearchableMailboxesResponseMessage,omitempty" json:"GetSearchableMailboxesResponseMessage,omitempty"`

	SearchMailboxesResponseMessage *SearchMailboxesResponseMessageType `xml:"SearchMailboxesResponseMessage,omitempty" json:"SearchMailboxesResponseMessage,omitempty"`

	GetDiscoverySearchConfigurationResponseMessage *GetDiscoverySearchConfigurationResponseMessageType `xml:"GetDiscoverySearchConfigurationResponseMessage,omitempty" json:"GetDiscoverySearchConfigurationResponseMessage,omitempty"`

	GetHoldOnMailboxesResponseMessage *GetHoldOnMailboxesResponseMessageType `xml:"GetHoldOnMailboxesResponseMessage,omitempty" json:"GetHoldOnMailboxesResponseMessage,omitempty"`

	SetHoldOnMailboxesResponseMessage *SetHoldOnMailboxesResponseMessageType `xml:"SetHoldOnMailboxesResponseMessage,omitempty" json:"SetHoldOnMailboxesResponseMessage,omitempty"`

	GetNonIndexableItemStatisticsResponseMessage *GetNonIndexableItemStatisticsResponseMessageType `xml:"GetNonIndexableItemStatisticsResponseMessage,omitempty" json:"GetNonIndexableItemStatisticsResponseMessage,omitempty"`

	GetNonIndexableItemDetailsResponseMessage *GetNonIndexableItemDetailsResponseMessageType `xml:"GetNonIndexableItemDetailsResponseMessage,omitempty" json:"GetNonIndexableItemDetailsResponseMessage,omitempty"`

	FindPeopleResponseMessage *FindPeopleResponseMessageType `xml:"FindPeopleResponseMessage,omitempty" json:"FindPeopleResponseMessage,omitempty"`

	FindTagsResponseMessage *FindTagsResponseMessageType `xml:"FindTagsResponseMessage,omitempty" json:"FindTagsResponseMessage,omitempty"`

	AddTagResponseMessage *AddTagResponseMessageType `xml:"AddTagResponseMessage,omitempty" json:"AddTagResponseMessage,omitempty"`

	HideTagResponseMessage *HideTagResponseMessageType `xml:"HideTagResponseMessage,omitempty" json:"HideTagResponseMessage,omitempty"`

	GetPasswordExpirationDateResponse *GetPasswordExpirationDateResponseMessageType `xml:"GetPasswordExpirationDateResponse,omitempty" json:"GetPasswordExpirationDateResponse,omitempty"`

	GetPersonaResponseMessage *GetPersonaResponseMessageType `xml:"GetPersonaResponseMessage,omitempty" json:"GetPersonaResponseMessage,omitempty"`

	GetConversationItemsResponseMessage *GetConversationItemsResponseMessageType `xml:"GetConversationItemsResponseMessage,omitempty" json:"GetConversationItemsResponseMessage,omitempty"`

	GetUserRetentionPolicyTagsResponseMessage *GetUserRetentionPolicyTagsResponseMessageType `xml:"GetUserRetentionPolicyTagsResponseMessage,omitempty" json:"GetUserRetentionPolicyTagsResponseMessage,omitempty"`

	GetUserPhotoResponseMessage *GetUserPhotoResponseMessageType `xml:"GetUserPhotoResponseMessage,omitempty" json:"GetUserPhotoResponseMessage,omitempty"`

	MarkAsJunkResponseMessage *MarkAsJunkResponseMessageType `xml:"MarkAsJunkResponseMessage,omitempty" json:"MarkAsJunkResponseMessage,omitempty"`

	MarkAsPhishingResponseMessage *MarkAsPhishingResponseMessageType `xml:"MarkAsPhishingResponseMessage,omitempty" json:"MarkAsPhishingResponseMessage,omitempty"`

	ReportMessageResponseMessage *ReportMessageResponseMessageType `xml:"ReportMessageResponseMessage,omitempty" json:"ReportMessageResponseMessage,omitempty"`

	PostModernGroupItemResponseMessage *ItemInfoResponseMessageType `xml:"PostModernGroupItemResponseMessage,omitempty" json:"PostModernGroupItemResponseMessage,omitempty"`

	GetLastPrivateCatalogUpdateResponseMessage *ResponseMessageType `xml:"GetLastPrivateCatalogUpdateResponseMessage,omitempty" json:"GetLastPrivateCatalogUpdateResponseMessage,omitempty"`

	GetPrivateCatalogAddInsResponseMessage *ResponseMessageType `xml:"GetPrivateCatalogAddInsResponseMessage,omitempty" json:"GetPrivateCatalogAddInsResponseMessage,omitempty"`
}

type BaseResponseMessageType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseRequestType struct {
}

type GetFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"FolderShape,omitempty" json:"FolderShape,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type UploadItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItems"`

	*BaseRequestType

	Items *NonEmptyArrayOfUploadItemsType `xml:"Items,omitempty" json:"Items,omitempty"`
}

type UploadItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type UploadItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItemsResponse"`

	*BaseResponseMessageType
}

type ExportItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItems"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type ExportItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	Data XsBase64Binary `xml:"Data,omitempty" json:"Data,omitempty"`
}

type ExportItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItemsResponse"`

	*BaseResponseMessageType
}

type CreateFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolder"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	Folders *NonEmptyArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"FolderShape,omitempty" json:"FolderShape,omitempty"`

	Restriction *RestrictionType `xml:"Restriction,omitempty" json:"Restriction,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	IndexedPageFolderView *IndexedPageViewType `xml:"IndexedPageFolderView,omitempty" json:"IndexedPageFolderView,omitempty"`

	FractionalPageFolderView *FractionalPageViewType `xml:"FractionalPageFolderView,omitempty" json:"FractionalPageFolderView,omitempty"`

	Traversal *FolderQueryTraversalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FolderInfoResponseMessageType struct {
	*ResponseMessageType

	Folders *ArrayOfFoldersType `xml:"Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolderResponseMessage"`

	*ResponseMessageType

	RootFolder *FindFolderParentType `xml:"RootFolder,omitempty" json:"RootFolder,omitempty"`
}

type FindFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolderResponse"`

	*BaseResponseMessageType
}

type DeleteFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteType,attr,omitempty" json:"DeleteType,omitempty"`
}

type DeleteFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFolderResponse"`

	*BaseResponseMessageType
}

type EmptyFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptyFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	DeleteSubFolders XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteSubFolders,attr,omitempty" json:"DeleteSubFolders,omitempty"`
}

type EmptyFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptyFolderResponse"`

	*BaseResponseMessageType
}

type BaseMoveCopyFolderType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MoveFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveFolder"`

	*BaseMoveCopyFolderType
}

type CopyFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyFolder"`

	*BaseMoveCopyFolderType
}

type UpdateFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateFolder"`

	*BaseRequestType

	FolderChanges *NonEmptyArrayOfFolderChangesType `xml:"FolderChanges,omitempty" json:"FolderChanges,omitempty"`
}

type CreateFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderResponse"`

	*BaseResponseMessageType
}

type GetFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFolderResponse"`

	*BaseResponseMessageType
}

type UpdateFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateFolderResponse"`

	*BaseResponseMessageType
}

type MoveFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveFolderResponse"`

	*BaseResponseMessageType
}

type CopyFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyFolderResponse"`

	*BaseResponseMessageType
}

type CreateFolderPathType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderPath"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	RelativeFolderPath *NonEmptyArrayOfFoldersType `xml:"RelativeFolderPath,omitempty" json:"RelativeFolderPath,omitempty"`
}

type CreateFolderPathResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderPathResponse"`

	*BaseResponseMessageType
}

type GetItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"ItemShape,omitempty" json:"ItemShape,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type CreateItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"Items,omitempty" json:"Items,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitations *CalendarItemCreateOrDeleteOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendMeetingInvitations,attr,omitempty" json:"SendMeetingInvitations,omitempty"`
}

type UpdateItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	ItemChanges *NonEmptyArrayOfItemChangesType `xml:"ItemChanges,omitempty" json:"ItemChanges,omitempty"`

	ConflictResolution *ConflictResolutionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConflictResolution,attr,omitempty" json:"ConflictResolution,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitationsOrCancellations *CalendarItemUpdateOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendMeetingInvitationsOrCancellations,attr,omitempty" json:"SendMeetingInvitationsOrCancellations,omitempty"`

	SuppressReadReceipts XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type ItemInfoResponseMessageType struct {
	*ResponseMessageType

	Items *ArrayOfRealItemsType `xml:"Items,omitempty" json:"Items,omitempty"`
}

type UpdateItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemResponseMessage"`

	*ItemInfoResponseMessageType

	ConflictResults *ConflictResultsType `xml:"ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type UpdateItemInRecoverableItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItems"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"Updates,omitempty" json:"Updates,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty"`

	MakeItemImmutable XsBoolean `xml:"MakeItemImmutable,omitempty" json:"MakeItemImmutable,omitempty"`
}

type UpdateItemInRecoverableItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItemsResponseMessage"`

	*ItemInfoResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty"`

	ConflictResults *ConflictResultsType `xml:"ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type DeleteItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	DeleteType *DisposalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	SendMeetingCancellations *CalendarItemCreateOrDeleteOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendMeetingCancellations,attr,omitempty" json:"SendMeetingCancellations,omitempty"`

	AffectedTaskOccurrences *AffectedTaskOccurrencesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AffectedTaskOccurrences,attr,omitempty" json:"AffectedTaskOccurrences,omitempty"`

	SuppressReadReceipts XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type AttachmentInfoResponseMessageType struct {
	*ResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty"`
}

type DeleteAttachmentResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachmentResponseMessage"`

	*ResponseMessageType

	RootItemId *RootItemIdType `xml:"RootItemId,omitempty" json:"RootItemId,omitempty"`
}

type BaseMoveCopyItemType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	ReturnNewItemIds XsBoolean `xml:"ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty"`
}

type MoveItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItem"`

	*BaseMoveCopyItemType
}

type CopyItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyItem"`

	*BaseMoveCopyItemType
}

type ArchiveItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveItem"`

	*BaseRequestType

	ArchiveSourceFolderId *TargetFolderIdType `xml:"ArchiveSourceFolderId,omitempty" json:"ArchiveSourceFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type SendItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	SavedItemFolderId *TargetFolderIdType `xml:"SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	SaveItemToFolder XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SaveItemToFolder,attr,omitempty" json:"SaveItemToFolder,omitempty"`
}

type SendItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendItemResponse"`

	*BaseResponseMessageType
}

type QueryStringType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryString"`

	Value XsString `xml:",chardata" json:"-,"`

	ResetCache XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResetCache,attr,omitempty" json:"ResetCache,omitempty"`

	ReturnHighlightTerms XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnHighlightTerms,attr,omitempty" json:"ReturnHighlightTerms,omitempty"`

	ReturnDeletedItems XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnDeletedItems,attr,omitempty" json:"ReturnDeletedItems,omitempty"`
}

type FindItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"ItemShape,omitempty" json:"ItemShape,omitempty"`

	Restriction *RestrictionType `xml:"Restriction,omitempty" json:"Restriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	QueryString *QueryStringType `xml:"QueryString,omitempty" json:"QueryString,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	FractionalPageItemView *FractionalPageViewType `xml:"FractionalPageItemView,omitempty" json:"FractionalPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	CalendarView *CalendarViewType `xml:"CalendarView,omitempty" json:"CalendarView,omitempty"`

	ContactsView *ContactsViewType `xml:"ContactsView,omitempty" json:"ContactsView,omitempty"`

	GroupBy *GroupByType `xml:"GroupBy,omitempty" json:"GroupBy,omitempty"`

	DistinguishedGroupBy *DistinguishedGroupByType `xml:"DistinguishedGroupBy,omitempty" json:"DistinguishedGroupBy,omitempty"`

	Traversal *ItemQueryTraversalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FindConversationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindConversation"`

	*BaseRequestType

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	QueryString *QueryStringType `xml:"QueryString,omitempty" json:"QueryString,omitempty"`

	ConversationShape *ConversationResponseShapeType `xml:"ConversationShape,omitempty" json:"ConversationShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	Traversal *ConversationQueryTraversalType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Traversal,attr,omitempty" json:"Traversal,omitempty"`

	ViewFilter *ViewFilterType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ViewFilter,attr,omitempty" json:"ViewFilter,omitempty"`
}

type FindConversationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindConversationResponse"`

	*ResponseMessageType

	Conversations *ArrayOfConversationsType `xml:"Conversations,omitempty" json:"Conversations,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`

	TotalConversationsInView XsInt `xml:"TotalConversationsInView,omitempty" json:"TotalConversationsInView,omitempty"`

	IndexedOffset XsInt `xml:"IndexedOffset,omitempty" json:"IndexedOffset,omitempty"`
}

type PerformInstantSearchRequest struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PerformInstantSearch"`

	*BaseRequestType

	SearchSessionId XsString `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	ItemType *InstantSearchItemType `xml:"ItemType,omitempty" json:"ItemType,omitempty"`

	QueryOptions *QueryOptionsType `xml:"QueryOptions,omitempty" json:"QueryOptions,omitempty"`

	SearchRequestId XsLong `xml:"SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	KqlQuery XsString `xml:"KqlQuery,omitempty" json:"KqlQuery,omitempty"`

	FolderScope *ArrayOfFolderIdType `xml:"FolderScope,omitempty" json:"FolderScope,omitempty"`

	DistinguishedFolderScope *ArrayOfDistinguishedFolderIdType `xml:"DistinguishedFolderScope,omitempty" json:"DistinguishedFolderScope,omitempty"`

	IsDeepTraversal XsBoolean `xml:"IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`

	WaitOnSearchResults XsBoolean `xml:"WaitOnSearchResults,omitempty" json:"WaitOnSearchResults,omitempty"`
}

type PerformInstantSearchResponse struct {
	*ResponseMessageType

	Payload *InstantSearchPayloadType `xml:"Payload,omitempty" json:"Payload,omitempty"`
}

type EndInstantSearchSessionRequest struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EndInstantSearchSession"`

	*BaseRequestType

	SessionId XsString `xml:"SessionId,omitempty" json:"SessionId,omitempty"`
}

type ApplyConversationActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationAction"`

	*BaseRequestType

	ConversationActions *NonEmptyArrayOfApplyConversationActionType `xml:"ConversationActions,omitempty" json:"ConversationActions,omitempty"`
}

type ApplyConversationActionResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationActionResponse"`

	*BaseResponseMessageType
}

type ApplyConversationActionResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationActionResponseMessage"`

	*ResponseMessageType
}

type FindPeopleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindPeople"`

	*BaseRequestType

	PersonaShape *PersonaResponseShapeType `xml:"PersonaShape,omitempty" json:"PersonaShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	Restriction *RestrictionType `xml:"Restriction,omitempty" json:"Restriction,omitempty"`

	AggregationRestriction *RestrictionType `xml:"AggregationRestriction,omitempty" json:"AggregationRestriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	QueryString XsString `xml:"QueryString,omitempty" json:"QueryString,omitempty"`

	SearchPeopleSuggestionIndex XsBoolean `xml:"SearchPeopleSuggestionIndex,omitempty" json:"SearchPeopleSuggestionIndex,omitempty"`

	TopicQueryString XsString `xml:"TopicQueryString,omitempty" json:"TopicQueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"Context,omitempty" json:"Context,omitempty"`

	QuerySources *ArrayOfPeopleQuerySource `xml:"QuerySources,omitempty" json:"QuerySources,omitempty"`

	ReturnFlattenedResults XsBoolean `xml:"ReturnFlattenedResults,omitempty" json:"ReturnFlattenedResults,omitempty"`
}

type FindPeopleResponseMessageType struct {
	*ResponseMessageType

	People *ArrayOfPeopleType `xml:"People,omitempty" json:"People,omitempty"`

	TotalNumberOfPeopleInView XsInt `xml:"TotalNumberOfPeopleInView,omitempty" json:"TotalNumberOfPeopleInView,omitempty"`

	FirstMatchingRowIndex XsInt `xml:"FirstMatchingRowIndex,omitempty" json:"FirstMatchingRowIndex,omitempty"`

	FirstLoadedRowIndex XsInt `xml:"FirstLoadedRowIndex,omitempty" json:"FirstLoadedRowIndex,omitempty"`

	TransactionId *GuidType `xml:"TransactionId,omitempty" json:"TransactionId,omitempty"`
}

type FindTagsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindTags"`

	*BaseRequestType

	IndexedPageItemView *IndexedPageViewType `xml:"IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	QueryString XsString `xml:"QueryString,omitempty" json:"QueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"Context,omitempty" json:"Context,omitempty"`
}

type FindTagsResponseMessageType struct {
	*ResponseMessageType

	Tags *ArrayOfStringsType `xml:"Tags,omitempty" json:"Tags,omitempty"`
}

type AddTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddTag"`

	*BaseRequestType

	Tag XsString `xml:"Tag,omitempty" json:"Tag,omitempty"`

	AppName XsString `xml:"AppName,omitempty" json:"AppName,omitempty"`
}

type AddTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful XsBoolean `xml:"WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type HideTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HideTag"`

	*BaseRequestType

	Tag XsString `xml:"Tag,omitempty" json:"Tag,omitempty"`
}

type HideTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful XsBoolean `xml:"WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type GetPersonaType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPersona"`

	*BaseRequestType

	PersonaId *ItemIdType `xml:"PersonaId,omitempty" json:"PersonaId,omitempty"`

	EmailAddress *EmailAddressType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemLinkId XsString `xml:"ItemLinkId,omitempty" json:"ItemLinkId,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type GetPersonaResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPersonaResponseMessage"`

	*ResponseMessageType

	Persona *PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty"`
}

type CreateAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateAttachment"`

	*BaseRequestType

	ParentItemId *ItemIdType `xml:"ParentItemId,omitempty" json:"ParentItemId,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"Attachments,omitempty" json:"Attachments,omitempty"`
}

type CreateAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateAttachmentResponse"`

	*BaseResponseMessageType
}

type DeleteAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachment"`

	*BaseRequestType

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type DeleteAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachmentResponse"`

	*BaseResponseMessageType
}

type GetAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAttachment"`

	*BaseRequestType

	AttachmentShape *AttachmentResponseShapeType `xml:"AttachmentShape,omitempty" json:"AttachmentShape,omitempty"`

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type GetAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAttachmentResponse"`

	*BaseResponseMessageType
}

type CreateItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemInRecoverableItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItemsResponse"`

	*BaseResponseMessageType
}

type GetItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetItemResponse"`

	*BaseResponseMessageType
}

type MoveItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItemResponse"`

	*BaseResponseMessageType
}

type CopyItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItemResponseMessage"`

	*ResponseMessageType
}

type FindItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItemResponseMessage"`

	*ResponseMessageType

	RootFolder *FindItemParentType `xml:"RootFolder,omitempty" json:"RootFolder,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`
}

type FindItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItemResponse"`

	*BaseResponseMessageType
}

type ArchiveItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveItemResponse"`

	*BaseResponseMessageType
}

type GetClientAccessTokenType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessToken"`

	*BaseRequestType

	TokenRequests *NonEmptyArrayOfClientAccessTokenRequestsType `xml:"TokenRequests,omitempty" json:"TokenRequests,omitempty"`
}

type GetClientAccessTokenResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessTokenResponseMessage"`

	*ResponseMessageType

	Token *ClientAccessTokenType `xml:"Token,omitempty" json:"Token,omitempty"`
}

type GetClientAccessTokenResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessTokenResponse"`

	*BaseResponseMessageType
}

type GetFocusedOtherOverridesRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFocusedOtherOverrides"`

	*BaseRequestType
}

type GetFocusedOtherOverridesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFocusedOtherOverridesResponse"`

	*BaseResponseMessageType

	Overrides *ArrayOfInferenceClassificationOverridesType `xml:"Overrides,omitempty" json:"Overrides,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateOrUpdateFocusedOtherOverride"`

	*BaseRequestType

	SenderSmtpAddress XsString `xml:"SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName XsString `xml:"SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateOrUpdateFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"Override,omitempty" json:"Override,omitempty"`
}

type DeleteFocusedOtherOverrideRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFocusedOtherOverride"`

	*BaseRequestType

	Id *GuidType `xml:"Id,omitempty" json:"Id,omitempty"`
}

type DeleteFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"Override,omitempty" json:"Override,omitempty"`
}

type ResolveNamesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNames"`

	*BaseRequestType

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	UnresolvedEntry *NonEmptyStringType `xml:"UnresolvedEntry,omitempty" json:"UnresolvedEntry,omitempty"`

	ReturnFullContactData XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnFullContactData,attr,omitempty" json:"ReturnFullContactData,omitempty"`

	SearchScope *ResolveNamesSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchScope,attr,omitempty" json:"SearchScope,omitempty"`

	ContactDataShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactDataShape,attr,omitempty" json:"ContactDataShape,omitempty"`
}

type ResolveNamesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNamesResponseMessage"`

	*ResponseMessageType

	ResolutionSet *ArrayOfResolutionType `xml:"ResolutionSet,omitempty" json:"ResolutionSet,omitempty"`
}

type ResolveNamesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNamesResponse"`

	*BaseResponseMessageType
}

type GetPasswordExpirationDateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPasswordExpirationDate"`

	*BaseRequestType

	MailboxSmtpAddress XsString `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetPasswordExpirationDateResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPasswordExpirationDateResponse"`

	*ResponseMessageType

	PasswordExpirationDate XsDateTime `xml:"PasswordExpirationDate,omitempty" json:"PasswordExpirationDate,omitempty"`
}

type GetMailTipsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMailTips"`

	*BaseRequestType

	SendingAs *EmailAddressType `xml:"SendingAs,omitempty" json:"SendingAs,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"Recipients,omitempty" json:"Recipients,omitempty"`

	MailTipsRequested *MailTipTypes `xml:"MailTipsRequested,omitempty" json:"MailTipsRequested,omitempty"`
}

type GetMailTipsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMailTipsResponse"`

	*ResponseMessageType

	ResponseMessages *ArrayOfMailTipsResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfMailTipsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages"`

	MailTipsResponseMessageType []*MailTipsResponseMessageType `xml:"MailTipsResponseMessageType,omitempty" json:"MailTipsResponseMessageType,omitempty"`
}

type MailTipsResponseMessageType struct {
	*ResponseMessageType

	MailTips *MailTips `xml:"MailTips,omitempty" json:"MailTips,omitempty"`
}

type PlayOnPhoneType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PlayOnPhone"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	DialString XsString `xml:"DialString,omitempty" json:"DialString,omitempty"`
}

type PlayOnPhoneResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PlayOnPhoneResponse"`

	*ResponseMessageType

	PhoneCallId *PhoneCallIdType `xml:"PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPhoneCallInformation"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPhoneCallInformationResponse"`

	*ResponseMessageType

	PhoneCallInformation *PhoneCallInformationType `xml:"PhoneCallInformation,omitempty" json:"PhoneCallInformation,omitempty"`
}

type DisconnectPhoneCallType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisconnectPhoneCall"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type DisconnectPhoneCallResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisconnectPhoneCallResponse"`

	*ResponseMessageType
}

type ExpandDLType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDL"`

	*BaseRequestType

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type ExpandDLResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDLResponseMessage"`

	*ResponseMessageType

	DLExpansion *ArrayOfDLExpansionType `xml:"DLExpansion,omitempty" json:"DLExpansion,omitempty"`
}

type ExpandDLResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDLResponse"`

	*BaseResponseMessageType
}

type GetServerTimeZonesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZones"`

	*BaseRequestType

	Ids *NonEmptyArrayOfTimeZoneIdType `xml:"Ids,omitempty" json:"Ids,omitempty"`

	ReturnFullTimeZoneData XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnFullTimeZoneData,attr,omitempty" json:"ReturnFullTimeZoneData,omitempty"`
}

type GetServerTimeZonesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZonesResponseMessage"`

	*ResponseMessageType

	TimeZoneDefinitions *ArrayOfTimeZoneDefinitionType `xml:"TimeZoneDefinitions,omitempty" json:"TimeZoneDefinitions,omitempty"`
}

type GetServerTimeZonesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZonesResponse"`

	*BaseResponseMessageType
}

type CreateManagedFolderRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateManagedFolder"`

	*BaseRequestType

	FolderNames *NonEmptyArrayOfFolderNamesType `xml:"FolderNames,omitempty" json:"FolderNames,omitempty"`

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type CreateManagedFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateManagedFolderResponse"`

	*BaseResponseMessageType
}

type SubscribeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Subscribe"`

	*BaseRequestType

	PullSubscriptionRequest *PullSubscriptionRequestType `xml:"PullSubscriptionRequest,omitempty" json:"PullSubscriptionRequest,omitempty"`

	PushSubscriptionRequest *PushSubscriptionRequestType `xml:"PushSubscriptionRequest,omitempty" json:"PushSubscriptionRequest,omitempty"`

	StreamingSubscriptionRequest *StreamingSubscriptionRequestType `xml:"StreamingSubscriptionRequest,omitempty" json:"StreamingSubscriptionRequest,omitempty"`
}

type SubscribeResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscribeResponseMessage"`

	*ResponseMessageType

	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty"`
}

type SubscribeResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscribeResponse"`

	*BaseResponseMessageType
}

type UnsubscribeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Unsubscribe"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type UnsubscribeResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnsubscribeResponse"`

	*BaseResponseMessageType
}

type GetEventsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEvents"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"Watermark,omitempty" json:"Watermark,omitempty"`
}

type GetEventsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEventsResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"Notification,omitempty" json:"Notification,omitempty"`
}

type GetEventsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEventsResponse"`

	*BaseResponseMessageType
}

type GetStreamingEventsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEvents"`

	*BaseRequestType

	SubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"SubscriptionIds,omitempty" json:"SubscriptionIds,omitempty"`

	ConnectionTimeout *StreamingSubscriptionConnectionTimeoutType `xml:"ConnectionTimeout,omitempty" json:"ConnectionTimeout,omitempty"`
}

type GetStreamingEventsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEventsResponseMessage"`

	*ResponseMessageType

	Notifications *NonEmptyArrayOfNotificationsType `xml:"Notifications,omitempty" json:"Notifications,omitempty"`

	ErrorSubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"ErrorSubscriptionIds,omitempty" json:"ErrorSubscriptionIds,omitempty"`

	ConnectionStatus *ConnectionStatusType `xml:"ConnectionStatus,omitempty" json:"ConnectionStatus,omitempty"`
}

type GetStreamingEventsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEventsResponse"`

	*BaseResponseMessageType
}

type SendNotificationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotificationResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"Notification,omitempty" json:"Notification,omitempty"`
}

type SendNotificationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotification"`

	*BaseResponseMessageType
}

type SendNotificationResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotificationResult"`

	SubscriptionStatus *SubscriptionStatusType `xml:"SubscriptionStatus,omitempty" json:"SubscriptionStatus,omitempty"`
}

type SyncFolderHierarchyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchy"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"FolderShape,omitempty" json:"FolderShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState XsString `xml:"SyncState,omitempty" json:"SyncState,omitempty"`
}

type SyncFolderHierarchyResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchyResponseMessage"`

	*ResponseMessageType

	SyncState XsString `xml:"SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastFolderInRange XsBoolean `xml:"IncludesLastFolderInRange,omitempty" json:"IncludesLastFolderInRange,omitempty"`

	Changes *SyncFolderHierarchyChangesType `xml:"Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderHierarchyResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchyResponse"`

	*BaseResponseMessageType
}

type SyncFolderItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"ItemShape,omitempty" json:"ItemShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState XsString `xml:"SyncState,omitempty" json:"SyncState,omitempty"`

	Ignore *ArrayOfBaseItemIdsType `xml:"Ignore,omitempty" json:"Ignore,omitempty"`

	MaxChangesReturned *MaxSyncChangesReturnedType `xml:"MaxChangesReturned,omitempty" json:"MaxChangesReturned,omitempty"`

	SyncScope *SyncFolderItemsScopeType `xml:"SyncScope,omitempty" json:"SyncScope,omitempty"`
}

type SyncFolderItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItemsResponseMessage"`

	*ResponseMessageType

	SyncState XsString `xml:"SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastItemInRange XsBoolean `xml:"IncludesLastItemInRange,omitempty" json:"IncludesLastItemInRange,omitempty"`

	Changes *SyncFolderItemsChangesType `xml:"Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItemsResponse"`

	*BaseResponseMessageType
}

type GetUserAvailabilityRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserAvailabilityRequest"`

	*BaseRequestType

	TimeZone *TimeZone `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	MailboxDataArray *ArrayOfMailboxData `xml:"MailboxDataArray,omitempty" json:"MailboxDataArray,omitempty"`

	FreeBusyViewOptions *FreeBusyViewOptions `xml:"FreeBusyViewOptions,omitempty" json:"FreeBusyViewOptions,omitempty"`

	SuggestionsViewOptions *SuggestionsViewOptions `xml:"SuggestionsViewOptions,omitempty" json:"SuggestionsViewOptions,omitempty"`
}

type FreeBusyResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyResponse"`

	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	FreeBusyView *FreeBusyView `xml:"FreeBusyView,omitempty" json:"FreeBusyView,omitempty"`
}

type ArrayOfFreeBusyResponse struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyResponseArray"`

	FreeBusyResponse []*FreeBusyResponseType `xml:"FreeBusyResponse,omitempty" json:"FreeBusyResponse,omitempty"`
}

type SuggestionsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionsResponse"`

	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	SuggestionDayResultArray *ArrayOfSuggestionDayResult `xml:"SuggestionDayResultArray,omitempty" json:"SuggestionDayResultArray,omitempty"`
}

type GetUserAvailabilityResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserAvailabilityResponse"`

	FreeBusyResponseArray *ArrayOfFreeBusyResponse `xml:"FreeBusyResponseArray,omitempty" json:"FreeBusyResponseArray,omitempty"`

	SuggestionsResponse *SuggestionsResponseType `xml:"SuggestionsResponse,omitempty" json:"SuggestionsResponse,omitempty"`
}

type GetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type GetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	OofSettings *OofSettings `xml:"OofSettings,omitempty" json:"OofSettings,omitempty"`

	AllowExternalOof *ExternalAudience `xml:"AllowExternalOof,omitempty" json:"AllowExternalOof,omitempty"`
}

type SetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	UserOofSettings *UserOofSettings `xml:"UserOofSettings,omitempty" json:"UserOofSettings,omitempty"`
}

type SetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`
}

type ConvertIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertId"`

	*BaseRequestType

	SourceIds *NonEmptyArrayOfAlternateIdsType `xml:"SourceIds,omitempty" json:"SourceIds,omitempty"`

	DestinationFormat *IdFormatType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DestinationFormat,attr,omitempty" json:"DestinationFormat,omitempty"`
}

type ConvertIdResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertIdResponse"`

	*BaseResponseMessageType
}

type ConvertIdResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertIdResponseMessage"`

	*ResponseMessageType

	AlternateId *AlternateIdBaseType `xml:"AlternateId,omitempty" json:"AlternateId,omitempty"`
}

type GetDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"UserIds,omitempty" json:"UserIds,omitempty"`

	IncludePermissions XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludePermissions,attr,omitempty" json:"IncludePermissions,omitempty"`
}

type GetDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDelegateResponse"`

	*BaseDelegateResponseMessageType

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type ArrayOfDelegateUserResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages"`

	DelegateUserResponseMessageType []*DelegateUserResponseMessageType `xml:"DelegateUserResponseMessageType,omitempty" json:"DelegateUserResponseMessageType,omitempty"`
}

type DelegateUserResponseMessageType struct {
	*ResponseMessageType

	DelegateUser *DelegateUserType `xml:"DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type AddDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type BaseDelegateResponseMessageType struct {
	*ResponseMessageType

	ResponseMessages *ArrayOfDelegateUserResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseDelegateType struct {
	*BaseRequestType

	Mailbox *EmailAddressType `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type AddDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type RemoveDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"UserIds,omitempty" json:"UserIds,omitempty"`
}

type RemoveDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type UpdateDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type UpdateDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type GetSharingMetadataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingMetadata"`

	*BaseRequestType

	IdOfFolderToShare *FolderIdType `xml:"IdOfFolderToShare,omitempty" json:"IdOfFolderToShare,omitempty"`

	SenderSmtpAddress *NonEmptyStringType `xml:"SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"Recipients,omitempty" json:"Recipients,omitempty"`
}

type GetSharingMetadataResponseMessageType struct {
	*ResponseMessageType

	EncryptedSharedFolderDataCollection *ArrayOfEncryptedSharedFolderDataType `xml:"EncryptedSharedFolderDataCollection,omitempty" json:"EncryptedSharedFolderDataCollection,omitempty"`

	InvalidRecipients *ArrayOfInvalidRecipientsType `xml:"InvalidRecipients,omitempty" json:"InvalidRecipients,omitempty"`
}

type RefreshSharingFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RefreshSharingFolder"`

	*BaseRequestType

	SharingFolderId *FolderIdType `xml:"SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type RefreshSharingFolderResponseMessageType struct {
	*ResponseMessageType
}

type GetSharingFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingFolder"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DataType *SharingDataType `xml:"DataType,omitempty" json:"DataType,omitempty"`

	SharedFolderId *NonEmptyStringType `xml:"SharedFolderId,omitempty" json:"SharedFolderId,omitempty"`
}

type GetSharingFolderResponseMessageType struct {
	*ResponseMessageType

	SharingFolderId *FolderIdType `xml:"SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type CreateUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type CreateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type DeleteUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`
}

type DeleteUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetSpecificUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetSpecificUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetSpecificUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfigurationResponse"`

	*BaseResponseMessageType
}

type UpdateUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type UpdateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type SetTeamMailboxRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetTeamMailbox"`

	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	SharePointSiteUrl XsString `xml:"SharePointSiteUrl,omitempty" json:"SharePointSiteUrl,omitempty"`

	State *TeamMailboxLifecycleStateType `xml:"State,omitempty" json:"State,omitempty"`
}

type UnpinTeamMailboxRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnpinTeamMailbox"`

	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type SetTeamMailboxResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetTeamMailboxResponse"`

	*ResponseMessageType
}

type UnpinTeamMailboxResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnpinTeamMailboxResponse"`

	*ResponseMessageType
}

type GetRoomListsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomLists"`

	*BaseRequestType
}

type GetRoomListsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomListsResponse"`

	*ResponseMessageType

	RoomLists *ArrayOfEmailAddressesType `xml:"RoomLists,omitempty" json:"RoomLists,omitempty"`
}

type GetRoomsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRooms"`

	*BaseRequestType

	RoomList *EmailAddressType `xml:"RoomList,omitempty" json:"RoomList,omitempty"`
}

type GetRoomsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomsResponse"`

	*ResponseMessageType

	Rooms *ArrayOfRoomsType `xml:"Rooms,omitempty" json:"Rooms,omitempty"`
}

type GetRemindersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetReminders"`

	*BaseRequestType

	BeginTime XsDateTime `xml:"BeginTime,omitempty" json:"BeginTime,omitempty"`

	EndTime XsDateTime `xml:"EndTime,omitempty" json:"EndTime,omitempty"`

	MaxItems XsInt `xml:"MaxItems,omitempty" json:"MaxItems,omitempty"`

	ReminderType XsString `xml:"ReminderType,omitempty" json:"ReminderType,omitempty"`
}

type GetRemindersResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRemindersResponse"`

	*ResponseMessageType

	Reminders *ArrayOfRemindersType `xml:"Reminders,omitempty" json:"Reminders,omitempty"`
}

type PerformReminderActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PerformReminderAction"`

	*BaseRequestType

	ReminderItemActions *NonEmptyArrayOfReminderItemActionType `xml:"ReminderItemActions,omitempty" json:"ReminderItemActions,omitempty"`
}

type PerformReminderActionResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PerformReminderActionResponse"`

	*ResponseMessageType

	UpdatedItemIds *NonEmptyArrayOfItemIdsType `xml:"UpdatedItemIds,omitempty" json:"UpdatedItemIds,omitempty"`
}

type ArrayOfServiceConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RequestedConfiguration"`

	ConfigurationName *ServiceConfigurationType `xml:"ConfigurationName,omitempty" json:"ConfigurationName,omitempty"`
}

type GetServiceConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServiceConfiguration"`

	*BaseRequestType

	ActingAs *EmailAddressType `xml:"ActingAs,omitempty" json:"ActingAs,omitempty"`

	RequestedConfiguration *ArrayOfServiceConfigurationType `xml:"RequestedConfiguration,omitempty" json:"RequestedConfiguration,omitempty"`

	ConfigurationRequestDetails *ConfigurationRequestDetailsType `xml:"ConfigurationRequestDetails,omitempty" json:"ConfigurationRequestDetails,omitempty"`
}

type GetServiceConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServiceConfigurationResponse"`

	*ResponseMessageType

	ResponseMessages *ArrayOfServiceConfigurationResponseMessageType `xml:"ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfServiceConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages"`

	ServiceConfigurationResponseMessageType []*ServiceConfigurationResponseMessageType `xml:"ServiceConfigurationResponseMessageType,omitempty" json:"ServiceConfigurationResponseMessageType,omitempty"`
}

type ServiceConfigurationResponseMessageType struct {
	*ResponseMessageType

	MailTipsConfiguration *MailTipsServiceConfiguration `xml:"MailTipsConfiguration,omitempty" json:"MailTipsConfiguration,omitempty"`

	UnifiedMessagingConfiguration *UnifiedMessageServiceConfiguration `xml:"UnifiedMessagingConfiguration,omitempty" json:"UnifiedMessagingConfiguration,omitempty"`

	ProtectionRulesConfiguration *ProtectionRulesServiceConfiguration `xml:"ProtectionRulesConfiguration,omitempty" json:"ProtectionRulesConfiguration,omitempty"`

	PolicyNudgeRulesConfiguration *PolicyNudgeRulesServiceConfiguration `xml:"PolicyNudgeRulesConfiguration,omitempty" json:"PolicyNudgeRulesConfiguration,omitempty"`

	SharePointURLsConfiguration *SharePointURLsServiceConfiguration `xml:"SharePointURLsConfiguration,omitempty" json:"SharePointURLsConfiguration,omitempty"`
}

type FindMessageTrackingReportRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMessageTrackingReport"`

	*BaseRequestType
}

type FindMessageTrackingReportResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMessageTrackingReportResponse"`

	*ResponseMessageType

	Diagnostics *ArrayOfStringsType `xml:"Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	MessageTrackingSearchResults *ArrayOfFindMessageTrackingSearchResultType `xml:"MessageTrackingSearchResults,omitempty" json:"MessageTrackingSearchResults,omitempty"`

	ExecutedSearchScope XsString `xml:"ExecutedSearchScope,omitempty" json:"ExecutedSearchScope,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type GetMessageTrackingReportRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMessageTrackingReport"`

	*BaseRequestType
}

type GetMessageTrackingReportResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMessageTrackingReportResponse"`

	*ResponseMessageType

	MessageTrackingReport *MessageTrackingReportType `xml:"MessageTrackingReport,omitempty" json:"MessageTrackingReport,omitempty"`

	Diagnostics *ArrayOfStringsType `xml:"Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"Properties,omitempty" json:"Properties,omitempty"`
}

type GetInboxRulesRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetInboxRules"`

	*BaseRequestType

	MailboxSmtpAddress XsString `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetInboxRulesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetInboxRulesResponse"`

	*ResponseMessageType

	OutlookRuleBlobExists XsBoolean `xml:"OutlookRuleBlobExists,omitempty" json:"OutlookRuleBlobExists,omitempty"`

	InboxRules *ArrayOfRulesType `xml:"InboxRules,omitempty" json:"InboxRules,omitempty"`
}

type UpdateInboxRulesRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateInboxRules"`

	*BaseRequestType

	MailboxSmtpAddress XsString `xml:"MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`

	RemoveOutlookRuleBlob XsBoolean `xml:"RemoveOutlookRuleBlob,omitempty" json:"RemoveOutlookRuleBlob,omitempty"`

	Operations *ArrayOfRuleOperationsType `xml:"Operations,omitempty" json:"Operations,omitempty"`
}

type UpdateInboxRulesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateInboxRulesResponse"`

	*ResponseMessageType

	RuleOperationErrors *ArrayOfRuleOperationErrorsType `xml:"RuleOperationErrors,omitempty" json:"RuleOperationErrors,omitempty"`
}

type FindMailboxStatisticsByKeywordsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywords"`

	*BaseRequestType

	Mailboxes *ArrayOfUserMailboxesType `xml:"Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Keywords *ArrayOfStringsType `xml:"Keywords,omitempty" json:"Keywords,omitempty"`

	Language XsString `xml:"Language,omitempty" json:"Language,omitempty"`

	Senders *ArrayOfSmtpAddressType `xml:"Senders,omitempty" json:"Senders,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"Recipients,omitempty" json:"Recipients,omitempty"`

	FromDate XsDateTime `xml:"FromDate,omitempty" json:"FromDate,omitempty"`

	ToDate XsDateTime `xml:"ToDate,omitempty" json:"ToDate,omitempty"`

	MessageTypes *ArrayOfSearchItemKindsType `xml:"MessageTypes,omitempty" json:"MessageTypes,omitempty"`

	SearchDumpster XsBoolean `xml:"SearchDumpster,omitempty" json:"SearchDumpster,omitempty"`

	IncludePersonalArchive XsBoolean `xml:"IncludePersonalArchive,omitempty" json:"IncludePersonalArchive,omitempty"`

	IncludeUnsearchableItems XsBoolean `xml:"IncludeUnsearchableItems,omitempty" json:"IncludeUnsearchableItems,omitempty"`
}

type FindMailboxStatisticsByKeywordsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywordsResponse"`

	*BaseResponseMessageType
}

type FindMailboxStatisticsByKeywordsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywordsResponseMessage"`

	*ResponseMessageType

	MailboxStatisticsSearchResult *MailboxStatisticsSearchResultType `xml:"MailboxStatisticsSearchResult,omitempty" json:"MailboxStatisticsSearchResult,omitempty"`
}

type GetSearchableMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSearchableMailboxes"`

	*BaseRequestType

	SearchFilter XsString `xml:"SearchFilter,omitempty" json:"SearchFilter,omitempty"`

	ExpandGroupMembership XsBoolean `xml:"ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`
}

type GetSearchableMailboxesResponseMessageType struct {
	*ResponseMessageType

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type SearchMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxes"`

	*BaseRequestType

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"ResultType,omitempty" json:"ResultType,omitempty"`

	PreviewItemResponseShape *PreviewItemResponseShapeType `xml:"PreviewItemResponseShape,omitempty" json:"PreviewItemResponseShape,omitempty"`

	SortBy *FieldOrderType `xml:"SortBy,omitempty" json:"SortBy,omitempty"`

	Language XsString `xml:"Language,omitempty" json:"Language,omitempty"`

	Deduplication XsBoolean `xml:"Deduplication,omitempty" json:"Deduplication,omitempty"`

	PageSize XsInt `xml:"PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference XsString `xml:"PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"PageDirection,omitempty" json:"PageDirection,omitempty"`
}

type SearchMailboxesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResponse"`

	*BaseResponseMessageType
}

type SearchMailboxesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResponseMessage"`

	*ResponseMessageType

	SearchMailboxesResult *SearchMailboxesResultType `xml:"SearchMailboxesResult,omitempty" json:"SearchMailboxesResult,omitempty"`
}

type GetDiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDiscoverySearchConfiguration"`

	*BaseRequestType

	SearchId XsString `xml:"SearchId,omitempty" json:"SearchId,omitempty"`

	ExpandGroupMembership XsBoolean `xml:"ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`

	InPlaceHoldConfigurationOnly XsBoolean `xml:"InPlaceHoldConfigurationOnly,omitempty" json:"InPlaceHoldConfigurationOnly,omitempty"`
}

type GetDiscoverySearchConfigurationResponseMessageType struct {
	*ResponseMessageType

	DiscoverySearchConfigurations *ArrayOfDiscoverySearchConfigurationType `xml:"DiscoverySearchConfigurations,omitempty" json:"DiscoverySearchConfigurations,omitempty"`
}

type GetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetHoldOnMailboxes"`

	*BaseRequestType

	HoldId XsString `xml:"HoldId,omitempty" json:"HoldId,omitempty"`
}

type GetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type SetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetHoldOnMailboxes"`

	*BaseRequestType

	ActionType *HoldActionType `xml:"ActionType,omitempty" json:"ActionType,omitempty"`

	HoldId XsString `xml:"HoldId,omitempty" json:"HoldId,omitempty"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	Mailboxes *ArrayOfStringsType `xml:"Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Language XsString `xml:"Language,omitempty" json:"Language,omitempty"`

	IncludeNonIndexableItems XsBoolean `xml:"IncludeNonIndexableItems,omitempty" json:"IncludeNonIndexableItems,omitempty"`

	Deduplication XsBoolean `xml:"Deduplication,omitempty" json:"Deduplication,omitempty"`

	InPlaceHoldIdentity XsString `xml:"InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ItemHoldPeriod XsString `xml:"ItemHoldPeriod,omitempty" json:"ItemHoldPeriod,omitempty"`
}

type SetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type GetNonIndexableItemStatisticsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemStatistics"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	SearchArchiveOnly XsBoolean `xml:"SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemStatisticsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemStatistics *ArrayOfNonIndexableItemStatisticsType `xml:"NonIndexableItemStatistics,omitempty" json:"NonIndexableItemStatistics,omitempty"`
}

type GetNonIndexableItemDetailsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemDetails"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	PageSize XsInt `xml:"PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference XsString `xml:"PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"PageDirection,omitempty" json:"PageDirection,omitempty"`

	SearchArchiveOnly XsBoolean `xml:"SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemDetailsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemDetailsResult *NonIndexableItemDetailResultType `xml:"NonIndexableItemDetailsResult,omitempty" json:"NonIndexableItemDetailsResult,omitempty"`
}

type MarkAllItemsAsReadType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAllItemsAsRead"`

	*BaseRequestType

	ReadFlag XsBoolean `xml:"ReadFlag,omitempty" json:"ReadFlag,omitempty"`

	SuppressReadReceipts XsBoolean `xml:"SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MarkAllItemsAsReadResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAllItemsAsReadResponse"`

	*BaseResponseMessageType
}

type GetConversationItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"ItemShape,omitempty" json:"ItemShape,omitempty"`

	FoldersToIgnore *NonEmptyArrayOfBaseFolderIdsType `xml:"FoldersToIgnore,omitempty" json:"FoldersToIgnore,omitempty"`

	MaxItemsToReturn XsInt `xml:"MaxItemsToReturn,omitempty" json:"MaxItemsToReturn,omitempty"`

	SortOrder *ConversationNodeSortOrder `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	Conversations *ArrayOfConversationRequestsType `xml:"Conversations,omitempty" json:"Conversations,omitempty"`
}

type GetConversationItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItemsResponseMessage"`

	*ResponseMessageType

	Conversation *ConversationResponseType `xml:"Conversation,omitempty" json:"Conversation,omitempty"`
}

type GetConversationItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItemsResponse"`

	*BaseResponseMessageType
}

type GetOMEConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEConfiguration"`

	*BaseRequestType

	TemplateName XsString `xml:"TemplateName,omitempty" json:"TemplateName,omitempty"`
}

type OMEConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEConfigurationResponse"`

	*ResponseMessageType

	Xml XsString `xml:"Xml,omitempty" json:"Xml,omitempty"`

	ConfigList *ArrayOfStringsType `xml:"ConfigList,omitempty" json:"ConfigList,omitempty"`
}

type SetOMEConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEConfiguration"`

	*BaseRequestType

	Xml XsString `xml:"Xml,omitempty" json:"Xml,omitempty"`

	TemplateName XsString `xml:"TemplateName,omitempty" json:"TemplateName,omitempty"`
}

type SetOMEConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEConfigurationResponse"`

	*ResponseMessageType
}

type GetOMEMessageStatusType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEMessageStatus"`

	*BaseRequestType

	MessageId XsString `xml:"MessageId,omitempty" json:"MessageId,omitempty"`
}

type GetOMEMessageStatusResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEMessageStatusResponse"`

	*ResponseMessageType

	IsRevoked XsBoolean `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty"`

	ReceivedTime XsDateTime `xml:"ReceivedTime,omitempty" json:"ReceivedTime,omitempty"`

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	Container XsString `xml:"Container,omitempty" json:"Container,omitempty"`

	IsRevocable XsBoolean `xml:"IsRevocable,omitempty" json:"IsRevocable,omitempty"`
}

type SetOMEMessageStatusType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEMessageStatus"`

	*BaseRequestType

	MessageId XsString `xml:"MessageId,omitempty" json:"MessageId,omitempty"`

	IsRevoked XsBoolean `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty"`
}

type SetOMEMessageStatusResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEMessageStatusResponse"`

	*ResponseMessageType

	Subject XsString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	MessageId XsString `xml:"MessageId,omitempty" json:"MessageId,omitempty"`

	CorrelationId XsString `xml:"CorrelationId,omitempty" json:"CorrelationId,omitempty"`

	RevokeStatus *OMEMessageRevocationStatus `xml:"RevokeStatus,omitempty" json:"RevokeStatus,omitempty"`

	IsRevoked XsBoolean `xml:"IsRevoked,omitempty" json:"IsRevoked,omitempty"`
}

type GetAppManifestsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppManifests"`

	*BaseRequestType

	ApiVersionSupported XsString `xml:"ApiVersionSupported,omitempty" json:"ApiVersionSupported,omitempty"`

	SchemaVersionSupported XsString `xml:"SchemaVersionSupported,omitempty" json:"SchemaVersionSupported,omitempty"`

	IncludeAllInstalledAddIns XsBoolean `xml:"IncludeAllInstalledAddIns,omitempty" json:"IncludeAllInstalledAddIns,omitempty"`

	IncludeEntitlementData XsBoolean `xml:"IncludeEntitlementData,omitempty" json:"IncludeEntitlementData,omitempty"`

	IncludeManifestData XsBoolean `xml:"IncludeManifestData,omitempty" json:"IncludeManifestData,omitempty"`

	IncludeCustomAppsData XsBoolean `xml:"IncludeCustomAppsData,omitempty" json:"IncludeCustomAppsData,omitempty"`

	ExtensionIds *ListOfExtensionIdsType `xml:"ExtensionIds,omitempty" json:"ExtensionIds,omitempty"`

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"AddIns,omitempty" json:"AddIns,omitempty"`

	IncludeExtensionMetaData XsBoolean `xml:"IncludeExtensionMetaData,omitempty" json:"IncludeExtensionMetaData,omitempty"`
}

type GetAppManifestsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppManifestsResponse"`

	*ResponseMessageType

	Apps *ArrayOfAppsType `xml:"Apps,omitempty" json:"Apps,omitempty"`

	Manifests *ArrayOfAppManifestsType `xml:"Manifests,omitempty" json:"Manifests,omitempty"`
}

type ArrayOfAppManifestsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Manifests"`

	Manifest []XsBase64Binary `xml:"Manifest,omitempty" json:"Manifest,omitempty"`
}

type GetAppMarketplaceUrlType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppMarketplaceUrl"`

	*BaseRequestType
}

type GetAppMarketplaceUrlResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppMarketplaceUrlResponse"`

	*ResponseMessageType

	AppMarketplaceUrl XsString `xml:"AppMarketplaceUrl,omitempty" json:"AppMarketplaceUrl,omitempty"`

	ConnectorsManagementUrl XsString `xml:"ConnectorsManagementUrl,omitempty" json:"ConnectorsManagementUrl,omitempty"`
}

type MarkAsJunkType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunk"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	IsJunk XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IsJunk,attr,omitempty" json:"IsJunk,omitempty"`

	MoveItem XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItem,attr,omitempty" json:"MoveItem,omitempty"`
}

type MarkAsJunkResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunkResponse"`

	*BaseResponseMessageType
}

type MarkAsJunkResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunkResponseMessage"`

	*ResponseMessageType
}

type MarkAsPhishingType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsPhishing"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	MoveItem XsBoolean `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItem,attr,omitempty" json:"MoveItem,omitempty"`
}

type MarkAsPhishingResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsPhishingResponse"`

	*BaseResponseMessageType
}

type MarkAsPhishingResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsPhishingResponseMessage"`

	*ResponseMessageType
}

type ReportMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessage"`

	*BaseRequestType

	ItemIds *ArrayOfBaseItemIdsType `xml:"ItemIds,omitempty" json:"ItemIds,omitempty"`

	BlockReportingToMicrosoft XsBoolean `xml:"BlockReportingToMicrosoft,omitempty" json:"BlockReportingToMicrosoft,omitempty"`

	Platform *ReportMessagePlatformType `xml:"Platform,omitempty" json:"Platform,omitempty"`

	ReportAction *ReportMessageActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportAction,attr,omitempty" json:"ReportAction,omitempty"`
}

type ReportMessageResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessageResponse"`

	*BaseResponseMessageType
}

type ReportMessageResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessageResponseMessage"`

	*ResponseMessageType
}

type InstallAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InstallApp"`

	*BaseRequestType

	Manifest XsBase64Binary `xml:"Manifest,omitempty" json:"Manifest,omitempty"`

	MarketplaceAssetId XsString `xml:"MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket XsString `xml:"MarketplaceContentMarket,omitempty" json:"MarketplaceContentMarket,omitempty"`

	SendWelcomeEmail XsBoolean `xml:"SendWelcomeEmail,omitempty" json:"SendWelcomeEmail,omitempty"`

	ManifestUrl XsString `xml:"ManifestUrl,omitempty" json:"ManifestUrl,omitempty"`

	MarketplaceCorrelationId XsString `xml:"MarketplaceCorrelationId,omitempty" json:"MarketplaceCorrelationId,omitempty"`

	CampaignId XsString `xml:"CampaignId,omitempty" json:"CampaignId,omitempty"`

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	IsMetaOSApp XsBoolean `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty"`

	MetaOSSyncData XsString `xml:"MetaOSSyncData,omitempty" json:"MetaOSSyncData,omitempty"`
}

type InstallAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InstallAppResponse"`

	*ResponseMessageType

	WasFirstInstall XsBoolean `xml:"WasFirstInstall,omitempty" json:"WasFirstInstall,omitempty"`

	Extension *InstalledAppType `xml:"Extension,omitempty" json:"Extension,omitempty"`
}

type UpdateExtensionUsageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateExtensionUsage"`

	*BaseRequestType

	Client XsString `xml:"Client,omitempty" json:"Client,omitempty"`

	Extensions *ArrayOfUpdateExtensionUsageItemType `xml:"Extensions,omitempty" json:"Extensions,omitempty"`
}

type ArrayOfUpdateExtensionUsageItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Extensions"`

	ExtensionId XsString `xml:"ExtensionId,omitempty" json:"ExtensionId,omitempty"`

	Scenarios *ArrayOfExtensionUsageScenarioCounterType `xml:"Scenarios,omitempty" json:"Scenarios,omitempty"`
}

type ArrayOfExtensionUsageScenarioCounterType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Scenarios"`

	ScenarioName XsString `xml:"ScenarioName,omitempty" json:"ScenarioName,omitempty"`

	Count XsInt `xml:"Count,omitempty" json:"Count,omitempty"`
}

type UpdateExtensionUsageResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateExtensionUsageResponse"`

	*ResponseMessageType
}

type UninstallAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UninstallApp"`

	*BaseRequestType

	ID XsString `xml:"ID,omitempty" json:"ID,omitempty"`

	IsMetaOSApp XsBoolean `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty"`
}

type UninstallAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UninstallAppResponse"`

	*ResponseMessageType
}

type DisableAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisableApp"`

	*BaseRequestType

	ID XsString `xml:"ID,omitempty" json:"ID,omitempty"`

	DisableReason *DisableReasonType `xml:"DisableReason,omitempty" json:"DisableReason,omitempty"`

	IsMetaOSApp XsBoolean `xml:"IsMetaOSApp,omitempty" json:"IsMetaOSApp,omitempty"`
}

type DisableAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisableAppResponse"`

	*ResponseMessageType
}

type AddNewImContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewImContactToGroup"`

	*BaseRequestType

	ImAddress *NonEmptyStringType `xml:"ImAddress,omitempty" json:"ImAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewImContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewImContactToGroupResponse"`

	*ResponseMessageType

	Persona *PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty"`
}

type AddNewTelUriContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewTelUriContactToGroup"`

	*BaseRequestType

	TelUriAddress *NonEmptyStringType `xml:"TelUriAddress,omitempty" json:"TelUriAddress,omitempty"`

	ImContactSipUriAddress *NonEmptyStringType `xml:"ImContactSipUriAddress,omitempty" json:"ImContactSipUriAddress,omitempty"`

	ImTelephoneNumber *NonEmptyStringType `xml:"ImTelephoneNumber,omitempty" json:"ImTelephoneNumber,omitempty"`

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewTelUriContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewTelUriContactToGroupResponse"`

	*ResponseMessageType

	Persona *PersonaType `xml:"Persona,omitempty" json:"Persona,omitempty"`
}

type AddImContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImContactToGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddImContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImContactToGroupResponse"`

	*ResponseMessageType
}

type RemoveImContactFromGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImContactFromGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImContactFromGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImContactFromGroupResponse"`

	*ResponseMessageType
}

type AddImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImGroup"`

	*BaseRequestType

	DisplayName *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImGroupResponse"`

	*ResponseMessageType

	ImGroup *ImGroupType `xml:"ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type AddDistributionGroupToImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDistributionGroupToImList"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddDistributionGroupToImListResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDistributionGroupToImListResponse"`

	*ResponseMessageType

	ImGroup *ImGroupType `xml:"ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type GetImItemListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItemList"`

	*BaseRequestType

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemListResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItemListResponse"`

	*ResponseMessageType

	ImItemList *ImItemListType `xml:"ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type GetImItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItems"`

	*BaseRequestType

	ContactIds *NonEmptyArrayOfBaseItemIdsType `xml:"ContactIds,omitempty" json:"ContactIds,omitempty"`

	GroupIds *NonEmptyArrayOfBaseItemIdsType `xml:"GroupIds,omitempty" json:"GroupIds,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItemsResponse"`

	*ResponseMessageType

	ImItemList *ImItemListType `xml:"ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type RemoveContactFromImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveContactFromImList"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"ContactId,omitempty" json:"ContactId,omitempty"`
}

type RemoveContactFromImListResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveContactFromImListResponse"`

	*ResponseMessageType
}

type RemoveDistributionGroupFromImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDistributionGroupFromImList"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveDistributionGroupFromImListResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDistributionGroupFromImListResponse"`

	*ResponseMessageType
}

type RemoveImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImGroupResponse"`

	*ResponseMessageType
}

type SetImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"GroupId,omitempty" json:"GroupId,omitempty"`

	NewDisplayName *NonEmptyStringType `xml:"NewDisplayName,omitempty" json:"NewDisplayName,omitempty"`
}

type SetImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImGroupResponse"`

	*ResponseMessageType
}

type SetImListMigrationCompletedType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImListMigrationCompleted"`

	*BaseRequestType

	ImListMigrationCompleted XsBoolean `xml:"ImListMigrationCompleted,omitempty" json:"ImListMigrationCompleted,omitempty"`
}

type SetImListMigrationCompletedResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImListMigrationCompletedResponse"`

	*ResponseMessageType
}

type GetUserRetentionPolicyTagsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserRetentionPolicyTags"`

	*BaseRequestType
}

type GetUserRetentionPolicyTagsResponseMessageType struct {
	*ResponseMessageType

	RetentionPolicyTags *ArrayOfRetentionPolicyTagsType `xml:"RetentionPolicyTags,omitempty" json:"RetentionPolicyTags,omitempty"`
}

type GetUserPhotoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserPhoto"`

	*BaseRequestType

	Email XsString `xml:"Email,omitempty" json:"Email,omitempty"`

	SizeRequested *UserPhotoSizeType `xml:"SizeRequested,omitempty" json:"SizeRequested,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type GetUserPhotoResponseMessageType struct {
	*ResponseMessageType

	HasChanged XsBoolean `xml:"HasChanged,omitempty" json:"HasChanged,omitempty"`

	PictureData XsBase64Binary `xml:"PictureData,omitempty" json:"PictureData,omitempty"`
}

type GetUserPhotoResponseType struct {
	*BaseResponseMessageType
}

type GetMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingSpace"`

	*BaseRequestType

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type FindMeetingSpaceByJoinUrlType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingSpaceByJoinUrl"`

	*BaseRequestType

	JoinUrl XsString `xml:"JoinUrl,omitempty" json:"JoinUrl,omitempty"`
}

type FindMeetingSpaceByJoinUrlResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingSpaceByJoinUrlResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type DeleteMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingSpaceResponseMessage"`

	*ResponseMessageType
}

type GetMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingInstanceRequest"`

	*BaseRequestType

	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type UpdateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`

	ContentActivitiesToAdd *NonEmptyArrayOfContentActivities `xml:"ContentActivitiesToAdd,omitempty" json:"ContentActivitiesToAdd,omitempty"`

	ParticipantActivitiesToAdd *NonEmptyArrayOfParticipantActivities `xml:"ParticipantActivitiesToAdd,omitempty" json:"ParticipantActivitiesToAdd,omitempty"`
}

type UpdateMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type DeleteMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingInstanceResponse"`

	*ResponseMessageType
}

type SetUserPhotoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetUserPhoto"`

	*BaseRequestType

	Email *NonEmptyStringType `xml:"Email,omitempty" json:"Email,omitempty"`

	Content XsString `xml:"Content,omitempty" json:"Content,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type SetUserPhotoResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetUserPhotoResponse"`

	*BaseResponseMessageType
}

type RegisterConsentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RegisterConsent"`

	*BaseRequestType

	Id XsString `xml:"Id,omitempty" json:"Id,omitempty"`

	ConsentState *ConsentStateType `xml:"ConsentState,omitempty" json:"ConsentState,omitempty"`
}

type RegisterConsentResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RegisterConsentResponse"`

	*ResponseMessageType
}

type FindAvailableMeetingTimesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindAvailableMeetingTimes"`

	*BaseRequestType

	Attendees *ArrayOfSmtpAddressType `xml:"Attendees,omitempty" json:"Attendees,omitempty"`

	SearchWindowStart XsDateTime `xml:"SearchWindowStart,omitempty" json:"SearchWindowStart,omitempty"`

	SearchWindowDuration XsDuration `xml:"SearchWindowDuration,omitempty" json:"SearchWindowDuration,omitempty"`

	MeetingDurationInMinutes XsInt `xml:"MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	Location XsString `xml:"Location,omitempty" json:"Location,omitempty"`

	MaxCandidates XsInt `xml:"MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindAvailableMeetingTimesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindAvailableMeetingTimesResponse"`

	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`

	EmptySuggestionsHint *EmptySuggestionReason `xml:"EmptySuggestionsHint,omitempty" json:"EmptySuggestionsHint,omitempty"`
}

type FindMeetingTimeCandidatesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingTimeCandidates"`

	*BaseRequestType

	AttendeeConstraints *FindMeetingTimesAttendeeConstraints `xml:"AttendeeConstraints,omitempty" json:"AttendeeConstraints,omitempty"`

	LocationConstraints *FindMeetingTimesLocationConstraints `xml:"LocationConstraints,omitempty" json:"LocationConstraints,omitempty"`

	SearchConstraints *FindMeetingTimesSearchConstraints `xml:"SearchConstraints,omitempty" json:"SearchConstraints,omitempty"`

	Constraints *FindMeetingTimesConstraints `xml:"Constraints,omitempty" json:"Constraints,omitempty"`
}

type FindMeetingTimeCandidatesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingTimeCandidatesResponse"`

	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`
}

type StartSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	WarmupOptions *WarmupOptionsType `xml:"WarmupOptions,omitempty" json:"WarmupOptions,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty"`

	IdFormat *IdFormatType `xml:"IdFormat,omitempty" json:"IdFormat,omitempty"`

	ApplicationId XsString `xml:"ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario XsString `xml:"Scenario,omitempty" json:"Scenario,omitempty"`
}

type StartSearchSessionResponseMessage struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages StartSearchSessionResponse"`

	*ResponseMessageType
}

type GetSearchSuggestions struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SuggestionsPrimer XsBoolean `xml:"SuggestionsPrimer,omitempty" json:"SuggestionsPrimer,omitempty"`

	MaxSuggestionsCountPerSuggestionType XsLong `xml:"MaxSuggestionsCountPerSuggestionType,omitempty" json:"MaxSuggestionsCountPerSuggestionType,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario XsString `xml:"Scenario,omitempty" json:"Scenario,omitempty"`
}

type GetSearchSuggestionsResponseMessage struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSearchSuggestionsResponse"`

	*ResponseMessageType

	SearchSuggestions *SearchSuggestionsType `xml:"SearchSuggestions,omitempty" json:"SearchSuggestions,omitempty"`
}

type DeleteSearchSuggestion struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario XsString `xml:"Scenario,omitempty" json:"Scenario,omitempty"`
}

type DeleteSearchSuggestionResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteSearchSuggestionResponse"`

	*ResponseMessageType

	Response *DeleteSearchSuggestionResponseType `xml:"Response,omitempty" json:"Response,omitempty"`
}

type ExecuteSearch struct {
	*BaseRequestType

	ApplicationId *SearchApplicationIdType `xml:"ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario XsString `xml:"Scenario,omitempty" json:"Scenario,omitempty"`

	SearchSessionId *GuidType `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"SearchScope,omitempty" json:"SearchScope,omitempty"`

	Query XsString `xml:"Query,omitempty" json:"Query,omitempty"`

	AnalyzedQuery *AnalyzedQuery `xml:"AnalyzedQuery,omitempty" json:"AnalyzedQuery,omitempty"`

	ResultRowCount XsLong `xml:"ResultRowCount,omitempty" json:"ResultRowCount,omitempty"`

	ResultRowOffset XsLong `xml:"ResultRowOffset,omitempty" json:"ResultRowOffset,omitempty"`

	MaxResultsCountHint XsLong `xml:"MaxResultsCountHint,omitempty" json:"MaxResultsCountHint,omitempty"`

	MaxPreviewLength XsLong `xml:"MaxPreviewLength,omitempty" json:"MaxPreviewLength,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*DynamicRefinerQueryType `xml:"SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `xml:"SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	ExtendedKeywords struct {
		ExtendedKeywordDefinition []*ExtendedKeywordDefinitionType `xml:"ExtendedKeywordDefinition,omitempty" json:"ExtendedKeywordDefinition,omitempty"`
	} `xml:"ExtendedKeywords,omitempty" json:"ExtendedKeywords,omitempty"`

	RetrieveRefiners XsBoolean `xml:"RetrieveRefiners,omitempty" json:"RetrieveRefiners,omitempty"`

	MaxRefinersCountPerRefinerType XsLong `xml:"MaxRefinersCountPerRefinerType,omitempty" json:"MaxRefinersCountPerRefinerType,omitempty"`

	IdFormat *IdFormatType `xml:"IdFormat,omitempty" json:"IdFormat,omitempty"`

	ItemTypes *ItemTypesFilterType `xml:"ItemTypes,omitempty" json:"ItemTypes,omitempty"`

	PropertySetName *SearchResultsPropertySetNameType `xml:"PropertySetName,omitempty" json:"PropertySetName,omitempty"`

	SearchRestrictions *RestrictionType `xml:"SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`

	IncludeDeleted XsBoolean `xml:"IncludeDeleted,omitempty" json:"IncludeDeleted,omitempty"`

	SortOrder *ExecuteSearchSortOrderType `xml:"SortOrder,omitempty" json:"SortOrder,omitempty"`

	KeywordMatchOption *MatchOptionsType `xml:"KeywordMatchOption,omitempty" json:"KeywordMatchOption,omitempty"`

	ReturnAdditionalIds XsBoolean `xml:"ReturnAdditionalIds,omitempty" json:"ReturnAdditionalIds,omitempty"`

	RequestedProperties *ArrayOfStringsType `xml:"RequestedProperties,omitempty" json:"RequestedProperties,omitempty"`
}

type ExecuteSearchResponseMessage struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExecuteSearchResponse"`

	*ResponseMessageType

	SearchResults *SearchResultsType `xml:"SearchResults,omitempty" json:"SearchResults,omitempty"`
}

type EndSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`
}

type EndSearchSessionResponseMessage struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EndSearchSessionResponse"`

	*ResponseMessageType
}

type GetLastPrivateCatalogUpdateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetLastPrivateCatalogUpdate"`

	*BaseRequestType

	Client *OfficeClientType `xml:"Client,omitempty" json:"Client,omitempty"`
}

type GetLastPrivateCatalogUpdateResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetLastPrivateCatalogUpdateResponse"`

	*ResponseMessageType

	LastUpdate XsDateTime `xml:"LastUpdate,omitempty" json:"LastUpdate,omitempty"`

	CatalogHash XsString `xml:"CatalogHash,omitempty" json:"CatalogHash,omitempty"`
}

type GetPrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPrivateCatalogAddIns"`

	*BaseRequestType

	Client *OfficeClientType `xml:"Client,omitempty" json:"Client,omitempty"`
}

type GetPrivateCatalogAddInsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPrivateCatalogAddInsResponse"`

	*ResponseMessageType

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"AddIns,omitempty" json:"AddIns,omitempty"`
}

type ArrayOfPrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddIns"`

	AddIn []*PrivateCatalogAddInsType `xml:"AddIn,omitempty" json:"AddIn,omitempty"`
}

type PrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddIn"`

	StoreInfo *PrivateCatalogAddInStoreInfoType `xml:"StoreInfo,omitempty" json:"StoreInfo,omitempty"`

	ProductId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ProductId,attr,omitempty" json:"ProductId,omitempty"`

	State *AddInStateType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages State,attr,omitempty" json:"State,omitempty"`

	Version *VersionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Version,attr,omitempty" json:"Version,omitempty"`

	DefaultEnabledStatus *AADOfficeExtensionStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DefaultEnabledStatus,attr,omitempty" json:"DefaultEnabledStatus,omitempty"`

	InstallTimeInTicks XsLong `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InstallTimeInTicks,attr,omitempty" json:"InstallTimeInTicks,omitempty"`
}

type PrivateCatalogAddInStoreInfoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages StoreInfo"`

	AssetId XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AssetId,attr,omitempty" json:"AssetId,omitempty"`

	ContentMarket XsString `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContentMarket,attr,omitempty" json:"ContentMarket,omitempty"`
}

type ExchangeServicePortType interface {
	ResolveNames(request *ResolveNamesType) (*ResolveNamesResponseType, error)

	ResolveNamesContext(ctx context.Context, request *ResolveNamesType) (*ResolveNamesResponseType, error)

	ExpandDL(request *ExpandDLType) (*ExpandDLResponseType, error)

	ExpandDLContext(ctx context.Context, request *ExpandDLType) (*ExpandDLResponseType, error)

	GetServerTimeZones(request *GetServerTimeZonesType) (*GetServerTimeZonesResponseType, error)

	GetServerTimeZonesContext(ctx context.Context, request *GetServerTimeZonesType) (*GetServerTimeZonesResponseType, error)

	FindFolder(request *FindFolderType) (*FindFolderResponseType, error)

	FindFolderContext(ctx context.Context, request *FindFolderType) (*FindFolderResponseType, error)

	FindItem(request *FindItemType) (*FindItemResponseType, error)

	FindItemContext(ctx context.Context, request *FindItemType) (*FindItemResponseType, error)

	GetFolder(request *GetFolderType) (*GetFolderResponseType, error)

	GetFolderContext(ctx context.Context, request *GetFolderType) (*GetFolderResponseType, error)

	UploadItems(request *UploadItemsType) (*UploadItemsResponseType, error)

	UploadItemsContext(ctx context.Context, request *UploadItemsType) (*UploadItemsResponseType, error)

	ExportItems(request *ExportItemsType) (*ExportItemsResponseType, error)

	ExportItemsContext(ctx context.Context, request *ExportItemsType) (*ExportItemsResponseType, error)

	ConvertId(request *ConvertIdType) (*ConvertIdResponseType, error)

	ConvertIdContext(ctx context.Context, request *ConvertIdType) (*ConvertIdResponseType, error)

	CreateFolder(request *CreateFolderType) (*CreateFolderResponseType, error)

	CreateFolderContext(ctx context.Context, request *CreateFolderType) (*CreateFolderResponseType, error)

	CreateFolderPath(request *CreateFolderPathType) (*CreateFolderPathResponseType, error)

	CreateFolderPathContext(ctx context.Context, request *CreateFolderPathType) (*CreateFolderPathResponseType, error)

	DeleteFolder(request *DeleteFolderType) (*DeleteFolderResponseType, error)

	DeleteFolderContext(ctx context.Context, request *DeleteFolderType) (*DeleteFolderResponseType, error)

	EmptyFolder(request *EmptyFolderType) (*EmptyFolderResponseType, error)

	EmptyFolderContext(ctx context.Context, request *EmptyFolderType) (*EmptyFolderResponseType, error)

	UpdateFolder(request *UpdateFolderType) (*UpdateFolderResponseType, error)

	UpdateFolderContext(ctx context.Context, request *UpdateFolderType) (*UpdateFolderResponseType, error)

	MoveFolder(request *MoveFolderType) (*MoveFolderResponseType, error)

	MoveFolderContext(ctx context.Context, request *MoveFolderType) (*MoveFolderResponseType, error)

	CopyFolder(request *CopyFolderType) (*CopyFolderResponseType, error)

	CopyFolderContext(ctx context.Context, request *CopyFolderType) (*CopyFolderResponseType, error)

	Subscribe(request *SubscribeType) (*SubscribeResponseType, error)

	SubscribeContext(ctx context.Context, request *SubscribeType) (*SubscribeResponseType, error)

	Unsubscribe(request *UnsubscribeType) (*UnsubscribeResponseType, error)

	UnsubscribeContext(ctx context.Context, request *UnsubscribeType) (*UnsubscribeResponseType, error)

	GetEvents(request *GetEventsType) (*GetEventsResponseType, error)

	GetEventsContext(ctx context.Context, request *GetEventsType) (*GetEventsResponseType, error)

	GetStreamingEvents(request *GetStreamingEventsType) (*GetStreamingEventsResponseType, error)

	GetStreamingEventsContext(ctx context.Context, request *GetStreamingEventsType) (*GetStreamingEventsResponseType, error)

	SyncFolderHierarchy(request *SyncFolderHierarchyType) (*SyncFolderHierarchyResponseType, error)

	SyncFolderHierarchyContext(ctx context.Context, request *SyncFolderHierarchyType) (*SyncFolderHierarchyResponseType, error)

	SyncFolderItems(request *SyncFolderItemsType) (*SyncFolderItemsResponseType, error)

	SyncFolderItemsContext(ctx context.Context, request *SyncFolderItemsType) (*SyncFolderItemsResponseType, error)

	CreateManagedFolder(request *CreateManagedFolderRequestType) (*CreateManagedFolderResponseType, error)

	CreateManagedFolderContext(ctx context.Context, request *CreateManagedFolderRequestType) (*CreateManagedFolderResponseType, error)

	GetItem(request *GetItemType) (*GetItemResponseType, error)

	GetItemContext(ctx context.Context, request *GetItemType) (*GetItemResponseType, error)

	CreateItem(request *CreateItemType) (*CreateItemResponseType, error)

	CreateItemContext(ctx context.Context, request *CreateItemType) (*CreateItemResponseType, error)

	DeleteItem(request *DeleteItemType) (*DeleteItemResponseType, error)

	DeleteItemContext(ctx context.Context, request *DeleteItemType) (*DeleteItemResponseType, error)

	UpdateItem(request *UpdateItemType) (*UpdateItemResponseType, error)

	UpdateItemContext(ctx context.Context, request *UpdateItemType) (*UpdateItemResponseType, error)

	UpdateItemInRecoverableItems(request *UpdateItemInRecoverableItemsType) (*UpdateItemInRecoverableItemsResponseType, error)

	UpdateItemInRecoverableItemsContext(ctx context.Context, request *UpdateItemInRecoverableItemsType) (*UpdateItemInRecoverableItemsResponseType, error)

	SendItem(request *SendItemType) (*SendItemResponseType, error)

	SendItemContext(ctx context.Context, request *SendItemType) (*SendItemResponseType, error)

	MoveItem(request *MoveItemType) (*MoveItemResponseType, error)

	MoveItemContext(ctx context.Context, request *MoveItemType) (*MoveItemResponseType, error)

	CopyItem(request *CopyItemType) (*CopyItemResponseType, error)

	CopyItemContext(ctx context.Context, request *CopyItemType) (*CopyItemResponseType, error)

	ArchiveItem(request *ArchiveItemType) (*ArchiveItemResponseType, error)

	ArchiveItemContext(ctx context.Context, request *ArchiveItemType) (*ArchiveItemResponseType, error)

	CreateAttachment(request *CreateAttachmentType) (*CreateAttachmentResponseType, error)

	CreateAttachmentContext(ctx context.Context, request *CreateAttachmentType) (*CreateAttachmentResponseType, error)

	DeleteAttachment(request *DeleteAttachmentType) (*DeleteAttachmentResponseType, error)

	DeleteAttachmentContext(ctx context.Context, request *DeleteAttachmentType) (*DeleteAttachmentResponseType, error)

	GetAttachment(request *GetAttachmentType) (*GetAttachmentResponseType, error)

	GetAttachmentContext(ctx context.Context, request *GetAttachmentType) (*GetAttachmentResponseType, error)

	GetClientAccessToken(request *GetClientAccessTokenType) (*GetClientAccessTokenResponseType, error)

	GetClientAccessTokenContext(ctx context.Context, request *GetClientAccessTokenType) (*GetClientAccessTokenResponseType, error)

	GetDelegate(request *GetDelegateType) (*GetDelegateResponseMessageType, error)

	GetDelegateContext(ctx context.Context, request *GetDelegateType) (*GetDelegateResponseMessageType, error)

	AddDelegate(request *AddDelegateType) (*AddDelegateResponseMessageType, error)

	AddDelegateContext(ctx context.Context, request *AddDelegateType) (*AddDelegateResponseMessageType, error)

	RemoveDelegate(request *RemoveDelegateType) (*RemoveDelegateResponseMessageType, error)

	RemoveDelegateContext(ctx context.Context, request *RemoveDelegateType) (*RemoveDelegateResponseMessageType, error)

	UpdateDelegate(request *UpdateDelegateType) (*UpdateDelegateResponseMessageType, error)

	UpdateDelegateContext(ctx context.Context, request *UpdateDelegateType) (*UpdateDelegateResponseMessageType, error)

	CreateUserConfiguration(request *CreateUserConfigurationType) (*CreateUserConfigurationResponseType, error)

	CreateUserConfigurationContext(ctx context.Context, request *CreateUserConfigurationType) (*CreateUserConfigurationResponseType, error)

	DeleteUserConfiguration(request *DeleteUserConfigurationType) (*DeleteUserConfigurationResponseType, error)

	DeleteUserConfigurationContext(ctx context.Context, request *DeleteUserConfigurationType) (*DeleteUserConfigurationResponseType, error)

	GetUserConfiguration(request *GetUserConfigurationType) (*GetUserConfigurationResponseType, error)

	GetUserConfigurationContext(ctx context.Context, request *GetUserConfigurationType) (*GetUserConfigurationResponseType, error)

	GetSpecificUserConfiguration(request *GetSpecificUserConfigurationType) (*GetSpecificUserConfigurationResponseType, error)

	GetSpecificUserConfigurationContext(ctx context.Context, request *GetSpecificUserConfigurationType) (*GetSpecificUserConfigurationResponseType, error)

	UpdateUserConfiguration(request *UpdateUserConfigurationType) (*UpdateUserConfigurationResponseType, error)

	UpdateUserConfigurationContext(ctx context.Context, request *UpdateUserConfigurationType) (*UpdateUserConfigurationResponseType, error)

	GetUserAvailability(request *GetUserAvailabilityRequestType) (*GetUserAvailabilityResponseType, error)

	GetUserAvailabilityContext(ctx context.Context, request *GetUserAvailabilityRequestType) (*GetUserAvailabilityResponseType, error)

	GetUserOofSettings(request *GetUserOofSettingsRequest) (*GetUserOofSettingsResponse, error)

	GetUserOofSettingsContext(ctx context.Context, request *GetUserOofSettingsRequest) (*GetUserOofSettingsResponse, error)

	SetUserOofSettings(request *SetUserOofSettingsRequest) (*SetUserOofSettingsResponse, error)

	SetUserOofSettingsContext(ctx context.Context, request *SetUserOofSettingsRequest) (*SetUserOofSettingsResponse, error)

	GetServiceConfiguration(request *GetServiceConfigurationType) (*GetServiceConfigurationResponseMessageType, error)

	GetServiceConfigurationContext(ctx context.Context, request *GetServiceConfigurationType) (*GetServiceConfigurationResponseMessageType, error)

	GetMailTips(request *GetMailTipsType) (*GetMailTipsResponseMessageType, error)

	GetMailTipsContext(ctx context.Context, request *GetMailTipsType) (*GetMailTipsResponseMessageType, error)

	PlayOnPhone(request *PlayOnPhoneType) (*PlayOnPhoneResponseMessageType, error)

	PlayOnPhoneContext(ctx context.Context, request *PlayOnPhoneType) (*PlayOnPhoneResponseMessageType, error)

	GetPhoneCallInformation(request *GetPhoneCallInformationType) (*GetPhoneCallInformationResponseMessageType, error)

	GetPhoneCallInformationContext(ctx context.Context, request *GetPhoneCallInformationType) (*GetPhoneCallInformationResponseMessageType, error)

	DisconnectPhoneCall(request *DisconnectPhoneCallType) (*DisconnectPhoneCallResponseMessageType, error)

	DisconnectPhoneCallContext(ctx context.Context, request *DisconnectPhoneCallType) (*DisconnectPhoneCallResponseMessageType, error)

	GetSharingMetadata(request *GetSharingMetadataType) (*GetSharingMetadataResponseMessageType, error)

	GetSharingMetadataContext(ctx context.Context, request *GetSharingMetadataType) (*GetSharingMetadataResponseMessageType, error)

	RefreshSharingFolder(request *RefreshSharingFolderType) (*RefreshSharingFolderResponseMessageType, error)

	RefreshSharingFolderContext(ctx context.Context, request *RefreshSharingFolderType) (*RefreshSharingFolderResponseMessageType, error)

	GetSharingFolder(request *GetSharingFolderType) (*GetSharingFolderResponseMessageType, error)

	GetSharingFolderContext(ctx context.Context, request *GetSharingFolderType) (*GetSharingFolderResponseMessageType, error)

	SetTeamMailbox(request *SetTeamMailboxRequestType) (*SetTeamMailboxResponseMessageType, error)

	SetTeamMailboxContext(ctx context.Context, request *SetTeamMailboxRequestType) (*SetTeamMailboxResponseMessageType, error)

	UnpinTeamMailbox(request *UnpinTeamMailboxRequestType) (*UnpinTeamMailboxResponseMessageType, error)

	UnpinTeamMailboxContext(ctx context.Context, request *UnpinTeamMailboxRequestType) (*UnpinTeamMailboxResponseMessageType, error)

	GetRoomLists(request *GetRoomListsType) (*GetRoomListsResponseMessageType, error)

	GetRoomListsContext(ctx context.Context, request *GetRoomListsType) (*GetRoomListsResponseMessageType, error)

	GetRooms(request *GetRoomsType) (*GetRoomsResponseMessageType, error)

	GetRoomsContext(ctx context.Context, request *GetRoomsType) (*GetRoomsResponseMessageType, error)

	FindMessageTrackingReport(request *FindMessageTrackingReportRequestType) (*FindMessageTrackingReportResponseMessageType, error)

	FindMessageTrackingReportContext(ctx context.Context, request *FindMessageTrackingReportRequestType) (*FindMessageTrackingReportResponseMessageType, error)

	GetMessageTrackingReport(request *GetMessageTrackingReportRequestType) (*GetMessageTrackingReportResponseMessageType, error)

	GetMessageTrackingReportContext(ctx context.Context, request *GetMessageTrackingReportRequestType) (*GetMessageTrackingReportResponseMessageType, error)

	FindConversation(request *FindConversationType) (*FindConversationResponseMessageType, error)

	FindConversationContext(ctx context.Context, request *FindConversationType) (*FindConversationResponseMessageType, error)

	ApplyConversationAction(request *ApplyConversationActionType) (*ApplyConversationActionResponseType, error)

	ApplyConversationActionContext(ctx context.Context, request *ApplyConversationActionType) (*ApplyConversationActionResponseType, error)

	GetConversationItems(request *GetConversationItemsType) (*GetConversationItemsResponseType, error)

	GetConversationItemsContext(ctx context.Context, request *GetConversationItemsType) (*GetConversationItemsResponseType, error)

	FindPeople(request *FindPeopleType) (*FindPeopleResponseMessageType, error)

	FindPeopleContext(ctx context.Context, request *FindPeopleType) (*FindPeopleResponseMessageType, error)

	FindTags(request *FindTagsType) (*FindTagsResponseMessageType, error)

	FindTagsContext(ctx context.Context, request *FindTagsType) (*FindTagsResponseMessageType, error)

	AddTag(request *AddTagType) (*AddTagResponseMessageType, error)

	AddTagContext(ctx context.Context, request *AddTagType) (*AddTagResponseMessageType, error)

	HideTag(request *HideTagType) (*HideTagResponseMessageType, error)

	HideTagContext(ctx context.Context, request *HideTagType) (*HideTagResponseMessageType, error)

	GetPersona(request *GetPersonaType) (*GetPersonaResponseMessageType, error)

	GetPersonaContext(ctx context.Context, request *GetPersonaType) (*GetPersonaResponseMessageType, error)

	GetInboxRules(request *GetInboxRulesRequestType) (*GetInboxRulesResponseType, error)

	GetInboxRulesContext(ctx context.Context, request *GetInboxRulesRequestType) (*GetInboxRulesResponseType, error)

	UpdateInboxRules(request *UpdateInboxRulesRequestType) (*UpdateInboxRulesResponseType, error)

	UpdateInboxRulesContext(ctx context.Context, request *UpdateInboxRulesRequestType) (*UpdateInboxRulesResponseType, error)

	GetPasswordExpirationDate(request *GetPasswordExpirationDateType) (*GetPasswordExpirationDateResponseMessageType, error)

	GetPasswordExpirationDateContext(ctx context.Context, request *GetPasswordExpirationDateType) (*GetPasswordExpirationDateResponseMessageType, error)

	GetSearchableMailboxes(request *GetSearchableMailboxesType) (*GetSearchableMailboxesResponseMessageType, error)

	GetSearchableMailboxesContext(ctx context.Context, request *GetSearchableMailboxesType) (*GetSearchableMailboxesResponseMessageType, error)

	SearchMailboxes(request *SearchMailboxesType) (*SearchMailboxesResponseType, error)

	SearchMailboxesContext(ctx context.Context, request *SearchMailboxesType) (*SearchMailboxesResponseType, error)

	GetDiscoverySearchConfiguration(request *GetDiscoverySearchConfigurationType) (*GetDiscoverySearchConfigurationResponseMessageType, error)

	GetDiscoverySearchConfigurationContext(ctx context.Context, request *GetDiscoverySearchConfigurationType) (*GetDiscoverySearchConfigurationResponseMessageType, error)

	GetHoldOnMailboxes(request *GetHoldOnMailboxesType) (*GetHoldOnMailboxesResponseMessageType, error)

	GetHoldOnMailboxesContext(ctx context.Context, request *GetHoldOnMailboxesType) (*GetHoldOnMailboxesResponseMessageType, error)

	SetHoldOnMailboxes(request *SetHoldOnMailboxesType) (*SetHoldOnMailboxesResponseMessageType, error)

	SetHoldOnMailboxesContext(ctx context.Context, request *SetHoldOnMailboxesType) (*SetHoldOnMailboxesResponseMessageType, error)

	GetNonIndexableItemStatistics(request *GetNonIndexableItemStatisticsType) (*GetNonIndexableItemStatisticsResponseMessageType, error)

	GetNonIndexableItemStatisticsContext(ctx context.Context, request *GetNonIndexableItemStatisticsType) (*GetNonIndexableItemStatisticsResponseMessageType, error)

	GetNonIndexableItemDetails(request *GetNonIndexableItemDetailsType) (*GetNonIndexableItemDetailsResponseMessageType, error)

	GetNonIndexableItemDetailsContext(ctx context.Context, request *GetNonIndexableItemDetailsType) (*GetNonIndexableItemDetailsResponseMessageType, error)

	MarkAllItemsAsRead(request *MarkAllItemsAsReadType) (*MarkAllItemsAsReadResponseType, error)

	MarkAllItemsAsReadContext(ctx context.Context, request *MarkAllItemsAsReadType) (*MarkAllItemsAsReadResponseType, error)

	MarkAsJunk(request *MarkAsJunkType) (*MarkAsJunkResponseType, error)

	MarkAsJunkContext(ctx context.Context, request *MarkAsJunkType) (*MarkAsJunkResponseType, error)

	ReportMessage(request *ReportMessageType) (*ReportMessageResponseType, error)

	ReportMessageContext(ctx context.Context, request *ReportMessageType) (*ReportMessageResponseType, error)

	GetAppManifests(request *GetAppManifestsType) (*GetAppManifestsResponseType, error)

	GetAppManifestsContext(ctx context.Context, request *GetAppManifestsType) (*GetAppManifestsResponseType, error)

	AddNewImContactToGroup(request *AddNewImContactToGroupType) (*AddNewImContactToGroupResponseMessageType, error)

	AddNewImContactToGroupContext(ctx context.Context, request *AddNewImContactToGroupType) (*AddNewImContactToGroupResponseMessageType, error)

	AddNewTelUriContactToGroup(request *AddNewTelUriContactToGroupType) (*AddNewTelUriContactToGroupResponseMessageType, error)

	AddNewTelUriContactToGroupContext(ctx context.Context, request *AddNewTelUriContactToGroupType) (*AddNewTelUriContactToGroupResponseMessageType, error)

	AddImContactToGroup(request *AddImContactToGroupType) (*AddImContactToGroupResponseMessageType, error)

	AddImContactToGroupContext(ctx context.Context, request *AddImContactToGroupType) (*AddImContactToGroupResponseMessageType, error)

	RemoveImContactFromGroup(request *RemoveImContactFromGroupType) (*RemoveImContactFromGroupResponseMessageType, error)

	RemoveImContactFromGroupContext(ctx context.Context, request *RemoveImContactFromGroupType) (*RemoveImContactFromGroupResponseMessageType, error)

	AddImGroup(request *AddImGroupType) (*AddImGroupResponseMessageType, error)

	AddImGroupContext(ctx context.Context, request *AddImGroupType) (*AddImGroupResponseMessageType, error)

	AddDistributionGroupToImList(request *AddDistributionGroupToImListType) (*AddDistributionGroupToImListResponseMessageType, error)

	AddDistributionGroupToImListContext(ctx context.Context, request *AddDistributionGroupToImListType) (*AddDistributionGroupToImListResponseMessageType, error)

	GetImItemList(request *GetImItemListType) (*GetImItemListResponseMessageType, error)

	GetImItemListContext(ctx context.Context, request *GetImItemListType) (*GetImItemListResponseMessageType, error)

	GetImItems(request *GetImItemsType) (*GetImItemsResponseMessageType, error)

	GetImItemsContext(ctx context.Context, request *GetImItemsType) (*GetImItemsResponseMessageType, error)

	RemoveContactFromImList(request *RemoveContactFromImListType) (*RemoveContactFromImListResponseMessageType, error)

	RemoveContactFromImListContext(ctx context.Context, request *RemoveContactFromImListType) (*RemoveContactFromImListResponseMessageType, error)

	RemoveDistributionGroupFromImList(request *RemoveDistributionGroupFromImListType) (*RemoveDistributionGroupFromImListResponseMessageType, error)

	RemoveDistributionGroupFromImListContext(ctx context.Context, request *RemoveDistributionGroupFromImListType) (*RemoveDistributionGroupFromImListResponseMessageType, error)

	RemoveImGroup(request *RemoveImGroupType) (*RemoveImGroupResponseMessageType, error)

	RemoveImGroupContext(ctx context.Context, request *RemoveImGroupType) (*RemoveImGroupResponseMessageType, error)

	SetImGroup(request *SetImGroupType) (*SetImGroupResponseMessageType, error)

	SetImGroupContext(ctx context.Context, request *SetImGroupType) (*SetImGroupResponseMessageType, error)

	SetImListMigrationCompleted(request *SetImListMigrationCompletedType) (*SetImListMigrationCompletedResponseMessageType, error)

	SetImListMigrationCompletedContext(ctx context.Context, request *SetImListMigrationCompletedType) (*SetImListMigrationCompletedResponseMessageType, error)

	GetUserRetentionPolicyTags(request *GetUserRetentionPolicyTagsType) (*GetUserRetentionPolicyTagsResponseMessageType, error)

	GetUserRetentionPolicyTagsContext(ctx context.Context, request *GetUserRetentionPolicyTagsType) (*GetUserRetentionPolicyTagsResponseMessageType, error)

	InstallApp(request *InstallAppType) (*InstallAppResponseType, error)

	InstallAppContext(ctx context.Context, request *InstallAppType) (*InstallAppResponseType, error)

	UpdateExtensionUsage(request *UpdateExtensionUsageType) (*UpdateExtensionUsageResponseType, error)

	UpdateExtensionUsageContext(ctx context.Context, request *UpdateExtensionUsageType) (*UpdateExtensionUsageResponseType, error)

	UninstallApp(request *UninstallAppType) (*UninstallAppResponseType, error)

	UninstallAppContext(ctx context.Context, request *UninstallAppType) (*UninstallAppResponseType, error)

	DisableApp(request *DisableAppType) (*DisableAppResponseType, error)

	DisableAppContext(ctx context.Context, request *DisableAppType) (*DisableAppResponseType, error)

	GetAppMarketplaceUrl(request *GetAppMarketplaceUrlType) (*GetAppMarketplaceUrlResponseMessageType, error)

	GetAppMarketplaceUrlContext(ctx context.Context, request *GetAppMarketplaceUrlType) (*GetAppMarketplaceUrlResponseMessageType, error)

	FindAvailableMeetingTimes(request *FindAvailableMeetingTimesType) (*FindAvailableMeetingTimesResponseMessageType, error)

	FindAvailableMeetingTimesContext(ctx context.Context, request *FindAvailableMeetingTimesType) (*FindAvailableMeetingTimesResponseMessageType, error)

	FindMeetingTimeCandidates(request *FindMeetingTimeCandidatesType) (*FindMeetingTimeCandidatesResponseMessageType, error)

	FindMeetingTimeCandidatesContext(ctx context.Context, request *FindMeetingTimeCandidatesType) (*FindMeetingTimeCandidatesResponseMessageType, error)

	GetUserPhoto(request *GetUserPhotoType) (*GetUserPhotoResponseMessageType, error)

	GetUserPhotoContext(ctx context.Context, request *GetUserPhotoType) (*GetUserPhotoResponseMessageType, error)

	SetUserPhoto(request *SetUserPhotoType) (*SetUserPhotoResponseMessageType, error)

	SetUserPhotoContext(ctx context.Context, request *SetUserPhotoType) (*SetUserPhotoResponseMessageType, error)

	GetMeetingSpace(request *GetMeetingSpaceType) (*GetMeetingSpaceResponseMessageType, error)

	GetMeetingSpaceContext(ctx context.Context, request *GetMeetingSpaceType) (*GetMeetingSpaceResponseMessageType, error)

	DeleteMeetingSpace(request *DeleteMeetingSpaceType) (*DeleteMeetingSpaceResponseMessageType, error)

	DeleteMeetingSpaceContext(ctx context.Context, request *DeleteMeetingSpaceType) (*DeleteMeetingSpaceResponseMessageType, error)

	UpdateMeetingSpace(request *UpdateMeetingSpaceType) (*UpdateMeetingSpaceResponseMessageType, error)

	UpdateMeetingSpaceContext(ctx context.Context, request *UpdateMeetingSpaceType) (*UpdateMeetingSpaceResponseMessageType, error)

	CreateMeetingSpace(request *CreateMeetingSpaceType) (*CreateMeetingSpaceResponseMessageType, error)

	CreateMeetingSpaceContext(ctx context.Context, request *CreateMeetingSpaceType) (*CreateMeetingSpaceResponseMessageType, error)

	FindMeetingSpaceByJoinUrl(request *FindMeetingSpaceByJoinUrlType) (*FindMeetingSpaceByJoinUrlResponseMessageType, error)

	FindMeetingSpaceByJoinUrlContext(ctx context.Context, request *FindMeetingSpaceByJoinUrlType) (*FindMeetingSpaceByJoinUrlResponseMessageType, error)

	GetMeetingInstance(request *GetMeetingInstanceRequestType) (*GetMeetingInstanceResponseMessageType, error)

	GetMeetingInstanceContext(ctx context.Context, request *GetMeetingInstanceRequestType) (*GetMeetingInstanceResponseMessageType, error)

	DeleteMeetingInstance(request *DeleteMeetingInstanceRequestType) (*DeleteMeetingInstanceResponseMessageType, error)

	DeleteMeetingInstanceContext(ctx context.Context, request *DeleteMeetingInstanceRequestType) (*DeleteMeetingInstanceResponseMessageType, error)

	UpdateMeetingInstance(request *UpdateMeetingInstanceRequestType) (*UpdateMeetingInstanceResponseMessageType, error)

	UpdateMeetingInstanceContext(ctx context.Context, request *UpdateMeetingInstanceRequestType) (*UpdateMeetingInstanceResponseMessageType, error)

	CreateMeetingInstance(request *CreateMeetingInstanceRequestType) (*CreateMeetingInstanceResponseMessageType, error)

	CreateMeetingInstanceContext(ctx context.Context, request *CreateMeetingInstanceRequestType) (*CreateMeetingInstanceResponseMessageType, error)

	StartSearchSession(request *StartSearchSession) (*StartSearchSessionResponseMessage, error)

	StartSearchSessionContext(ctx context.Context, request *StartSearchSession) (*StartSearchSessionResponseMessage, error)

	GetSearchSuggestions(request *GetSearchSuggestions) (*GetSearchSuggestionsResponseMessage, error)

	GetSearchSuggestionsContext(ctx context.Context, request *GetSearchSuggestions) (*GetSearchSuggestionsResponseMessage, error)

	DeleteSearchSuggestion(request *DeleteSearchSuggestion) (*DeleteSearchSuggestionResponseMessageType, error)

	DeleteSearchSuggestionContext(ctx context.Context, request *DeleteSearchSuggestion) (*DeleteSearchSuggestionResponseMessageType, error)

	ExecuteSearch(request *ExecuteSearch) (*ExecuteSearchResponseMessage, error)

	ExecuteSearchContext(ctx context.Context, request *ExecuteSearch) (*ExecuteSearchResponseMessage, error)

	EndSearchSession(request *EndSearchSession) (*EndSearchSessionResponseMessage, error)

	EndSearchSessionContext(ctx context.Context, request *EndSearchSession) (*EndSearchSessionResponseMessage, error)

	GetLastPrivateCatalogUpdate(request *GetLastPrivateCatalogUpdateType) (*GetLastPrivateCatalogUpdateResponseType, error)

	GetLastPrivateCatalogUpdateContext(ctx context.Context, request *GetLastPrivateCatalogUpdateType) (*GetLastPrivateCatalogUpdateResponseType, error)

	GetPrivateCatalogAddIns(request *GetPrivateCatalogAddInsType) (*GetPrivateCatalogAddInsResponseType, error)

	GetPrivateCatalogAddInsContext(ctx context.Context, request *GetPrivateCatalogAddInsType) (*GetPrivateCatalogAddInsResponseType, error)
}

type exchangeServicePortType struct {
	client SOAPClient
}

func NewExchangeServicePortType(client SOAPClient) ExchangeServicePortType {
	return &exchangeServicePortType{
		client: client,
	}
}

func (service *exchangeServicePortType) ResolveNamesContext(ctx context.Context, request *ResolveNamesType) (*ResolveNamesResponseType, error) {
	response := new(ResolveNamesResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ResolveNames", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ResolveNames(request *ResolveNamesType) (*ResolveNamesResponseType, error) {
	return service.ResolveNamesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ExpandDLContext(ctx context.Context, request *ExpandDLType) (*ExpandDLResponseType, error) {
	response := new(ExpandDLResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ExpandDL", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ExpandDL(request *ExpandDLType) (*ExpandDLResponseType, error) {
	return service.ExpandDLContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetServerTimeZonesContext(ctx context.Context, request *GetServerTimeZonesType) (*GetServerTimeZonesResponseType, error) {
	response := new(GetServerTimeZonesResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetServerTimeZones", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetServerTimeZones(request *GetServerTimeZonesType) (*GetServerTimeZonesResponseType, error) {
	return service.GetServerTimeZonesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindFolderContext(ctx context.Context, request *FindFolderType) (*FindFolderResponseType, error) {
	response := new(FindFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindFolder(request *FindFolderType) (*FindFolderResponseType, error) {
	return service.FindFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindItemContext(ctx context.Context, request *FindItemType) (*FindItemResponseType, error) {
	response := new(FindItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindItem(request *FindItemType) (*FindItemResponseType, error) {
	return service.FindItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetFolderContext(ctx context.Context, request *GetFolderType) (*GetFolderResponseType, error) {
	response := new(GetFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetFolder(request *GetFolderType) (*GetFolderResponseType, error) {
	return service.GetFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UploadItemsContext(ctx context.Context, request *UploadItemsType) (*UploadItemsResponseType, error) {
	response := new(UploadItemsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UploadItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UploadItems(request *UploadItemsType) (*UploadItemsResponseType, error) {
	return service.UploadItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ExportItemsContext(ctx context.Context, request *ExportItemsType) (*ExportItemsResponseType, error) {
	response := new(ExportItemsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ExportItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ExportItems(request *ExportItemsType) (*ExportItemsResponseType, error) {
	return service.ExportItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ConvertIdContext(ctx context.Context, request *ConvertIdType) (*ConvertIdResponseType, error) {
	response := new(ConvertIdResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ConvertId", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ConvertId(request *ConvertIdType) (*ConvertIdResponseType, error) {
	return service.ConvertIdContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateFolderContext(ctx context.Context, request *CreateFolderType) (*CreateFolderResponseType, error) {
	response := new(CreateFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateFolder(request *CreateFolderType) (*CreateFolderResponseType, error) {
	return service.CreateFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateFolderPathContext(ctx context.Context, request *CreateFolderPathType) (*CreateFolderPathResponseType, error) {
	response := new(CreateFolderPathResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolderPath", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateFolderPath(request *CreateFolderPathType) (*CreateFolderPathResponseType, error) {
	return service.CreateFolderPathContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteFolderContext(ctx context.Context, request *DeleteFolderType) (*DeleteFolderResponseType, error) {
	response := new(DeleteFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteFolder(request *DeleteFolderType) (*DeleteFolderResponseType, error) {
	return service.DeleteFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) EmptyFolderContext(ctx context.Context, request *EmptyFolderType) (*EmptyFolderResponseType, error) {
	response := new(EmptyFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/EmptyFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) EmptyFolder(request *EmptyFolderType) (*EmptyFolderResponseType, error) {
	return service.EmptyFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateFolderContext(ctx context.Context, request *UpdateFolderType) (*UpdateFolderResponseType, error) {
	response := new(UpdateFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateFolder(request *UpdateFolderType) (*UpdateFolderResponseType, error) {
	return service.UpdateFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) MoveFolderContext(ctx context.Context, request *MoveFolderType) (*MoveFolderResponseType, error) {
	response := new(MoveFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/MoveFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) MoveFolder(request *MoveFolderType) (*MoveFolderResponseType, error) {
	return service.MoveFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CopyFolderContext(ctx context.Context, request *CopyFolderType) (*CopyFolderResponseType, error) {
	response := new(CopyFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CopyFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CopyFolder(request *CopyFolderType) (*CopyFolderResponseType, error) {
	return service.CopyFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SubscribeContext(ctx context.Context, request *SubscribeType) (*SubscribeResponseType, error) {
	response := new(SubscribeResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/Subscribe", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) Subscribe(request *SubscribeType) (*SubscribeResponseType, error) {
	return service.SubscribeContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UnsubscribeContext(ctx context.Context, request *UnsubscribeType) (*UnsubscribeResponseType, error) {
	response := new(UnsubscribeResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/Unsubscribe", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) Unsubscribe(request *UnsubscribeType) (*UnsubscribeResponseType, error) {
	return service.UnsubscribeContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetEventsContext(ctx context.Context, request *GetEventsType) (*GetEventsResponseType, error) {
	response := new(GetEventsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetEvents(request *GetEventsType) (*GetEventsResponseType, error) {
	return service.GetEventsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetStreamingEventsContext(ctx context.Context, request *GetStreamingEventsType) (*GetStreamingEventsResponseType, error) {
	response := new(GetStreamingEventsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetStreamingEvents(request *GetStreamingEventsType) (*GetStreamingEventsResponseType, error) {
	return service.GetStreamingEventsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SyncFolderHierarchyContext(ctx context.Context, request *SyncFolderHierarchyType) (*SyncFolderHierarchyResponseType, error) {
	response := new(SyncFolderHierarchyResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderHierarchy", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SyncFolderHierarchy(request *SyncFolderHierarchyType) (*SyncFolderHierarchyResponseType, error) {
	return service.SyncFolderHierarchyContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SyncFolderItemsContext(ctx context.Context, request *SyncFolderItemsType) (*SyncFolderItemsResponseType, error) {
	response := new(SyncFolderItemsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SyncFolderItems(request *SyncFolderItemsType) (*SyncFolderItemsResponseType, error) {
	return service.SyncFolderItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateManagedFolderContext(ctx context.Context, request *CreateManagedFolderRequestType) (*CreateManagedFolderResponseType, error) {
	response := new(CreateManagedFolderResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateManagedFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateManagedFolder(request *CreateManagedFolderRequestType) (*CreateManagedFolderResponseType, error) {
	return service.CreateManagedFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetItemContext(ctx context.Context, request *GetItemType) (*GetItemResponseType, error) {
	response := new(GetItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetItem(request *GetItemType) (*GetItemResponseType, error) {
	return service.GetItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateItemContext(ctx context.Context, request *CreateItemType) (*CreateItemResponseType, error) {
	response := new(CreateItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateItem(request *CreateItemType) (*CreateItemResponseType, error) {
	return service.CreateItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteItemContext(ctx context.Context, request *DeleteItemType) (*DeleteItemResponseType, error) {
	response := new(DeleteItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteItem(request *DeleteItemType) (*DeleteItemResponseType, error) {
	return service.DeleteItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateItemContext(ctx context.Context, request *UpdateItemType) (*UpdateItemResponseType, error) {
	response := new(UpdateItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateItem(request *UpdateItemType) (*UpdateItemResponseType, error) {
	return service.UpdateItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateItemInRecoverableItemsContext(ctx context.Context, request *UpdateItemInRecoverableItemsType) (*UpdateItemInRecoverableItemsResponseType, error) {
	response := new(UpdateItemInRecoverableItemsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItemInRecoverableItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateItemInRecoverableItems(request *UpdateItemInRecoverableItemsType) (*UpdateItemInRecoverableItemsResponseType, error) {
	return service.UpdateItemInRecoverableItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SendItemContext(ctx context.Context, request *SendItemType) (*SendItemResponseType, error) {
	response := new(SendItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SendItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SendItem(request *SendItemType) (*SendItemResponseType, error) {
	return service.SendItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) MoveItemContext(ctx context.Context, request *MoveItemType) (*MoveItemResponseType, error) {
	response := new(MoveItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/MoveItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) MoveItem(request *MoveItemType) (*MoveItemResponseType, error) {
	return service.MoveItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CopyItemContext(ctx context.Context, request *CopyItemType) (*CopyItemResponseType, error) {
	response := new(CopyItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CopyItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CopyItem(request *CopyItemType) (*CopyItemResponseType, error) {
	return service.CopyItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ArchiveItemContext(ctx context.Context, request *ArchiveItemType) (*ArchiveItemResponseType, error) {
	response := new(ArchiveItemResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ArchiveItem", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ArchiveItem(request *ArchiveItemType) (*ArchiveItemResponseType, error) {
	return service.ArchiveItemContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateAttachmentContext(ctx context.Context, request *CreateAttachmentType) (*CreateAttachmentResponseType, error) {
	response := new(CreateAttachmentResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateAttachment", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateAttachment(request *CreateAttachmentType) (*CreateAttachmentResponseType, error) {
	return service.CreateAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteAttachmentContext(ctx context.Context, request *DeleteAttachmentType) (*DeleteAttachmentResponseType, error) {
	response := new(DeleteAttachmentResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteAttachment", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteAttachment(request *DeleteAttachmentType) (*DeleteAttachmentResponseType, error) {
	return service.DeleteAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetAttachmentContext(ctx context.Context, request *GetAttachmentType) (*GetAttachmentResponseType, error) {
	response := new(GetAttachmentResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetAttachment", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetAttachment(request *GetAttachmentType) (*GetAttachmentResponseType, error) {
	return service.GetAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetClientAccessTokenContext(ctx context.Context, request *GetClientAccessTokenType) (*GetClientAccessTokenResponseType, error) {
	response := new(GetClientAccessTokenResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetClientAccessToken", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetClientAccessToken(request *GetClientAccessTokenType) (*GetClientAccessTokenResponseType, error) {
	return service.GetClientAccessTokenContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetDelegateContext(ctx context.Context, request *GetDelegateType) (*GetDelegateResponseMessageType, error) {
	response := new(GetDelegateResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetDelegate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetDelegate(request *GetDelegateType) (*GetDelegateResponseMessageType, error) {
	return service.GetDelegateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddDelegateContext(ctx context.Context, request *AddDelegateType) (*AddDelegateResponseMessageType, error) {
	response := new(AddDelegateResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddDelegate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddDelegate(request *AddDelegateType) (*AddDelegateResponseMessageType, error) {
	return service.AddDelegateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RemoveDelegateContext(ctx context.Context, request *RemoveDelegateType) (*RemoveDelegateResponseMessageType, error) {
	response := new(RemoveDelegateResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDelegate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RemoveDelegate(request *RemoveDelegateType) (*RemoveDelegateResponseMessageType, error) {
	return service.RemoveDelegateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateDelegateContext(ctx context.Context, request *UpdateDelegateType) (*UpdateDelegateResponseMessageType, error) {
	response := new(UpdateDelegateResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateDelegate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateDelegate(request *UpdateDelegateType) (*UpdateDelegateResponseMessageType, error) {
	return service.UpdateDelegateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateUserConfigurationContext(ctx context.Context, request *CreateUserConfigurationType) (*CreateUserConfigurationResponseType, error) {
	response := new(CreateUserConfigurationResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateUserConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateUserConfiguration(request *CreateUserConfigurationType) (*CreateUserConfigurationResponseType, error) {
	return service.CreateUserConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteUserConfigurationContext(ctx context.Context, request *DeleteUserConfigurationType) (*DeleteUserConfigurationResponseType, error) {
	response := new(DeleteUserConfigurationResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteUserConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteUserConfiguration(request *DeleteUserConfigurationType) (*DeleteUserConfigurationResponseType, error) {
	return service.DeleteUserConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetUserConfigurationContext(ctx context.Context, request *GetUserConfigurationType) (*GetUserConfigurationResponseType, error) {
	response := new(GetUserConfigurationResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetUserConfiguration(request *GetUserConfigurationType) (*GetUserConfigurationResponseType, error) {
	return service.GetUserConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetSpecificUserConfigurationContext(ctx context.Context, request *GetSpecificUserConfigurationType) (*GetSpecificUserConfigurationResponseType, error) {
	response := new(GetSpecificUserConfigurationResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetSpecificUserConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetSpecificUserConfiguration(request *GetSpecificUserConfigurationType) (*GetSpecificUserConfigurationResponseType, error) {
	return service.GetSpecificUserConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateUserConfigurationContext(ctx context.Context, request *UpdateUserConfigurationType) (*UpdateUserConfigurationResponseType, error) {
	response := new(UpdateUserConfigurationResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateUserConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateUserConfiguration(request *UpdateUserConfigurationType) (*UpdateUserConfigurationResponseType, error) {
	return service.UpdateUserConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetUserAvailabilityContext(ctx context.Context, request *GetUserAvailabilityRequestType) (*GetUserAvailabilityResponseType, error) {
	response := new(GetUserAvailabilityResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserAvailability", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetUserAvailability(request *GetUserAvailabilityRequestType) (*GetUserAvailabilityResponseType, error) {
	return service.GetUserAvailabilityContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetUserOofSettingsContext(ctx context.Context, request *GetUserOofSettingsRequest) (*GetUserOofSettingsResponse, error) {
	response := new(GetUserOofSettingsResponse)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserOofSettings", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetUserOofSettings(request *GetUserOofSettingsRequest) (*GetUserOofSettingsResponse, error) {
	return service.GetUserOofSettingsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetUserOofSettingsContext(ctx context.Context, request *SetUserOofSettingsRequest) (*SetUserOofSettingsResponse, error) {
	response := new(SetUserOofSettingsResponse)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetUserOofSettings", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetUserOofSettings(request *SetUserOofSettingsRequest) (*SetUserOofSettingsResponse, error) {
	return service.SetUserOofSettingsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetServiceConfigurationContext(ctx context.Context, request *GetServiceConfigurationType) (*GetServiceConfigurationResponseMessageType, error) {
	response := new(GetServiceConfigurationResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetServiceConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetServiceConfiguration(request *GetServiceConfigurationType) (*GetServiceConfigurationResponseMessageType, error) {
	return service.GetServiceConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetMailTipsContext(ctx context.Context, request *GetMailTipsType) (*GetMailTipsResponseMessageType, error) {
	response := new(GetMailTipsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetMailTips", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetMailTips(request *GetMailTipsType) (*GetMailTipsResponseMessageType, error) {
	return service.GetMailTipsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) PlayOnPhoneContext(ctx context.Context, request *PlayOnPhoneType) (*PlayOnPhoneResponseMessageType, error) {
	response := new(PlayOnPhoneResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/PlayOnPhone", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) PlayOnPhone(request *PlayOnPhoneType) (*PlayOnPhoneResponseMessageType, error) {
	return service.PlayOnPhoneContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetPhoneCallInformationContext(ctx context.Context, request *GetPhoneCallInformationType) (*GetPhoneCallInformationResponseMessageType, error) {
	response := new(GetPhoneCallInformationResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetPhoneCallInformation", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetPhoneCallInformation(request *GetPhoneCallInformationType) (*GetPhoneCallInformationResponseMessageType, error) {
	return service.GetPhoneCallInformationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DisconnectPhoneCallContext(ctx context.Context, request *DisconnectPhoneCallType) (*DisconnectPhoneCallResponseMessageType, error) {
	response := new(DisconnectPhoneCallResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DisconnectPhoneCall", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DisconnectPhoneCall(request *DisconnectPhoneCallType) (*DisconnectPhoneCallResponseMessageType, error) {
	return service.DisconnectPhoneCallContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetSharingMetadataContext(ctx context.Context, request *GetSharingMetadataType) (*GetSharingMetadataResponseMessageType, error) {
	response := new(GetSharingMetadataResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingMetadata", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetSharingMetadata(request *GetSharingMetadataType) (*GetSharingMetadataResponseMessageType, error) {
	return service.GetSharingMetadataContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RefreshSharingFolderContext(ctx context.Context, request *RefreshSharingFolderType) (*RefreshSharingFolderResponseMessageType, error) {
	response := new(RefreshSharingFolderResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RefreshSharingFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RefreshSharingFolder(request *RefreshSharingFolderType) (*RefreshSharingFolderResponseMessageType, error) {
	return service.RefreshSharingFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetSharingFolderContext(ctx context.Context, request *GetSharingFolderType) (*GetSharingFolderResponseMessageType, error) {
	response := new(GetSharingFolderResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingFolder", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetSharingFolder(request *GetSharingFolderType) (*GetSharingFolderResponseMessageType, error) {
	return service.GetSharingFolderContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetTeamMailboxContext(ctx context.Context, request *SetTeamMailboxRequestType) (*SetTeamMailboxResponseMessageType, error) {
	response := new(SetTeamMailboxResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetTeamMailbox", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetTeamMailbox(request *SetTeamMailboxRequestType) (*SetTeamMailboxResponseMessageType, error) {
	return service.SetTeamMailboxContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UnpinTeamMailboxContext(ctx context.Context, request *UnpinTeamMailboxRequestType) (*UnpinTeamMailboxResponseMessageType, error) {
	response := new(UnpinTeamMailboxResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UnpinTeamMailbox", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UnpinTeamMailbox(request *UnpinTeamMailboxRequestType) (*UnpinTeamMailboxResponseMessageType, error) {
	return service.UnpinTeamMailboxContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetRoomListsContext(ctx context.Context, request *GetRoomListsType) (*GetRoomListsResponseMessageType, error) {
	response := new(GetRoomListsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetRoomLists", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetRoomLists(request *GetRoomListsType) (*GetRoomListsResponseMessageType, error) {
	return service.GetRoomListsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetRoomsContext(ctx context.Context, request *GetRoomsType) (*GetRoomsResponseMessageType, error) {
	response := new(GetRoomsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetRooms", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetRooms(request *GetRoomsType) (*GetRoomsResponseMessageType, error) {
	return service.GetRoomsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindMessageTrackingReportContext(ctx context.Context, request *FindMessageTrackingReportRequestType) (*FindMessageTrackingReportResponseMessageType, error) {
	response := new(FindMessageTrackingReportResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindMessageTrackingReport", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindMessageTrackingReport(request *FindMessageTrackingReportRequestType) (*FindMessageTrackingReportResponseMessageType, error) {
	return service.FindMessageTrackingReportContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetMessageTrackingReportContext(ctx context.Context, request *GetMessageTrackingReportRequestType) (*GetMessageTrackingReportResponseMessageType, error) {
	response := new(GetMessageTrackingReportResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetMessageTrackingReport", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetMessageTrackingReport(request *GetMessageTrackingReportRequestType) (*GetMessageTrackingReportResponseMessageType, error) {
	return service.GetMessageTrackingReportContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindConversationContext(ctx context.Context, request *FindConversationType) (*FindConversationResponseMessageType, error) {
	response := new(FindConversationResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindConversation", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindConversation(request *FindConversationType) (*FindConversationResponseMessageType, error) {
	return service.FindConversationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ApplyConversationActionContext(ctx context.Context, request *ApplyConversationActionType) (*ApplyConversationActionResponseType, error) {
	response := new(ApplyConversationActionResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ApplyConversationAction", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ApplyConversationAction(request *ApplyConversationActionType) (*ApplyConversationActionResponseType, error) {
	return service.ApplyConversationActionContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetConversationItemsContext(ctx context.Context, request *GetConversationItemsType) (*GetConversationItemsResponseType, error) {
	response := new(GetConversationItemsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetConversationItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetConversationItems(request *GetConversationItemsType) (*GetConversationItemsResponseType, error) {
	return service.GetConversationItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindPeopleContext(ctx context.Context, request *FindPeopleType) (*FindPeopleResponseMessageType, error) {
	response := new(FindPeopleResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindPeople", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindPeople(request *FindPeopleType) (*FindPeopleResponseMessageType, error) {
	return service.FindPeopleContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindTagsContext(ctx context.Context, request *FindTagsType) (*FindTagsResponseMessageType, error) {
	response := new(FindTagsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindTags", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindTags(request *FindTagsType) (*FindTagsResponseMessageType, error) {
	return service.FindTagsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddTagContext(ctx context.Context, request *AddTagType) (*AddTagResponseMessageType, error) {
	response := new(AddTagResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddTag", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddTag(request *AddTagType) (*AddTagResponseMessageType, error) {
	return service.AddTagContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) HideTagContext(ctx context.Context, request *HideTagType) (*HideTagResponseMessageType, error) {
	response := new(HideTagResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/HideTag", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) HideTag(request *HideTagType) (*HideTagResponseMessageType, error) {
	return service.HideTagContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetPersonaContext(ctx context.Context, request *GetPersonaType) (*GetPersonaResponseMessageType, error) {
	response := new(GetPersonaResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetPersona", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetPersona(request *GetPersonaType) (*GetPersonaResponseMessageType, error) {
	return service.GetPersonaContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetInboxRulesContext(ctx context.Context, request *GetInboxRulesRequestType) (*GetInboxRulesResponseType, error) {
	response := new(GetInboxRulesResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetInboxRules", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetInboxRules(request *GetInboxRulesRequestType) (*GetInboxRulesResponseType, error) {
	return service.GetInboxRulesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateInboxRulesContext(ctx context.Context, request *UpdateInboxRulesRequestType) (*UpdateInboxRulesResponseType, error) {
	response := new(UpdateInboxRulesResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateInboxRules", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateInboxRules(request *UpdateInboxRulesRequestType) (*UpdateInboxRulesResponseType, error) {
	return service.UpdateInboxRulesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetPasswordExpirationDateContext(ctx context.Context, request *GetPasswordExpirationDateType) (*GetPasswordExpirationDateResponseMessageType, error) {
	response := new(GetPasswordExpirationDateResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetPasswordExpirationDate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetPasswordExpirationDate(request *GetPasswordExpirationDateType) (*GetPasswordExpirationDateResponseMessageType, error) {
	return service.GetPasswordExpirationDateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetSearchableMailboxesContext(ctx context.Context, request *GetSearchableMailboxesType) (*GetSearchableMailboxesResponseMessageType, error) {
	response := new(GetSearchableMailboxesResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetSearchableMailboxes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetSearchableMailboxes(request *GetSearchableMailboxesType) (*GetSearchableMailboxesResponseMessageType, error) {
	return service.GetSearchableMailboxesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SearchMailboxesContext(ctx context.Context, request *SearchMailboxesType) (*SearchMailboxesResponseType, error) {
	response := new(SearchMailboxesResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SearchMailboxes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SearchMailboxes(request *SearchMailboxesType) (*SearchMailboxesResponseType, error) {
	return service.SearchMailboxesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetDiscoverySearchConfigurationContext(ctx context.Context, request *GetDiscoverySearchConfigurationType) (*GetDiscoverySearchConfigurationResponseMessageType, error) {
	response := new(GetDiscoverySearchConfigurationResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetDiscoverySearchConfiguration", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetDiscoverySearchConfiguration(request *GetDiscoverySearchConfigurationType) (*GetDiscoverySearchConfigurationResponseMessageType, error) {
	return service.GetDiscoverySearchConfigurationContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetHoldOnMailboxesContext(ctx context.Context, request *GetHoldOnMailboxesType) (*GetHoldOnMailboxesResponseMessageType, error) {
	response := new(GetHoldOnMailboxesResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetHoldOnMailboxes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetHoldOnMailboxes(request *GetHoldOnMailboxesType) (*GetHoldOnMailboxesResponseMessageType, error) {
	return service.GetHoldOnMailboxesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetHoldOnMailboxesContext(ctx context.Context, request *SetHoldOnMailboxesType) (*SetHoldOnMailboxesResponseMessageType, error) {
	response := new(SetHoldOnMailboxesResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetHoldOnMailboxes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetHoldOnMailboxes(request *SetHoldOnMailboxesType) (*SetHoldOnMailboxesResponseMessageType, error) {
	return service.SetHoldOnMailboxesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetNonIndexableItemStatisticsContext(ctx context.Context, request *GetNonIndexableItemStatisticsType) (*GetNonIndexableItemStatisticsResponseMessageType, error) {
	response := new(GetNonIndexableItemStatisticsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemStatistics", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetNonIndexableItemStatistics(request *GetNonIndexableItemStatisticsType) (*GetNonIndexableItemStatisticsResponseMessageType, error) {
	return service.GetNonIndexableItemStatisticsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetNonIndexableItemDetailsContext(ctx context.Context, request *GetNonIndexableItemDetailsType) (*GetNonIndexableItemDetailsResponseMessageType, error) {
	response := new(GetNonIndexableItemDetailsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemDetails", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetNonIndexableItemDetails(request *GetNonIndexableItemDetailsType) (*GetNonIndexableItemDetailsResponseMessageType, error) {
	return service.GetNonIndexableItemDetailsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) MarkAllItemsAsReadContext(ctx context.Context, request *MarkAllItemsAsReadType) (*MarkAllItemsAsReadResponseType, error) {
	response := new(MarkAllItemsAsReadResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/MarkAllItemsAsRead", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) MarkAllItemsAsRead(request *MarkAllItemsAsReadType) (*MarkAllItemsAsReadResponseType, error) {
	return service.MarkAllItemsAsReadContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) MarkAsJunkContext(ctx context.Context, request *MarkAsJunkType) (*MarkAsJunkResponseType, error) {
	response := new(MarkAsJunkResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/MarkAsJunk", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) MarkAsJunk(request *MarkAsJunkType) (*MarkAsJunkResponseType, error) {
	return service.MarkAsJunkContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ReportMessageContext(ctx context.Context, request *ReportMessageType) (*ReportMessageResponseType, error) {
	response := new(ReportMessageResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ReportMessage", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ReportMessage(request *ReportMessageType) (*ReportMessageResponseType, error) {
	return service.ReportMessageContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetAppManifestsContext(ctx context.Context, request *GetAppManifestsType) (*GetAppManifestsResponseType, error) {
	response := new(GetAppManifestsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetAppManifests", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetAppManifests(request *GetAppManifestsType) (*GetAppManifestsResponseType, error) {
	return service.GetAppManifestsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddNewImContactToGroupContext(ctx context.Context, request *AddNewImContactToGroupType) (*AddNewImContactToGroupResponseMessageType, error) {
	response := new(AddNewImContactToGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddNewImContactToGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddNewImContactToGroup(request *AddNewImContactToGroupType) (*AddNewImContactToGroupResponseMessageType, error) {
	return service.AddNewImContactToGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddNewTelUriContactToGroupContext(ctx context.Context, request *AddNewTelUriContactToGroupType) (*AddNewTelUriContactToGroupResponseMessageType, error) {
	response := new(AddNewTelUriContactToGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddNewTelUriContactToGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddNewTelUriContactToGroup(request *AddNewTelUriContactToGroupType) (*AddNewTelUriContactToGroupResponseMessageType, error) {
	return service.AddNewTelUriContactToGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddImContactToGroupContext(ctx context.Context, request *AddImContactToGroupType) (*AddImContactToGroupResponseMessageType, error) {
	response := new(AddImContactToGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddImContactToGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddImContactToGroup(request *AddImContactToGroupType) (*AddImContactToGroupResponseMessageType, error) {
	return service.AddImContactToGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RemoveImContactFromGroupContext(ctx context.Context, request *RemoveImContactFromGroupType) (*RemoveImContactFromGroupResponseMessageType, error) {
	response := new(RemoveImContactFromGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImContactFromGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RemoveImContactFromGroup(request *RemoveImContactFromGroupType) (*RemoveImContactFromGroupResponseMessageType, error) {
	return service.RemoveImContactFromGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddImGroupContext(ctx context.Context, request *AddImGroupType) (*AddImGroupResponseMessageType, error) {
	response := new(AddImGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddImGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddImGroup(request *AddImGroupType) (*AddImGroupResponseMessageType, error) {
	return service.AddImGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) AddDistributionGroupToImListContext(ctx context.Context, request *AddDistributionGroupToImListType) (*AddDistributionGroupToImListResponseMessageType, error) {
	response := new(AddDistributionGroupToImListResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/AddDistributionGroupToImList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) AddDistributionGroupToImList(request *AddDistributionGroupToImListType) (*AddDistributionGroupToImListResponseMessageType, error) {
	return service.AddDistributionGroupToImListContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetImItemListContext(ctx context.Context, request *GetImItemListType) (*GetImItemListResponseMessageType, error) {
	response := new(GetImItemListResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetImItemList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetImItemList(request *GetImItemListType) (*GetImItemListResponseMessageType, error) {
	return service.GetImItemListContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetImItemsContext(ctx context.Context, request *GetImItemsType) (*GetImItemsResponseMessageType, error) {
	response := new(GetImItemsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetImItems", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetImItems(request *GetImItemsType) (*GetImItemsResponseMessageType, error) {
	return service.GetImItemsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RemoveContactFromImListContext(ctx context.Context, request *RemoveContactFromImListType) (*RemoveContactFromImListResponseMessageType, error) {
	response := new(RemoveContactFromImListResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveContactFromImList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RemoveContactFromImList(request *RemoveContactFromImListType) (*RemoveContactFromImListResponseMessageType, error) {
	return service.RemoveContactFromImListContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RemoveDistributionGroupFromImListContext(ctx context.Context, request *RemoveDistributionGroupFromImListType) (*RemoveDistributionGroupFromImListResponseMessageType, error) {
	response := new(RemoveDistributionGroupFromImListResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDistributionGroupFromImList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RemoveDistributionGroupFromImList(request *RemoveDistributionGroupFromImListType) (*RemoveDistributionGroupFromImListResponseMessageType, error) {
	return service.RemoveDistributionGroupFromImListContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) RemoveImGroupContext(ctx context.Context, request *RemoveImGroupType) (*RemoveImGroupResponseMessageType, error) {
	response := new(RemoveImGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) RemoveImGroup(request *RemoveImGroupType) (*RemoveImGroupResponseMessageType, error) {
	return service.RemoveImGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetImGroupContext(ctx context.Context, request *SetImGroupType) (*SetImGroupResponseMessageType, error) {
	response := new(SetImGroupResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetImGroup", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetImGroup(request *SetImGroupType) (*SetImGroupResponseMessageType, error) {
	return service.SetImGroupContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetImListMigrationCompletedContext(ctx context.Context, request *SetImListMigrationCompletedType) (*SetImListMigrationCompletedResponseMessageType, error) {
	response := new(SetImListMigrationCompletedResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetImListMigrationCompleted", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetImListMigrationCompleted(request *SetImListMigrationCompletedType) (*SetImListMigrationCompletedResponseMessageType, error) {
	return service.SetImListMigrationCompletedContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetUserRetentionPolicyTagsContext(ctx context.Context, request *GetUserRetentionPolicyTagsType) (*GetUserRetentionPolicyTagsResponseMessageType, error) {
	response := new(GetUserRetentionPolicyTagsResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserRetentionPolicyTags", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetUserRetentionPolicyTags(request *GetUserRetentionPolicyTagsType) (*GetUserRetentionPolicyTagsResponseMessageType, error) {
	return service.GetUserRetentionPolicyTagsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) InstallAppContext(ctx context.Context, request *InstallAppType) (*InstallAppResponseType, error) {
	response := new(InstallAppResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/InstallApp", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) InstallApp(request *InstallAppType) (*InstallAppResponseType, error) {
	return service.InstallAppContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateExtensionUsageContext(ctx context.Context, request *UpdateExtensionUsageType) (*UpdateExtensionUsageResponseType, error) {
	response := new(UpdateExtensionUsageResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateExtensionUsage", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateExtensionUsage(request *UpdateExtensionUsageType) (*UpdateExtensionUsageResponseType, error) {
	return service.UpdateExtensionUsageContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UninstallAppContext(ctx context.Context, request *UninstallAppType) (*UninstallAppResponseType, error) {
	response := new(UninstallAppResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UninstallApp", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UninstallApp(request *UninstallAppType) (*UninstallAppResponseType, error) {
	return service.UninstallAppContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DisableAppContext(ctx context.Context, request *DisableAppType) (*DisableAppResponseType, error) {
	response := new(DisableAppResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DisableApp", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DisableApp(request *DisableAppType) (*DisableAppResponseType, error) {
	return service.DisableAppContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetAppMarketplaceUrlContext(ctx context.Context, request *GetAppMarketplaceUrlType) (*GetAppMarketplaceUrlResponseMessageType, error) {
	response := new(GetAppMarketplaceUrlResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetAppMarketplaceUrl", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetAppMarketplaceUrl(request *GetAppMarketplaceUrlType) (*GetAppMarketplaceUrlResponseMessageType, error) {
	return service.GetAppMarketplaceUrlContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindAvailableMeetingTimesContext(ctx context.Context, request *FindAvailableMeetingTimesType) (*FindAvailableMeetingTimesResponseMessageType, error) {
	response := new(FindAvailableMeetingTimesResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindAvailableMeetingTimes", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindAvailableMeetingTimes(request *FindAvailableMeetingTimesType) (*FindAvailableMeetingTimesResponseMessageType, error) {
	return service.FindAvailableMeetingTimesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindMeetingTimeCandidatesContext(ctx context.Context, request *FindMeetingTimeCandidatesType) (*FindMeetingTimeCandidatesResponseMessageType, error) {
	response := new(FindMeetingTimeCandidatesResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindMeetingTimeCandidates", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindMeetingTimeCandidates(request *FindMeetingTimeCandidatesType) (*FindMeetingTimeCandidatesResponseMessageType, error) {
	return service.FindMeetingTimeCandidatesContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetUserPhotoContext(ctx context.Context, request *GetUserPhotoType) (*GetUserPhotoResponseMessageType, error) {
	response := new(GetUserPhotoResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserPhoto", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetUserPhoto(request *GetUserPhotoType) (*GetUserPhotoResponseMessageType, error) {
	return service.GetUserPhotoContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) SetUserPhotoContext(ctx context.Context, request *SetUserPhotoType) (*SetUserPhotoResponseMessageType, error) {
	response := new(SetUserPhotoResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/SetUserPhoto", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) SetUserPhoto(request *SetUserPhotoType) (*SetUserPhotoResponseMessageType, error) {
	return service.SetUserPhotoContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetMeetingSpaceContext(ctx context.Context, request *GetMeetingSpaceType) (*GetMeetingSpaceResponseMessageType, error) {
	response := new(GetMeetingSpaceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetMeetingSpace", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetMeetingSpace(request *GetMeetingSpaceType) (*GetMeetingSpaceResponseMessageType, error) {
	return service.GetMeetingSpaceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteMeetingSpaceContext(ctx context.Context, request *DeleteMeetingSpaceType) (*DeleteMeetingSpaceResponseMessageType, error) {
	response := new(DeleteMeetingSpaceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteMeetingSpace", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteMeetingSpace(request *DeleteMeetingSpaceType) (*DeleteMeetingSpaceResponseMessageType, error) {
	return service.DeleteMeetingSpaceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateMeetingSpaceContext(ctx context.Context, request *UpdateMeetingSpaceType) (*UpdateMeetingSpaceResponseMessageType, error) {
	response := new(UpdateMeetingSpaceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateMeetingSpace", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateMeetingSpace(request *UpdateMeetingSpaceType) (*UpdateMeetingSpaceResponseMessageType, error) {
	return service.UpdateMeetingSpaceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateMeetingSpaceContext(ctx context.Context, request *CreateMeetingSpaceType) (*CreateMeetingSpaceResponseMessageType, error) {
	response := new(CreateMeetingSpaceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateMeetingSpace", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateMeetingSpace(request *CreateMeetingSpaceType) (*CreateMeetingSpaceResponseMessageType, error) {
	return service.CreateMeetingSpaceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) FindMeetingSpaceByJoinUrlContext(ctx context.Context, request *FindMeetingSpaceByJoinUrlType) (*FindMeetingSpaceByJoinUrlResponseMessageType, error) {
	response := new(FindMeetingSpaceByJoinUrlResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/FindMeetingSpaceByJoinUrl", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) FindMeetingSpaceByJoinUrl(request *FindMeetingSpaceByJoinUrlType) (*FindMeetingSpaceByJoinUrlResponseMessageType, error) {
	return service.FindMeetingSpaceByJoinUrlContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetMeetingInstanceContext(ctx context.Context, request *GetMeetingInstanceRequestType) (*GetMeetingInstanceResponseMessageType, error) {
	response := new(GetMeetingInstanceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetMeetingInstanceRequest", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetMeetingInstance(request *GetMeetingInstanceRequestType) (*GetMeetingInstanceResponseMessageType, error) {
	return service.GetMeetingInstanceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteMeetingInstanceContext(ctx context.Context, request *DeleteMeetingInstanceRequestType) (*DeleteMeetingInstanceResponseMessageType, error) {
	response := new(DeleteMeetingInstanceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteMeetingInstanceRequest", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteMeetingInstance(request *DeleteMeetingInstanceRequestType) (*DeleteMeetingInstanceResponseMessageType, error) {
	return service.DeleteMeetingInstanceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) UpdateMeetingInstanceContext(ctx context.Context, request *UpdateMeetingInstanceRequestType) (*UpdateMeetingInstanceResponseMessageType, error) {
	response := new(UpdateMeetingInstanceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateMeetingInstanceRequest", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) UpdateMeetingInstance(request *UpdateMeetingInstanceRequestType) (*UpdateMeetingInstanceResponseMessageType, error) {
	return service.UpdateMeetingInstanceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) CreateMeetingInstanceContext(ctx context.Context, request *CreateMeetingInstanceRequestType) (*CreateMeetingInstanceResponseMessageType, error) {
	response := new(CreateMeetingInstanceResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/CreateMeetingInstanceRequest", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) CreateMeetingInstance(request *CreateMeetingInstanceRequestType) (*CreateMeetingInstanceResponseMessageType, error) {
	return service.CreateMeetingInstanceContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) StartSearchSessionContext(ctx context.Context, request *StartSearchSession) (*StartSearchSessionResponseMessage, error) {
	response := new(StartSearchSessionResponseMessage)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/StartSearchSession", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) StartSearchSession(request *StartSearchSession) (*StartSearchSessionResponseMessage, error) {
	return service.StartSearchSessionContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetSearchSuggestionsContext(ctx context.Context, request *GetSearchSuggestions) (*GetSearchSuggestionsResponseMessage, error) {
	response := new(GetSearchSuggestionsResponseMessage)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetSearchSuggestions", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetSearchSuggestions(request *GetSearchSuggestions) (*GetSearchSuggestionsResponseMessage, error) {
	return service.GetSearchSuggestionsContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) DeleteSearchSuggestionContext(ctx context.Context, request *DeleteSearchSuggestion) (*DeleteSearchSuggestionResponseMessageType, error) {
	response := new(DeleteSearchSuggestionResponseMessageType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteSearchSuggestion", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) DeleteSearchSuggestion(request *DeleteSearchSuggestion) (*DeleteSearchSuggestionResponseMessageType, error) {
	return service.DeleteSearchSuggestionContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) ExecuteSearchContext(ctx context.Context, request *ExecuteSearch) (*ExecuteSearchResponseMessage, error) {
	response := new(ExecuteSearchResponseMessage)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/ExecuteSearch", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) ExecuteSearch(request *ExecuteSearch) (*ExecuteSearchResponseMessage, error) {
	return service.ExecuteSearchContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) EndSearchSessionContext(ctx context.Context, request *EndSearchSession) (*EndSearchSessionResponseMessage, error) {
	response := new(EndSearchSessionResponseMessage)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/EndSearchSession", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) EndSearchSession(request *EndSearchSession) (*EndSearchSessionResponseMessage, error) {
	return service.EndSearchSessionContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetLastPrivateCatalogUpdateContext(ctx context.Context, request *GetLastPrivateCatalogUpdateType) (*GetLastPrivateCatalogUpdateResponseType, error) {
	response := new(GetLastPrivateCatalogUpdateResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetLastPrivateCatalogUpdate", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetLastPrivateCatalogUpdate(request *GetLastPrivateCatalogUpdateType) (*GetLastPrivateCatalogUpdateResponseType, error) {
	return service.GetLastPrivateCatalogUpdateContext(
		context.Background(),
		request,
	)
}

func (service *exchangeServicePortType) GetPrivateCatalogAddInsContext(ctx context.Context, request *GetPrivateCatalogAddInsType) (*GetPrivateCatalogAddInsResponseType, error) {
	response := new(GetPrivateCatalogAddInsResponseType)
	err := service.client.CallContext(ctx, "http://schemas.microsoft.com/exchange/services/2006/messages/GetPrivateCatalogAddIns", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *exchangeServicePortType) GetPrivateCatalogAddIns(request *GetPrivateCatalogAddInsType) (*GetPrivateCatalogAddInsResponseType, error) {
	return service.GetPrivateCatalogAddInsContext(
		context.Background(),
		request,
	)
}
